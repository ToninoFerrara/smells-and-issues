repository,state,title,label,body
open-keychain/open-keychain,open,Mail address is case sensitive,[],"Encryption in K9-mail fails, if the to-mail address is in upper case. Me@MailServer.Example is not matched to
me@mailserver.example

## Expected Behavior
I would expect, match of addresses is not case sensitive.

"
open-keychain/open-keychain,open,Feature Request: Support company wide single public PGP keys for external email sender.,[],"#### Background:
There are solutions out there where all in- and outgoing emails of a company is encrypted and decrypted on a ""email gateway"" by some PGP implementation using the same key for all company's email addresses. Unfortunately the key is associated only with one - maybe fictional - email address. (e.g. <pgp@example.com>)

As a communication partner of the employees of such a company, I need to register my PGP key with the IT-department of the said company. Reading emails send by them with k-9 using _OpenKeychain_ just works fine. (There is a warning regarding the email not being signed which is reasonable [the warning, not the missing signature])

However, when sending emails to an email recipient inside that company, I seems impossible to encrypt the email with k-9 using _OpenKeychain_ by the said PGP key which does not have the recipients address as alias.

#### Disclaimer:

I don't want to discuss whether the solution of a single key for a company is a reasonable one. It just does exist.
In any case, a technical similar situation might arise if a contact keeps a PGP key after changing his/her email address, but I haven't managed to import the updated public PGP key yet which would contain the new email address as alias.

#### Feature Request:
(_The use case is that I am **not** working for the said company, but communicate with employees of it._)

Add **some** way of associating or using **any choosen key** one-time or per default for an email recipient.

#### Ideas / approaches:
(This is from the users view, not considering implementation aspects)
- There is a tab ""identities"" in the extended options for a public key. Have an option there to add email addresses this key is suitable for also. (Kind of user defined aliases)
- Allow a public PGP key to be used for **any** email address of a contact if the given identity matches any email address listed in the addressbook for that contact. To use this feature for the situation described above, one would simple add the ""fictional address"" of the PGP key to any contact within the company in question.
- [Probably worst approach as it has the most probability for accidentally using wrong keys] Generally allow to pick any public PGP key for encryption if no key with an id matching the recipients email address was found. (May even if its found - optionally enabled by some ""exports settings"")

#### Solutions used somewhere else:
- _GPG Suite_ for _OS X_ has some hidden feature to accommodate to the situation described: https://gpgtools.tenderapp.com/kb/how-to/how-to-add-an-e-mail-address-to-an-existing-public-key-using-key-mapping

- Enigmail has rules which associate any key with a user defined pattern. (e.g. ""Ends with example.com"")

- With PGP/_GnuPG_ command line tools, you can just encrypt any text by any key."
open-keychain/open-keychain,open,Use new external NFC sweetspot library,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
Externalizes the NFC sweetspot stuff into a new library.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,"Update NFC sweetspot data, and extract into separate module",[],Preparing to extract nfc sweetspot part into separate library
open-keychain/open-keychain,closed,Not able to connect to key server,[],"App is not connecting to key server for update or search.

click search keys in home page, enter a string click search

error: an error occured when searching for keys

click update keys:

error: import of <n> keys failed

Does this app needs any android feature for hkps:// protocol to work?

I have given data access to this app

i use Android / F-droid version 5.2 (52009)"
open-keychain/open-keychain,open,Crash when scanning a QR code whose public key isn't uploaded to key server.,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Successfully import the public key after scanning the QR code provided by the OpenKeychain APP.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
OpenKeychain just crashed after scanning a QR code. Later I figured out that it could because the public key I wanted to import hasn't been uploaded to the key server.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Don't show QR code at all if the user chose not to publish the public key in the key pair creation process.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Let someone else create a key pair and do NOT check ""Publish on keyservers"" before creating the key.
2. Tap the key just created and there's a QR code on the top right corner.
3. Scan the QR code with your OpenKeychain.
4. Your OpenKeychain crashes.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.1.0
* Device Model: OnePlus 5T and the Android emulator in Android SDK
* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Gladle sync failed in a android studio,[],"
I am trying to sync the code with android studio but i always got these errors

Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html

Configuration 'testCompile' is obsolete and has been replaced with 'testImplementation' and 'testApi'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html

Configuration 'testApi' is obsolete and has been replaced with 'testImplementation'.
It will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html

Unable to resolve dependency for ':libkeychain@debug/compileClasspath': Could not resolve project :openpgp-api-lib.
Open File
Show Details

What do i have to do to make it work?  Do i have to change the build.gradle upgrading the code changing those words or what? please somebody"
open-keychain/open-keychain,closed,fix secret key export compatibility with gnupg,[],"## Description
Under some circumstances, keys that had no passphrase were ""encrypted"" with an empty passphrase, rather than no passphrase at all. This should now be fixed.

## How has this been tested?
Unit tests included :+1: 

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,[BUG?] Installing OpenKeyChain deleted contacts2.db (thus all android contacts),[],"After installing OpenKeyChain 5.2 from F-Droid my contacts of Android (LineageOS 15.1@FP2) vanished completely (only 2 contacts survived).

I checked /data/data/com.android.providers.contacts/databases/contacts2.db this file only contains 2 of my hundreds contacts anymore.
I store contacts only local at the device without using any cloud-solution.

Only these 2 contacts are visible in stock contact app (and are the most recent changed).
Also the favorites in the stock contact app vanished.

I cannot prove, that openckeychain is the reason of this behaviour, but I noticed this 1 hour after installing without doing anythin else with this device. I have currently no time to reproduce this again as I neet my contacts. I restored a backup (stored at my PC) using AirMore (luckily successfull).

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: LineageOS 15.1-20180910-NIGHLTY-FP2
* Device Model: Fairphone 2
* OpenKeychain Version: 5.2 
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Issues with 1822direkt bank key,[],"My bank recently updated their pgp infrastructure in an attempt to support MDC. They changed their key ( https://www.1822direkt.de/pgp5key.asc ) and went from Cryptix OpenPGP to BCPG 1.60. Since then I can't decrypt their messages anymore that they send, encrypted with my public key. The decryption works fine with Thunderbird + Enigmail, but K9 + openkeychain can't decrypt them. I tried decrypting the message body from clipboard to make sure K9 is not involved in this issue, but I only get the message

""no encrypted data with known secret key found""

Not quite sure why, since on my end my keys stayed the same.

## Expected Behavior
BCPG decryption is possible

## Current Behavior
""no encrypted data with known secret key found""

## Steps to Reproduce (for bugs)
1. try to decrypt the message below
2. get error message

## Your Environment
* Android Version: 7.1.2
* Device Model: redmi 4x (santoni) on resurrection remix
* OpenKeychain Version: 5.2 52009
* From Google Play or F-Droid?: google play store

The problematic message:
```
-----BEGIN PGP MESSAGE-----
Version: BCPG v1.60

hQIMA50n90XpDXX/AQ/8D4nMnHxTpVjkuPRmhyq2Sobjw+SDH5MgNR6VbfVyaXwI
G09eyIYr8XiG+d9memcYe4MMR6XBReDaS4xEACt6EBUJAqhye7RQQoVBtYF8QP9d
5eg/un0ISjIKfKct8jch5cQE0cE/EmBKFqNOFC1B0mda1T49ZIdaEddWraS5yf6W
1PfNz2XcefGSfzHNodjcakzCms/AqqBk2Jh4vk0tJJDxjmaAN52zDIzhjy61vQ7z
mFB3kahi4pJ2UzeJ4HF5wZx+2dgeqwPkVGMB+fMEPXnd3trkOKLlrYBocjsDDrIB
LSNO3pe17xhSdiyIvb2MDszTdmfADxFBVlLNDuBcxuVjUR44iEz8LXz5gi2HCpx/
JSkJJUbp+AEcCZ8k3kgP8t41d2XBS5EZ3QRXvv2/id2I2DbG/phc6sEPY3x6UJMN
CPY2o/3lK3JhKFO9vrCdcKkRLAK3ijP+ECbk8meFq504YY5YddN9ybjGDmmpo6po
7vQgHt+s8HXz+QZQJ8n4KJLSdi1Q3wvDv9nBKDJqIYWF5Ho0xng0zEOLSzarYPdL
LR+fJzkeBU6Cyls+JIBeGvOhbqRg0lMCqG/ZqlHX1ONExqXi2yHU3RsASTZew2Br
VFiZ4AfmXCLYRELeUzpupoa29ACGKfCkCWOlUnIVXYj2Sa2ntiU0SgqO/T9PwFjS
waYBrKkrNQIKpoMbYN8DHLIHaThtVUtTYwE6xYmnhoOz0raODFzvjvNrTg2Czi4x
lrodAqnhEKYHX9rqhPtFM1cQiZGTJxYFgWCtPD8U86Ljxfp/ND0XXNpf4KXAdaZf
zSeeBul3BW85cnDZ4YGpQCKbR4sPl1M4AUlMIuGXSjkY+MgZjLtg3XbzwCM+1jpu
HcORALY09kO6fQTIFkIPuXbnQMYj1uk+eRVy2sgh9BGMqsTVdYiSDlaj90YgspFQ
Zjf/4OOVTporQ7FWUt6atI2y8BnCBO6nDkC6fP8sh6E5BMdqjw7tFZAEpy5sGxvM
mg+/8hkToMivajYFb0FxJZxp0eOYpPqJvNGlw8cRQhdMiJ6PwZhFV+pFscQ5Hwwp
Q1ovyYSiBzcVlmLVtjeLoYVtHLlkGYf20IZpwTJ8ld40R6Gnw3cvOYwbfN6rwE4r
Ol2mqTYI9vX1SVCL2svMXG2lPAqfA+/y6pYh2tIOmZNtkQDeRoaMdFfBmCQXF8Xq
Y4WssjFTDJmAmexZRypu5yVxF+FxPgNbzzRQjjsvo5BqDOp/6taZuhovCI7czf0f
FsYMtKrZeB6QIadTvioVgf4YeJJ9PikPqpEM/BUt7ZpQsBofcZLsKAYFTJZShIms
SZalQdg9aDkseeZKKhLO+9QECXU2puUnZ1PnkUIKMmbDZ3oqlIkOb6E3XnBbvLj2
Jsu6k3NjwHSi88Ca37/7AtOKVJ2Dv1Hm5xa6oEpYce2GV3/YxNrXa87859wlr5Z7
9D7Dhgf6EJMQgdCi1EbTAZeH1mGXlxPfy8zlP2xW2hWkoHTfEMBP/w==
=ofKw
-----END PGP MESSAGE-----
```
Infos about my public key:
```
:public key packet:
        version 4, algo 1, created 1463182997, expires 0
        pkey[0]: [4096 bits]
        pkey[1]: [17 bits]
        keyid: 9D27F745E90D75FF
:user ID packet: ""<my mail address>""
:signature packet: algo 1, keyid 9D27F745E90D75FF
        version 4, created 1463182997, md5len 0, sigclass 0x13
        digest algo 2, begin of digest 8a 38
        hashed subpkt 2 len 4 (sig created 2016-05-13)
        hashed subpkt 27 len 1 (key flags: 23)
        hashed subpkt 9 len 4 (key expires after 5y0d0h0m)
        hashed subpkt 11 len 5 (pref-sym-algos: 9 8 7 3 2)
        hashed subpkt 21 len 5 (pref-hash-algos: 8 2 9 10 11)
        hashed subpkt 22 len 3 (pref-zip-algos: 2 3 1)
        hashed subpkt 30 len 1 (features: 01)
        hashed subpkt 23 len 1 (key server preferences: 80)
        subpkt 16 len 8 (issuer key ID 9D27F745E90D75FF)
        data: [4095 bits]
:public sub key packet:
        version 4, algo 1, created 1463182997, expires 0
        pkey[0]: [4096 bits]
        pkey[1]: [17 bits]
        keyid: 6E695BC4304554A2
:signature packet: algo 1, keyid 9D27F745E90D75FF
        version 4, created 1463182997, md5len 0, sigclass 0x18
        digest algo 2, begin of digest d9 33
        hashed subpkt 2 len 4 (sig created 2016-05-13)
        hashed subpkt 27 len 1 (key flags: 0C)
        hashed subpkt 9 len 4 (key expires after 5y0d0h0m)
        subpkt 16 len 8 (issuer key ID 9D27F745E90D75FF)
        data: [4094 bits]
```"
open-keychain/open-keychain,open,Warning for letters count limit.,[],"## Expected Behavior
- Give a warning when the encrypted message exceed the limit of the message-client limit.
- Have a list of common instant messaging apps with a check box indicating what app you are going to send this message through. If the encrypted message exceeds any of the check apps, a warning should appear.

## Current Behavior
No warning.

## Possible Solution
Make a warning dialogue with some info about what app would not accept the encrypted message and an option to split the encrypted message into to messages somehow (send two messages not one message)  so that the app will accept each message. I expect to have two or more parts of the encrypted message continuing each other and a copy-to-clipboard and share buttons above each one ... so the receiver will have to put the parts together in one message before decrypting it. 

## Context
Some if not all Instant Message apps have characters count limit. This mean you can not send a message with more than the limit. If you exceeded that limit, the next character(s) would be ignored. In the same way, if the encrypted message exceeded the limit, part of the message will be ignored by the app making the message meaningless. 

## Your Environment
Not a bug, so no device info is required.

* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,Request: add padding or margin,[],"## Expected Behavior
The activity/fragment showing the decrypted message has a padding/margin from bottom .

## Current Behavior
There is no padding/margin from bottom of screen-of-decrypted-message.

## Possible Solution
Change some xml file(s) to add a little padding/margin at the bottom of the screen-of-decrypted-message.

## Context
After decrypting a message. It is nearly impossible to select the last line of the message without using 'select all' or starting the selection from the last line (I mean selecting the text to copy it)

## Your Environment
It is not a bug so device info is not needed.

* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,Cannot export keys via autocrypt,[],"In e.g. enigmail, you can export your private key to another device using autocrypt. This feature doesn't seem to exist for OpenKeychain, but it would be really useful.

I'm using version 5.2 (52009)."
open-keychain/open-keychain,closed,fix encryption key selection,[],"this broke in #2397, fixed and added a unit test. good thing we're doing betas :)"
open-keychain/open-keychain,closed,Remove experimental Linked Identities feature,[],"This PR removes the Linked Identities experimental feature. It's a cool feature, but was never finished and no longer aligns with our plans."
open-keychain/open-keychain,closed,Fix crash on DialogKeyChoice with Spanish locales,[],"This PR fixes a crash on the DialogKeyChoice with Spanish locales.

## Description
An incorrectly formatted string was causing the DialogKeyChoice to crash when using Spanish locales. In order to reproduce it you'd have to:

1. Set your phone's language to Spanish.
2. Invoke the DialogKeyChoice (for example: download AndOtp, then go to Settings > Select OpenPGP key)
3. Tap ""I already have a key""
4. Tap ""List unrelated keys"" at the top right
5. OpenKeychain will crash

## Motivation and Context
I believe this should be obvious.

## How Has This Been Tested?
I have not ran any tests nor added test cases. I have simply followed the steps above and verified that it now works as intended.

## Screenshots (if appropriate):

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,keybase proofs,[],List of keybase proofs duplicates entries
open-keychain/open-keychain,open,Keys search,[],App searchs for key on hkps servers even if this option turned off.
open-keychain/open-keychain,closed,Add Secalot hardware token support.,[],"## Description
This patch adds support for the Secalot hardware token, www.secalot.com.
Secalot supports OpenPGP Card specification version 2.1.1 with RSA keys up to 2048 bits.
Initialization with open-keychain is possible, card reset is not.

## Motivation and Context
We want to be compatible with as many applications as possible.

## How Has This Been Tested?
The change was tested with a Secalot device connected to a Galaxy S8 phone with a USB-A to USB-C adapter. Card initialization, signing and encryption work.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)

## P.S.
Dear maintainers, if you want a device for future regression testing, can you please drop a message at hi@secalot.com with an address where to send, and we will send you one for free.
"
open-keychain/open-keychain,closed,"Failing encryption, all keys except mine",[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Encrypted text in copyboard

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
```
[START] Начало операции подписи/шифровки
    [WARN] Некорректный ключ для шифрования: 0xb7efbf94ea1809d1
```
^ Incorrect encryption key ^
The key worked perfectly for like a year. I think that's an app error.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Add a public key
2. Try to encrypt some text(/files) -> fail
3. Update the key from the key server
4. Try to encrypt some text(/files) -> fail
5. Try to encrypt with any key -> fail
6. Try to encrypt with my public key -> success

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Trying to encrypt some text

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0.0 8.0.0.372(C185) EMUI 8.0.0
* Device Model: Huawei MHA-L29
* OpenKeychain Version: 5.3-beta1 (53000)
* From Google Play or F-Droid?: GP
 
"
open-keychain/open-keychain,open,Blank encrypt to drop down list,[],"<!--- Provide a general summary of the issue in the title above -->
When dark theme is set. Drop-down list background is white. Foreground is also white.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
List should have black/dark grey background.

<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior --> white background
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.Select encrypt txt. 
2.Tap on encrypt to field. A blank drop-down menu appears. 
3.It is apparently populated & I can tap to select. But I'm doing so blindly

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->trying to encrypt txt
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 9
* Device Model: essential phone
* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: Google play
 
"
open-keychain/open-keychain,closed,Security Tokens wiki page readabilitly,[],"Currently the [Security Tokens wiki page](https://github.com/open-keychain/open-keychain/wiki/Security-Tokens) uses 𐄂 (http://graphemica.com/%F0%90%84%82) for the X mark, but [this](https://i.imgur.com/7f3HdIs.png) is how it renders on my system, and I'm probably not the only one. I propose using ❌ (https://emojipedia.org/cross-mark/) instead."
open-keychain/open-keychain,closed,Add a test for authentication subkey selection,[],"## Description
Authentication subkey selection needs some tests.

The keyring was created as such:
- add 3 auth subkeys
- revoke the 1st & 3rd subkey
- add an encryption subkey

## Motivation and Context
See https://github.com/open-keychain/termbot/issues/12

## How Has This Been Tested?
This test fails now. Merging https://github.com/open-keychain/open-keychain/pull/2397 should fix this.

## Types of changes
- ✅ New test"
open-keychain/open-keychain,closed,PassPhraseDialog: confirm password on enter key,[],"I often use a hardware keyboard with my tablet.

Before:
When entering the password and pressing enter, by default the cursor moves to the next visible element in the ui.

Now: On enter the password will be confirmed, like with a software keyboard"
open-keychain/open-keychain,closed,WIP: Subkey selection for authentication,[],"## Description
Add subkey selection for authentication.

## Motivation and Context
A keyring might have multiple valid auth subkeys, so allow for selecting one of those.

## How Has This Been Tested?
Works for me.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
- ✅ New feature (non-breaking change which adds functionality)
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Use specialized query exclusively to select authentication key,[],"Fixes https://github.com/open-keychain/termbot/issues/12

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,Contact search in dark mode is flashed out. BG/FG color need to changed,[],"Contact search in dark mode is flashed out. BG/FG color need to changed as black and white.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Background color should be black and foreground color as white.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
Background and foreground color are both white.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Make the background color as black and foreground color as white
## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Go to encrypt text in dark mode
2. Try to search contact 
3. Everything is white. 
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? --> trying the search contact.
<!--- Providing context helps us come up with a solution that is most useful in the real world --> reverse the BG/FG color. 

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.1
* Device Model: OnePlus6
* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: Google play
 
"
open-keychain/open-keychain,open,Contact sync not working on Android 9,[],"## Expected Behavior
In the settings, switch ""Link keys to contacts"" on for syncing contacts

## Current Behavior
Since upgrading my Oneplus 6 to Omnirom 9.0 the switch always goes back to off.

## Your Environment
* Android Version: 9.0 September patch level
* Device Model: Oneplus 6
* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: F-Droid

Here's a logcat of the in my opinion relevant lines. Seems like some missing permissions. The contacts permission, however, is granted to the app.

[2018-09-17-17-14-13.txt](https://github.com/open-keychain/open-keychain/files/2389286/2018-09-17-17-14-13.txt)

If you need further assistance, please let me know."
open-keychain/open-keychain,open,Progress bar stuck after signing using Yubikey 4,[],"I'm trying to sign a message with a Yubikey 4 (RSA 2048) but it the progress bar stuck on screen that require a restart.

## Expected Behavior
I'm signing text `testing` and it should not stuck after signing.

## Current Behavior
After entering the PIN, stuck on the progress bar for over 5 minutes but the sign was completed, though not sure does it sign correctly.

## Possible Solution
The back button does work so I assume it hanged.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Generate a key pair from OpenKeychain with ""Security token"" option
2. Generate another key pair that store locally/pull a random key pair on the Internet
3. encrypt and sign the message in OpenKeychain
4. enter the PIN
5. OpenKeychain stuck (and hanged maybe) on the progress bar but the encryption(maybe, I can't verify for now) and the signing does generated by copying to clipboard/open share menu

## Context
It adds some inconvenient that I have to close the app for it to work again. 

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0.0
* Device Model: Sony Xperia XZ2 Compact H8324
* OpenKeychain Version: 5.2 (52009)
* From Google Play or F-Droid?: F-Droid
* Notes: I connect Yubikey via a OTG connector. Don't know will it be the issue.
 
"
open-keychain/open-keychain,closed,Fix saving XMPP URIs in phone Contact Book,[],"
<!--- Provide a general summary of your changes in the title above -->

## Description
Fixes saving XMPP URIs in phone Contact Book
<!--- Describe your changes in detail -->

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
Previously XMPP URIs were saved as non functional e-mails in Android built-in Contact Book. This change saves them as a special IM field that is used [directly by other applications](https://github.com/siacs/Conversations/issues/3158#issuecomment-418985376) (e.g. Conversations).

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested on a real device with a key with UID `xmpp:test@example.com`. After signing that key and synchronizing contacts OpenKeychain created a contact with e-mail field from primary UID and Jabber IM field

## Screenshots (if appropriate):

Key in OpenKeychain (debug):
![key-sm](https://user-images.githubusercontent.com/1718963/45146289-daf41080-b1c2-11e8-9f56-ac8927f70753.jpg)

Created contact in Phone Book:
![contact-details-sm](https://user-images.githubusercontent.com/1718963/45146294-ddef0100-b1c2-11e8-9a16-57a81ba12f2f.jpg)


## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,Unable to associate key to address if the address is not the 1st address listed for the key,[],"This is a serious bug IMO, which renders OpenKeychain useless for some basic use-cases.

After importing a key which has an address like ""bob@yandex.net"", K-9 was installed and configured for ""bob@elude.in"".

## Current Behavior
When configuring the crypto for `bob@elude.in`, OpenKeychain says ""K-9 wants to set up end-to-end encryption for this address: `bob@elude.in`.

* this is a new address (create new key)
* I already have a key (import from other device)

These options are incomplete.  I already have a key (which incidentally has another address [""bob@yandex.net""] in the metadata of the key - but that's just superfilous trivia).

## Expected Behavior
I expect to be able to associate any key of my choosing to the address K-9 is configuring.

## Possible Solution
There needs to be an option:

* I already have a key (and will select it from the list of keys on the keyring)

If I choose ""I already have a key (import..)"", it doesn't actually bring me to an import dialog, but in fact shows me my already imported keys.  Which is baffling, but it's what I need anyway.  However, I select the key I want to associate, but it does not give that key to K-9.  Instead, it just goes to the ""key status"", giving no way to return the key I've selected.

## Context
Many addresses, one key.  The one key does not include all the addresses in the metadata.  Unlike S/MIME, PGP is designed for that flexibility.  Yet OpenKeychain apparently imposes the S/MIME limitation of one key per address, and one address per key.  This totally breaks my workstation (mutt) config, rendering k-9 completely unusable.  It also breaks all scenarios where a forwarding address is used (such that there exists an address known to externals which forwards to the configured address).  OpenKeychain forces the external address (which is generally in the key metadata) to become an IMAP-configured address, when the external address has no IMAP services available.

BTW, I also added ""bob@yandex.net"" as an identity to the existing key.  I didn't want to, but just as an experiment, and OpenKeychain still failed to properly associate the key using that alternate identity.

## Multiple bugs
To summerize, there are a few bugs here:
* choosing a key arbitrarily is broken (the selected key is not returned to K-9).
* even when a key has an identity with matching address, OpenKeychain fails to find it.
* when the user expect to see import dialog, they are shown a list of keys instead.

My overall impression of what has happened is OpenKeychain is apparently designed strictly for novices with the most simple use-cases, and that it's not intended for advanced PGP veterans who have internal and external email addresses, and take care to keep private addresses out of the key metadata.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 5.1
* Device Model: wiko rainbow jam
* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: f-droid
 
"
open-keychain/open-keychain,closed,Update gradle wrapper to 4.9,[],"## Description
Update gradle wrapper to 4.9.

The [release notes](https://docs.gradle.org/4.9/release-notes.html) do not mention anything that should be relevant to us.

## How Has This Been Tested?
Test suite completes without error.

## Types of changes
- ✅ update"
open-keychain/open-keychain,closed,Update android plugin for gradle,[],"## Description, Motivation and Context
Update gradle plugin, harmonizing versions across modules.

## How Has This Been Tested?
Compiles & works.

## Types of changes
- ✅ build tools update"
open-keychain/open-keychain,closed,WIP: Use static passphrases in tests,[],"## Description
Remove all usage of `genPassphrase` and use common, static passphrases instead. 

## Motivation and Context
Fix https://github.com/open-keychain/open-keychain/issues/1881

## How Has This Been Tested?
Passes several test suite runs.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,closed,Add key sharing buttons to key view,[],"## Description
Add buttons for sharing a key to primary key view.

## Motivation and Context
See https://github.com/open-keychain/open-keychain/issues/2387

## How Has This Been Tested?
Tested manually.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,How to export public key to clipboard?,[],"<!--- Provide a general summary of the issue in the title above -->
Please forgive me if this is obvious, but I've looked all over the UI and the FAQ and haven't found the answer. How do I export a public key from my keychain so that I can paste it into another app?

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Easy way to copy public key exists

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
Cannot figure out how to copy public key to clipboard.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Open the OpenKeychain app on Android
2. Ensure that at least one key exists in keychain
3. Attempt to copy public key to clipboard somehow
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I'm trying to copy my public key so that I can use it in another application. Not being able to copy my key makes it impossible to register a profile in the application I'm using.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 6.0
* Device Model: Blu Vivo 5 mini
* OpenKeychain Version: 49200
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Unable to verify cleartext signed message using GnuPG v2.0.22 (GNU/Linux),[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
```
Good signature from xxxxx
```

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
```
BAD signature from xxxxx
```

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
It seems that this problem is similar with #2333
I have completely no idea how this can happen. When I clearsigned a message on Android and tried to verify on Linux:
```
$ gpg --openpgp --verbose --verify test
Hash: SHA512
gpg: armor header: 
gpg: original file name=''
gpg: Signature made Fri 27 Jul 2018 10:19:16 AM CST using RSA key ID 2636043B
gpg: using subkey 2636043B instead of primary key BD12C43F
gpg: using PGP trust model
gpg: BAD signature from ""cbwang <cbwang@protonmail.com>""
gpg: textmode signature, digest algorithm SHA512
```

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. 
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0.0
* Device Model: HUAWEI Mate 9
* OpenKeychain Version: 5.2
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,open,Error when trying to decrypt from clipboard,[],"Hi,

I'm having an issue with Open Keychain. Anytime I try to decrypt some text from the clipboard, or even from a text file, it won't work. I get an error with something about entry data. I don't understand because I never had any trouble with these encrypted texts on my Mac with OpenPGP.
If anyone has an idea, I'd be really grateful ! Thanks in advance !"
open-keychain/open-keychain,closed,Support future subkeys,[],"This PR:
1) allows subkeys with a future signature date, see #2374
2) chooses encryption subkeys based on an sql query similar to signature and authentication keys, rather than key objects
3) improves the subkey tab under advanced, use a RecyclerView instead of rendering all keys at once :)

Closes #2374 

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,German language: formal or informal,[],"The German translation is in an inconsistent state: Some strings are formal ""Sie/Ihr"" other are informal ""du/dein"".

Can we agree on what should be used?"
open-keychain/open-keychain,closed,use AsyncTask for background task execution,[],
open-keychain/open-keychain,closed,Use LiveData and ViewModel for ManageSecurityToken fragment,[],
open-keychain/open-keychain,closed,"Add adaptive icons, fixes #2273",[],"Add support for adaptive icons.

## Description

Add support for adaptive icons in devices running API 26 or greater, preserving old icon for older devices and providing round icon.

## Motivation and Context

Uniform icon look and feel with updated Android look among other apps.

## How Has This Been Tested?

Made with android studio, tested on Nexus with Pixel Launcher

## Screenshots (if appropriate):

![ic_launcher_round](https://user-images.githubusercontent.com/5065094/42691346-e85318f2-86a7-11e8-951f-45f9f1c07ffc.png)

## Types of changes

✅ Vector logo to support any DPI (yeah, i love pushing pixels!)
✅ Support for Android adaptive icons
✅ Support for round only icon view (API 25)
✅ Keep legacy icon for <=API 25 for feel consistency in older Android versions
✅ Support for blue debug adaptive icon with same behaviour of the release icon
"
open-keychain/open-keychain,closed,Request missing permission when rescanning USB devices,[],This PR makes OpenKeychain re-request permission to use USB devices if missing at certain points. This should help the problem that came up in #2366.
open-keychain/open-keychain,closed,Use overflow menu instead of long click in decrypt file list,[],See #2370 
open-keychain/open-keychain,closed,Scroll to new key after import,[],"Quick hack to scroll to newly imported keys, so the user no longer needs to search in the key list manually after import. There's some room for improvement here, since the key isn't actually highlighted in any way so far, but it does the job and I didn't want to spend much time on it :)"
open-keychain/open-keychain,closed,Introduce Notification channel for passphrase cache,[],
open-keychain/open-keychain,closed,Ditch keychain provider,[],"This is a follow-up to #2351. It does a couple of things:

- removes remaining functionality from KeychainProvider, specifically insert operations
- Uses MatrixCursor fed from DAOs instead of a temporary SQLite DB in KeychainExternalProvider"
open-keychain/open-keychain,closed,OpenKeychain strips subkeys with creation date in the future on import,[],"## Expected Behavior
OpenKeychain imports subkeys that are not yet valid, but only uses them once their creation date has passed.

## Current Behavior
OpenKeychain strips subkeys with creation date in the future on import.

## Possible Solution
Keep the subkeys, check the binding signatures on import (even if their creation date is also in the future, see #2367), save the interval in which they can be used in the database, and select the subkey accordingly.

## Steps to Reproduce (for bugs)
1. Import this key (or the public part of it):
```
-----BEGIN PGP PRIVATE KEY BLOCK-----

xVgEWx5j3hYJKwYBBAHaRw8BAQdA/kwDws95tzMrzhomPqXmu0ldb+tseAyZTr6F
2idmSkcAAP94zOPmB6Hj/dgeYAHcYIIF7qKAmcak2K4dRoB3AtINTxHRzSJGdXR1
cmEgUHJvb2ZhIDxmdXR1cmFAZXhhbXBsZS5vcmc+wn4EExYKADACmwMFglseY94F
iQHf4gAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAG9QAP9t2lJX
HaEgUOCQL2XvHoK9W5BFuwlmLlkHd1vkcWX4jQEAw542+STq5pLmOYoXRKv8hrbO
Od7coIlBuYl5DNz1lQXHXQRc9QteEgorBgEEAZdVAQUBAQdANyDvquAnQNPNFFdP
wzzmCiUuD1H4wLo+BB1geBDODQ0DAQoJAAD/caWVh+xxtpi2cI/B+BEOBh9n3IRY
2YcOFgJlqB7b3YgQnsJ+BBgWCgAwApsEBYJc9QteBYkACTqAFqEE0nhPbd61mrQW
LM0+DwjyeWsLceIJkA8I8nlrC3HiAADObwEAvFrc+fQLObqTNXhWvYmdsFwtEJZU
wvHMK3OmPemC7XwBAO5Xrsguy5CA6ZgLvXx9hSs9cQLOA7zTLPpHH3A9wjIFx10E
XOvQ3hIKKwYBBAGXVQEFAQEHQOkrTpIaNOp8balHGDxYQOWNR+YrU0bgKMZlTl8M
o7wEAwEKCQAA/2HN4BikOP3D8WxG1YJ5pdDuVN3xCttnaR34tVQFtrB4E2/CfgQY
FgoAMAKbBAWCXOvQ3gWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5
awtx4gAAyGABAJHelpgOxd2leXypxT0kkYmqY31I4GWAxc3vNurlPNkWAQCeSNgk
lCnNQAkh+d72CKBE9QXQsPEFYfz2wQDoclpCAcddBFzill4SCisGAQQBl1UBBQEB
B0CdZJO4V9sT8X73+NtVaKjJt1rU/k4Mcz27YXrm0atMWwMBCgkAAP9rruG/5UpJ
FtJIA8K/A319fBLg6W/ufAgJGKzIx5s5CBBRwn4EGBYKADACmwQFglzill4FiQAJ
OoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAA1WAPwNygjo6smi
0vXYO+BNcKK+GvuKFEr6HUtuI/QycDB02AD/V278MQlWccq4sWMqIYklJnKzlgy7
xtJYmqv5+cCnegbHXQRc2VveEgorBgEEAZdVAQUBAQdAazXjpvaS+w58kTi7xFoe
Clzj3AcuRmn3U+jLoIX76VMDAQoJAAD/e9fjRN92+Cq22mui8+ouwMHCmcTUfOPB
/47GczypUngVoMJ+BBgWCgAwApsEBYJc2VveBYkACTqAFqEE0nhPbd61mrQWLM0+
DwjyeWsLceIJkA8I8nlrC3HiAAD1xgD/cq7YxjdQv0TxkmxfJSf1gv8eaFCtW/pm
xQZzp4g16jwA/0HGPUKeun8bVxNC45h5PukbGsIqWOTeE13sS8BH/kkMx10EXNAh
XhIKKwYBBAGXVQEFAQEHQJIDGQfHkPCLndoB5b9vp2ZiNhoXty4U/juqe4OewgoY
AwEKCQAA/0DCeBX/gT3pAazGRDw3r+8uB+AO/8J24aqsvEsnSqRIEPHCfgQYFgoA
MAKbBAWCXNAhXgWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx
4gAAo04BAKSIeXgO/7wN+3BwL+oWuaYRObfBqSmyBFfydWwYxzXCAP4hodjyBSst
s0lMYbwoPTrwhd4ajCVEo/EKZOTxZbqjBsddBFzG5t4SCisGAQQBl1UBBQEBB0Do
odM6Kgt8uq/+4w2BqFEWBge9WW3f9VAZAiwxqyZDCAMBCgkAAP9/xYoKyjBHrMks
QYj4JRxYp3GCnt85XfyWwXJj0rIPuBEzwn4EGBYKADACmwQFglzG5t4FiQAJOoAW
oQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAD14AQDkYUb8LMHQ70pH
X/LxHrD+TEHsm9ZU8HWjPZtzfpWQJwD/W44mN6/y9H9oIeVLvVoNHu3AoO5yALmf
Vwr9rbxFqArHXQRcvaxeEgorBgEEAZdVAQUBAQdAt/0j06FYHzx9rpSmgQGLeQGO
ALn+Uuyn83C3gmOpHX4DAQoJAAD/RdwwTP8fRjqhhET7B9n97O2N3wlYK5wqQE9y
hpQj5qAQ1sJ+BBgWCgAwApsEBYJcvaxeBYkACTqAFqEE0nhPbd61mrQWLM0+Dwjy
eWsLceIJkA8I8nlrC3HiAAArvQD/dIA6mYgPCCMqguKAlXlXdPpMrjHfeUBUVlbg
I+ehSV4BALw0sJzQX0EvBelRVkzOKPHyvssAtCOEg4ZLWcQMiNYCx10EXLRx3hIK
KwYBBAGXVQEFAQEHQKRjj2eFwrodUzTSp4cKWupl1y4YD/VYYXjoXVc5e4huAwEK
CQAA/1koQJF16QGjlkxsulGMGAAmGxX/51IJWi8bwCwWTyKQDI7CfgQYFgoAMAKb
BAWCXLRx3gWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAA
OoUA/iu6Y9FXEb+PtWDITphWHSzHBOpSBYX+aIta7ZurAkoVAP9hRQjVbTLbxB/P
I8hjgrobyMBX2oMcFvHCUykcYcegA8ddBFyrN14SCisGAQQBl1UBBQEBB0CVRx+L
//fhBN7OGZaLr2LAR/P0dIAwtH1e7uMfjoHQPQMBCgkAAP9XxB0U2bQwba3NqBC0
1uZ8FlM2fo1ENLYaF6yQGY8tqA9Vwn4EGBYKADACmwQFglyrN14FiQAJOoAWoQTS
eE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAANJlAQD2YnYOzo3S2LlNnOn+
M0RjidUuQ6ikxnFCRTuNWFh53wD6A6hfBytK12c5GeHp5ULtbd6m0tD1kTCyIx4c
IRZCqg3HXQRcofzeEgorBgEEAZdVAQUBAQdAsGmThiM5FP7XhDA5M4Ub/EHdEDal
YhKx1YlEjixhxVsDAQoJAAD/TOE1wI7AamEYvsAZbkYn06Ijlbt3w26U0+kniNUV
fegRosJ+BBgWCgAwApsEBYJcofzeBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsL
ceIJkA8I8nlrC3HiAACvNQD/ZK8CaUYZ7XfD8WEHpoMYWUHoPnAjIpUQ/NMo4w3z
YAoA/iBUTvpljk8VxGJDLXzjnm/xD662TTPEpn9Wfe8IHVQKx10EXJjCXhIKKwYB
BAGXVQEFAQEHQMcemU9HD6dMjeBB8OlUekSYbDC1WuQMOxSMvoictt9GAwEKCQAA
/3sgHycyGp7ROYD7lJnt3O79u4c/KYOD20dd17DqVd6gEqPCfgQYFgoAMAKbBAWC
XJjCXgWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAAW4EA
/A1pcuCH2i1J8AxXe0fl5Hjlkqs08jQvU/DpZmYv2sReAQDH31KTZ+ADlEbbAuyR
6eKeg9VsQIWaACJALgw0rxLbD8ddBFyPh94SCisGAQQBl1UBBQEBB0Ajs0jTzmWv
rQo/O5Wq63lLq20cTnHqV0AFk2woPIv6TgMBCgkAAP9JXFE7gi8PLTXAxqWPw4Ta
aWV8aWs5x5OIZ+HIbnPCcBCJwn4EGBYKADACmwQFglyPh94FiQAJOoAWoQTSeE9t
3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAAChAQC4Ejob73FPchFm5Ppf1YeO
gKSUxyd9RKlQfKVolO6dnAEAn66uOQHJzx+VNkT/QeeRvy2iZOrsd+FkVe7QhBtV
oAjHXQRchk1eEgorBgEEAZdVAQUBAQdAlqreaPYf4OzItsFDFiTlHkgQZ1jqnC8y
Nfunv47Nw38DAQoJAAD/UYcLNJFKdBg9s9vtd/p9oUJ2vVwbwxFo3E2Q/CJKjWAP
+sJ+BBgWCgAwApsEBYJchk1eBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJ
kA8I8nlrC3HiAADM7AD8CviL7VLpj2yoaU8gC8whXtMTMIJ5LnQjR4salBrlzbwA
/igzmUAMnKQXY2O85+WH6wX/lXrdpKvsu1R5Sh7d3gwNx10EXH0S3hIKKwYBBAGX
VQEFAQEHQBC3ie4bRAODy7veQCYD5+UniQmRkB8QltYdfl2nzpB4AwEKCQAA/0K3
k6oTH/Kxb3uznXD4SNOYpsCxQT0vcI3r2CcFX6noEf/CfgQYFgoAMAKbBAWCXH0S
3gWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAAoO0BAO+2
dBnBKw5PIXtpZRS7CExkMZ1GK3U+CKEqjP3zQdyDAQCmNW4UU0zDiFlQz+cYwa9u
HEvcHPJOulDLmpQW+bHFCcddBFxz2F4SCisGAQQBl1UBBQEBB0BU4dK9MzKCS32p
m6A7ZcC1m0cuHTmgHnlxuLromOq1UQMBCgkAAP9G7LzQUrJmu2NsE+22TZEmtuuX
+3EFubMpNZjW0wN6eBIUwn4EGBYKADACmwQFglxz2F4FiQAJOoAWoQTSeE9t3rWa
tBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAD2WAQDKZlJBFzFFRiBYkNbVUMtSG8xk
5kvzNJmkPW2YL3eJ0QD/VcbundVf7oXJDAw4+d6gnbaTaHyduB9jtFa3TqpNXgfH
XQRcap3eEgorBgEEAZdVAQUBAQdAIPwGL08KCk0CnIXI0g0CW4tgl+cyH5WstqA5
wezM8UwDAQoJAAD/RpfMFL9ieUcHOEK72XYmjMu6syq2Lv3td4j5isUsUOARrcJ+
BBgWCgAwApsEBYJcap3eBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I
8nlrC3HiAADbgQEA7EoE9+AxDrJ7f49KMsSG61K5TqealX72yTbLRTzka9sBAM07
o8RtRQaWxPSFOlfkPwhzrus5HVJQgHQF6qtvTpcMx10EXGFjXhIKKwYBBAGXVQEF
AQEHQNnE6LZAM/UlKFmDa1SKdeekBSLLttWMs5FVdv7TWUgwAwEKCQAA/3TunGWC
8O+L0zVNg+xpHhrtY63QjyK9mB03xeSlGUr4EoPCfgQYFgoAMAKbBAWCXGFjXgWJ
AAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAA07UBAO0y2/QH
BmlGh7xnqgIVfOF58zDQXLKlm2fmMSbBQ5dmAQDEEQWiAbUfOt+O3h77chRfpbFP
bfzkN9+7hZEq/hKADMddBFxYKN4SCisGAQQBl1UBBQEBB0BWVyNoOsLYzCdNuwtx
wXgd0Dp/DAodYsCXiBw0/VlFRwMBCgkAAP9FlvANkLT31fsiszHyQLYz16+Pv6Sz
rYLM6Tde99zWKBR4wn4EGBYKADACmwQFglxYKN4FiQAJOoAWoQTSeE9t3rWatBYs
zT4PCPJ5awtx4gmQDwjyeWsLceIAAFKtAP0Ux4mq/ng2akRkRn9tyOiI1520iMOm
jM12je7ACXNPCQD+OH0DEPZ/NLaz0+YP5l4yT5ObG0XKZYPCYOUG0W9hSQfHXQRc
Tu5eEgorBgEEAZdVAQUBAQdAjeKoIvEMbvc2s2rigBKu0qyKYJQ+r32chBhSVWMn
hHkDAQoJAAD/QlEu9F1Qt2weJm2hJ89H7Iv61NE7KkvcqFWuDDeSCsgQB8J+BBgW
CgAwApsEBYJcTu5eBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlr
C3HiAAAhggEA9VpKqIRfHHusH4FgMVzXaXLw4S5GVIyWyvsX/cIa+u0A/j8X1owf
iUTnNK3dTs5zvQhOwE8IoSXNCSbofFPk8UUKx10EXEWz3hIKKwYBBAGXVQEFAQEH
QGisumwiYNa42yvOFokEcP1WTd74FRH7ktSjKU+GHdYdAwEKCQAA/112vEGaIxO1
GoD89Wf4cM0myKdfSZ6xlPWLdId4VIGIEevCfgQYFgoAMAKbBAWCXEWz3gWJAAk6
gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAAeOoA/jFVF60Pwt9S
bHtR6IVRfQuvOTFeEes7Qnlo3fXUlVWfAP4unmzrWlLNlD0mkOV+tXsuljqnT5Cv
9wUeNIoUlbbsDMddBFw8eV4SCisGAQQBl1UBBQEBB0A37s8gVZo1OQ7+Q7KnCiJu
jeAocfQYQHzV76oDrCZcBwMBCgkAAP99eN30+ZgBLhmumwj4CiAm2GlWPbWQgE7u
kXidqP83iBEYwn4EGBYKADACmwQFglw8eV4FiQAJOoAWoQTSeE9t3rWatBYszT4P
CPJ5awtx4gmQDwjyeWsLceIAAHpUAP9f5NYag0byYs/fUqARBcex6Whf2cjDvNjc
a5Wbyxa4FQD5AewfZV9SENKWol6WcqkAzAsRqe3ZdlH39FwY6r9wUgfHXQRcMz7e
EgorBgEEAZdVAQUBAQdAmes/MEjAW2ejO2IVpZR08iCV0CeL1BbRbTkGlyAKADsD
AQoJAAD/XDJryoqLZ22h8qOGwJ428Avcfxkhxb5wbDmNLU3/cdARasJ+BBgWCgAw
ApsEBYJcMz7eBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3Hi
AAAO3AD8Dck4d+3NsNIGIKI+dDv0Pj/FmG564JrR9jv9wBxdp9YBAOQrORLDvka2
StzH4mdDrjCObHSK2+cu4hdmsfHLGxEEx10EXCoEXhIKKwYBBAGXVQEFAQEHQOYv
52Z98YvEdu1QAy7bRqYc+sxe9LnjYbzwpc3gE9NOAwEKCQAA/0xK/HDzRxJDtCen
P+Y9pCmy174CLVJj3tN+NRR1CSToD27CfgQYFgoAMAKbBAWCXCoEXgWJAAk6gBah
BNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAAeFEBAIX72dSwh266nyvd
6tn2wLRlna14GpzLgQ4xRMBa8AAnAQCVBhh7lIUoc7X3UqagXvLCdGusK+5yK0xD
YccsecVVCcddBFwgyd4SCisGAQQBl1UBBQEBB0C9l1p9EPTI67aABaiUrs4IDa5+
28Gz8jMODTwO5QUiRQMBCgkAAP9+I0UBJm89tuveXDvSGUhM3FU1lWr9Ycj/1yPJ
MagyMA/Vwn4EGBYKADACmwQFglwgyd4FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5
awtx4gmQDwjyeWsLceIAAMfAAP0akDbMyDTJv4OMc+fmgJQegZdt1FItKuAVAXQt
DXe5NgEAgvQoOfEKngtYrDtXVNN7nSghYGXgUoZ5EzjeRf2ipwjHXQRcF49eEgor
BgEEAZdVAQUBAQdApuEWGnmnnF5G1BDI87cf2UCebrNwHku1KIQRDNlwxE0DAQoJ
AAD/R26wX8ZFYl4c5UBuEXxGtFIdBCTvXi05vX79175ZxTAPKcJ+BBgWCgAwApsE
BYJcF49eBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAADr
hQEAvSWc4D0lbmYfDZnXuVvnG/YAaiRykgXg80l1ovvAIqQA/0CBdwwy2tBRx6QQ
52Vgvc1eU3s+hegWOfJr0uboawUIx10EXA5U3hIKKwYBBAGXVQEFAQEHQF6fFWbd
7XDlYGyqxGlxzcylqN2wlA9gVNvkbDqCBaRAAwEKCQAA/3h23kpZta9i4kwH1fAH
SR+hRn5BDR2OkffiY1kDIZ/4D9zCfgQYFgoAMAKbBAWCXA5U3gWJAAk6gBahBNJ4
T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAANV4BAP7eYgDh7Y8gTDWxB9pU
bmCMey41t0su0aAxkZxsiYK1AP9v+8+Sf/EJwuEBwnYwZgE+11Y63w38FFbC8Cth
7EmWD8ddBFwFGl4SCisGAQQBl1UBBQEBB0CHAiqPLnIAbueHtnmDDvfGV5FIOdB/
o9hukzliR+nofAMBCgkAAP9IUdHyiGMPyA11C/dhi/3ShvmplrI+qXxAp41LWEFw
sBGnwn4EGBYKADACmwQFglwFGl4FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx
4gmQDwjyeWsLceIAAOMdAQDd9Qbw+ScV3TCbKIrPR3it4qYUNuI8691YFOUdLFS1
zAEAr6f3Xkd8MXzrVkChXVvWiD7GkXEXEnC0WQRbYzQ87wzHXQRb+9/eEgorBgEE
AZdVAQUBAQdAZVYdn6SGoEYkDqV68Pcuh+/B2Nr0yh8LqwM4GioHHGUDAQoJAAD/
QX4v+PL++vYpRMCptmCOz9VdaFljmKg3lm3U1KNnZpAThsJ+BBgWCgAwApsEBYJb
+9/eBYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAABK2wD/
X6w5+2HgPvVUM5twwDdaPu4KPQW0MCei7+C0GIFMn5oBAJQdfE+uobmzBSD3HuhX
kUSX7kmXr5SO3Kxmr5YYC7EGx10EW/KlXhIKKwYBBAGXVQEFAQEHQFa/sCHcfu1j
6IY7XOPpDMIbhEDPE+gT35atSGrovHJIAwEKCQAA/291tzz2sDb1Un58LqundY3z
OO21lsyoPhGIJnRMPnFIEQDCfgQYFgoAMAKbBAWCW/KlXgWJAAk6gBahBNJ4T23e
tZq0FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAABtIBAK8e9a+k7UFe+v9g2P4yDpeC
sVMDwyOCiEgnVlCA1sLZAP9VjAM9KiDQQIW5Hq06GC36k9rgefUiD0W7efF7snD7
AsddBFvpat4SCisGAQQBl1UBBQEBB0As9Nqk5qwBfRVXeGDnNvYEdM9MBGWFyKJK
kKoRdj4lIgMBCgkAAP9fA88xxdaZKp9Rv5ytv78J0krooBwWa7ybyF/41QZR4BIB
wn4EGBYKADACmwQFglvpat4FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQ
DwjyeWsLceIAAHUyAQDXANNFs+rH37ejE0aGqKCx+o4LGVfRcDn01QIln796oQEA
woLcpAkSnoAApGpNbSc1vD3l36TUYOMnlnLrS8k0/QXHXQRb4DBeEgorBgEEAZdV
AQUBAQdAbAhVx+lEOgR5MhLo8V5f4BhCBLkH5aeCCFFrb+vS/3wDAQoJAAD/VNpo
xApSqFfF+GXZN69cIfcZwW+pNlSpeG/XDImjdXgREcJ+BBgWCgAwApsEBYJb4DBe
BYkACTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAAAvTwEAm2aT
0LvmexyOzCo6F65aZGWdAuPaLNTTMQ3E8VbblAUBAN33Dh6byS+IHmOR3VbmRj67
PzQiCuynar7QYO+aKI0Mx10EW9b13hIKKwYBBAGXVQEFAQEHQE428u1/dide3uEq
tflBt9yLh8rZ+wc2pKI22QKo8Z99AwEKCQAA/3dl+7wMEm0A3ZRBC+e3Ad7OGaOz
PptpUXQGdNXenSPwEHjCfgQYFgoAMAKbBAWCW9b13gWJAAk6gBahBNJ4T23etZq0
FizNPg8I8nlrC3HiCZAPCPJ5awtx4gAA7i0A/R5S/DTJQgF2kkUAycJ+YT3heWM2
AK18YIzRAYxnlYQIAQDtxgPqVq2cfZee6ehgyxfqdLGTIyTZjZjTgpkTXiLBAMdd
BFvNu14SCisGAQQBl1UBBQEBB0Dm0IuYhfUpY015YTpNVVxmtWvTKnj9aBy25b0C
0xL6BwMBCgkAAP9CPpEBDaHEclarl4Pf5kYE9cgbt+7OdVvHzpz0bWXNkBKOwn4E
GBYKADACmwQFglvNu14FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjy
eWsLceIAACfNAP9CtMuyqnfMBbWeLKtBRLa8vl5awoNOoRENYf30PYHTjAEAooPc
HZdFgImhIDn/xgbfOg+fLaNzwuJA58jeiPCqbgLHXQRbxIDeEgorBgEEAZdVAQUB
AQdA15DfPq5dU+pQTBoBR0wzIEH5uJj7FUQ3WQYa9od+qncDAQoJAAD/dNhLFLFo
fiSnpJeRP3kDPJ3DuQF9F+ETA2bq4Zmja1gPpMJ+BBgWCgAwApsEBYJbxIDeBYkA
CTqAFqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAACQ+gD8Cu8ycK/Y
3mNY/LFaUR5ibnQV2nO2gtb1BGLT6/mDpAcBAMHV1I7DOJGLWf6Su9SGlJEV7fdo
k+k/M1o/tPgHbtIPx10EW7tGXhIKKwYBBAGXVQEFAQEHQOvCHoN8zvrcBN/iXUpC
spC1FLg86JHNs0AT+LrTcDQEAwEKCQAA/3cpJIBUpSxot0S2AGR/COusZpiEySSI
JRX6OIIPpk1gDkrCfgQYFgoAMAKbBAWCW7tGXgWJAAk6gBahBNJ4T23etZq0FizN
Pg8I8nlrC3HiCZAPCPJ5awtx4gAAop0BAO6oysdh7LEASDo1tAYyQ2OFYtcTzzgb
uOdzf62OH7kSAP0Y8XWdtsnswSzhxtKPrP4+IoL/rnalnGp6sLq/X27TBsddBFuy
C94SCisGAQQBl1UBBQEBB0CimmmliShBykIsU4T5JP9j7TMijTLLFxMpdu4k5AYq
EAMBCgkAAP9kuifVv7MEiAovO/1WpXPqpa56udTReyc/9Lc0Hsr+oBJRwn4EGBYK
ADACmwQFgluyC94FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsL
ceIAAJg3AP9PaZDxaaJiKJgaW6Ck8ucJ17I48gLB8RgeokZAt/b+swD7Bg7MfSgO
ulZAkVXu0y+13rvWc9pjvFt8bjrJCCESdwvHXQRbqNFeEgorBgEEAZdVAQUBAQdA
YUfeYXYSzSE1slD78gWnLexYmuH8Wdkq5Ip6nzgxH2QDAQoJAAD/SOgMArD1w/Uj
dP9EyJ1v9T/43CCv3n/OMRlNg+id/CATBcJ+BBgWCgAwApsEBYJbqNFeBYkACTqA
FqEE0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAAD+FQEAhH5HhqYlQrNo
kYe7F9pAAVPjJyr79R+6oeZP+FMLS+cA/1hOdTILQiFHQ0ETySNCAqdqim2xNYU6
9HzihQ0QncALx10EW5+W3hIKKwYBBAGXVQEFAQEHQHuAkZcovsO8Id5rPYXJ6wiV
lMZAl0ZvZkcSquFtpdcNAwEKCQAA/3fx6GJFTvDKa3h4Kkj0Bjuf3ef0x4n6eYlC
2QyrZ5EYEoXCfgQYFgoAMAKbBAWCW5+W3gWJAAk6gBahBNJ4T23etZq0FizNPg8I
8nlrC3HiCZAPCPJ5awtx4gAA420A/RBotgZ7Yi2gvyc2Bmrjq1IqjIjMOv0HXhiz
5WI+LIs1AP4u8QjVBK4cqmWhlLX2EC4a23jWAMyWlFvl4uMqwCxRBMddBFuWXF4S
CisGAQQBl1UBBQEBB0Am8slBlCni5/hjtKka3DqXGbCRJRbCZKYL2QfNV++7cAMB
CgkAAP9SFzOkJvykPyg1CHkFAu/nJMFdweG9pfi6p5BthO+28BG0wn4EGBYKADAC
mwQFgluWXF4FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIA
AEjhAPwNh3yx2LPI32r4yyzQeKjbf+ZbgRuW/rDsBU0OUhHPcwEAppZgCNqGKcZX
LjeqyHv4ShF2ivw4A75ixVDdhcNoFw/HXQRbjSHeEgorBgEEAZdVAQUBAQdALME1
xVVBpc3B3qsSfv8v8yztf55x67sAvDOMOEf/PgMDAQoJAAD/dj3NAyNRwLbfOFTy
Q08DZAr8Xk0gxbnM0RlZfRK4XuAPpcJ+BBgWCgAwApsEBYJbjSHeBYkACTqAFqEE
0nhPbd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAABycgEA784YlD1xIgNBp/nC
7gWeek1FmUzYhrrEzZDUocSG4ckA/RyzcPSf5yLJlBUJOOfyxeTfbQqEId0T+PSr
xyRvoEABx10EW4PnXhIKKwYBBAGXVQEFAQEHQE2Bglst0RT+8VFUpX1D9sqXjsH+
+DO8PoD8lngSHU9tAwEKCQAA/3mJJVvalzgXIyrKFolc4b410DmOey7v43rb+e+X
AfJoEWjCfgQYFgoAMAKbBAWCW4PnXgWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlr
C3HiCZAPCPJ5awtx4gAAgkIBAMQuv1Vq9dmP0GscdmmHIJ02bc62KqiswQ7PfxOF
Ea94AP9F7SXKY21CvqiCc0b1XXFMIaNrRxLiyczWYB2cSlE0DcddBFt6rN4SCisG
AQQBl1UBBQEBB0BzRKCP0dtkbzs1CaJvEQ0E8ehI2xZRv9O1zPCcZq6ZWAMBCgkA
AP9Gm5otw3iAu9hLq2K78PQFkRUDoIsGE+aLPd12QFVu2BC6wn4EGBYKADACmwQF
glt6rN4FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAMJV
AQD0IMPfUu7Ki+rfyEjmP2SjPo2gkdwtsZbizMiVuHnbVQD/dehh6TUye7ElFFdv
dBQXbiKUEpdem9++9nv7VRO99wfHXQRbcXJeEgorBgEEAZdVAQUBAQdANyIR82o4
eljbQvgZyZ347nqp+xk+UqXUBtoa8o0E1nwDAQoJAAD/VF5EhRRNECqYGvqbV4tZ
XaKiUXVo7CrXCGc15pkTWSgOCsJ+BBgWCgAwApsEBYJbcXJeBYkACTqAFqEE0nhP
bd61mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAACG6wD/UOGy3kSqCaa8T7NaZLXD
7squP5vKxF2jr+TYowvn6o0A/3ZzV8z4D5kEpGqn+s/ZrEjyrc1FaHGZDXNaat90
B6IGx10EW2g33hIKKwYBBAGXVQEFAQEHQHin/Hk+Y6IW93MEvCiYKtIt8kiY3DcK
5ZD6f2MYYIB2AwEKCQAA/3mCTD0XlXHHYdbAeQp52CJIxJVxUnnrXjQTRniXK2Gw
D1LCfgQYFgoAMAKbBAWCW2g33gWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3Hi
CZAPCPJ5awtx4gAADxEA/RgxSAd4gztvEScJbp1GkbXMd05E8sjDhAi0BNocZRmr
AP97xf6HM6CTfNB6ibMGPDMvagOYk5/m50Q8YHfJOXJ7C8ddBFte/V4SCisGAQQB
l1UBBQEBB0Cmy37MuSg3moW6tK5eUAZhQIz3906MP/kRPpIG9RaiFgMBCgkAAP9G
ZaSrVkLddS9MPSm318hTuujP2EwZpvmdK2LfYpiysBIfwn4EGBYKADACmwQFglte
/V4FiQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAD/LAP4p
0Ar1euGKRD/K+o1970HV6ATADashAhcLxaAnkpPP/QEAoNu09Cs7kX9i0Kxy8lHd
+WMF1NKA18pQj9igzuB54wXHXQRbVcLeEgorBgEEAZdVAQUBAQdA9wAqVHQftTV7
YUH05nCUIHcS4GcBZQ1SLKGfeZpMEFYDAQoJAAD/dCbC3QrSvSWuk5zHXFFHLcwl
E1GsU1PdNqS2teXZzCARLsJ+BBgWCgAwApsEBYJbVcLeBYkACTqAFqEE0nhPbd61
mrQWLM0+DwjyeWsLceIJkA8I8nlrC3HiAACgmgEAtXgc4bWB266cfd0ybkWdssvf
ayXrNW0OoBjf2mNZu6IA/Aq+gKOc0weh2W1KaN7LV6OC+Yl5wafNIFa5R3OLpKkB
x10EW0yIXhIKKwYBBAGXVQEFAQEHQGXnjuI0bDkD30x2sqVeHTobk8Be8qtX1PcE
YUoT2JwfAwEKCQAA/2lDa1jxDTwcxBO9ADVH9njnj1GbFgkcwHU3pZVm4cn4D43C
fgQYFgoAMAKbBAWCW0yIXgWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAP
CPJ5awtx4gAAdMwBANHaU0Mys/emMtqGHZqDrBpZhKHG9eoPyGG+D5fTaWEgAP0Z
tQ3Qp+yMyRn31KDg0RVcTwhax+mvBmCP2B35GoHMDsddBFtDTd4SCisGAQQBl1UB
BQEBB0AHkfixTfFAChHRoPXyv7Duje6+nKjxtuTmjNArrjG1ZgMBCgkAAP9BU8vH
nJF4Ql63YM5VwdIV7BqB1olJVFWbTUJ1IfGmCBCDwn4EGBYKADACmwQFgltDTd4F
iQAJOoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAAJmGAP99bWSk
VBqrJ3zVVt9G0FjtNAlZ/j8CWwFZ9p62vcnckwEA2t92uhjZawBtg34Q1TeAaHtH
hHz4zmLZrIILiCT3uQDHXQRbOhNeEgorBgEEAZdVAQUBAQdA8kAmzqq5TWm1+OBi
uJ31k8VtaPRqjFlmuzrT1uFPLg0DAQoJAAD/Z/09yNUetEBkb0Wz20e7g9ThX/EH
/Ti0OswypGnoi9AS98J+BBgWCgAwApsEBYJbOhNeBYkACTqAFqEE0nhPbd61mrQW
LM0+DwjyeWsLceIJkA8I8nlrC3HiAADRVgEApsZFnvu2dPH2zrPrVSwJt3UtZiDj
XVaxhx5/nWoC8xUA/3ooHPkE8GF1ctbycUHv7U6fKikHQ1o1TD9e9XxT3RwBx10E
WzDY3hIKKwYBBAGXVQEFAQEHQCYCx+DLpmikpHoT2vJAocURRjbQ+BDnxg0xQpbQ
M9EdAwEKCQAA/0QO6RaXaPOnCXrkO+VXsblSVSuthoK4banDI114nJ+YERTCfgQY
FgoAMAKbBAWCWzDY3gWJAAk6gBahBNJ4T23etZq0FizNPg8I8nlrC3HiCZAPCPJ5
awtx4gAAlsQBALoyjz/HyAIxw/1JhzKILqiIURwTfbCI5/KaLHJXWXDGAP9B7Y/6
tDRSkjD+fYfjMVByicUBFIXVZj2OvngwKqOmB8ddBFsnnl4SCisGAQQBl1UBBQEB
B0AiFVneZQrkW+nRGHzuVdQfh+CMJ1+M4X1wzuPFJHtmCAMBCgkAAP9AuMyNyUyo
53Bk10o1qH889ciVfNxpMnV9iYTN2HQeWBJUwn4EGBYKADACmwQFglsnnl4FiQAJ
OoAWoQTSeE9t3rWatBYszT4PCPJ5awtx4gmQDwjyeWsLceIAADfRAQDiXDtv5/tD
kKiXXrLDzT96A4raYrGJSOULeLqBeNBvvwD/XK754jQJvJp8g2vx0vdmAu8w4lek
faj7aHXYMptfRwPHXQRbHmPeEgorBgEEAZdVAQUBAQdAycYuZuEhNIgtimIn0u5n
VFLlAH++OAV2g0BBoFBSpB4DAQoJAAD/SRbrgWRfccoI02GfzpchgT9WN2IlyQCV
NLf7mPExW9gQLsJ+BBgWCgAwApsEBYJbHmPeBYkACTqAFqEE0nhPbd61mrQWLM0+
DwjyeWsLceIJkA8I8nlrC3HiAACt+gEA/8bNXerBWvF6sxfQLWn797OLQDbqPt7R
TDjCpBY+JK4BAJXpy02eVQHhAxvEdCXxksPQUAkd/62FCeJVfcb16AMB
=sJaS
-----END PGP PRIVATE KEY BLOCK-----
```
2. Wait until the current key expires, and you are left with no encryption subkeys, even if there were some more in the TPK.

## Context
Approximating forward secrecy using traditional OpenPGP means.

## Your Environment
* OpenKeychain Version: 5.1.4
* From Google Play or F-Droid?: F-Droid"
open-keychain/open-keychain,closed,Incorrect display of key with zero-length uid,[],"## Expected Behavior
OpenKeychain does *not* list an email-address.

## Current Behavior
OpenKeychain does list an email-address, apparently from the key above.  See screenshot.
![screenshot_20180712-123532](https://user-images.githubusercontent.com/469398/42629059-67d9df42-85d2-11e8-8dfe-9594db00c07c.png)


## Steps to Reproduce (for bugs)
1. Import this key:
```
-----BEGIN PGP PRIVATE KEY BLOCK-----

xVgEWxpDERYJKwYBBAHaRw8BAQdA566o163w86jvqV8dOwiFr6iYUYnYbyQmMjtd
kkXCVBYAAP4gGXjAR4tIr0mxjQIj9Gwu1zgUnx/9o6B23CUecL7JZw+GzQDCfgQT
FgoAMAKbAwWJAd/iAAWCWxpDERahBKzkf96cjOtiU/0rtGYR7iOJtfQqCZBmEe4j
ibX0KgAA/9kA/RJAKciv/momclu5J7a34sODJwKAUg6KfQSSDrof8aJ5AP9xD7eF
ATTRBjGcyqZSwTC/DZIh1DS1Kq0+lxUwGLV3DcddBFsaQxESCisGAQQBl1UBBQEB
B0CJ2K4HrwqktQqdO7rFEwhhEZyvo6RuX1C07X+zFh0legMBCgkAAP93jPul7Dns
84vs/9auYYpMh6u/FrAy48olLvE/7uprcBSjwn4EGBYKADACmwwFglsaQxEFiQHf
4gAWoQSs5H/enIzrYlP9K7RmEe4jibX0KgmQZhHuI4m19CoAABjXAP9r9tWWUpyh
4l1d4tu/szqUx1cQ/v+LQC5cyx5XSC/2PwD9EQuy5G5yiNoYOVdm/Mw9n9072ZKY
CXtrkEeDaWfQegY=
=qPkC
-----END PGP PRIVATE KEY BLOCK-----
```
2. Look at the key list

## Context
Experimenting with privacy-preserving keys.

## Your Environment
* OpenKeychain Version:  5.1.4
* From Google Play or F-Droid?: F-Droid"
open-keychain/open-keychain,open,error in SshAuthenticationService.java,[],"Hello, 
I am having an issue in TermBot (version 1.9.2-termbot.4) when trying to link it to my auth key from OpenKeychain (version 5.2-beta2).

## Expected Behavior
1. I select ""use external agent"" in TermBot.
1. The key selection screen appears.
1. I check my key and press select.
1. the key is now linked

## Current Behavior
1. I select ""use external agent"" in TermBot.
1. The key selection screen appears.
1. I check my key and press select.
1. Nothing happens and I get the error message `Agent key selection failed: Could not create description : null`

## Steps to Reproduce (for bugs)
1. Try to link an [A] subkey to TermBot

## Context
My public key that triggers this bug can be found on https://gumi.ca/pgp, if that helps

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: Android 7.1 Nougat
* OpenKeychain Version: 5.2-beta2
* From Google Play or F-Droid?:  Play Store, beta channel 
"
open-keychain/open-keychain,closed,Empty screen when opening a key through Contacts app,[],"<!--- Provide a general summary of the issue in the title above -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Open Contacts book (phone app)
2. Search for a contact that is generated by OpenKeychain (one that has a key)
3. Click ""Show key""

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
I should see a key associated with that contact.


## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
I see this:

![no-key](https://user-images.githubusercontent.com/1718963/42592899-4e2b5918-854b-11e8-9878-bf39593f36e7.jpg)

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I found out that OKC populates contacts from key OKC keys and tried to click one contact's ""show key"" button.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8
* Device Model: Note8
* OpenKeychain Version: 5.2-beta2
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Tried to decrypt already decrypted text.,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
After opening a document which is encrypted and it gets decrypted with a saved passphrase, the app only allows the user to try to decrypt it again, which always fails with ""error reading pgp data."" I'll clear the passphrase and see if it works any better.

<!--## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
Open any encrypted file with the app.
Enter the passphrase and enjoy the cleartext for a moment. 
Open a different encrypted file and nite that it is automatically decrypted, but to an unknown filename that you can't find.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I opened an encrypted file from gmail inbox. I later opened it from local storage. The first file I tried was an old version and didn't have the info I wanted, so I grabbed the later one from my drafts folder.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: yeah, it's old :-(
* Device Model: Samsung s4
* OpenKeychain Version: doesn't show a version. Maybe your should put that on the main screen?
* From Google Play or F-Droid?: 
 Google play.
"
open-keychain/open-keychain,closed,Update android gradle plugin for sshauthentication-api ,[],"## Description
Update android gradle plugin for sshauthentication-api to 3.1.3, same as OpenKeychain.
Fix whitespace.

## How Has This Been Tested?
Built & tested with TermBot.
"
open-keychain/open-keychain,open,Bad PIN! when using my gnuk token,[],"I've just got a usb token with gnuk (I replaced neug with gnuk in an FST-01G). I put a keyring on it and things seem to work fine on my computer. In OpenKeychain, I imported the keys from the token in such a way that I get a new entry in ""My Keys"". Nevertheless, when trying to decrypt a file using the token, I always get ""Bad PIN!"" error message. The PIN I enter is good. I even cleared the password cache and restarted the phone.

I tried to change the user PIN from gnupg and got the same ""Bad PIN!"" message after that in OpenKeychain. 

I tried to change the user PIN from OpenKeychain and got 3 input fields: 1 for the admin PIN and 2 for the user PIN. When I validated the popup, I got a ""Hold Security Token against the NFC…"" popup even though my token was inserted already. I unplugged the token and pluged it back and got a ""Bad PIN!"" error message again.

## Your Environment

* Android Version: 8.1.0 with LineageOS 15.1-20180709
* Device Model: OnePlus 1 (bacon)
* OpenKeychain Version: 5.1.4
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,OpenKeychain does not handle key with weekly encryption keys,[],"Import this key (or rather, the public key derived from it):

```
-----BEGIN PGP PRIVATE KEY BLOCK-----

xVgEWxj4ERYJKwYBBAHaRw8BAQdAgpFmxJzMSXXF349rg49afTjhF467/01MILmE
YHf8oacAAQCIYLyYcclZpW3VG43OWKsFCoHRGTBgHeumLaQZtPfmdg/ZzSJGdXR1
cmEgUHJvb2ZhIDxmdXR1cmFAZXhhbXBsZS5vcmc+wn4EExYKADACmwMFglsY+BEF
iQHf4gAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAMm3AP0R9/rm
76PRlgMR+oOY/8LMgH7dCsDdiGQ8aR+zOvvIEAD9HXGdXMbspezuzhX4S1VrxD3J
0mGNW4fHVCwNvzQAUgTHXQRc75+REgorBgEEAZdVAQUBAQdAKVg4p75fr8Blimvr
tL0hV6TES+NVsU1LroeEwVtxyhoDAQoJAAD/UAeekrPtNx06tWr4zs+GlOuGhKC1
xGnLFpxK+F23+CgS7MJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1
OxAI5N3nIeQA+QsJkOTd5yHkAPkLAADl6gD+NdrUSvZw0Ap2pXXhNegSA/PArD0i
do27gW9YaLg80OMBAP+SuK8TX54EnaLZ9W3v/lAw60EbKE9QXTQBhT0wb3gGx10E
XOZlERIKKwYBBAGXVQEFAQEHQIgF6DLOzrSm9K2z3SJ50ACG/uEAKpso8k77gbQb
gmlnAwEKCQAA/2yS3bJaTWpXecBELUZBkT3uECHQhRwBDyV2DC5OanroDYLCfgQY
FgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech
5AD5CwAAnNMBAOkXNR8+1duqGhb3tOJ6ouNB2oN6ZhyvIGVyjBkjxlBwAP9ke/qB
gqPXvV0AnZE1pZRHJyB/VYdH6703aSuf3Y1mC8ddBFzdKpESCisGAQQBl1UBBQEB
B0Be5rp6h0b+0K0sA2SmDuAyVYUcAzj/VtUFqdcEsc4JFgMBCgkAAP9SFwkmMQd0
8ko+IjVRWS/TCZMWlE73R/SAteLZ+pR1cA7pwn4EGBYKADACmwQFglsY+BEFiQAJ
OoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAH1bAQD9X8fxZKw/
irm3dENAs5Kd9f69B5X2PJfslTCKWiBryAD+MyBnEhvug/HPpTmIY/8RfdN8c3Eb
paqNGSsls2GdUg3HXQRc0/AREgorBgEEAZdVAQUBAQdA1YBSsfjVzJub7YqTtMO1
SKTBVsPnKXdJ+r30HfLsb2IDAQoJAAD/QIyFQF1e+5LhPj/p38vuFe8ncaJw02oY
tXq/YPSpcDASRcJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI
5N3nIeQA+QsJkOTd5yHkAPkLAADD7AEApbMox5E3AbCDVkROB0qbT9NGeo3I0b/V
7f5ZTQ+KjEQA/1x/wf6J6Zlb4boDcAZKfxAd1YQ9CjaNb21dgquvNCsEx10EXMq1
kRIKKwYBBAGXVQEFAQEHQAlobkGPRp9CMAtsaTVb87AnBv36SwQmj9FdVy26pWo2
AwEKCQAA/1uk7UdtRGq1xrh40OGIrbf8nXd97E9ohriQ8IPLI034FDnCfgQYFgoA
MAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5
CwAAs/gBALOXhH8RXta/GzJMyq0DOVjuq0KtHC8TXk7Kl+yi9J1zAP4nc+SSH04d
DYym4hVD7BUg/DYb3qcko+8428R2lfZ1CMddBFzBexESCisGAQQBl1UBBQEBB0Dc
klVEi0VpQ8T1+jp4g7+n6Hc2eYpmeDpldgd7ebJJYwMBCgkAAP9mOpaWxjTXdmQ5
qDmu8GvoYScslyebfWAotYdiFTFNeA88wn4EGBYKADACmwQFglsY+BEFiQAJOoAW
oQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAM9GAQC/URThtAuqSsrH
xYjf69a/LdRJuRXwvYyVmM9bc8hU3QEAhQXsdeGbtfU8ccpuqpuQ0+Hou6poIHem
GIQQgkpE8wTHXQRcuECREgorBgEEAZdVAQUBAQdAI426+bEdW9OdWXTvvlf5G+s3
Krshjn4dK46KTck5VAUDAQoJAAD/Sc+u2MMDcGymwj01Nf6w3UpOvBKKiqvwHwxa
05CsPPgRtsJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3n
IeQA+QsJkOTd5yHkAPkLAAB62wD/STW7w3PVMtU6m7EjWOrsoH7qEXf6sydxGtKO
NOGHm38A/i7ZjD5O3qXFP7MwObQqRC/Awlb2tH0+73FudbzviqkCx10EXK8GERIK
KwYBBAGXVQEFAQEHQGmIptoptz+NNaIf77shGRQiIR5Uwjm5Ic39Zq29MmRwAwEK
CQAA/14ZLqodm427XGX09IAh8i3Rz0Q4F/Lxpl+HaH+eLXDAETvCfgQYFgoAMAKb
BAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAA
e/AA/2PQo5tUW9gTPAzdKy5Q4+uWGDhZX0Cclf/RtYUCWG6gAP91XQ1iGQK+qqA1
XzHHnABfX+wQFP7UalJbbHXFEcJbDsddBFyly5ESCisGAQQBl1UBBQEBB0BGyRMX
czzThBwhhtaGdC3geMDoCYPdTpLZscVbYuO3MQMBCgkAAP9q0o1RNlO7msxRulnB
L+eFDrXIhGVTG1AKuiwBP0XrKA89wn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6
J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAES5AQCKG1eo0sh7J+aXEB8I
b1n0wE+d9ZcUSmzgbrDu9RlrBwEAz9ew6KylmtvooslWbJOEepJwrE8qO8zV8U8G
t1xG1QjHXQRcnJEREgorBgEEAZdVAQUBAQdAVk0rA/lJgREcrVNhZ/wDiYLTvvsU
bfqD9IlMNi1iRwsDAQoJAAD/SpsmCVEgnB6V/d1cwq9/pXdTuKOmodjayhKSd7Pv
7pASwcJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA
+QsJkOTd5yHkAPkLAAA2HAEA00JVemAPzi4U060cNWu1KJLfJkA/vSyfGcMlaVpM
520A/igZSbD7S2dI4+B3kgtCYtmgvnLcokqo9/WFA4lCvmcOx10EXJNWkRIKKwYB
BAGXVQEFAQEHQGkBHL1+SK6Gjt6TXVXjMZEiZClpRbDbnw6rHeANlKg9AwEKCQAA
/0snD/umsK9NbgL0juR1Xwjvpjq6hx1PlLfpPAM2dfkYECrCfgQYFgoAMAKbBAWC
Wxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAATngA
+gL/V4ouNaI7y6FnWidG3JhEczhYdOwBSt+MEYDWU/ymAP43TtVtzrgbK1i0UsyR
JBE3hUfC7bKrfQCK27DrrOjlCsddBFyKHBESCisGAQQBl1UBBQEBB0C5BCl6puPq
wipz59/5xDSHkcmT1ROZQAaxPo0a6Rk0ZgMBCgkAAP9I0t/eOLGkfk4dI2TrHnrr
IptuObI+4iVEwCjv5BLEKBCZwn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr
/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAIKoAQCxUx+rJlGxaFBCIpY00EY5
ukKlWAMkMsk6gEuHk1PPGgD/SUp+NqLc+ZTKFR/7uN0CcZYOVzMFW3pbKbqsmxUT
rgXHXQRcgOGREgorBgEEAZdVAQUBAQdAwxyFQsCe+kW4y5r8no0Qq4KZcshrpGph
4LpGOt801XwDAQoJAAD/WC11nAQ2+fIlvUN6TGTxb3CUR9r0+rZJYFzgN6hww+AS
CcJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJ
kOTd5yHkAPkLAABKRgD/c8wmH9qFmGc429uy776pLJ9pXwV+/VbRaQpDoHCWIrIA
+QFchrh7FGP54yDmotRHC5E8JaIEVW+eNAgjYjtE0q8Ax10EXHenERIKKwYBBAGX
VQEFAQEHQCrT5DHkRF+oqoePseUFZE50eWGlID9KbIdb5BAHmKM5AwEKCQAA/1MC
dXFdbnzghpWkYVelzyT/8xKYDG46Y9SUb6atNt3QETDCfgQYFgoAMAKbBAWCWxj4
EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAA98kBAIn9
f2V5V7VCuerwglWQ6ifhIDOVpXN6KwRz88lY+9wZAQDERzW5zFTA9G2C305C6aOD
bx3QugnK7h6jEY68jHhuAsddBFxubJESCisGAQQBl1UBBQEBB0A4kIXjcxEeB1Gn
Y23VjC3N7swyZhYsZzVpmx/7FOIPYgMBCgkAAP9nTr7QikUPk6AwD0Zez/ckZda8
Zdethqt42gXuVEmsOBD3wn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2r
YfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAJxvAQCTcal47cWS7yem3RdBlk07WLxK
7UDwOEoIR6VbmtUZFQD+IZH5HVrbfskZHS8BYAhtPxBh0JANz64cx9VAxiA1HgTH
XQRcZTIREgorBgEEAZdVAQUBAQdAnMFdVD5CWXYf6JWb/IR4YmuLVnIW3d/22SJl
7nuFJjMDAQoJAAD/cT/NSag5R9znzlZtE1Ih64pMwSEl1wgQaBiaEr5mVSAOQ8J+
BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd
5yHkAPkLAABAOgD/ctzT7AhX8xjNMhW8P9wKztluq6ygtZ72JSDFRuVZYtMBAOqd
OypnGIQ+332sz3Q8PeBI6s9AryGKdIHr8galtmENx10EXFv3kRIKKwYBBAGXVQEF
AQEHQGOn7hMttI57CIOfpfTeQu1oF3tEo/xXp3PtsMcRJ+FtAwEKCQAA/0uL+5ff
Jkhpraebk1aU4Hf8/b4DXSU34JuaH6Z+2qNwEpjCfgQYFgoAMAKbBAWCWxj4EQWJ
AAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAAsPEA/jy3pMff
QfJvA57GI87BT+tlXyvY873ajuGuQ8HJSrAjAP4y7BGeulvkbxxkGzu/7SRYp6oo
oc7rQz+JPekPZCyQBcddBFxSvRESCisGAQQBl1UBBQEBB0Dbid+8C46VF/KU3NAS
m7fY5eO8MsdZ62m1KuLlEAAvVgMBCgkAAP9bIN5t4pbWgK3Y/GEpjnmijUvF6fUn
arPOQlXfzey14BSYwn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7
EAjk3ech5AD5CwmQ5N3nIeQA+QsAAF7ZAQCVocVlt/QCFBNk9xRmFurpVPa4K3Ds
ZAWw4xsbdGfoYgEA04hrTpnUPFPZ9mdZmJ8nchx2GjK6Ji7Ulrp/WwCW6g/HXQRc
SYKREgorBgEEAZdVAQUBAQdAu6KAv6mkI1YuKw3sNIOgbhWeZqQob5OCeU6EssC/
6ngDAQoJAAD/dCPH2DOhaoAFrfZVWwozDJ3wj+/LPDXtLdgPt8fyjqAResJ+BBgW
CgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHk
APkLAADCFQD/ZYP0iPvTKILFx/iHl0ZSnx9TrXts4CExnOPqs5FbPpMA/1739dch
LE732Cp1+y+4VOu+0Kvcekfjbw7N76E8p0UAx10EXEBIERIKKwYBBAGXVQEFAQEH
QPvb+PEIPFs7KtSdiud/qIKVO+6SvVQ0bklA9H/2CltBAwEKCQAA/0HlZFMEUclT
GsHuefY4yezJ2xeqcLqLp+7K2AIcS6KgEm7CfgQYFgoAMAKbBAWCWxj4EQWJAAk6
gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAALzYA/ij7219/z4ZM
eVCWfPfLez5E5lEbmUqSAm1GcBJrX8bOAP9T8T/N3tOXpgCWjpmzp3LfDfOYlYMT
lBOpRKjPaUT3DcddBFw3DZESCisGAQQBl1UBBQEBB0D5dD2fwzGOpEr8lEc3bOer
iBeuCtXAlq9QwE3ZRtoVZAMBCgkAAP9P4mRik5tDwGUVVq1tt/iI0AhowB42Oqbc
adDAw9E6MBFPwn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk
3ech5AD5CwmQ5N3nIeQA+QsAAPf6AQCU6DjQKkJPIEY3ISr1XfgydEOC4az9/iB0
keI9EV/icAD8CmeC5lriXJxllleQpcp9JfZn1vzmmaLpSH/FmvDFmw7HXQRcLdMR
EgorBgEEAZdVAQUBAQdAuGkkWeLPZ+gCNFYf+P6HylgDEtehRs21YTbecbKOuXYD
AQoJAAD/Y0dKu8WU151RRlp5/S0+4GX+xLrTMN6YGyukNWwW4ogRksJ+BBgWCgAw
ApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkL
AADSVgEAy0Fn0JWu1MFiRNhn1/o2Zw7QNB8tWQ4IYIB1s6T+NEYA/00xK35tHpBv
SuB6TZTmen/TIvfoIcrTeNOFs9GGKXkNx10EXCSYkRIKKwYBBAGXVQEFAQEHQH+w
VWjrvZtB2hvANs6p+nwoOIOFnRD/XdFp+dVYKyVPAwEKCQAA/3HSuFaJd+hmFM/S
BOTDqav/LOSImjSK0CNzNP1vnlz4EznCfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBah
BPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAAZWMBAK3u39dIecOkoKut
dF2RflKJC+1RHmFCn6p1bZb6y6ekAQCp4Bz0axAc9QMOAjzPILlJHkLravOLOZGi
PVjL90xYBMddBFwbXhESCisGAQQBl1UBBQEBB0DOxrOAj1ktNKhMHK95UoTlwc0M
xpgdNKpP1xI7o08oPgMBCgkAAP9upOTiUcqoDpD7mCnxk+CoZPJgK88CxqNwpuua
BZHIgBOUwn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech
5AD5CwmQ5N3nIeQA+QsAAOL+AQCA4OV7UhCAc/y9FRDSZHNdCzNsu5231Zt5ZJRU
zweQygEAuOGJKUHchypnYbDz+ug3gcyllctDNqdAqGWWpqEIqATHXQRcEiOREgor
BgEEAZdVAQUBAQdAlFqFX2gBfAqHn7Kt2AT/c+4i+FubjEWcNXUhM7odUQADAQoJ
AAD/XdC7xUnB6zZhlZGcg+io5frE+5IEEwvfINW3kbLghygTvMJ+BBgWCgAwApsE
BYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAADV
7gD/bclhxIHVK3xb6MNQHZvulmBr+EPOJ1SDPKaKceyVPgcBAPt+INhT4LY8OcSa
OkmBcqZxU+mn6Lp8hJJbw0yjQ+gJx10EXAjpERIKKwYBBAGXVQEFAQEHQGpefKXY
Ia4+h3DGyiCp8LbC3f2Ac7X9LzFkzhorScwhAwEKCQAA/0fHED6BuvxW6cS0yi+N
59Afm3Vs5ym37YX2Xr5hSxhYEojCfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon
8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAAYA8BAKXmhFVdfIUbuHtbxhoQ
5jud9Ty+YmJo6rcOquZK/2keAP0Wc2j2q+Az/p1roru7v+/RiT/w3B6P/XhKWQdZ
Du7HDMddBFv/rpESCisGAQQBl1UBBQEBB0AnSN7GdJqFKqZs+6k3luHRgbKB0mi9
AneM7hbC6NRGAwMBCgkAAP9+Bbm3uMjqJQi1XZV9e2oTz3KjOe89G9KfzlNR3EDA
YBEown4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5
CwmQ5N3nIeQA+QsAAP77AP9getLkDw0tfQAslBztijxsICXB+MWfgAMLzXszHOVC
8gD/V886UDL09vylLMqNksaVeHq1YCjeZyDf2sVsOcCGowXHXQRb9nQREgorBgEE
AZdVAQUBAQdAOgEcXupHN7kB4/ceUjby6Wl3fDRnq2AFEOuxIXvNHH4DAQoJAAD/
WFThzDUN3oUB7iONgjvqVHm0p57kOSd5JSueGZOXbcgQLMJ+BBgWCgAwApsEBYJb
GPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAADpcQD7
BayybuVp9aHiuGxnRDu2EIicIck9f+f+22byHJKwHuYBAJrYhAyTJOBXnJR4kYCZ
gmcJzP/cQ5yAzXgP3T9OK0UAx10EW+05kRIKKwYBBAGXVQEFAQEHQNBXrNP1DAhk
TfWTma7hBs3/6DGu8Wf3BmcvYkyLZ4tuAwEKCQAA/2AZ58VqNSEBIA6KRlxLUPMC
NUSt/oT5dRUCqM6fRbpADlDCfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9
Dath9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAAh4oA/3OAkWlVmDRdS8A1cZPyV8P8
hcMeT9WOtepkvAMH2MJoAQDJE4dzLIVoLAcglHt5HqS+xnFBr/AS1kOMCk8w+YwQ
CcddBFvj/xESCisGAQQBl1UBBQEBB0BmLz19/kygmPB4f6UnudtsCjQ6X8olbDmI
kCSaNiB+AgMBCgkAAP9KRc9TTgn54oGDYG+1tE93wsnkWjjHImo5yp5fNUKGCBA9
wn4EGBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ
5N3nIeQA+QsAAE1XAP0bv+W8Z1H1EqoehJ1Stea9M5xRZC8foPclLKKMLtKYdQEA
giG7KxTcjoLDAGYjpP3uj0KfvveVwU14XBOcWXL9mQvHXQRb2sSREgorBgEEAZdV
AQUBAQdABZfM8313JohHabx9oFaLNntTy1zVwHehmVUQD6kOiVsDAQoJAAD/R4Q0
ZaZ3awc9OpgyrqWBugCBLRxHbC2EFpuHPEnmndgOB8J+BBgWCgAwApsEBYJbGPgR
BYkACTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAAC5UgD8DqzO
RVJ0thz2b/tNxT6qB/ZAY8IqLmKKffx0YlpuGYkA/0y6HBY5lRX96WnClbIJUm6a
lUKI8luBjp9CBYMu4hUKx10EW9GKERIKKwYBBAGXVQEFAQEHQBKXcIjwue7r5Tm9
TvInK/xo5fzAfR4ZFJ1eIqXNb7EnAwEKCQAA/0eduwJr+X4xB0/IqR7H+jti94Jf
407sreYQ2Kc/zhXIEffCfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath
9TsQCOTd5yHkAPkLCZDk3ech5AD5CwAAb7IBALJTYiT7zOcNm3br7DNqRUN4aUzz
xbADSXZtgzp5QXHxAQCw1I8WtINDVlHoVoRzGE9Zaauf1XjQ8oMcewBbQpsUCMdd
BFvIT5ESCisGAQQBl1UBBQEBB0D9w18VvBNe2k1M4NRr/hT2uPxCOoS67uWAMqMf
Qx/TTgMBCgkAAP9WUlOJLfLwVHCsYJ0yiA1oSpQIN9a9sCvZaACKJHEjUA6Mwn4E
GBYKADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3n
IeQA+QsAAFP/AP9axhDoZIjDlGj+1bi/sCRbMOmuNn/cTMHpRjJNchc68gD/V7RB
39p1qT/UIWdJ+IZ36Xl0Vt/nY5MVsXx9tMIG2gDHXQRbvxUREgorBgEEAZdVAQUB
AQdAbZwMj4prRGFIsgctfWRMYe4KF3IU6JbX9cJCs/Z5l18DAQoJAAD/QrpS6UDd
zZx25ste/KCKI4kkdRkqIkvzGh+IlwflL9AQksJ+BBgWCgAwApsEBYJbGPgRBYkA
CTqAFqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAABQfwEApTunQlbn
WbtUcdm+rnfsTM+z7swP4b27Bk/dwS9PWJMA/0lpDOJBDeTsmgooYi71ZYNfJhRn
4ICL7kmkh4+BbroDx10EW7XakRIKKwYBBAGXVQEFAQEHQJV/0AvceuX1qACnOK7O
JlWiSId870AVJ7CwrI0bTm19AwEKCQAA/336ZW6UVovwa7Fuz4OgEAuGSofKdtd2
fns3G+/QujeIEazCfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQ
COTd5yHkAPkLCZDk3ech5AD5CwAASwgA/iIkKOCoO5VYJJPvUKV1g1A2nTLAewc1
7W/SROUI+G5BAP9MPyGsZPR6mua5cCuoj0Hd6yShVW5jDLCSiRQb9VXeB8ddBFus
oBESCisGAQQBl1UBBQEBB0APk0/7Q1/U8FIBAOsDl1M7yUjnWLxGwJYnf35aySKJ
egMBCgkAAP9M4P7ukOXs8eXAlQ4nlr1GByIp+e0rZUQgKUBnXhS7eBESwn4EGBYK
ADACmwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA
+QsAAFzEAP97dX86GrVBjRFbOuNEGibKXVJei8ILyQfT7APoGe4g0wEArEusQwzG
rMDsOGcj0dLKFNxbs3DgoNq4MHwjSnXyJAnHXQRbo2WREgorBgEEAZdVAQUBAQdA
zDatOuuH/dp96P5rri3L2NyKDpzepKRU8XHWCfzIgQgDAQoJAAD/Y2SUrnZEHNl8
BFUOk6ORU0hhrsgnuzlnGEw8zH0iD/gOZ8J+BBgWCgAwApsEBYJbGPgRBYkACTqA
FqEE+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAAAQPAD8C4ugZTivr1kB
s+5D9Um9ngpd4+7m/0mmOISItzjCvm4A/iwgF/9jYQMhqzVgW3+Z8pZko/DHgBLZ
4NISoOC7dkMIx10EW5orERIKKwYBBAGXVQEFAQEHQAxlrFX5zgPk7Iy3V212n8jA
Uhr2Cr9b35TXexBWc1lDAwEKCQAA/1UaNT26xdM8jmeVbMv+Bqa8YKw7a1TOgV3D
2OZDpnxAEW3CfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd
5yHkAPkLCZDk3ech5AD5CwAAKmEBANwzzlc3boAfcZll2QOIyqED2vA5fqqh2C1C
NJvzHuYdAQCLqdvoo/k7+IAAC7gYF0txTBf/7bPHUdBBlyj4PwU5AsddBFuQ8JES
CisGAQQBl1UBBQEBB0D+1FpFovT3aEv8gvtk2++EIFyTTf/K8LV4taogwrdNTAMB
CgkAAP9fWYWrhmfb5rALEBGbcl6tXBUe3VoUyF3fS4rdzsaqIBB3wn4EGBYKADAC
mwQFglsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsA
ABk5AP4vA01wYsWwt9hbjt4X3kGvte3VHUE8/QeXPV+r4zHIfAEA52/6WQchlE0U
Ku5T0nZAjST4/SQQtWSavqiSr9CCDQfHXQRbh7YREgorBgEEAZdVAQUBAQdAmd52
6Tm0Uo24eCBog7C3GR5SVhLdorJQMLm3Qk8Ngn8DAQoJAAD/RQvFdnzVAH5X++qY
bFrZkWxhgqOxBU2KZqPDqXAvOEAQaMJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE
+ifw6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAAAt+gEAu32moL94b12jDo5Y
aDlyhY7W7wYhq539oy1PN4XNnEoA/jyveed4fcd//9oOPcJlpt4xkCeTK4AJxtkg
27HHM7UDx10EW357kRIKKwYBBAGXVQEFAQEHQA5Ezky583JUvv68RwliKimUcvQs
Mec1BKkrdSFm3tFnAwEKCQAA/2QsFHwVwHIUUPn7Xd0Uf8iBCqcPcKGksk2fuSBK
ggZADtLCfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHk
APkLCZDk3ech5AD5CwAAaOEA/i4Wqpspr54i5JCwxmQr8WitqzCMyhRAl82kxxlh
TEr5APwIWhPEfXh8xWIoj7DUntLB2OfGuZPRXwZvyw6brWt4BsddBFt1QRESCisG
AQQBl1UBBQEBB0B2Soos1D6p2WnrEHyO9B19DmQV++dhh38SHgZBWU6oQwMBCgkA
AP9JaQ5yyVgOaew92IRNInKRtihm9HrNBihXoZnerhSySA+Ywn4EGBYKADACmwQF
glsY+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAIKG
AQD3DhY6YGzVaiH4PFSeyP0ln22/jhiu8qKAnllmV2/DSQD9GjhUDstDg07D5Lyd
YoNk5XmkFZUcCPde1P72DfhipwPHXQRbbAaREgorBgEEAZdVAQUBAQdAGZF3rEYX
rqbhjclDPUQVeNjVOjQB1qWgRfzHj5JKcAkDAQoJAAD/TIB1dfIS5L3YsaCon8vG
Xf5rBuE7qGjbRQBl82+/g7gTNMJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw
6/0Nq2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAADw4QD/UfkFqsIOdCeXR0qF8EAJ
fdeBs9MGs2FaEXKZUyTOuCIA/2nLRMzgRBz3xl3RK79g+1+XsopRJ0XF2bGQARy5
kLMFx10EW2LMERIKKwYBBAGXVQEFAQEHQB95q90hr5b4BSqrVJhvAfxqUlCRo/pC
cFM2cf2BZExXAwEKCQAA/2Aj6Rk9XJtvUWB8ElRWmfj3jueOBKehnGh+F2KUjI1w
D//CfgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkL
CZDk3ech5AD5CwAAp2kA/Rw4hDe9u5kK7pc1XLvFdkF1069ybnuMGjcSv6FYFWbd
AQCmHwNNliN6YuCqEId5cROct550qHgRUKIiJXicnB+BCcddBFtZkZESCisGAQQB
l1UBBQEBB0A77qONR9h7DQJfYWadTe5/GG1lJNpl8mClwOCsameDLwMBCgkAAP9f
Sr5nCXwKQn6FXWq/oOAyU6Om7F8/4pOwHdhD7zLCgBC/wn4EGBYKADACmwQFglsY
+BEFiQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAA/xAP9B
XZ6Y0l07/1+2xbLKu7vqdqv0lrR/TZnJvrftBhPdOgD9G4xjfF70ONr3NWKddAcX
R88hCgk8b9NvZ8pB6aCisgjHXQRbUFcREgorBgEEAZdVAQUBAQdA9gt+V9O35iZv
KhP9Us3+f+kZcZDzDL812xTAPERJl0gDAQoJAAD/bsEPELxCf4Gf6XzMzd0Dwe5e
tnmjAV0Up/reOetSJmgRnMJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0N
q2H1OxAI5N3nIeQA+QsJkOTd5yHkAPkLAAAzOwEAwI7Kdw3F69cQDWBEJxdnKBY+
f2fPfG6gAiGrUjDgZuABAMizkMonytlB/eHg/bHJRxHt4e8ZkkI06FKTK2na/3kK
x10EW0cckRIKKwYBBAGXVQEFAQEHQPtke7iZ2rGRttnlJC7ih9Ny9uzeDneL8Xiq
TbQmxgJvAwEKCQAA/1dqU0RGUVr+hRQLM0BnHje5HtABCXE/895pO0PhoMhwDevC
fgQYFgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk
3ech5AD5CwAAtBEBANuO3auvNvX7ZWmciv0PVeALFv7LkSO14m0C3Omz+Mn1AP4t
wcyf0zfe1fmTbBg3PV2J0DsqGBS1t1n1I/2zssksCsddBFs94hESCisGAQQBl1UB
BQEBB0AekCtPe9/FGkLhrUz0HWeOKpXaxCwvYARy1eS6rhkrGAMBCgkAAP9ga3B9
13h5hF3ZTV2D5xEHCsHGkk/bDJhUDilsLD9ZCA4Zwn4EGBYKADACmwQFglsY+BEF
iQAJOoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAIFQAQDCCjnQ
o3dEdfcrhtM/4H+ANm0dNK8i9LCNF4maf84DngD+IaEVgxOC67USQy3wdgarbxZH
d0uXYmc7UkdNnoMt/wzHXQRbNKeREgorBgEEAZdVAQUBAQdAmQ54w+J51ci+lsEb
UvdF2003WrZiG/WCdYSL5GjRFlUDAQoJAAD/YP6jccaNp7KgsCGo7Dhv3e83Zi+p
MGywkrXLNFJDlUASBsJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1
OxAI5N3nIeQA+QsJkOTd5yHkAPkLAABHggD/dNnNYvptEZSeM7qln7kIkV85ZlU+
DhgZmM3ZJySjrXMBANkLvtxRe0QGl83QqGp1d1MIkRj24NO29BLbqTEAY/oPx10E
WyttERIKKwYBBAGXVQEFAQEHQIjqaKE510tsGJ9rgwyg+yxh0D2pZsPOaqJ+MPTJ
5UgIAwEKCQAA/1Dp/CN3tvvFUEi9f4Bp8Z9OeO6CEO1d1sG7mTBz5xyoE1rCfgQY
FgoAMAKbBAWCWxj4EQWJAAk6gBahBPon8Ov9Dath9TsQCOTd5yHkAPkLCZDk3ech
5AD5CwAA8uQA/3z6OjWDwmyIxJnuYJ0PQdQK0wbHZnLq1LMqzc+N+8qIAP467qfV
JTJjY0C00uuD3xonQp/5KxverQjtSDgcz3O/B8ddBFsiMpESCisGAQQBl1UBBQEB
B0DXVYer1cCCO/kNhhD0+OM3OofHnRnfNulwsBRz22AzSwMBCgkAAP921YXKYycL
YzCumFSLaP7o2lV7FYYLsli/OOq5zeKHKBGGwn4EGBYKADACmwQFglsY+BEFiQAJ
OoAWoQT6J/Dr/Q2rYfU7EAjk3ech5AD5CwmQ5N3nIeQA+QsAAN2UAP4yAus5BBJY
zIQ1netmxru95qEd7+3Vid5g7mlq+6gP1wEAi1AJzaigJ+RJdoSGzso1eLtH3aNT
B0/FZZAjGylTxg/HXQRbGPgREgorBgEEAZdVAQUBAQdA91zSLwi8k1954xLGv+q5
yyyXGsAzcV6I8O5vPFJqt2sDAQoJAAD/X0P7Dfn1XG5d9Q8/duC8mJaOVM1dDIJ+
fZD12mOmehARyMJ+BBgWCgAwApsEBYJbGPgRBYkACTqAFqEE+ifw6/0Nq2H1OxAI
5N3nIeQA+QsJkOTd5yHkAPkLAABqfgD/UvpmuoxFV3MzgwdMzUzPpDr9VYHkLj9p
JD1+x7sGhpUBAN5Du0dreNd4f3nzqTta4lCBFLFTxLwOeCimoLxpcw8P
=4jRv
-----END PGP PRIVATE KEY BLOCK-----
```

## Expected Behavior
OpenKeychain lists all (non-expired?) subkeys, and is able to encrypt using the key.

## Current Behavior
OpenKeychain lists one expired subkey, and is not able to encrypt using the key.

## Steps to Reproduce (for bugs)
1. Import the key.
2. Look at advanced/subkeys.
3. Encrypt using this key.

## Context
Approximating forward secrecy using traditional OpenPGP means.

## Your Environment
* OpenKeychain Version: 5.1.4
* From Google Play or F-Droid?: F-Droid"
open-keychain/open-keychain,closed,Nitro Key Pro - Error: USB: failed to connect to device.,[],"

## Expected Behavior
As Per Release 5.1.4 Inserting Nitrokey Pro Works perfect when generating a security token.

## Current Behavior
In Debug mode running 5.2-beta2 on the same device Inserting the NitroKey device displays
""Error: USB: failed to connect to device.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Select Create Key Icon
2. Select Use Security Token
3. Insert Attached OTG Cable with NitroKey Pro
4. Click OK on USB Notification
4. Receive Error

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.0
* Device Model: HTC 10
* OpenKeychain Version: 5.2-beta2
* From Google Play or F-Droid?: GitHub Running Debug Mode on the Phone
 
"
open-keychain/open-keychain,closed,Crash verifying signature,"[Label(name=""bug"")]","Just a note for later, verifying the signature posted here apparently crashes openkeychain https://groups.google.com/forum/m/#!topic/rustlang-security-announcements/4ybxYLTtXuM"
open-keychain/open-keychain,closed,K-9 crashing on selecting recipients (beta),[],"from beta feedbkack:

> Since actual Beta i cant send any Email with k9. As soon as i enter the 
> second Letter of a Receiver adress k9 Shut down. I have tested actual k9 
> with non-beta openkeychain and also tried uninstall openkeychain. Both 
> worked without any Problem. Huawei P9 Lite actual emui 5.0.1. with Android 7"
open-keychain/open-keychain,open,"Make it easier to ""fix"" expired keys",[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
When a key is expired it may be just it is not refreshed from the key servers. Although the icon to refresh is on the top bar, I think it would be useful to also add it (icon) or a text (refresh) close to the ""Expired"" status. That way the *solution* is close to the *problem*.

![expr](https://user-images.githubusercontent.com/1718963/42322557-42fa1e46-805d-11e8-9fce-c4efb21ec119.png)


## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
Currently user has to know that expired keys will probably be OK once refreshed but the context is lost.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Add refresh icon near Expired status.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I sometimes have contact's keys that are expired and refresh brings them up to date but I have to double-think to press the refresh icon instead of having it nearby ""Expired"" status.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8
* Device Model: Note8
* OpenKeychain Version: 5.2-beta1
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,User IDs in Advanced screen are duplicated for verified keys,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
User IDs are *not* duplicated in Advanced Screen.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
User IDs are duplicated in Advanced Screen.

![dups](https://user-images.githubusercontent.com/1718963/42321699-278b13c0-805a-11e8-9748-024c71f2e3a7.png)

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Open verified key (green)
2. Go to Advanced
3. Identities
4. See duplicated entries

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Well, I'd like the screen not to be cluttered with duplicates

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8
* Device Model: Note8
* OpenKeychain Version: 5.2-beta1
* From Google Play or F-Droid?: Google Play, but the same happens with debug build
 
"
open-keychain/open-keychain,closed,Incorrect expiration times,[],"From beta feedback:

> Every single key in  keyring expired Jan 1, 1970, even when they are partially valid and will expire in a few years when directly searching on online keyservers. It also does not solve the problem to refresh the keys within the app via online keyservers."
open-keychain/open-keychain,open,Tor Option not Working as expected,[],"Updating keys works with clear internet keyservers, but fails with Orbot and the Tor option. 

## Expected Tor to update keys 

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior --> Update keys using Tor fails.

<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->

Log of Key Updates 


This is with orbot running at 100%

The connection was verified through OpenKeyChain.

[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x35a84edd7d541840
   [ERROR] Could not retrieve key from keyservers: not found
  [ERROR] Key could not be retrieved! (Network problems?)
 [ERROR] Import operation failed!
[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x718c070100012282
   [ERROR] Could not retrieve key from keyservers: not found
  [ERROR] Key could not be retrieved! (Network problems?)
 [ERROR] Import operation failed!
[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x930dd1dcaa32dfcc
   [ERROR] Could not retrieve key from keyservers: not found
  [ERROR] Key could not be retrieved! (Network problems?)
 [ERROR] Import operation failed!
[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x2c6464af2a8e4c02
   [ERROR] Could not retrieve key from keyservers: not found
  [ERROR] Key could not be retrieved! (Network problems?)
 [ERROR] Import operation failed!

This is what I got with Tor turned off.

[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x35a84edd7d541840
   [DEBUG] Key retrieval successful
   [OK] Keyring contains no new data, nothing to do
 [OK] Import operation successful!
[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x718c070100012282
   [DEBUG] Key retrieval successful
   [OK] Successfully imported public keyring
 [OK] Import operation successful!
[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x930dd1dcaa32dfcc
   [DEBUG] Key retrieval successful
    [OK] Successfully imported secret keyring
 [OK] Import operation successful!
[START] Importing key
 [DEBUG] Using keyserver HkpKeyserverAddress{url=hkps://hkps.pool.sks-keyservers.net, onion=hkp://jirk5u4osbsr34t5.onion}
  [INFO] Retrieving from keyserver: 0x2c6464af2a8e4c02
   [DEBUG] Key retrieval successful
   [OK] Keyring contains no new data, nothing to do
 [OK] Import operation successful!


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 5.1.1
* Device Model:LG Treasure 
* OpenKeychain Version: 5.1.4
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Sql delight chip,[],Show status icon etc in chip dropdown for @Valodim 
open-keychain/open-keychain,closed,Add launcher shortcuts for encrypting text and files,[],"Adds encrypt text and files shortcuts from the launcher icon. I used this in development, but it might make sense to have those? Didn't really think about what shortcuts could be useful to have, just opening this as a suggestion"
open-keychain/open-keychain,closed,k9 runs into keyrepository not found,[],"Using k9 on los 14.1 on LG G3 D855 with openkeychain,all current.

OpenKeychain has my key and other keys, looks normal.
On sending encrypted mail from K9 I get KeyRepository NotFoundException message."
open-keychain/open-keychain,closed,Openkeychain 5.1.3 (51300) crashing ,[],"5.1.3 Crashing when updating keys
or any key.

##Desired Behavior 
update keys on keyserver like version 5.01


## Current Behavior
Displays ""Unfotuately, OpenKeyChain has stopped""

## Steps to Reproduce (for bugs)
Tap update all keys.

## Your Environment

* Android Version: 5.1.1
* Device Model: LG Treasure
* OpenKeychain Version: 5.1.3
* From Google Play or F-Droid?: Google Play.

This issue is the same as with 5.1.1 and 5.1.2.

I sent in a report to Google Play.
 
"
open-keychain/open-keychain,closed,Allow export of public keys without encryption,[],What is says on the tin. I used a popup menu for the choice between `file` and `action_send`
open-keychain/open-keychain,closed,Color navigation bar dark when using dark theme,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->
Instructs Android System UI to color the navigation bar dark when using dark theme. 

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
This avoids ugly white bars on dark theme.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Build and tested on device.

## Screenshots (if appropriate):

Before:

![obraz](https://user-images.githubusercontent.com/1718963/41665603-a258e52c-74a8-11e8-9041-6597def0b7b0.png)

After (keys cleared):

![obraz](https://user-images.githubusercontent.com/1718963/41665619-ab5d0716-74a8-11e8-9643-4368f5e7cfb8.png)


## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,No passphrase instead of empty passphrase,[],"Use no passphrase with S2K instead of using an empty passphrase. This should enable importing the secret key backup with GnuPG.

If I use an empty passphrase I get:
```
gpg: enabled debug flags: memstat
gpg: key DE5F2272EFEC06BA: ""Confidential Technologies <contact@cotech.de>"" not changed
gpg: key DE5F2272EFEC06BA: ""Confidential Technologies <contact@cotech.de>"" not changed
gpg: key DE5F2272EFEC06BA/DE5F2272EFEC06BA: error sending to agent: No passphrase given
gpg: error building skey array: No passphrase given
gpg: Total number processed: 2
gpg:              unchanged: 2
gpg:       secret keys read: 1
gpg: random usage: poolsize=600 mixed=0 polls=0/0 added=0/0
              outmix=0 getlvl1=0/0 getlvl2=0/0
gpg: secmem usage: 0/65536 bytes in 0 blocks
```"
open-keychain/open-keychain,closed,"After upgrade to 5.11, crash alot",[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.click refresh all the keys (I have 5)
2.then open keychain crash
No problem before update to 5.11/5.12
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 5.xx
* Device Model: note3
* OpenKeychain Version: 5.12
* From Google Play or F-Droid?: Google play
 
"
open-keychain/open-keychain,closed,Use SqlDelight in favor of ContentProviders,[],"This is a huge PR, moving our database query interface from ContentProviders to a bunch of specialized DataAccessObjects (Daos), using SqlDelight for database model generation and LiveData for loading semantics.

This is not a finished effort, some of the more tricky queries are still handled by KeychainProvider. I was able however to move the RecyclerView in KeyListFragment over, using the fabulous FlexibleAdapter lib. That move alone dropped more than a thousand lines of code :)"
open-keychain/open-keychain,closed,Add opt-in tracking with Piwik,[],"This PR adds simple piwik tracking to OpenKeychain. It tracks only very general statistics, in particular what activities the user navigates to and what external API methods are called. This would give us a better overview of what features are actually used, and where we could get rid of unnecessary complexity in features that nobody uses.

Of course, collection happens strictly opt-in. I made it so that the user is asked only a single time, when they open the key list, when OpenKeychain has been installed more than three days ago. After that, the user can change their preference in the settings, as expected. Statistics are collected anonymously, and sent to a private Piwik instance.

Todos:

- [x] set up piwik on openkeychain.org
- [x] update privacy policy"
open-keychain/open-keychain,closed,Use new WorkManager arch component for scheduled work,[],"This PR uses the new [WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager) component to do periodic work, specifically keyserver sync and temporary file cleanup. That way, we don't have to figure out when the wifi is up or the phone is idle with network available ourselves.

I'm also showing a (non-intrusive) notification during key sync. I'm a bit curious myself to see when the updates happen and how long they take. We could add stuff on top here, like offer the user to disable the background sync if they dismiss the notification.

My original motivation was to fix the Samsung bug with talking to providers during `Application.onCreate`, hopefully that is fixed here too :)"
open-keychain/open-keychain,closed,Use LiveData in favor of ContentLoader in ViewKeyFragment,[],"This PR switches from using ContentLoaders to LiveData in ViewKeyFragment. This separates the responsibilities of loading data in a cached, live-updated and non-blocking way into `AsyncTaskLiveData`, and of actually retrieving the data into a java object into a very simple and straightforward `*Dao` class.

Also part of this PR, I moved all notification of updated keys out of the KeychainProvider class, and into KeyRepository (or respective interactors). That way, any update of a key triggers only a single update notification, rather than one for every single updated database row. This helps a lot keeping views consistent and preventing crashes when a weird intermediate state is loaded. "
open-keychain/open-keychain,closed,show Snackbar if clipboard contains key data,[],"Importing keys from clipboard has been difficult to find for a long time now. This is a simple attempt to fix that problem.

## Screenshots:
![signal-attachment-2018-06-14-163337](https://user-images.githubusercontent.com/27813/41418780-c2c8f5a2-6ff0-11e8-9dc4-50207fed39ac.png)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,App crashes when trying to update a key from keyserver,[],"## Expected Behavior
The app should fetch details from the keyserver.

## Current Behavior
App crashes

## Steps to Reproduce (for bugs)
1. Open the app
2. Tap on a key in 'My keys'
3. Tap on the 'Update from keyserver' icon

## Context
When I try to do 'Update key server' (using the refresh icon) on a key I have in OpenKeychain the app crashes.

I'm pretty sure this worked in a previous version (5.0.2).

## Your Environment
* Android Version: 5.1.1
* Device Model: Galaxy sm-j111f
* OpenKeychain Version: 5.1.1
* From Google Play or F-Droid?: F-droid"
open-keychain/open-keychain,closed,Update all keys from keyserver crash the app,[],"OpenKeychain 5.1 (newest) resolved an issue on Android 5.1.1 for me when K-9 mail was unable to select a relevant key causing OpenKeychain to crash.

Unfortunately the new version introduces a new issue where OpenKeychain crashes when ""Update all keys"" is selected from the menu

## Expected Behavior
Keys should be updated to/from the keyserver

## Current Behavior
OpenKeychain crashes

## Possible Solution
Reverting to version 5.0 I had available, solves the update all keys problem

## Steps to Reproduce (for bugs)

1. Open OpenKeychain
2. Select the 3-dot menu in the top right-hand corner 
3. Click on ""Update all keys""
4. App crash

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
[openkeychain.txt](https://github.com/open-keychain/open-keychain/files/2098145/openkeychain.txt)

* Android Version: 5.1.1
* Device Model: Redmi Note 2
* OpenKeychain Version: 5.1
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,Translate the name used in Google Play store,[],It would be good if 'Easy PGP' in the name could be translated in Transifex.
open-keychain/open-keychain,closed,crash during import,[],"```
java.lang.NullPointerException: 
  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysAdapter.mergeEntryWithKey (ImportKeysAdapter.java:295)
  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysAdapter.handleResult (ImportKeysAdapter.java:274)
  at org.sufficientlysecure.keychain.keyimport.processing.ImportKeysOperationCallback.onCryptoOperationSuccess (ImportKeysOperationCallback.java:48)
  at org.sufficientlysecure.keychain.keyimport.processing.ImportKeysOperationCallback.onCryptoOperationSuccess (ImportKeysOperationCallback.java:24)
  at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.returnResultToCallback (CryptoOperationHelper.java:384)
  at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.onHandleResult (CryptoOperationHelper.java:368)
  at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.access$000 (CryptoOperationHelper.java:56)
  at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper$1.handleMessage (CryptoOperationHelper.java:321)
  at android.os.Handler.dispatchMessage (Handler.java:108)
  at android.os.Looper.loop (Looper.java:166)
  at android.app.ActivityThread.main (ActivityThread.java:7425)
  at java.lang.reflect.Method.invoke (Native Method)
  at com.android.internal.os.Zygote$MethodAndArgsCaller.run (Zygote.java:245)
  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:921)
```"
open-keychain/open-keychain,closed,Sign only errors,[],"<!--- Provide a general summary of the issue in the title above -->

Ehen I use openkeychain together with K9 mua and yubikey neo and I want to use PGP/mime to sign a message I got 2 errors.
First error: The displayed message in inbox of the receiver the message doesn't recognize the attachment. The E-Mail is displayed as sent without Signature.
Second error is worse:  The signature is broken. When checking with Thunderbird and enigmail it shows a different key owner. 

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 14.1 
* Device Model: S7 Galaxy
* OpenKeychain Version: 5.02
* From Google Play or F-Droid?: F-Droid

K9 Version: 5.403
 
Plesse can anyone reproduce / check?"
open-keychain/open-keychain,closed,Support Ledger Nano S,[],"This PR adds rudimentary support for T=0 protocol with short APDUs. Honestly, it took me a bit by surprise that this just worked :) since I didn't have to add changes for any of the actual differences between T=0 and T=1, like tpdu mapping and procedure bytes. But - I don't wan to complain too much, this seems to work now with just these few changes.

Fixes #2135

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,What do these icons mean?,[],"I just generated new keys. Right is old, left s new. On the first subkey of the old one, there are three icons; a wax seal, a pen, and an ID card. But there are only two present in the new one; the wax seal and the pen.
What do these icon mean?
![Image](https://user-images.githubusercontent.com/24216586/41091018-cd81f808-6a6f-11e8-9bb0-088345b297d1.jpg)
"
open-keychain/open-keychain,open,New lines break the QR code URI,[],"Wiki page: https://github.com/open-keychain/open-keychain/wiki/QR-Codes

This should be an easy fix, I'm just recommending a hint be added to the wiki mentioning that newlines at the end of a OPENPGP4FPR:<FINGERPRINT> URI results in 
```
Fingerprint is malformed or too short!
```
Please add a hint under the expalnation of this URI scheme telling users who generate qrcodes via the cli to strip newlines.

Reproducing:

I first tried to create a QR code with my own key like this:
(Arch Linux, gpg):
Import my key
`gpg --recv 0x616501B35FEE6151`

create a base64 encoded image of my key:
```
gpg --fingerprint Tai Groot |grep 615 |tail -c 51 |tr -d ' '\
|awk '{print ""OPENPGP4FPR:""$1}'|qrencode -o - |base64
```
results in:
![image](https://user-images.githubusercontent.com/8261498/40823335-bf5087cc-6524-11e8-938e-306a3bd080a4.png)

And gives the forementioned error.

Once I realized trailing newlines weren't allowed:

```
gpg --fingerprint Tai Groot |grep 615 |tail -c 51 |tr -d ' '\
|awk '{print ""OPENPGP4FPR:""$1}'|tr -d '\n'|qrencode -o - |base64
```
results in the following:

![image](https://user-images.githubusercontent.com/8261498/40823275-a9432796-6524-11e8-9aee-7034aff55da5.png)
Which works correctly!"
open-keychain/open-keychain,open,Export just shows the key name for identification,[],"I wanted to export my private keys and I have to provide a passphrase for them.
But this is pretty tricky because the only information included for the key is ""Enter password for '$key name'"". But I have a few keys with my name.

## Expected Behaviour

It would be much better to provide additionally an email address or at least any other identifier for the key. Otherwise I have to _guess_ which passphrase I have to enter.

## Current Behaviour
Currently it's ambiguous.

## Steps to Reproduce (for bugs)
1. Menu ""Backup/Restore""
2. Backup ""All keys + your own keys""
3. Key-guessing. :wink: 

## Context
I just want to export my keys.

## Your Environment
* Android Version: 7.1.1
* Device Model: Moto Z
* OpenKeychain Version: 5.0.2
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,HKP server handling adopted to conform to draft-shaw-openpgp-hkp-00,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->
This updates the handling of key queries with hkp servers by trying to conform to [OpenPGP HKP](https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00).

Any feedback is welcome!
## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
- Partly fixes #2061 as the handling of hkp server responses did not respect valid results as defined in [OpenPGP HKP](https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00), especially disrespecting empty field.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested with hkps://keys.mailvelope.com and default hkp servers.
## Screenshots (if appropriate):

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,App crashes when trying to set-up along with K-9 mail,[],"## Expected Behavior
I expect to configure the key for signing messages successfully.

## Current Behavior
The OpenKeychain app crashes.

## Steps to Reproduce (for bugs)
1. Import a key into OpenKeychain
2. Configure OpenKeychain as OpenPGP app for K-9 mail
3. Go to an account settings of a corresponding account in K-9 mail
4. Tap on the 'Configuration' setting

## Context
I imported an existing key into OpenKeychain. Then I tried to enable signing of emails in K-9 email. For this I initially set-up OpenKeychaing as a OpenPGP app in the Cryptography settings. Then, I tried to configure the account's Cryptography setting to use my key. Unfortunately, the app crashes whenever I tap on the account-specific Cryptography setting. As a consequence I'm unable to sign my emails using K-9 mail.


## Your Environment
* Android Version: 5.1.1
* Device Model: Samsung SM-J111F
* OpenKeychain Version: 5.0.2
* From Google Play or F-Droid?: F-droid
* Note: A key with two-identities"
open-keychain/open-keychain,closed,Add adaptive icons,[],"## Description
Add support for adaptive icons in devices running API 26 or Greater

## Motivation and Context
Uniform icon look and feel with updated Android look among other apps.

## How Has This Been Tested?
Made with android studio, tested on Nexus with Pixel Launcher

## Screenshots (if appropriate):
![image](https://user-images.githubusercontent.com/5065094/40561150-7271c640-605c-11e8-9422-f757b2f04eb4.png)
![image](https://user-images.githubusercontent.com/5065094/40561181-918bb0ea-605c-11e8-9145-c5c76866dac6.png)

## Types of changes
- ✅ Vector logo to support any DPI (yeah, i love pushing pixels!)
- ✅ Support for Android adaptive icons
- ✅ Support for round only icon view (API 25)
- ✅ Keep legacy icon for <=API 25 for feel consistency in older Android versions
- ✅ Support for blue debug adaptive icon with same behaviour of the release icon"
open-keychain/open-keychain,open,"Better workflow for ""publish on keyservers""","[Label(name=""enhancement"")]","It would be nice to have a more fleshed out ""publish to keyservers"" workflow. So far we had a button that wasn't very telling in the creation dialog, but there was little explanation and the workflow after creation was hidden under advanced. This has been in tentative planning for a while, but it's now slightly more relevant in a GDPR context.

Things to be done:
1) Remove the ""publish to keyserver"" button during key creation
2) Add a button to publish the key to the keyserver status card, or maybe just make it clickable? (possibly move that status field to its own card?)
3) Improve UploadKeyActivity: mention the key in question, its current publication status, and most importantly tell the user what's going to happen.
3.5) bonus if this freshly checks if the key is already public, more bonus if it distinguishes between ""initial publication"" and ""update public listing""
3.75) extra super bonus if it recognizes wkd publication status as well"
open-keychain/open-keychain,open,Generated message are not trust by GnuPG,[],"<!--- Provide a general summary of the issue in the title above -->
Messages generated by Open-Keychain are not trusted by PC version of GnuPG. Why is this?

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
The key should be trusted and the signature should be accepted as authentic.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
The key that should be trusted ultimately can not be trusted, and GnuPG says the signature is suspected as forgery.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
I'm sorry. I could not identify the cause.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. In Open-Keychain, encrypt text or file.
2. Move the encrypted result to the PC and decrypt it with GnuPG.

I will attach the log of GnuPG below.

```txt
gpg: using character set 'shift-jis'
gpg: WARNING: no command supplied.  Trying to guess what you mean ...
# off=0 ctb=84 tag=1 hlen=2 plen=194
:pubkey enc packet: version 3, algo 18, keyid 20C7C4B56728C3C3
        data: [1059 bits]
        data: [392 bits]
gpg: public key is 0x20C7C4B56728C3C3
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: using subkey 0x20C7C4B56728C3C3 instead of primary key 0xCDED5121CAD75105
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: public key encrypted data: good DEK
# off=196 ctb=85 tag=1 hlen=3 plen=524
:pubkey enc packet: version 3, algo 1, keyid 4D56E81DC06C7F38
        data: [4094 bits]
gpg: public key is 0x4D56E81DC06C7F38
# off=723 ctb=d2 tag=18 hlen=3 plen=286 new-ctb
:encrypted data packet:
        length: 286
        mdc_method: 2
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: using subkey 0x4D56E81DC06C7F38 instead of primary key 0xCDED5121CAD75105
gpg: encrypted with 4096-bit RSA key, ID 0x4D56E81DC06C7F38, created 2015-12-15
      ""teruteru128 <teruterubouzu1024@gmail.com>""
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: using subkey 0x20C7C4B56728C3C3 instead of primary key 0xCDED5121CAD75105
gpg: encrypted with 521-bit ECDH key, ID 0x20C7C4B56728C3C3, created 2017-12-23
      ""teruteru128 <teruterubouzu1024@gmail.com>""
gpg: AES256 encrypted data
# off=745 ctb=a3 tag=8 hlen=1 plen=0 indeterminate
:compressed packet: algo=1
# off=747 ctb=90 tag=4 hlen=2 plen=13
:onepass_sig packet: keyid 084DF780749DD01B
        version 3, sigclass 0x00, digest 10, pubkey 19, last=1
# off=762 ctb=cb tag=11 hlen=2 plen=34 new-ctb
:literal data packet:
        mode b (62), created 1527075731, name=""test_message.txt"",
        raw data: 12 bytes
gpg: original file name='test_message.txt'
# off=798 ctb=88 tag=2 hlen=2 plen=205
:signature packet: algo 19, keyid 084DF780749DD01B
        version 4, created 1527075731, md5len 0, sigclass 0x00
        digest algo 10, begin of digest 19 97
        hashed subpkt 28 len 41 (signer's user ID)
        hashed subpkt 2 len 4 (sig created 2018-05-23)
        subpkt 16 len 8 (issuer key ID 084DF780749DD01B)
        data: [521 bits]
        data: [521 bits]
gpg: Signature made 05/23/18 20:42:11 東京 (標準時)
gpg:                using ECDSA key 0x084DF780749DD01B
gpg:                issuer ""teruteru128 <teruterubouzu1024@gmail.com>""
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: using subkey 0x084DF780749DD01B instead of primary key 0xCDED5121CAD75105
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: key 0xCDED5121CAD75105: accepted as trusted key
gpg: key 0x0B4EB4659E574AB6: accepted as trusted key
gpg: key 0x0FE81F576C3F406F: accepted as trusted key
gpg: key 0x428113889D3E096F: accepted as trusted key
gpg: key 0x2891411F02327802: accepted as trusted key
gpg: key 0x5E98F52E7F91275D: accepted as trusted key
gpg: key 0xF6138536D61F976F: accepted as trusted key
gpg: key 0xD25EAC946C2155DA: accepted as trusted key
gpg: key 0xCE654ED108188C55: accepted as trusted key
gpg: key 0x6FAEAA16F62D1ACF: accepted as trusted key
gpg: Good signature from ""teruteru128 <teruterubouzu1024@gmail.com>"" [ultimate]
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: Note: signature key 0xFB747407BC70AE3B expired 03/17/18 02:32:24 東京 (標準時)
gpg: WARNING: We do NOT trust this key!
gpg:          The signature is probably a FORGERY.
gpg: binary signature, digest algorithm SHA512, key algorithm nistp521
gpg: decryption okay
```

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Due to this bug, mails sent from Open-Keychain and K-9 Mail can not be viewed by Thunderbird and GnuPG.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8
* Device Model: SH-03J
* OpenKeychain Version: 5.0.2
* From Google Play or F-Droid?: From Google Play.
 "
open-keychain/open-keychain,open,Unable to decrypt emails with K9mail and some others clients,[],"I use the same key on my computer and on my smartphone : it works well on the PC
The key has been generated on the PC (PGP) and sended to my smartphone then imported in OpenKeyChain with success.

## Expected Behavior
The encrypted email should be decrypted

## Current Behavior
The email client show ""decrypt error of the email"" (translate from french sentence)
If I push (clic) on the red padlock (showing by K9mail), a box appears with the message ""The message is encrypted but there was an error during decrypt"" (translate from french sentence)

## Possible Solution
No idea

## Steps to Reproduce (for bugs)
Like I have done

## Context
---

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7
* Device Model: Asus Zenfone Max 3
* OpenKeychain Version: 5.0.2 (50200)
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,WIP: Disable personalized learning for password input widgets,[],"Fix #2330 

## Description
Disable personalized learning for password input widgets

## How Has This Been Tested?
Not tested.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Passphrase stored in keyboard predictions?,[],"From the mailinglist:

## Current Behavior
I am using Google keyboard and I realize that the passphrase I use is stored in the predictions. I I believe it is possible to switch the keyboard in ""private mode"" before asking the passphrase.


## Expected Behavior
Not stored as predictions

## Possible Solution

https://developer.android.com/reference/android/support/v13/view/inputmethod/EditorInfoCompat#IME_FLAG_NO_PERSONALIZED_LEARNING
"
open-keychain/open-keychain,closed,Extend WKD support to include WKD URLs,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
This change allows handling Web Key Directory links by OpenKeychain (they always have scheme `https` and path starting with `/.well-known/openpgpkey/hu`).

This change also fixes two issues with WKD: 1) handling e-mails with leading/trailing spaces 2) following redirects on WKD links, just like gnupg does (some hosts like `kernel.org` use it). It also adds tests for WKD URL construction utilities.

## Motivation and Context
This change completes support of WKD in #2270 and allows importing keys over WKD using links similarly to how Facebook or HKP links are handled.
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Deployed debug build on a phone and tested links mentioned in #2270.

## Screenshots (if appropriate):
After clicking on a link.
![screenshot_1526978160](https://user-images.githubusercontent.com/1718963/40353183-23ed0e42-5db1-11e8-9b1e-ed57ee6c247a.png)

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,SCAN button does not show up when the device is rotated.,[],"**Expected Behavior**
I should be able to *scan* **Secure Wifi Transfer** QRcode in landscape mode.

**Actual Behavior**
But the **Scan** button doesn't show up while rotating the device.

**How to reproduce**
 1. First download the app from F-Droid.
 2. Launch the app.
 3. Tap on the **SECURE WIFI TRANSFER**.
4. After that, rotate the device as it is.
You can see, the **SCAN** button does not show up.

 • App Version : 5.0.2
 • Operating System : Android 6.0
 • Device : Lava Iris 50

**Recording of the bug**
https://www.youtube.com/watch?v=rZf5V0JFlTM"
open-keychain/open-keychain,open,Improve key search with HKP servers,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->
This updates the handling of key queries with hkp servers by trying to conform to [OpenPGP HKP](https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00) and allowing to use all keyservers for search.

Any feedback is welcome!
## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
- If a key search query is unsuccessful (no keys, or error) one had to change keyserver selection manually. For convenience, a button was added, suggesting to search other servers.
- Partly fixes #2061 as the handling of hkp server responses did not respect valid results as defined in [OpenPGP HKP](https://tools.ietf.org/html/draft-shaw-openpgp-hkp-00), especially disrespecting empty field.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested with hkps://keys.mailvelope.com and default hkp servers.
## Screenshots (if appropriate):
**Added a tag to other servers as ""fallback"" servers.**
![20180521_000907](https://user-images.githubusercontent.com/17083784/40284222-22dd1112-5c8c-11e8-8bd7-df16413ef0aa.png)
**Added a button, in case the search on the server was unsuccessful.**
![20180521_001002](https://user-images.githubusercontent.com/17083784/40284225-2d62e99a-5c8c-11e8-8564-e30c63d648c8.png)
**Added a tag for the keys origin in case it is not the primary key server.**
![20180521_000828](https://user-images.githubusercontent.com/17083784/40284224-27b86542-5c8c-11e8-89e2-da2c91c0e459.png)
Added a tag for the keys origin in case it is not the primary key server.

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,Import encrypted secret key impossible if not ASCII,[],"This probably more an improvement than an issue.

If the key is exported unarmored and encrypted, there is no way to import it.
On my PC (gpg 2.2.7) : 
  $ gpg  --export-secret-keys mykey | gpg  -a -c -o mykey.sec.asc
On my phone, after I decrypt the file, I can't import the key.

## Expected Behavior
Decrypt the file and suggest to import the key

## Current Behavior
The file can be decrypted but the key can't be imported or saved.

## Possible Solution

## Steps to Reproduce (for bugs)

1. $ gpg  --export-secret-keys mykey | gpg  -a -c -o mykey.sec.asc
2. Transfer mykey.sec.asc on the phone
3. Decrypt the file

## Context
Import my secret key on my PC. It's not a big deal as it works if it is exported with --armor.

## Your Environment
* Android Version: 7.1.2 (Lineage 14.1)
* Device Model: Moto G3
* OpenKeychain Version: 5.0.2
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Adaptive icons,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
This adds support for adaptive icons in devices running Android 8.0 and above while continuing to display the legacy icon on devices running older versions of Android.

## Motivation and Context
Starting from November 2018, apps need to target API 26 in order to be able to push updates to the Play Store. When an app targets API 26 but does not provide an adaptive icon, the existing icon is put on a white background and masked according to whatever choice the users or OEM make in their launcher.

By providing an adaptive icon, this situation is avoided. An app doesn't need to target API 26 in order to provide an adaptive icon and merely building against SDK 26 should suffice, which means that users can enjoy an adaptive icon even as the team works on other changes that will let them target API 26.

## How Has This Been Tested?
As I cannot use Android Studio on my present laptop, I've not actually been able to test this change by building it. I however used [Adapticon](https://adapticon.tooo.io/) to test the icon itself and it seems to be fine.

I am no designer and the icon was made by messily playing around with the SVG provided and I understand if this might not be up to the team's standards. This is however the best that I can do and somebody else will need to step in to do a better job if this won't do.

## Screenshots (if appropriate):
![screenshot_2018-05-19 adapticon](https://user-images.githubusercontent.com/20235646/40265184-383b715c-5b51-11e8-881b-fdda81ae5047.png)
![screenshot_2018-05-19 adapticon 1](https://user-images.githubusercontent.com/20235646/40265185-3887a068-5b51-11e8-940e-e2f52377bd92.png)
![screenshot_2018-05-19 adapticon 2](https://user-images.githubusercontent.com/20235646/40265186-38d81944-5b51-11e8-828c-79052577589a.png)
![screenshot_2018-05-19 adapticon 3](https://user-images.githubusercontent.com/20235646/40265187-39328546-5b51-11e8-883a-b704fcbd08f3.png)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)"
open-keychain/open-keychain,closed,Adaptive icon support,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
This adds support for adaptive icons in devices running Android 8.0 and above while continuing to display the legacy icon on devices running older versions of Android.

## Motivation and Context
Starting from November 2018, apps need to target API 26 in order to be able to push updates to the Play Store. When an app targets API 26 but does not provide an adaptive icon, the existing icon is put on a white background and masked according to whatever choice the users or OEM make in their launcher.

By providing an adaptive icon, this situation is avoided. An app doesn't need to target API 26 in order to provide an adaptive icon and merely building against SDK 26 should suffice, which means that users can enjoy an adaptive icon even as the team works on other changes that will let them target API 26.

## How Has This Been Tested?
As I cannot use Android Studio on my present laptop, I've not actually been able to test this change by building it. I however used [Adapticon](https://adapticon.tooo.io/) to test the icon itself and it seems to be fine.

I am no designer and the icon was made by messily playing around with the SVG provided and I understand if this might not be up to the team's standards. This is however the best that I can do and somebody else will need to step in to do a better job if this won't do.

## Screenshots (if appropriate):
![screenshot_2018-05-19 adapticon](https://user-images.githubusercontent.com/20235646/40265184-383b715c-5b51-11e8-881b-fdda81ae5047.png)
![screenshot_2018-05-19 adapticon 1](https://user-images.githubusercontent.com/20235646/40265185-3887a068-5b51-11e8-940e-e2f52377bd92.png)
![screenshot_2018-05-19 adapticon 2](https://user-images.githubusercontent.com/20235646/40265186-38d81944-5b51-11e8-828c-79052577589a.png)
![screenshot_2018-05-19 adapticon 3](https://user-images.githubusercontent.com/20235646/40265187-39328546-5b51-11e8-883a-b704fcbd08f3.png)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Add support for NDEF tags with `openpgp4fpr` URIs,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->
This change allows importing keys from NDEF tags that have fingerprint encoded as an `openpgp4fpr` URI when the application is in background.

After scanning a tag the `Import keys` activity is shown with results of the search for key fingerprint encoded in the tag.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
Cheap NFC tags can be used as an alternative to barcodes when exchanging public keys. They can also be used as a business card, that, when scanned, will open OpenKeychain and look for the key.

## How Has This Been Tested?
Built a fdroid variant, OpenKeychain moved to background (by pressing Android Home key), prepared and scanned NDEF tag with a sample URI (`openpgp4fpr:73EE2314F65FA92EC2390D3A718C070100012282`). Import keys window is shown.
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

## Screenshots (if appropriate):
After scanning the tag only standard Import Keys window is shown.

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,Very slow encrypting and signing of emails with Large (e.g. 6-8MB) attachment (Nitrokey),"[Label(name=""bug""), Label(name=""security token"")]","<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
1. Use K-9 Mail to compose an email
2. Add an attachment (e.g. 5 MB)
3. Send encrypted and signed message (using NitrokeyPro)
4. Message sent

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
When sending an email with relatively large attachment (e.g. 5MB) - the message is not encrypted and signed and no error message appears. Nitrokey is used for key storage.

Sending emails w/o attachment or with small attachment (e.g. ~1 MB) works as expected.
Encrypting and singing large files ~6-8 MB works as expected directly from OpenKeychain

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Use K-9 Mail to compose an email
2. Add an attachment (e.g. 6-8 MB)
3. Send encrypted and signed message (using NitrokeyPro)
4. ~3 minutes after pressing ""Send"", the LED on the Nitrokey blinks (to indicate signing of the message).
5. ~3 more minutes after the message is signed - the email is actually sent

So, the whole process of sending an encrypted and signed email with 6-8MB attachment takes about 6-7 minutes. Decrypting the same message once received takes 1-2 seconds.

Sending emails w/o attachment or with small attachment (e.g. ~1 MB) works as expected.
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 5
* Device Model: 
* OpenKeychain Version: 5.0.2 (Latest available from F-Droid)
* From Google Play or F-Droid?: F-Droid
K-9 mail - Latest version available from F-Droid
 
"
open-keychain/open-keychain,closed,What is a 'stripped' subkey?,[],"Maybe this question is foolish. But… 
In my language the translation is “剥离”(zh-CN)

What means of stripped? Disable? Secret-key removed? Can I reactive a stripped subkey?
Thank you."
open-keychain/open-keychain,closed,Is there anyway to export a subkey?,[]," Is there a way to export a subkey like `gpg2 --export-secret-subkey` ?
Now, I have to backup my key and then import it to gpg2. Is there any easy way in OpenKeyChain?
Thank you."
open-keychain/open-keychain,closed,Lost,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* Device Model: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Extend QR scanner to support VCards with KEY field,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->

This change will extend QR scanner with simple VCard support. When a VCard is scanned it will extract URI from `KEY` field and process it just like it would be a URI scanned directly. When a `openpgp4fpr` URI is put there the UI would search and import the key and show the confirmdialog.

Example VCard with this URI:

    BEGIN:VCARD
    FN:Test WKD
    EMAIL:test-wkd@metacode.biz
    KEY:OPENPGP4FPR:74EC8D3DA82A79DAA25DF10C6BA55ED83ABAE1BB
    END:VCARD

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
Currently QR scanner supports only `openpgp4fpr` URIs. VCard specification allows embedding public key information as an URI in [`KEY` field](https://tools.ietf.org/html/rfc6350#section-6.8.1). Two schemes used with this field - `https` and `data` are [either insecure or not practical](https://www.av8n.com/computer/htm/distributing-keys.htm#sec-fing). As the value of `KEY` field is a URI one can use `openpgp4fpr` URI there to have both secure and small links.

This idea is hinted at in [Distributing PGP Keys and Fingerprints](https://www.av8n.com/computer/htm/distributing-keys.htm#sec-fing) with this text:
> It would be nice if .vcf supported PGP fingerprints, as opposed to entire keys or mere URLs, but there is no sign that it does.

## How Has This Been Tested?
Built a debug Fdroid APK and tested on live phone scanning QR code from https://metacode.biz/@wiktor
The QR code can be decoded in browser with: https://qrcode.online/reader using URL https://metacode.biz/@wiktor/card.png
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,Update Swedish translation,[],The Swedish translation was updated
open-keychain/open-keychain,closed,Backup key fail.,[],"<!--- Provide a general summary of the issue in the title above -->
I 'm sure I input number correctly. But...

<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
xxxx-xxxx-xxxx-
xxxx-xxxx-xxxx-
xxxx-xxxx-xxxx
I type it correctly. But openkeychain tell me I input wrong...
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 5.0.2
* Device Model: Vivo Y35A
* OpenKeychain Version: 5.0.1
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,"application crashes, after entering the PIN code when opening a backup copy of the keys",[],"## Expected Behavior
opening a file with a key

## Current Behavior
Crash application...


## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.Creating a backup of the keys *sec.pgp and pub.pgp
2. opening files through a backup / restore option selecting the output file.
3. the program asks for the input of the transfer code, after entering it, again requests it again a second time. After entering, the program crashes.

P.s.the same thing happens when you open these files through the ""decrypt file""

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
my desire to import public and private keys into another program and to a desktop computer program

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: oreo 8.0.
* Device Model: xiaomi mi a1
* OpenKeychain Version: 5.0.2.
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Search for keys in Web Key Directory,[],"
<!--- Provide a general summary of your changes in the title above -->

## Description
If a search pattern that looks like an email address is found
an additional query to Web Key Directory will be performed.

I'd gladly appreciate any feedback!

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->

Fixes partially #2270.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Search for `test-wkd@metacode.biz`, a key that is reachable only via WKD succeeds with this change.


## Screenshots (if appropriate):
![screenshot_1525788892](https://user-images.githubusercontent.com/1718963/39762465-05ec4704-52db-11e8-8621-3b7699ab38f5.png)

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Simplify backup code fragment,[],"This removes the ""write down to confirm"" extra step, replacing it with a simple checkbox. This greatly simplifies the backup process, at the cost of placing slightly more responsibility with the user to make no mistakes.

## Screenshots:

![image](https://user-images.githubusercontent.com/27813/39759482-16eade9c-52d3-11e8-936b-b2f9063077f5.png)
"
open-keychain/open-keychain,closed,Key backup fails - wrong passcode reported on verification check,[],"Key backup is failing each time I try. When it prompts me to write down the security code and then enter it back in, it states i have entered the wrong code. Have tried numerous times, in between app restarts.

I did customize my gpg key with an expiration date and 3 separate subkeys for each of the default 3 usages.

It is valid otherwise and I have exported it to keyservers. 

* Android Version: 8.1.0, 4/5/18 patch level
* Device Model: Google pixel 2
* OpenKeychain Version: 5.0.1 (50100)
* From Google Play or F-Droid?: Google play 
 
"
open-keychain/open-keychain,closed,[SOLVED] OpenPGP-SmartCard PIN with alphanumerical characters are not supported,[],"Cannot enter my Yubikey NEO's PIN into the OpenKeychain UI.

## Expected Behavior
UI accepts the same PINs that the NEO (== OpenPGP-SmartCard?) supports.

## Current Behavior
When decrypting mails with K9-Mail, OpenKeychain is fired up and asks for my Yubikey's PIN. Since the Yubikey supports alphanumerical PINs up to 127 characters, I am using my passphrase as a PIN. However, the text field in the OpenKeychain UI does only accept numerical input, so I cannot unlock the key.

## Possible Solution
Align PIN support with Yubikey's support and / or the specification of PINs in the OpenPGP-SmartCard standard.

## Steps to Reproduce (for bugs)
1. Have a decrypted mail in K9 and your keyring setup with OpenKeychain and Yubikey ready.
2. Tap the mail.
3. OpenKeychain asks for PIN. The dialog does not accept alphanumerical input.

## Context
I am trying to decrypt or sign emails with K9.
If in fact Yubico is violating the standard by accepting PINs that violate the specs, consider this bug report less important.

## Your Environment
* Android Version: 8.0.0
* Device Model: Honor 9
* OpenKeychain Version: 5.0.1 (50100)
* K-9 Mail 5,403
* From Google Play
 
"
open-keychain/open-keychain,closed,Cleanup SshSignatureConverter,[],"## Description
SshSignatureConverter  was a bit rough. Clean it up & document.

## How Has This Been Tested?
Works. Tests pass.

## Types of changes
- ✅ Cleanup
- ✅ Document"
open-keychain/open-keychain,closed,Use correct signature format identifier when creating SSH signatures for RSA with SHA256 & SHA512,[],"[RFC8332](https://tools.ietf.org/html/rfc8332) defines new signature format identifier for RSA signatures with SHA256 & SHA512. Use those for correct SSH signature creation.

## How Has This Been Tested?
Works with ConnectBot.
Passes test.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,closed,Importing two different keys with same email address. Name conflict,[],"<!--- Provide a general summary of the issue in the title above -->

The name of the new key has the name of the old key which uses the same email address.

## Expected Behavior
I should see the public key of my original key at the bottom and then the new full key which uses the same email address should appear at the top with it's actual name.

## Current Behavior
Install public key using my email address. Then make a new key on the computer with a different name (in this case I had added (Mobile Phone) to the end, so the first part of the name is the same as the other key. Then when I check in the ""My Keys"" list, my new key has the name of the same as the separate key which I have only the public key installed.

## Possible Solution
The check for the name of the key should be checked rather than making an assumption based on the email address and existing name for it.

## Steps to Reproduce (for bugs)
Already described.

## Context
I am messing around making a new key and I simply added an indicator to the name so that I know that both keys are real and mine but one is weaker for phone (Yubikey Neo) usage.

## Your Environment
* Android Version: No clue off hand, unimportant for this issue.
* Device Model: Samsung S5 Mini
* OpenKeychain Version: Latest
* From Google Play
 
"
open-keychain/open-keychain,closed,[feature request]: import keys from host over ssh,[],"Would be fine if ""Manage my keys"" screen does supply this as an option.
It seems to be much simpler than existing importing from file/clipboard when the keys are stored on host initially."
open-keychain/open-keychain,open," import secret key: ""Could not read keys from clipboard!""",[],"Can't import secret key from clipboard. Importing public key works.
Tried pasting output of commands:
```
$ gpg  --armor --export-secret-keys <key>
$ gpg2  --armor --export-secret-keys <key>
```
If pasting the same output to a file - import works from that file.

## Environment
* Android Version: 7.1
* Device Model: Nexus 4
* OpenKeychain Version: 4.9.2
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Add autocrypt key transfer api method,[],"This PR builds on #2304, adding an API method that allows clients to generate the encrypted payload part of an Autocrypt Setup Message. This is a WIP at the moment, I'll push a related PR on K-9 soon.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Autocrypt setup message format support,[],"This PR does a couple of related things:
* add support for reading and writing `Passphrase-Format: numeric9x4`, and `Passphrase-Begin` headers in symmetrically encrypted data
* change passphrase to that format in our backups
* support `application/autocrypt-setup` mime type to import Autocrypt Setup Messages

## Motivation and Context
See [Autocrypt Setup Message](https://autocrypt.org/level1.html#autocrypt-setup-message) in the level 1 Autocrypt spec. This PR changes our backup format to follow that spec, and also allows import of keys from such messages.

## How Has This Been Tested?
Changes are mostly UI, tested manually. The part that actually took me the longest was getting the prefix EditText widget to work in combination with the hint placeholder technique we use for sizing the input fields :)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,open,NPE in LogDisplayFragment,[],"## Current Behavior
Crashing in log details:
```
04-06 14:16:41.544   3392     3392         AndroidRuntime  D  Shutting down VM
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  FATAL EXCEPTION: main
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  Process: org.sufficientlysecure.keychain, PID: 3392
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at org.sufficientlysecure.keychain.operations.results.SaveKeyringResult.writeToParcel(SaveKeyringResult.java:55)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Parcel.writeParcelable(Parcel.java:1791)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Parcel.writeValue(Parcel.java:1697)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Parcel.writeArrayMapInternal(Parcel.java:838)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.BaseBundle.writeToParcelInner(BaseBundle.java:1542)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Bundle.writeToParcel(Bundle.java:1232)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Parcel.writeBundle(Parcel.java:878)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.content.Intent.writeToParcel(Intent.java:9595)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.app.IActivityManager$Stub$Proxy.startActivity(IActivityManager.java:4327)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.app.Instrumentation.execStartActivity(Instrumentation.java:1611)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.app.Activity.startActivityForResult(Activity.java:4487)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.BaseFragmentActivityApi16.startActivityForResult(BaseFragmentActivityApi16.java:54)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.FragmentActivity.startActivityForResult(FragmentActivity.java:67)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.ActivityCompat.startActivityForResult(ActivityCompat.java:230)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.FragmentActivity.startActivityFromFragment(FragmentActivity.java:806)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.FragmentActivity$HostCallbacks.onStartActivityFromFragment(FragmentActivity.java:920)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.Fragment.startActivity(Fragment.java:908)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.support.v4.app.Fragment.startActivity(Fragment.java:897)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.LogDisplayFragment.onSubEntryClicked(LogDisplayFragment.java:140)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.adapter.NestedLogAdapter$SublogEntryViewHolder.onClick(NestedLogAdapter.java:276)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.view.View.performClick(View.java:6294)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.view.View$PerformClick.run(View.java:24770)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Handler.handleCallback(Handler.java:790)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:99)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:164)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:6494)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)
04-06 14:16:41.549   3392     3392         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)
04-06 14:16:41.550   1115    27092        ActivityManager  W  Force finishing activity org.sufficientlysecure.keychain/.ui.LogDisplayActivity

```

## Steps to Reproduce (for bugs)
1. Search for lukele@gpgtools.org on keyserver
2. import key
3. go to log details, click on details of key import in log

## Your Environment
* OpenKeychain Version: 5 beta
 
"
open-keychain/open-keychain,open,Encrypting text - 'Share' and 'Copy' encrypts differently,[],"## Expected Behavior
Encrypted text is decryptable whether the 'share' or the 'copy' button is used in the encryption process.  

## Current Behavior
Encrypted text is not decryptable if the 'share' button is used.  

## Steps to Reproduce (for bugs)

1.  Use OpenKeychain's encrypt text option, choose the key to encrypt, then tap the 'share' button,  
![screenshot_20180405-135240](https://user-images.githubusercontent.com/29808661/38391399-f99ef936-38d8-11e8-9dd8-a59d1a2bf10c.jpg)
2.  Share to mail program (such as Inbox), and send.  
3.  Select the text in the received email, share to 'Decrypt with OpenKeychain'
4.  I get an error, 'No valid OpenPGP encrypted or signed data found!' 
![screenshot_20180405-135309](https://user-images.githubusercontent.com/29808661/38391400-f9dbc71c-38d8-11e8-88e4-768693120474.jpg)

## Context
I want to ensure if I send encrypted text, the person I'm to will be able to decrypt it.  

## Your Environment
* Android Version: 8.0.0
* Device Model: OnePlus 5 
* OxygenOS Version: 5.0.4
* OpenKeychain Version: 5.0-beta 1 (50000)
* From Google Play or F-Droid?: from Google Play
 
"
open-keychain/open-keychain,closed,New identity chooser dialog for API,[],"This adds a new key id selection dialog:

* dialog theme, better preserves visual context of calling app
* immediate key generation, no further questions asked
* key generation can be backed out of
* reports name and creation to the api caller
* implicit app registration and permission when a key is selected

## How Has This Been Tested?
I tested combinations of new and old K-9 and OpenKeychain. It's pretty much just UI stuff, so no unit tests included :(

## Screenshots:

![screenshot_openkeychain_ debug _20180403-015408](https://user-images.githubusercontent.com/27813/38222633-3916951e-36e6-11e8-9087-312a6dbbbf65.png)

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Slight improvements to key list items,[],"This changes how keys are displayed a bit:

Most importantly, creation timestamps are now always shown for secret keys. Unlike public keys, the timestamps are reliable, and the user will have at least a rough intuition of when they created their keys. There also aren't as many so the list doesn't get too cluttered.

Secondly, a key that has only a mail address is shown as just that, rather than ""\<no name\>"" and the mail address below."
open-keychain/open-keychain,closed,[Feature request] Add support for encrypted email subject compatible with Enigmail 2,[],"In the recent release of Enigmail 2.0, encryption of the email subject is supported. This is a useful privacy feature, and it would even more useful if it was supported by OpenKeychain and K9. Currently, when a message has been encrypted by Enigmail, including the subject, and then opened in K9, then dummy text becomes the new email subject for the remainder of the discussion, regardless of mail client used.

## Expected Behavior
Email subject's encrypted by Enigmail 2.x are readable by K9 with OpenKeychain.

## Current Behavior
Dummy text appears in K9 instead of the unencrypted email subject."
open-keychain/open-keychain,closed,token: send expected result size as Le,[],"This is a different take on 1c8cc99c681a435254a1326949da33a88a532b57, sending the expected result size. It's not what the spec says, but it's what GnuPG does (if I had a nickel), so it should achieve good compatibility.

Related #2049 

## How Has This Been Tested?
Tests pending

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Last update fixes,[],"This adds a bunch of fixes for the ""last updated"" mechanism:
1) it actually doesn't forget the keyserver status when a key is saved (or updated) for some reason
2) when a key is certified and uploaded, it is remembered as such"
open-keychain/open-keychain,open,Intended recipients,[],"Implementation of intended recipients subpacket. 

## Motivation and Context

See related [thread](https://mailarchive.ietf.org/arch/msg/openpgp/urog4K_2FG6_mcvoqQmjO6pZvKY) on openpgp-wg

Related attack scenario: https://0xacab.org/schleuder/schleuder/issues/158

## How Has This Been Tested?
Unit tests included

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Cant save encryptes files ,[],"<!--- Provide a general summary of the issue in the title above -->after upgrading from 4.8 to 4.91, cant save decrypted file to storage


## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->before you decrypt pgp file, there you see decrypted file. You long click on it and was given menu to save, share etc. Now just crashing

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Encrypt photo.
2. Decrypt it
3. Try to long click on it
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.1
* Device Model: pixel xl
* OpenKeychain Version: 4.91
* From Google Play or F-Droid?: fdroid
 
"
open-keychain/open-keychain,closed,allow other curves than NIST on security tokens,[],what it says on the tin. see #2292
open-keychain/open-keychain,closed,Any plan to support Brainpool curves?,[],"I'm playing around with the OpenPGP card 3.3 JavaCard applet https://github.com/ANSSI-FR/SmartPGP running on a JavaCard that also has hardware support for Brainpool curves.
I have noticed that only RSA and NIST ECC are supported at the moment by Openkeychain. Is there any plan to support Brainpool curves as well?  "
open-keychain/open-keychain,closed,Nitrokey Pro: Decryption fails starting with v4.9,"[Label(name=""security token"")]","When trying to decrypt any data, the decryption fails with ""Data is corrupt!"". I've tried password store files (which work fine on my PC) and encrypting test data in open keychain and decrypting it right away: both fail.

```
[START] Processing input data
 [DEBUG] Attempting to process OpenPGP data
 [DEBUG] Starting decrypt operation…
  [DEBUG] Found block of asymmetrically encrypted data for key 0x1a048f1d7d6f69c8
   [ERROR] Data is corrupt!
```

Decrypting worked fine a few weeks ago (before v4.9). Using the wrong PIN correctly shows ""Error: Bad PIN!"", so that is not the problem.

## Environment
* Android Version: 8.0.0 and 7.1.1
* Device Model: Huawei Mate 10 Pro (BLA-L29) and Nexus 9
* OpenKeychain Version: 4.9.1
* From Google Play or F-Droid?: Google Play
* Nitrokey Pro: probably v0.7"
open-keychain/open-keychain,open,Feature Request: Sign new subkeys,[],"## Expected Behavior
I have a key in my trusted store, which I have sign with my private key. I synchronize my keys and the signed key has a new valid and manually checked subkey about visual fingerprint matching, I want to sign the new subkey with my private key. 

## Current Behavior
I can't sign the new subkey, I get an error message in german like 
> Nicht bestätigt
> Diese Identität wurde noch nicht bestätigt. Du kannst nicht sicher sein, dass diese Identität wirklich zu einer bestimmten Person gehört.

when I hold pressed on the new subkey.

## Possible Solution
Implement a function, to sign the new subkey, when a user hold pressed on the new subkey.

## Your Environment
* Android Version: 8.1 LineageOS (15.1)
* Device Model: Google Nexus 5x
* OpenKeychain Version: 4.9 (49001)
* From Google Play or F-Droid?: FDroid
 
"
open-keychain/open-keychain,open,Feature Request: disable keys,[],"## Expected Behavior
Disable keys about the more options. Other applications like K9-Mail or Password-Store can't use a disabled key to encrypt or decrypt data. 

## Current Behavior
Can't find an option to disable public or private keys.

## Possible Solution
Implement a function to disable public and private keys

## Your Environment
* Android Version: 8.1 (LineageOS 15.1)
* Device Model: Google Nexus 5x
* OpenKeychain Version: 4.9 (49001)
* From Google Play or F-Droid?:  FDroid
 
"
open-keychain/open-keychain,open,Feature Request: Select more than one key to download from keyserver,[],"## Expected Behavior
When I want to search after some keys about a keyserver, I get a response list with the name of the key owner and the key details. When I want to select more than one key, for example to download deprecated or revoked keys, I hold pressed one key to select more keys and want to press a button to download all selected keys.

## Current Behavior
I can only select one key and import the key about the key details. I must search after the keys again to select active, revoked or deprecated keys from the same response list.

## Possible Solution
Implement multi selection 

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.1 (LineageOS 15.1)
* Device Model: Google Nexus 5x
* OpenKeychain Version: 4.9 (49001)
* From Google Play or F-Droid?: FDroid
 
"
open-keychain/open-keychain,closed,Keyserver drop down unreadable on dark theme,[],"## Expected Behavior
When I want to search after some keys about a keyserver, I type into the search field the name of the person for which I search after some public keys. OpenKeyChain sugest me some contact names from my phone address book. 

## Current Behavior
The suggested list is empty, I see only empty field in the drop down list.

## Steps to Reproduce (for bugs)
1. Set theme to dark
2. Search after some keys, for example from Linus Torvalds
3. Check if your suggestion list is empty, too.

## Your Environment
* Android Version: 8.1 (LineageOS 15.1)
* Device Model: Google Nexus 5x
* OpenKeychain Version: 4.9 (49001)
* From Google Play or F-Droid?: FDroid
 
"
open-keychain/open-keychain,closed,"Impossible to uncheck ""Synchronize with the Internet""",[],"I am effectively unable to uncheck the ""Synchronize with the Internet"" checkbox under ""Edit identities"". 

## Expected Behavior
The ""Synchronize with the Internet"" checkbox should remain unchecked after saving and exiting the ""Edit identities"" screen.

## Current Behavior
The checkbox remains checked after pressing ""Save"" and enterig the ""Edit identities"" screen again.

## Steps to Reproduce (for bugs)
1. Enter ""Edit identiies"" screen.
2. Uncheck the ""Synchronize with the Internet"" checkbox.
3. Press ""Save"" (OpenKeychain says there is nothing to do) and exit the screen.
4. Enter ""Edit identities"" again.

## Context
The key I am trying to configure is a local one I don't want to be either pushed or puled from keyservers.

## Your Environment
* Android Version: LineageOS 14.1 (Android 7.1.2)
* Device Model: Moto G LTE (XT1039)
* OpenKeychain Version: 4.9.1
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,"disable Security Warning if message was encryted, but not signed",[],"<!--- Provide a general summary of the issue in the title above -->

Im using K9 mail together with Openkeychain 4.9.1 on LinageOS Android Version 7.1.2.
When reading mails which are send to me and are GPG encrypted but not singed the system display a warning which I have to approve every time.

Security Warning
This message was encrypted, but not signed. It is not end-to-end secure!

Since I encrypt all eMails on my server with my own PGP Key if they are lying around longer than one day - this message really gets to me.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

If I receive unsigned messages - I can go to the options and disable the above message.
Default would be that the warning is show.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

An experience user can switch of repeating warnings.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

If I receive unsigned messages - I can go to the options and disable the above message.
Default would be that the warning is show.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version:  7.1.2
* Device Model: Xiami Mi5
* OpenKeychain Version:  4.9.1
* From Google Play or F-Droid?:  F-Droid
 
"
open-keychain/open-keychain,closed,can't decrypt from clipboard,[],"Popup - like ""can't decrypt, can't find known private key""

though not long ago all worked well, with same settings and keys

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 4.2
* Device Model: 
* OpenKeychain Version: 4.9.1
* From Google Play or F-Droid?: GP
 
"
open-keychain/open-keychain,closed,"Update bottomsheet to 3.1.3, fixes #2278",[],"Update bottomsheet to 3.1.3, fixes #2278

upstream: https://github.com/soarcn/BottomSheet/issues/132

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Option self encrypt,[],"Add options to toggle self-encrypt in both text and files encryption fragment.

See feature request in #2279"
open-keychain/open-keychain,closed,Is there any way to choose a subkey for encrypt?,[],"<!--- Provide a general summary of the issue in the title above -->
Can I choose a subkey for encrypt?
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
The beginning I need a strong encryption so I generated a RSA4096 key. But sometimes I need a short message. So is there any way to choose another subkey for encrypt?
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Such as show a dialog or list?
## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->

Thank you.
 
"
open-keychain/open-keychain,closed,Can't update from keyserver.,[],"<!--- Provide a general summary of the issue in the title above -->
Can't update from keyserver.
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Update.
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
Update fail. A certification exception.
```
Network error (CertificateException) for 'hkps://keyserver.ubuntu.com'. Check your Internet connection! 
```
## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. ![IMG_20180304_212858.jpg](https://i.loli.net/2018/03/04/5a9bf65116e2f.jpg)

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: Android 5.0.2
* Device Model: Vivo y35a/armeabi-v7a
* OpenKeychain Version: 4.9(49001)
* From Google Play or F-Droid?: F-Droid


Thank you.
 
"
open-keychain/open-keychain,closed,Signing encrypted message add signing key to receivers.,[],"When encrypting and signing at the same time signers key is added as a receiver.

## Expected Behavior
If I create a signed message encrypted for somebody my key shall not be one of the receivers.

## Current Behavior
Signing message automatically adds signing key as a receiver.

## Steps to Reproduce (for bugs)
1. Encrypt message for the key you own but secret key isn't presented on the Android device and signs it with some key then save as text.
2. In gpg use `gpg --list-packets --list-only ""msg.txt""` you will see two receivers (sender and receiver) but there should be only one (receiver).
## Example
```
gpg --list-packets --list-only 2.pgp
# off=0 ctb=85 tag=1 hlen=3 plen=2060
:pubkey enc packet: version 3, algo 1, keyid 92594C1DD2C6FF46 #legitimate receiver
        data: [16382 bits]
# off=2063 ctb=85 tag=1 hlen=3 plen=396
:pubkey enc packet: version 3, algo 1, keyid A2D79E1C5FAB35C5 #sender
        data: [3071 bits]
# off=2462 ctb=d2 tag=18 hlen=6 plen=21366 new-ctb #message
:encrypted data packet:
        length: 21366
        mdc_method: 2
```

## Context
When I want to send files from my tablet I want them signed but I don't want them to be decrypted if the tablet will be compromised

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.0
* Device Model: LG-G5
* OpenKeychain Version: 4.9 (49001)
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Can't save a file after decryption.,"[Label(name=""bug"")]",As of version 4.9.1 a file cannot be saved after the decryption process finishes.  The app crashes.  Wiping and reinstalling doesn't fix the problem.  However the issue isn't present after downgrading to version 4.8.1 on F-droid.  
open-keychain/open-keychain,closed,Android App reports CertificateException,[],"<!--- Provide a general summary of the issue in the title above -->
Android App reports CertificateException.
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Trying to sync my keys.
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
One Android device works fine, another fails with CertificateException.
## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.  „Alle Schlüssel aktualisieren“
2. Import fehlgeschlagen 
3. Network error (CertificateException)
4. Schlüssel konnte nicht abgerufen werden

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 6.0.1
* Device Model: Samsung S5
* OpenKeychain Version: 4.9
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Keyserver search broken on some Android versions,[],"
Looks like Conscrypt is trying to use our Bouncy Castle fork, which is stripped from some classes by ProGuard.

The following error happens on a release build (not debug) on Nexus 5 with Android 6.0.1:

```
Keyserver search: https://keyserver.ubuntu.com/pks/lookup?op=index&options=mr&search=dominik%20sch%C3%BCrn using Proxy: DIRECT@
Pinning certificate for https://keyserver.ubuntu.com/pks/lookup?op=index&options=mr&search=dominik%20sch%C3%BCrn
Pinning certificate for https://api.keybase.io/_/api/1.0/user/autocomplete.json?q=dominik+sch%C3%BCrn
IOException at HkpKeyserver
javax.net.ssl.SSLHandshakeException: java.security.NoSuchAlgorithmException: CertPathValidator PKIX implementation not found: java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi
at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:328)
at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:299)
at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:268)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:160)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.query(HkpKeyserverClient.java:366)
at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.search(HkpKeyserverClient.java:154)
at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.search(HkpKeyserverClient.java:53)
at org.sufficientlysecure.keychain.keyimport.CloudSearch$1.run(CloudSearch.java:65)
at java.lang.Thread.run(Thread.java:818)
Caused by: java.security.cert.CertificateException: java.security.NoSuchAlgorithmException: CertPathValidator PKIX implementation not found: java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi
at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:262)
at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:225)
at com.android.org.conscrypt.Platform.checkServerTrusted(Platform.java:115)
at com.android.org.conscrypt.OpenSSLSocketImpl.verifyCertificateChain(OpenSSLSocketImpl.java:556)
at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:324)
... 24 more
Caused by: java.security.NoSuchAlgorithmException: CertPathValidator PKIX implementation not found: java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi
at java.security.Provider$Service.newInstance(Provider.java:1075)
at org.apache.harmony.security.fortress.Engine.getInstance(Engine.java:141)
at java.security.cert.CertPathValidator.getInstance(CertPathValidator.java:106)
at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:131)
at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:115)
at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:108)
at com.android.org.conscrypt.TrustManagerFactoryImpl.engineGetTrustManagers(TrustManagerFactoryImpl.java:80)
at javax.net.ssl.TrustManagerFactory.getTrustManagers(TrustManagerFactory.java:219)
at org.sufficientlysecure.keychain.network.TlsCertificatePinning.createTrustManager(TlsCertificatePinning.java:132)
at org.sufficientlysecure.keychain.network.TlsCertificatePinning.pinCertificate(TlsCertificatePinning.java:104)
at org.sufficientlysecure.keychain.network.OkHttpClientFactory.getClientPinnedIfAvailable(OkHttpClientFactory.java:72)
at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.query(HkpKeyserverClient.java:358)
... 4 more
keybase result parsing error
com.textuality.keybase.lib.KeybaseException: Network error attempting Keybase query
at com.textuality.keybase.lib.KeybaseQuery.getFromKeybase(KeybaseQuery.java:82)
at com.textuality.keybase.lib.KeybaseQuery.search(KeybaseQuery.java:51)
at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserverClient.search(KeybaseKeyserverClient.java:57)
at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserverClient.search(KeybaseKeyserverClient.java:33)
at org.sufficientlysecure.keychain.keyimport.CloudSearch$1.run(CloudSearch.java:65)
at java.lang.Thread.run(Thread.java:818)
Caused by: javax.net.ssl.SSLHandshakeException: java.security.NoSuchAlgorithmException: CertPathValidator PKIX implementation not found: java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi
at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:328)
at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:299)
at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:268)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:160)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.sufficientlysecure.keychain.network.OkHttpKeybaseClient.getUrlResponse(OkHttpKeybaseClient.java:46)
at com.textuality.keybase.lib.KeybaseQuery.getFromKeybase(KeybaseQuery.java:64)
... 5 more
Caused by: java.security.cert.CertificateException: java.security.NoSuchAlgorithmException: CertPathValidator PKIX implementation not found: java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi
at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:262)
at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:225)
at com.android.org.conscrypt.Platform.checkServerTrusted(Platform.java:115)
at com.android.org.conscrypt.OpenSSLSocketImpl.verifyCertificateChain(OpenSSLSocketImpl.java:556)
at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:324)
... 26 more
Caused by: java.security.NoSuchAlgorithmException: CertPathValidator PKIX implementation not found: java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi
at java.security.Provider$Service.newInstance(Provider.java:1075)
at org.apache.harmony.security.fortress.Engine.getInstance(Engine.java:141)
at java.security.cert.CertPathValidator.getInstance(CertPathValidator.java:106)
at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:131)
at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:115)
at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:108)
at com.android.org.conscrypt.TrustManagerFactoryImpl.engineGetTrustManagers(TrustManagerFactoryImpl.java:80)
at javax.net.ssl.TrustManagerFactory.getTrustManagers(TrustManagerFactory.java:219)
at org.sufficientlysecure.keychain.network.TlsCertificatePinning.createTrustManager(TlsCertificatePinning.java:132)
at org.sufficientlysecure.keychain.network.TlsCertificatePinning.pinCertificate(TlsCertificatePinning.java:104)
at org.sufficientlysecure.keychain.network.OkHttpClientFactory.getClientPinnedIfAvailable(OkHttpClientFactory.java:72)
at org.sufficientlysecure.keychain.network.OkHttpKeybaseClient.getUrlResponse(OkHttpKeybaseClient.java:39)
... 6 more
```
"
open-keychain/open-keychain,closed,Use Constants.DEBUG instead of BuildConfig.DEBUG,[],"Use Constants.DEBUG instead of BuildConfig.DEBUG to allow debugging of release builds

## Motivation and Context
Debugging a problem caused by ProGuard requires me building a release build but with logging enabled.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,closed,Use keyserver.ubuntu.com as new default,[],"pgp.mit.edu is unreliable again, thus I propose we switch to keyserver.ubuntu.com

## How Has This Been Tested?
* upgrade of previos version tested
* new install tested

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,FR: Adaptive icon,[],"Api 26 introduced adaptive icons where background and foreground are two different images.
https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive.html"
open-keychain/open-keychain,closed,Default delete action should be to delete,[],"Because the default action isn't to delete, I just accidentally revoked my key. With no confirmation after choosing the action. Awesome."
open-keychain/open-keychain,closed,Small typo in French translation,[],"Hi,

there is a small typo in the French translation on the secure wifi transfer screen:

""À utiliser avec vos propres aux appareils seulement !"" should be ""À utiliser avec vos propres appareils seulement !"" (no ""aux"").

Somehow I can't help fix such a trivial thing without completing a 4-page google doc. Can someone do something about this?

Thank you :)"
open-keychain/open-keychain,closed,Feature: Support for WKS/WKD key discovery,[],"[Web Key Directory is a draft](https://datatracker.ietf.org/doc/draft-koch-openpgp-webkey-service/) for a new key discovery scheme (implemented e.g. in new gnupg). It is similar to HKP but instead of querying the keyserver it queries the domain from the UID's e-mail address. The difference is that WKS returns binary data and HKP ASCII-armored.

For example, when looking for key for `Joe.Doe@Example.ORG` the key would be fetched from `https://example.org/.well-known/openpgpkey/hu/iy9q119eutrkn8s1mk4r39qejnbu3n5q`.

Open Keychain could support this in several ways:
  * register as a handler for URLs containing `.well-known/openpgpkey/hu`,
  * when searching e-mails additionally query WKS,

Several services (like kernel.org) already have WKS support, for example Linus' key is at: https://kernel.org/.well-known/openpgpkey/hu/pf113mfnx1f3eb1yiwhsipa91xfc7o4x. Some third party services like posteo.de [support WKS too](https://posteo.de/.well-known/openpgpkey/). WKS is also [supported by Enigmail](https://www.gnupg.org/blog/20170803-web-key-in-enigmail.html).

More details here (in German): https://www.golem.de/news/web-key-service-openpgp-schluessel-ueber-https-verteilen-1609-123194.html

If this is in scope of Open Keychain I could work on a PR."
open-keychain/open-keychain,closed,Cv25519,[],"This PR adds support for cv25519 encryption and decryption. Yay.

The way scalars are used is kind of weird here. This PR is built for interoperability with gnupg, but I feel like it doesn't really do what the spec says. I asked about this on [GnuPG-devel](https://lists.gnupg.org/pipermail/gnupg-devel/2018-February/033437.html), let's wait for that.

Related #2266 and #2178, also possibly interesting for @Keks

## How Has This Been Tested?
Unit tests included, encrypt/decrypt and decryption from gnupg

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,"Spaces in file names are replaced by ""%20""",[],"Spaces in file names are replaced by ""%20"" after encryption/decryption process.
You can see %20 already after you add files for encryption.

Tested on 2 phones:

* Android Version: 5.1.1
* Device Model: Redmi 3
* OpenKeychain Version:4.8 
* From Google Play 

 * Android Version: 6.12.401.4
* Device Model: HTC One-M8
* OpenKeychain Version:4.8 
* From Google Play 
 
"
open-keychain/open-keychain,closed,OpenKeyChain is trying to obtain your current location,[],"Click on create new keys
Warning from phone:
OpenKeyChain is trying to obtain your current location
Allow/Deny

In contacts list: Check sync with OpenKeyChain.
Warnings from phone repeated several times:
OpenKeyChain is trying to obtain your current location.
Allow/Deny
OpenKeyChain is trying to access the camera.
Allow/Deny

Delete or Revoke Key
Warning from phone repeated several times:
OpenKeyChain is trying to obtain your current location.
Allow/Deny
OpenKeyChain is trying to access the camera.
Allow/Deny.

Alcatel A460G
Android 4.4.2
OpenKeyChain 4.8.1
F-Droid


<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* Device Model: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,ECDH (encrpytion) subkey w/25519,[],"Are ECDH encryption subkeys with Curve 25519 usable? I know EdDSA support was added and that uses Curve25519 as well.

* Android Version: Marshmallow
* Device Model: BLU Life One X (2016)
* OpenKeychain Version: 4.8
* From Google Play or F-Droid?: Google Play
 
Key created via GnuPG 2.1.15 and exported unencrypted to test.

Error message is only ""No valid keys.""

Thank you for all the great work, of course."
open-keychain/open-keychain,closed,Fix decrypt with ECDH,[],"<!--- Provide a general summary of your changes in the title above -->
Fix broken ECDH decryption.

## Description
<!--- Describe your changes in detail -->
During the refactoring/creation of the `decryptSessionKeyEcdh` method in the `PsoDecyptTokenOp class` (see commit 139735f0e1c3460cdb66567b1d9431eae0634f50), a `System.arrayCopy` as been changed to `Array.copyOfRange`, but the second parameter has not been adjusted leading to a 2-byte truncated array: in `System.arrayCopy` the second parameter is the length of copied data, while in `Array.copyOfRange` it is the `to` index (not included) so the offset of copied data must be added.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
Fixes ECDH decryption

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
ECDH decryption is working correctly within OpenKeychain (issue #2261 still needs to be fixed).

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Fix SCP11b (problem since merged pull request #2186),[],"<!--- Provide a general summary of your changes in the title above -->
SCP11b secure messaging is not working at all since pull request #2186 is merged.

## Description
<!--- Describe your changes in detail -->
Remove zeroization of the unencrypted command data buffer in SCP11.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
Since the APDU command refactoring, the command data buffer is not systematically copied by the `create` method, so it can be an alias to (real/concrete) data holded by other class instances, so it must not be zeroized.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
SCP11b is completely functional with this modification.

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Forget (remove from memory) privkey password after a while,[],"Hi there

I'm using open-keychain together with the android password store app. It works all well. However one thing I haven't figured out yet is how to make it forget the gpg privkey password after a while.

Currently I boot my cellphone, open password store - I get prompted to enter the gpg password to unlock the encrypted pass files.

Then, the privkey stays unlock until I reboot my phone.

I would wish to have expire the privkey password after a while from memory and be prompted again to submit it.

## Expected Behavior
After a (definable) amount of time, the privkey password should be removed from memory so that the user is forced to re-enter it again.

## Current Behavior
Once the privkey is entered it can access encrypted files until next reboot.

## Your Environment
* Android Version: 7.1.2 (LineageOS)
* Device Model:  Google/Motorola Nexus 6
* OpenKeychain Version: 4.8.1 (48002)
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,open,Crash importing key with OI file manager,"[Label(name=""bug"")]","## Current Behavior
I copied a rsa2048 gpg public key created on 2014-04-27 to my Android phone and tried to import it using ""IMPORT KEY FROM FILE"".  I selected the key using the OI File Manager.  The first time I tap the Go button in OI File Manager, nothing happens.  The second time I tap the Go button, an ""OpenKeychain has stopped"" message is displayed for about 1/2 second and the app crashes.

## Steps to Reproduce (for bugs)
Import this public key file:
```
-----BEGIN PGP PUBLIC KEY BLOCK-----

mQENBFNdmeYBCACezcQOpslfXmUMXPaFMK53lPS14qm5VIuz0+6Byjag/ukhhxZf
P5Gd3+wsKLCzhfwtvzFj8AEtXOqlr502J2RTFawS1IhNZYq+FU5Whkgh1KkS0Jwt
z4R3cVoJVhsUY4x5FVf8o57bZsdmhgEznrbFbgophg4W5P+XB8V7TV7F6LPqDM3w
TKUHaJJSHERpGtkNuK98hMwtZiMOT7Tnb6ppwK2lkkeWRKsGoWnCMNXf1io8Wyvb
FFk2iABUmx3hG2oHkLOhhoDxj2V2WyFgCQPOmCj53JsLg/0tzsDx1+1u1veQJped
OXcwZR7hTi7dDgzS+leWpav0kn9zx/URucpJABEBAAG0LFRvbSBTY2h1dHRlciAo
cGFzcykgPHQuc2NodXR0ZXJAY29tY2FzdC5uZXQ+iQE4BBMBAgAiBQJTXZnmAhsD
BgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRDFOKQ9Z3wDfkjVB/wNUEqildZw
dJZafCvMQPC4FB4BPLNALZKKgcugxjUq0Z47+ZGs467gEvg4ly35tL6HCele8BQ/
HtrgEdpHvbLBs+iB1oXlAhwMUZsl1OIV/+5pXO/dZGKeXqDFqGXJTxRAXQdIR6wA
i7NaZBLoBju53I7dDRpo2wfokbp+djMgz9P6YERXTHT/jeovAO0oMHlgeP+N7kfk
c22qEede3YTW6H4Enqkkd3ZpKC3wxHhRcrUmzL/9ckSj7ocNfv1k1NGD2yd2Fwg2
r9Q/9YoQpAJbcS4p8dDorqLAm1JNyPEqSwHcuNoxJuhYGw+oJ2u6rv7Iq8nWHmdx
JdsuuVc7RH+buQENBFNdmeYBCACbtbVv9zTGeW8FBIjxe5Bte2ETFt6byQ4liBgr
Kj9pR7dwqtj5ncy5f+fFuidj1hQ5w2n5qYa0i+kkUL92/n1YqYl7e1X7lUQa1Z1v
81NIEXVspXekiAVMeGZ2STUgqf3yszUrraqo/+jSXpHjZnvMzJFVv7LC1WG8U4m5
qaCZ2/rgeEMN4/BHiTdgy08PE3JMtjcxGSiov4YKBfVqCd7fqFkqW/clkEMql8U8
3tjBQ1VaP9fGuOdCbPDnRxVqNqMdc2LqaSddbHtEoHpvcGEERUFRS4mCZ87gl4Xh
BWkt9T8V5V45APPSPIs2jBwTLtyuWRFLppoSyhrPPxdZEN5BABEBAAGJAR8EGAEC
AAkFAlNdmeYCGwwACgkQxTikPWd8A37iPgf+K5LocVlm3po5M6Vj8bfeUXtgH8HZ
dQngYe62ZP010c433xutb0bIRJmExOUjcvvNvYzya2iXdQXsedsqsfthkZxWqCdI
vEUoOPsSVJaNMzsG8QNli+k4FTC+lLygEw2MztOJIv1Snz0P8nCiRPlzB2HY1T2R
EgQfv3/UpX1f3RTS9edaNUyLjSnUZ6pBExhOFNTeslXzwMmna5PRRIzhIW2QdOe6
iDqG7K/CAKs1bTqjLTbG3fqLK0gZqYhFseRT6SN6ZkmW2L65F5G+Sk/9pF8bKryu
lgDiqRHkf85Zr4Ob+3jt+4C0dZGND0fOGFC1pj1NiQSMu05npIct8e7f1Q==
=HIX4
-----END PGP PUBLIC KEY BLOCK-----
```

## Your Environment
* Android Version: 7.0
* Device Model: SM-G920V (Samsung Galaxy S6)
* OpenKeychain Version: 4.8.1
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Elliptic curve keypair makes OpenKeychain crash,[],"<!--- Provide a general summary of the issue in the title above -->
A friend and I created a elliptic curve keypair using the brainpoolP512r1 with OpenPGP on Windows.
The keys import fine into OpenKeychain and I also encrypted a file with it. But on decryption OpenKeychain just crashed.
I also get crashes when trying to read and send encrypted emails via K9-Mail.

Those keys work perfectly, however, with Enigmail and iPGMail on iOS.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->

I've created a test-keypair for you, so you can reproduce the crash.

public key:
-----BEGIN PGP PUBLIC KEY BLOCK-----

mJMEWnMFChMJKyQDAwIIAQENBAMEpNItULZWtOIdntsS+lHPzq3gQT90cq3VP93K
EaTg5ayDDXJe0wbZq3piwwqLMaI0S6/3wZ/cZgeckJD4KarZUj853a1kGVCUbVlI
k9rV4AFmQALCVYN3NBuU7w8OBtubcem00omyPyjEaFBgFLBr5r1q/VU3HcvVZmVk
EdeGxjK0DXRlc3RAdGVzdC5vcmeI0AQTEwoAOBYhBHVMXIdbECPn3qyKBbwpyhVw
CIwLBQJacwUKAhsDBQsJCAcCBhUICQoLAgQWAgMBAh4BAheAAAoJELwpyhVwCIwL
DxAB/0G7GDW3DigpnMXv8OXZeyhnc56g9nXi9sfTPx55w/g6K+4TTWiRsYQtvH6v
rQqYtDcXn8ULiOPD108LLHpfiCcCAJ8UMvZFtdN89A1XPXCGdeeRQd82z6qhNXos
jpM6mpg5DhC2Mtxp+LMjWqTJ+xYNLhPSs65VHvNShp3w4Vu1bj64lwRacwUKEgkr
JAMDAggBAQ0EAwQ9panLlYcpfk9+iP8+9bHwaSycD4hbsnriofwNgnSMEZwx7lJc
AE62H+chNe7DSN6QiGU9iIHMJg0P1WonXmKIQXlz7E8yTLvwLajhjunMb85m1s4g
UizrAaeBtvcFP2+UYVxmYHTQgtbQ3W2+TapMiKScmEQd2qufmGgiNz3B7wMBCgmI
uAQYEwoAIBYhBHVMXIdbECPn3qyKBbwpyhVwCIwLBQJacwUKAhsMAAoJELwpyhVw
CIwLSwgB/ROsY5FjRcEwA4CcNjSGgw15zu56NSFUsZTPB5LcXmZUyS6yzlMFQx63
6DRI2WC6dPhihf+uOUHK2YKvi1whPkoCAIr3Iu/7ub/2++qGZToLY/aEvv6P7ct8
bvKVTEjuO5HVbErVwnCDynnQNyOGEN4fEIoBw7O6hIkN2hPt7HZ9E0g=
=TsBO
-----END PGP PUBLIC KEY BLOCK-----

private key (password is 123456):
-----BEGIN PGP PRIVATE KEY BLOCK-----

lQEGBFpzBQoTCSskAwMCCAEBDQQDBKTSLVC2VrTiHZ7bEvpRz86t4EE/dHKt1T/d
yhGk4OWsgw1yXtMG2at6YsMKizGiNEuv98Gf3GYHnJCQ+Cmq2VI/Od2tZBlQlG1Z
SJPa1eABZkACwlWDdzQblO8PDgbbm3HptNKJsj8oxGhQYBSwa+a9av1VNx3L1WZl
ZBHXhsYy/gcDAmugyTThz09uyncMroYzaR88EwhzAXLIy2dRkptzb6W63L9WNjnF
GEdwZAxEmgUqzeFfJmnuZ+mJxNC+FkKufaNBNZwyB+E+q2VJICNjXBFgNVM813r5
DYFk339pyQo4eqnDPtZfToIf+weeNuI0q7QNdGVzdEB0ZXN0Lm9yZ4jQBBMTCgA4
FiEEdUxch1sQI+ferIoFvCnKFXAIjAsFAlpzBQoCGwMFCwkIBwIGFQgJCgsCBBYC
AwECHgECF4AACgkQvCnKFXAIjAsPEAH/QbsYNbcOKCmcxe/w5dl7KGdznqD2deL2
x9M/HnnD+Dor7hNNaJGxhC28fq+tCpi0NxefxQuI48PXTwssel+IJwIAnxQy9kW1
03z0DVc9cIZ155FB3zbPqqE1eiyOkzqamDkOELYy3Gn4syNapMn7Fg0uE9KzrlUe
81KGnfDhW7VuPp0BCgRacwUKEgkrJAMDAggBAQ0EAwQ9panLlYcpfk9+iP8+9bHw
aSycD4hbsnriofwNgnSMEZwx7lJcAE62H+chNe7DSN6QiGU9iIHMJg0P1WonXmKI
QXlz7E8yTLvwLajhjunMb85m1s4gUizrAaeBtvcFP2+UYVxmYHTQgtbQ3W2+TapM
iKScmEQd2qufmGgiNz3B7wMBCgn+BwMCp9Kp9Y/VNDTKl4ciiJ3mm2j/kof4y74r
nv/rlYTrss/9mcoMhlZvn1j1f7ipFSPjhgexHq3JMCssfson2sAUIxTOSerC4fSx
nngSlGEHabHfLFTXc+ym3o5pQI7nIU90I6bSpcTdfrKkk8qXexVliLgEGBMKACAW
IQR1TFyHWxAj596sigW8KcoVcAiMCwUCWnMFCgIbDAAKCRC8KcoVcAiMC0sIAf0T
rGORY0XBMAOAnDY0hoMNec7uejUhVLGUzweS3F5mVMkuss5TBUMet+g0SNlgunT4
YoX/rjlBytmCr4tcIT5KAgCK9yLv+7m/9vvqhmU6C2P2hL7+j+3LfG7ylUxI7juR
1WxK1cJwg8p50DcjhhDeHxCKAcOzuoSJDdoT7ex2fRNI
=+ukg
-----END PGP PRIVATE KEY BLOCK-----

1) Encrypt a file or message in OpenKeychain with this key (should work)
2) Decrypt it 


## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 6.0.1
* Device Model: Sony Xperia Z3 compact D5803
* OpenKeychain Version: 4.8.1 (48002)
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Import Key fails: Mainkey has identical subkey (Totemo software),[],"A public key can not be imported.

Key can be imported by other implementations (APG, Mailvelope, ...)

German Errorlog:
[START] Importiere öffentlichen Schlüsselbund 0xef90cb4583876c37
 [START] Öffentlicher Schlüsselbund 0xef90cb4583876c37 wird in vorschriftsmäßiges Format gebracht
  [DEBUG] Hauptschlüssel wird verarbeitet
  [ERROR] Unterschlüssel 0xef90cb4583876c37 kommt zweimal im Schlüsselbund vor. Schlüsselbund ist fehlerhaft und wird nicht importiert!

## Possible Solution
None known

## Steps to Reproduce (for bugs)
1. Try to import Key
[Thomas Amrhein.asc.txt](https://github.com/open-keychain/open-keychain/files/1677011/Thomas.Amrhein.asc.txt)

* Android Version: 7.1.1
* Device Model: Sony E5823
* OpenKeychain Version: 4.8.1 (48002)
* From Google Play
 
"
open-keychain/open-keychain,closed,Stop requiring dangerous permissions!,[],"The following must be moved into plugins, manually installed by a user if he needs this feature:

https://github.com/open-keychain/open-keychain/blob/2619cb1db38f2b9c21a49e2c928cb48d4bc16c8a/OpenKeychain/src/main/AndroidManifest.xml#L64L71

https://github.com/open-keychain/open-keychain/blob/2619cb1db38f2b9c21a49e2c928cb48d4bc16c8a/OpenKeychain/src/main/AndroidManifest.xml#L83L85
https://github.com/open-keychain/open-keychain/blob/2619cb1db38f2b9c21a49e2c928cb48d4bc16c8a/OpenKeychain/src/main/AndroidManifest.xml#L87L88

https://github.com/open-keychain/open-keychain/blob/2619cb1db38f2b9c21a49e2c928cb48d4bc16c8a/OpenKeychain/src/main/AndroidManifest.xml#L86

"
open-keychain/open-keychain,open,"Provide support/integration for BlueMail decrypt call to ""APG""",[],"## Expected Behavior
The E-Mail App [Bluemail](https://bluemail.me/) provides support for encryption and decryption of E-Mail directly in-App. However, I suspect this is done with a direct Intent call to the fully qualified package of APG itself (which is not supported anymore and of which this App here is a fork). More on this below. The expected behaviour is the one that one can witness when you install an old .apk of APG. The call comes back from APG and the encrypted email is translated directly inside Bluemail

## Current Behavior
The process described above doesn't work with ""only"" OKC installed and there is only an error message telling the user that the request can't be handled inside Bluemail. Currently, the only solution for this is copying the encrypted message, opening OKC and then lettings OKC translate the String in the clipboard

## Possible Solution
To fix this one would need to look into the intent handling of APG, OKC and Bluemail. Then OKC would have to register for the correct intent and provide the functionality (probably simply a string return value?) that Bluemail expects.
I am already in contact with the Bluemail support team but they are reluctant to give technical details. Some analysis of the logcat will be required

## Steps to Reproduce (for bugs)

1. Install [Bluemail App](https://play.google.com/store/apps/details?id=me.bluemail.mail)
2. Set up an email account
3. Send yourself a PGP encrypted email
4. Open the email and press the ""decrypt"" button on the top

## Context
This feature would allow users of Bluemail to have deepy integrated encryption usage and improve the UX of OKC at the same time. There is a knowledge base article [here](https://bluemail.help/send-receive-encrypted-messages/) that simply refers to APG, but there seems to be at least some interest

Now, I don't know whether this has been tried before or if it's even possible. This is my first time trying to contribute to any Github repo so forgive me if I overstep or anything. I could not find any hint that this has been tried/requested before by searching in the repo and the issues here so I hope I'm not creating duplicates. I also do not know if my request is even in the spirit of OKC, the Intents, the OpenPGP API or whatever we'll have to use to implement this. I'm thankful for any advice as I am starting now to look at the logcat and the intents that APG picks up on my phone

## Your Environment
* Android Version: 7.1.2 (but should be reproducible on any that supports Bluemail and OKC)
* Device Model: Moto X Play
* OpenKeychain Version: 4.8.1
* From Google Play or F-Droid?: Play
 
"
open-keychain/open-keychain,closed,Yubi compat,[],This introduces some changes to improve compatibility with weirdly behaving Yubikeys. See #2049 for a discussion.
open-keychain/open-keychain,closed,Gradle 4.4.1 + build sdk 27,[],"Update to gradle 4.4.1, and build sdk 27. This greatly improves build times for me, but might introduce non-obvious incompatibilities.

This PR includes a hack to retain access to PresharedKeyManager. I think this should be fine, since conscrypt will likely not drop the class while apps can build against sdk 25 and use it legitimately. We are also not doing any reflection hacks ourselves, just rely on the duck typing (indeed) in conscrypt to do the right thing for us :)"
open-keychain/open-keychain,closed,Timber,[],"This switches to the [Timber](https://github.com/JakeWharton/timber) library for logging. It's a simple and nice interface that adds string formatting support, removes the direct dependency on android, and allows more flexible handling of log output in the future."
open-keychain/open-keychain,closed,Make predicate names in KeychainProvider consistent and allow export of SSH public keys without associated private key in keyring,[],"## Description
Make predicate names in KeychainProvider consistent and allow export of SSH public keys from keyrings with authentication subkey but without associated private key.

## Motivation and Context
This allows for use cases where the user needs to copy the SSH public key blob of someone else (or of a keyring with secret key material on another device) manually into an app not using the sshauthentication-api (of which the implementation in OpenKeychain also supports export of SSH public keys for keyrings without private key with this PR) or a browser.

## How Has This Been Tested?
Works for me.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)"
open-keychain/open-keychain,closed,Autocrypt 1.0,[],"This PR changes the logic from behavior Autocrypt-circa-July to the shiny new Autocrypt 1.0. These changes should be compatible with current K-9, but I havn't done a lot of testing yet.

Still missing is a way to deal with ""external"" keys. I don't have a good plan for that yet. It might make sense to save a state similar to having received an autocrypt header when we see a signature by some key from an email address (careful with mailing lists though). There are a lot of variations to this concept, and it's actually not terribly important for now to get this 100% right. It does need to handle deduplication of keys though, that's broken right now and needs to be fixed."
open-keychain/open-keychain,closed,Refactor SecurityToken ops,[],"While investigating #2179 and #2049, I looked at how our decryption code worked in SecurityTokenConnection and noticed there were a couple of points I didn't understand and that weren't documented - so I wrote unit tests for them, and refactored until I knew what was going on :)

This PR now does a few things:
- extract particular use cases from SecurityTokenConnection into their own UseCase classes
- add unit tests for decryption on token
- refactor the decryption use case a bit for readability (this is kind of a WIP, not sure if I want to spend more time)
- refactor SecurityTokenConnection, in particular split up and reorder some methods

I also added a test case against that compares what we currently emit against ee8cd3862f65de580ed949bc838628610e22cd98. This is not currently identical, but could be made so if we find out it's more compatible (see #2049). But I read the openpgp card implementation code, and can't figure out any reason why this wouldn't work, so it's a bit of poking in the dark.

All of these are true refactorings - there should be no semantic changes in here."
open-keychain/open-keychain,open,FR: Choose not to contain meta information in signed/encrypted file,[],"For privacy reasons, I think it useful to provide a choice not to contain meta information(like MIME type or modification time) in the signed/encrypted content.

## Expected Behavior
Give a option in settings, or when encrypting/signing, not to contain meta information in the encrypted/signed content.

## Possible Solution
Serve as a setting or an option box in encrypt/sign interface.

## Your Environment
* Android Version: (not relavant, I think)
* OpenKeychain Version: 4.8.1 (48002)
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,"Multiple hardware keys with different subkeys (i.e. Yubikeys, Nitrokeys)","[Label(name=""security token"")]","## Expected Behavior
- Decrypt files encrypted for two different subkeys (`encryption-subkey-A`, `encryption-subkey-B`) which are on two different hardware keys. Be able to decrypt using either key without having to re-add each key to OpenKeychain.

## Current Behavior
- After adding the `hardware-key-A` with `encryption-subkey-A` to OpenKeychain, you cannot use `hardware-key-B` with `encryption-subkey-B` to decrypt 

## Possible Solution
- Allow multiple hardware keys for any given identity so that OpenKeychain does not expect a particular hardware key, but just *any* hardware key that has a valid subkey.

## Steps to Reproduce (for bugs)
1. Encrypt a file with two subkeys. i.e. encrypt the file with `encryption-subkey-A` and `encryption-subkey-B`
2. Add `hardware-key-A` with `encryption-subkey-A` to OpenKeychain.
3. Attempt to use `hardware-key-B` with `encryption-subkey-B` to OpenKeychain
4. Encounter error telling you that the key does not have the required secret.

## Context
Playing around with a few different hardware keys and noticed that I couldn't use any/all of them without having to manually ""add"" each key to OpenKeychain each time I wanted to switch.

## Your Environment
* Android Version: 8.1
* OpenKeychain Version: 4.8.1
* From Google Play or F-Droid?: F-Droid
  

------

EDIT: Related to #2184 ?"
open-keychain/open-keychain,open,Private key from Delta chat backup not importable,[],"I tried to import the keys from Delta chat, the public key was important as expected, the private key was recognized.
Error message was something like: ""no valid keys found in file""

## Expected Behavior
Key should be imported 

## Current Behavior
Private key is not recognized as a valid key

## Possible Solution
No idea

## Steps to Reproduce (for bugs)
1.export keys from Delta chat 
2.select private key file to be imported to openkeychain

## Your Environment
* Android Version: 7.1.2
* OpenKeychain Version: 4.8.1 (48002)

 
"
open-keychain/open-keychain,closed,(Website) Oversec seems to be open source.,[],"I visited the APPS section on the OpenKeychain website, and saw that Oversec is noted as NOT open source.

however, on the Oversec Website is a link to the source (https://github.com/oversecio/oversec_crypto)
which is under Gnu GPL3

please review and correct the information that you host.

Thanks for your work,
---Lue"
open-keychain/open-keychain,closed,WIP: Modify ProGuard rules to automatically shrink object files,[],"## Description, Motivation and Context
Allow ProGuard to automatically shrink object files.

## How Has This Been Tested?
- Testsuite passes.
- Key generation, key use, key update, key backup have been manually tested.
- SSH authentication api has been tested.
- openpgp-api works with K9.
- Manual inspection reveals android.support.v7.view.menu.** to be mostly obfuscated; there are 3 classes not obfuscated. I don't have a Samsung device to test this."
open-keychain/open-keychain,open,Improve onboarding/handling of USB tokens that are already inserted,"[Label(name=""security token"")]","I have a Yubikey 4C with ""touch"" flags enabled that is not working with Android Password Store via Open Keychain on multiple devices.

## Expected Behavior

1. select a password in password store
2. Enter pin (if not entered recently)
3. Insert Yubikey 4c in charger port during ""Hold security token against the nfc marker"" popup
4. Yubikey 4c should begin flashing as it is receives the decryption request
5. Touch flashing key
6. Decrypted password is displayed

## Current Behavior

  * Key never flashes
  * ""Hold security token"" prompt never dissipears
  * Decrypted password is never displayed

## Possible Solution
Ensure the Android intent is accounting for human interface flags enabled on keys like those allowed on the Yubikey 4 series and waits for them accordingly.

## Steps to Reproduce (for bugs)
1.  Enroll decryption subkey in a Yubikey 4C (possibly other yubikeys)
2. Import into openkeychain and password store per usual flows
3. select a password in password store
4. Enter pin (if not entered recently)
5. Insert Yubikey 4c in charger port during ""Hold security token against the nfc marker""

Yubikey never flashes, decryption never happens, and prompt is never dismissed.

## Context

I enable touch requirement on all of my keys. This is vital for my threat profile which is designed to defend against malware on my system. It could keylog my pin but it could not tap my key to issue an ssh/decryption operation without my explicit consent via a touch for that single action.

## Environment

Yubikey 4C has Touch-to-decrypt flag set to permanantly -on- via `ykmn openpgp touch enc fix`

The touch flags can not be turned off once enabled without a factory reset of the key to prevent malware from bypassing it.

I have 3 4096 subkeys installed the respective (S)ign (A)uthenticate and (E)ncrypt slots on this Yubikey 4C.

Master key with (C)ertify permission is offline.

I am able to reproduce this issue on:

* Nexus 6P
  * Android 8.0.0 (Google stock)
  * Open Keychain 4.8.1 (Google Play)
  * Android Password Store 1.2.0.73 (Google Play)
* Pixel XL
  * Android 8.1.0 (Copperhead OS)
  * Open Keychain 4.8 (F-Droid)
  * Password Store 1.2.0.73 (F-Droid)"
open-keychain/open-keychain,closed,Avoid localized text clash in create key start fragment,[],"Disallow multiline in ""USE SECURITY TOKEN"" button title to avoid localized text clash with subtitle.

## Description
Added `android:singleLine=""true""` to the TextView in `create_key_start_fragment.xml`

## Motivation and Context
Fixes #2170 

## Screenshots (if appropriate):
Before:
![screenshot from 2017-12-17 16-12-40](https://user-images.githubusercontent.com/1240012/34080365-28903fdc-e345-11e7-92ad-1b154bf49c9b.png)
After:
![screenshot from 2017-12-17 16-10-59](https://user-images.githubusercontent.com/1240012/34080349-ee175ffc-e344-11e7-9fa7-cb21b71109cb.png)

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,Detect a connected token even when in use by another app,"[Label(name=""security token"")]","If a different app is made as the default for a USB security token, we may enumerate all USB devices to still detect a connected token and give the user feedback that it is in use by another app.

This may be possible (although maybe have a USB button, so NFC users don't have to go through a permission prompt).

> Your application can discover USB devices by either using an intent filter to be notified when the user connects a device or by enumerating USB devices that are already connected. Using an intent filter is useful if you want to be able to have your application automatically detect a desired device. Enumerating connected USB devices is useful if you want to get a list of all connected devices or if your application did not filter for an intent.

https://developer.android.com/guide/topics/connectivity/usb/host.html#working-d

## Expected Behavior
* OpenKeychain notifies user that it is not the default for USB

## Current Behavior
* No information is given to the user
"
open-keychain/open-keychain,closed,Remove experimental word confirm,[],"Removes experimental word confirm feature

## Motivation and Context
Not really used outside of OpenKeychain.
"
open-keychain/open-keychain,open,Defective key after adding an identity ,[],"
## Expected Behavior
Add an identity to an existing key and sign a mail with it.

## Current Behavior
After adding the identity, the key is labeled as 'defective' with the following error ""this key is not configured to sign/send messages!"".

Trying to send a mail with K-9 gives an error too about public key being null.

## Possible Solution
Maybe some configuration is missing.

## Steps to Reproduce (for bugs)

1. Take a valid key
2. Add a new identity 
3. Refresh and upload on keys server

## Context

Trying to add my new email address on my main key.

## Your Environment
* Android Version: 7.1.2
* OpenKeychain Version: 4.8
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,Authentication activity not shown in PasswordStore when OpenKeychain unused for a while,[],"When OpenKeychain (OK) was unused for a while (few hours up to 24h might suffice), the authentication activity for the passphrase input is not shown in Password Store (PS) in order to decypt a password entry. Once OK is started and then I retry in PS, the passphrase input is shown and everything works. 

## Expected Behavior
Passphrase input shown without prior start of OK.

## Current Behavior
If OK was idle/not visible/in background/whatever for a few hours the passphrase input overlay on top of PS is not shown.

## Possible Solution
Maybe something related to Android 8.0 energy management.

## Steps to Reproduce (for bugs)
1. do not open OK for at least a few hours, better multiple days.
2. open PS and try to decrypt a password entry.
3. passphrase input field is not shown.

## Context

## Your Environment
Android 8.0 stock ROM on One Plus 3
Currently Beta ROM, but problem also existed in stable ROM.
Latest OK version from Play Store.
Latest PS version from FDroid."
open-keychain/open-keychain,closed,change my contributions to Apache-2.0 license,[],"@Valodim and @dschuermann asked me to do so, and I said yes.

this originally came from #1683"
open-keychain/open-keychain,closed,Passphrase not removed from cache after changing it?,[],"<!--- Provide a general summary of the issue in the title above -->
I changed my passphrase and was unable to sign anything since the previous one was being cached.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0.0
* OpenKeychain Version: 4.8.1 48002
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,unable to import key from Yubikey neo,[],"<!--- Provide a general summary of the issue in the title above -->
after presenting Yubikey neo for NFC key transfer, app finds no keys. keys do exist on key card and can be seen through gpg --card-edit on the desktop
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
expected behavior: key should import from NFC device
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
no keys are found on the key
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->

<!--- reproduce this bug. Include code to reproduce, if relevant -->

1. add key to Yubikey neo 
2. ask app to add key from NFC
3. swipe key
4. no keys are found
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0.0
* OpenKeychain Version: 4.8.1 (48002)
* From Google Play or F-Droid?: Google play
 
"
open-keychain/open-keychain,open,Gnuk 1.2.7: OpenKeychain keeps waiting while signing,"[Label(name=""security token"")]","I'm using hardware token (FST-01, which is running Gnuk release 1.2.7 - latest release at the moment). 

Current key layout is as follows - 
> pub  rsa4096/(removed)
>      created: 2017-12-06  expires: 2019-12-06  usage: SC  
>      trust: full          validity: full
> sub  rsa4096/(removed)
>      created: 2017-12-06  expires: 2019-12-06  usage: E   
> sub  rsa4096/(removed)
>      created: 2017-12-06  expires: 2019-12-06  usage: A

It has 3 multiple UIDs.
> [  ultimate  ] (1). (removed) <(removed)>
> [  ultimate  ] (2) (removed) <(removed)>
> [  ultimate  ] (3)  (removed) <(removed)>


I'm running latest version of open-keychain at this moment. (Version 4.8(48001) - downloaded from F-droid). I have tested hardware token at GnuPG - signing and encrypting and decrypting works right out of the box.

I now try to sign data using hardware token in this app (open-keychain).

## Expected Behavior
Openkeychain detects hardware token, communicate via USB, token signs data, returns result to Openkeychain.

## Current Behavior
Openkeychain detects hardware token, and communicate via USB.
> 12-07 22:40:10.130 30149  4041 V Keychain: CCID: attempting to power on with voltage AUTO
> 12-07 22:40:10.130 30149  4041 D Keychain: Usb transport connected, took 99ms, ATR=(removed)

Token signs data. LED indicator blinks on token - indicating it's doing something.
Token LED turns off, and Openkeychain keeps showing 'wait' dialog.
![photo_2017-12-07_13-49-45](https://user-images.githubusercontent.com/10909652/33719472-30abe944-dba4-11e7-8595-c53f51ef5b8d.jpg)

After few minutes, it does not continue to next stage.

> 12-07 22:40:18.363 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.364 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.367 30149  4041 D Keychain: USB XferBlock call took 2ms
> 12-07 22:40:18.368 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.369 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.369 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.370 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.371 30149  4041 I chatty  : uid=10182(u0_a182) AsyncTask #13 identical 1 line
> 12-07 22:40:18.371 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.371 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.372 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.372 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.373 30149  4041 I chatty  : uid=10182(u0_a182) AsyncTask #13 identical 1 line
> 12-07 22:40:18.374 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.375 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.376 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.377 30149  4041 D Keychain: USB XferBlock call took 1ms
> 12-07 22:40:18.377 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.378 30149  4041 D Keychain: USB XferBlock call took 0ms
> 12-07 22:40:18.380 30149  4041 D Keychain: USB XferBlock call took 2ms
> ....... (goes on forever)

## Some more information

Token sign counter increases, even Openkeychain does not continue to next step. Token seems to have returned signed value to host.

Signing worked previously using different key layout. All other options were the same. Previous key layout was like this.

> pub  rsa4096/(removed)
>      created: 2016-05-14  expires: 2018-03-06  usage: C   
>      trust: full          validity: full
> The following key was revoked on 2017-12-06 by RSA key (removed)
> sub  rsa2048/(removed)
>      created: 2016-05-14  revoked: 2017-12-06  usage: S   
> The following key was revoked on 2017-12-06 by RSA key (removed) 
> sub  rsa4096/(removed)
>      created: 2016-05-14  revoked: 2017-12-06  usage: E   
> [  full  ] (1). (removed)

I cannot test again using this key - as it is now revoked, and deleted from token.

## Your Environment
I have tested this in two phones (Nexus 5, Nexus 5X), they all behaved identically.

* Android Version: 
  * Nexus 5X: Android 8.0.0 (November security patch, stock firmware)
  * Nexus 5: Android 7.1.2 (Lineage OS nightly, build date Oct 31)
* OpenKeychain Version:  4.8(48001)
* From Google Play or F-Droid?: Tested on both Google Play and F-Droid. Results were same.
 
"
open-keychain/open-keychain,open,Nitrokey Pro - OpenPGP Card 2: key generation without options in RSA keylength,"[Label(name=""security token"")]","At first: thanks for improving key generation on Nitrokey Pro (OpenPGP Card 2)! Works like a charm. Only... I realized that you give users of OpenPGP Card v3 the option to choose longer RSA keys. I would love to get this feature to OpenPGP Card v2 as well!

## Expected + Current Behavior
Keys got created in RSA-2048 automatically, this works fine! But being able choose RSA-3072 or RSA-4096 would be even more awesome :-)

## Possible Solution
Use similar options available at OpenPGP Card v3 but without ECC as this is not supported by Card 2.

## Your Environment
* Android Version: 7.1.2
* OpenKeychain Version: 48001
* From F-Droid 
 
"
open-keychain/open-keychain,open,Nitrokey Pro - OpenPGP Card 3: key generation fails with other algorithms except RSA2048,"[Label(name=""security token"")]","When trying to generate a key other than RSA2048 (that is RSA3072, RSA-4096 and ECC options) the key generation on OpenPGP Card v3 on Nitrokey Pro is failing.

## Expected Behavior
Generate keys on device in other form than RSA2048 as proposed in process.

## Current Behavior
Fails before PIN can typed in, but after accepting everything else.

## Steps to Reproduce (for bugs)
1. put in a factory-reset device with OpenPGP Card v3 or factory-reset it with Open-keychain
2. try to create new keys
3. choose something different than RSA2048

![screenshot](https://user-images.githubusercontent.com/25867995/33718947-76195f88-db5f-11e7-968e-88884e212f6a.png)

## Your Environment
* Android Version: 7.1.2 (LineageOS of Nov 2017)
* OpenKeychain Version:  48001
* From F-Droid
 
"
open-keychain/open-keychain,closed,GnuK EdDSA Crash,"[Label(name=""security token"")]","When plugging in my GnuK with an EdDSA (Ed25519) subkey, openkeychain crashes with ""Unsupported Algorithm ID: 22"" in KeyFormat.java line 70.

## Expected Behavior
GnuK can be used with alread imported public key

## Current Behavior
Crash of open-keychain when GnuK gets plugged in.
Logcat shows an IllegalArgumentException: ""Unsupported Algorithm ID: 22""

## Possible Solution
Add EdDSA to the Algorithm Tag list of spongycastle/bouncycastle and add handling of EdDSA keys in KeyFormat.java

## Steps to Reproduce (for bugs)
Plug in GnuK that contains an Ed25519 subkey

## Your Environment
* Android Version: 7.1.2 (latest LineageOS)
* OpenKeychain Version: 4.8
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Include license texts in-app,[],"This PR includes the required license texts in-app.

## Screenshots (if appropriate):
![screenshot_20171204-092700](https://user-images.githubusercontent.com/321888/33571860-9b097a38-d931-11e7-86d2-06bf987ac36a.png)


## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Import of EdDSA cv25519 key fail,[],"Import by file of secret key generated by OpenPGP fails with ""No valid key found""

Key is generated by gpg 2.2.3 /  libgcrypt 1.8.1

pub   rsa4096 2017-12-04 [C] [expire : 2022-12-03]
      C4A4DE9AB1BBA5AE25E94B55AD77F733167E1D81
uid          [  ultime ] Test User (Do not use) <test@test.invalid>
sub   ed25519 2017-12-04 [S] [expire : 2020-12-03]
sub   cv25519 2017-12-04 [E] [expire : 2020-12-03]

I suspect cv25519 not to be recognized (EdDSA curve 25519 for encipherment).

Attached the test key [test.sec.txt](https://github.com/open-keychain/open-keychain/files/1528498/test.sec.txt)
passphrase : ""test""

Edit : Sorry it duplicates https://github.com/open-keychain/open-keychain/pull/2053#issuecomment-309083702
"
open-keychain/open-keychain,closed,Remove unused AndroidPinning and refactor certificate pinning,[],"Removes the unused AndroidPinning dependency and refactors certificate pinning to work with OkHttp 3.9. The previously used method ``sslSocketFactory(SSLSocketFactory sslSocketFactory)`` is deprecated and ``sslSocketFactory(SSLSocketFactory sslSocketFactory, X509TrustManager trustManager)`` must be used in OkHttp's builder.

## How Has This Been Tested?
I basically followed the docs of these methods for implementation and tested all our keyservers.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,Intents API: Put extra text doesn't work at DECRYPT_TEXT,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Send extra text to new Intent: org.sufficientlysecure.keychain.action.DECRYPT_TEXT.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
When I add extra text using putExtra(""org.sufficientlysecure.keychain.action.EXTRA_TEXT"", ""Encrypted text"") is return answer that: ""No data to decrypt""

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Decrypt message using Intents API.


 
"
open-keychain/open-keychain,closed,Show notification for Clipboard data,[],"## Motivation and Context

Play Store reviews and conversations with users suggest that decrypting data and importing keys from the clipboard is a very common use case. The Android clipboard has some [security problems](https://plus.google.com/+BitcoinWalletApp/posts/dRAPrwhgLgF), which is why we didn't like it much as a workflow so far. However, people do use this regardless, so we should at least try and do our best to work with that.

## Description
This PR adds a listener that monitors clipboard data. If OpenPGP data (encrypted message or keys) are found, a notification is displayed that allows the user to immediately list/import the keys or decrypt the message. 

The haptics of the notification involved a bunch of experimental fiddling around with, and it feels good to me now. I actually quite like the workflow. Still, second opinions welcome.

Some more details:
* clipboard data from OpenKeychain itself is ignored, unless it's a debug build
* the monitor service is bound to screen on / screen off broadcast intents
* notifications vibrate a little bit, which is required to show the notification as heads-up (rather than just in the background)
* after 7 seconds, the notification will be cleared. the assumption is that users will either click them immediately, or don't intend to. this avoids lingering notifications
* the content from the clipboard is immediately copied into a cache file to make sure the stuff we see first is the stuff that we actually import/decrypt
* the decrypt activity has its own task affinity now. This changes task stack behavior in a way that pressing ""back"" in the DecryptActivity willl not bring the user to the key list, but back to the task that launched the decryption.

## How Has This Been Tested?
Manually :)

## Screenshots
![image](https://user-images.githubusercontent.com/27813/33432343-e6534c6a-d5d7-11e7-928c-195c6869ec9a.png)

![image](https://user-images.githubusercontent.com/27813/33432337-e12c9c3c-d5d7-11e7-8078-6eacdd6e808d.png)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Do not re-enable contacts sync if first time wizard is not finished,[],"Hopefully fixes #1996

## Description
If the first time wizard is not finished or properly finished, the contacts sync notification will pop-up again and again because the service keeps re-enabling on application start.

## Motivation and Context
#1996

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Use different approach for whitelisting usb security tokens,[],"The previous approach to usb whitelisting (added in 0920d9757228930ddc44ae802b6a18fb0f4e96a1, removed again in 1f7c7f49d481efd8e59e08b3d23023e2fc92cf75) didn't actually work, since communication errors happened before the check was ever called. This PR adds a similar check, but much earlier in the procedure and in the UsbTransport only.

## How Has This Been Tested?
Not at all, so far :)

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Handle decryption with multiple candidate keys,[],"This PR generalizes the ""required input"" request to allow multiple key candidates. This means in a scenario where a message is encrypted to multiple keys, any one of those keys can be used for decryption, rather than just one.

To do so, the input dialog will attempt to unlock any of the requested keys with the password from the user, and resume the crypto operation using the first one that correctly unlocks.

## How Has This Been Tested?
There is a simple unit test that checks whether the decrypt operation returns the expected result for a message encrypted to multiple available keys. The passphrase input activity has only been manually tested.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,WIP: Improve decryption from clipboard,[],"## Motivation and Context
We receive a significant amount of complaints about decryption from clipboard not working. This happens if the ascii armor is broken in some way, e.g. squeezed whitespace. For parsing keys from clipboard, this was fixed in #2162 and was very well received in review comments.

## Description
Unfortunately, for general messages the hacks from #2162 can't be reused, since these relied on a bunch of fixed bits at the beginning of the base64 encoded text. I used some different hacks to achieve a similar result, picking headers apart. This whole thing is a heuristic, and may break some genuine messages that worked before, but I think it improves our handling of messages.

Missing so far is handling for clearsigned messages. I will probably just handle these as before.

## How Has This Been Tested?
Unit test included

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Encode signature to SSH compatible format in SshAuthenticationService,[],"## Description
Instead of returning the signature in native encoding, encode it according to RFC4253, RFC5656 & draft-ietf-curdle-ssh-ed25519

## How Has This Been Tested?
Tested with RSA, ECDSA & EdDSA. Testsuite finishes successfully.

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,open,"K9 integration with in-line text, ",[],"Hello, 
First of all thank you for your work. 

## Current Behavior
When I open an In-line pgp encrypted message I always get the message ""no valid encrypted Pgp data found"", but when I copy the message to open Keychain paste bin, it is working. 

## Steps to Reproduce (for bugs)
The message has been sent from Thunderbird and the message looks like this:

Empty line
-----BEGIN PGP MESSAGE-----
Charset: utf-8
Version: GnuPG v2
 
Encrypted message
----END PGP MESSAGE-----
Empty line * 2

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.0
* OpenKeychain Version: 4.8-beta1
* From Google Play or F-Droid?: Google Play 
* k9 Version: 5.209

Thank you "
open-keychain/open-keychain,closed,Cosmetic improvements to SshAuthenticationApi,[],
open-keychain/open-keychain,closed,Improve sshauthentication-api documentation,[],See below
open-keychain/open-keychain,closed,password should be used to try to unlock all available secret keys,[],"Right now, if the user has multiple secret keys with different passwords, it can be confusing which password to enter.  For example, if a file is encrypted to more than one of those keys, then it might not be clear which password the user should enter.  Or the user might only have the password to one of those keys, and different users have the other passwords.  There is an fix for this that is easy in terms of UX and not too hard in implementation: use the password to try to unlock all secret keys until it finds a match.

I have already discussed this with @Valodim.  He proposed this idea.  The user experience should be the same for people with any of the passwords. This will work always smoothly as long as users lock OpenKeychain when handing over the device to a user with a different password.

This will work by making OpenKeychain automatically choose the matching secret key based on the password entered.  Basically, OpenKeychain will prompt for the password with the same prompt.  It will then try that password on all of the secret keys until one of them unlocks.

Here's some implementation notes:
```diff
diff --git a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpDecryptVerifyOperation.java b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpDecryptVerifyOperation.java
index f7f31f9..c885554 100644
--- a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpDecryptVerifyOperation.java
+++ b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpDecryptVerifyOperation.java
@@ -577,7 +577,6 @@ public class PgpDecryptVerifyOperation extends BaseOperation<PgpDecryptVerifyInp
         CanonicalizedSecretKey decryptionKey = null;
         CachingDataDecryptorFactory cachedKeyDecryptorFactory = new CachingDataDecryptorFactory(
                 Constants.BOUNCY_CASTLE_PROVIDER_NAME, cryptoInput.getCryptoData());
-        ;
 
         Passphrase passphrase = null;
 
@@ -658,7 +657,7 @@ public class PgpDecryptVerifyOperation extends BaseOperation<PgpDecryptVerifyInp
                             log.add(LogType.MSG_DC_ERROR_NO_KEY, indent + 1);
                             return result.with(new DecryptVerifyResult(DecryptVerifyResult.RESULT_ERROR, log));
                         }
-
+                        // TODO return all matching secret keys
                         // if passphrase was not cached, return here indicating that a passphrase is missing!
                         if (passphrase == null) {
                             log.add(LogType.MSG_DC_PENDING_PASSPHRASE, indent + 1);
@@ -805,7 +804,7 @@ public class PgpDecryptVerifyOperation extends BaseOperation<PgpDecryptVerifyInp
                     ), cryptoInput));
                 }
             }
-
+            // TODO return all matching keys
             try {
                 result.cleartextStream = encryptedDataAsymmetric.getDataStream(decryptorFactory);
             } catch (PGPKeyValidationException | ArrayIndexOutOfBoundsException e) {
diff --git a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/CachedPublicKeyRing.java b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/CachedPublicKeyRing.java
index da2b666..c823e2b 100644
--- a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/CachedPublicKeyRing.java
+++ b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/CachedPublicKeyRing.java
@@ -106,6 +106,7 @@ public class CachedPublicKeyRing extends KeyRing {
     }
 
     public String getPrimaryUserIdWithFallback() throws PgpKeyNotFoundException {
+        // TODO remove me since its the same method as above
         return getPrimaryUserId();
     }
 
diff --git a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/service/input/RequiredInputParcel.java b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/service/input/RequiredInputParcel.java
index 34c7352..ead2029 100644
--- a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/service/input/RequiredInputParcel.java
+++ b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/service/input/RequiredInputParcel.java
@@ -134,6 +134,7 @@ public class RequiredInputParcel implements Parcelable {
 
     public static RequiredInputParcel createRequiredDecryptPassphrase(
             long masterKeyId, long subKeyId) {
+        // TODO throw out subKeyId
         return new RequiredInputParcel(RequiredInputType.PASSPHRASE,
                 null, null, null, masterKeyId, subKeyId);
     }
diff --git a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/PassphraseDialogActivity.java b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/PassphraseDialogActivity.java
index 7ba4f99..1b0f77c 100644
--- a/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/PassphraseDialogActivity.java
+++ b/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/PassphraseDialogActivity.java
@@ -46,7 +46,6 @@ import android.widget.ImageButton;
 import android.widget.TextView;
 import android.widget.Toast;
 import android.widget.ViewAnimator;
-
 import org.openintents.openpgp.util.OpenPgpUtils;
 import org.sufficientlysecure.keychain.Constants;
 import org.sufficientlysecure.keychain.R;
@@ -71,6 +70,8 @@ import org.sufficientlysecure.keychain.util.Log;
 import org.sufficientlysecure.keychain.util.Passphrase;
 import org.sufficientlysecure.keychain.util.Preferences;
 
+import java.util.Arrays;
+
 /**
  * We can not directly create a dialog on the application context.
  * This activity encapsulates a DialogFragment to emulate a dialog.
@@ -452,16 +453,22 @@ public class PassphraseDialogActivity extends FragmentActivity {
                             try {
                                 long timeBeforeOperation = System.currentTimeMillis();
 
+                                CanonicalizedSecretKey unlockedSecretKey = null;
                                 Long subKeyId = mRequiredInput.getSubKeyId();
                                 CanonicalizedSecretKeyRing secretKeyRing =
                                         KeyRepository.create(getContext()).getCanonicalizedSecretKeyRing(
-                                                KeychainContract.KeyRings.buildUnifiedKeyRingsFindBySubkeyUri(subKeyId));
-                                CanonicalizedSecretKey secretKeyToUnlock =
-                                        secretKeyRing.getSecretKey(subKeyId);
-
-                                // this is the operation may take a very long time (100ms to several seconds!)
-                                boolean unlockSucceeded = secretKeyToUnlock.unlock(passphrase);
-
+                                                KeychainContract.KeyRings.buildUnifiedKeyRingsUri());
+                                Log.i(""PassphraseDialog"", ""secretKeyRing "" + secretKeyRing);
+                                Log.i(""PassphraseDialog"", ""secretKeyRing "" + Arrays.toString(secretKeyRing.getUnorderedUserIds().toArray()));
+                                for (CanonicalizedSecretKey secretKeyToUnlock : secretKeyRing.secretKeyIterator()) {
+                                    Log.i(""PassphraseDialog"", ""try unlock with secretKeyToUnlock "" + secretKeyToUnlock);
+                                    // this is the operation may take a very long time (100ms to several seconds!)
+                                    if (secretKeyToUnlock.unlock(passphrase)) {
+                                        unlockedSecretKey = secretKeyToUnlock;
+                                        Log.i(""PassphraseDialog"", ""unlocked with "" + unlockedSecretKey);
+                                        break;
+                                    }
+                                }
                                 // if it didn't take that long, give the user time to appreciate the progress bar
                                 long operationTime = System.currentTimeMillis() - timeBeforeOperation;
                                 if (operationTime < 100) {
@@ -471,8 +478,7 @@ public class PassphraseDialogActivity extends FragmentActivity {
                                         // ignore
                                     }
                                 }
-
-                                return unlockSucceeded ? secretKeyToUnlock : null;
+                                return unlockedSecretKey;
                             } catch (NotFoundException | PgpGeneralException e) {
                                 Toast.makeText(getActivity(), R.string.error_could_not_extract_private_key,
                                         Toast.LENGTH_SHORT).show();

```"
open-keychain/open-keychain,open,Identiv SCR3500 Card Reader Support,"[Label(name=""security token"")]","## Expected Behavior
If I plug in my smart card reader, it should be detected and used for decryption

## Current Behavior
Nothing happens. 

## Possible Solution
Put the card reader on the whitelist

## Steps to Reproduce (for bugs)
1. click on ""You don't have any keys yet -- click here to create or import one""
2. select ""use security token"" (rough translation, interface is in german)
3. plug in cardreader
4. nothing happens 

## Context
i do not want to put the private key on my phone and I am using a gnuPG smartcard on my laptop already, so I'd like to use it on my phone as well. 

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: LineageOS 14.1 (Android 7.1.2)
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: F-Droid
"
open-keychain/open-keychain,closed,Fix error handling in case of an unsupported algorithm parameter in,[],"SshAuthenticationService

## Description
Use the specific error code for invalid algorithm instead of a generic error.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,closed,Fix EdDSA signature generation for authentication & clean up authentication signature generator,[],"## Description
- Fix EdDSA signature generation for AuthenticationOperation by using a custom EdDsaAuthenticationContentSignerBuilder to feed the raw input directly to the signature engine without hashing it first (EdDSA hashes it anyway).
- Remove PGP specific code from PGPAuthenticationSignatureGenerator and rename to AuthenticationSignatureGenerator

## How Has This Been Tested?
Works at least for RSA, ECDSA & DSA. See [pull request for tests](https://github.com/open-keychain/open-keychain/pull/2216).

## Types of changes
- ✅ Bugfix
- ✅ Cleanup"
open-keychain/open-keychain,closed,"Add tests for RSA, EdDSA & DSA keys in AuthenticationOperation",[],"## Description
Add missing tests for RSA, EdDSA & DSA.

## How Has This Been Tested?
Works for RSA & DSA. EdDSA fails, but this is most likely a bug (not in the test, but in the signature generation). 

## Types of changes
- ✅ Bug fix (missing tests)
"
open-keychain/open-keychain,closed,Unable to decrypt messages from Perl Crypt::OpenPGP,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
When I receive PGP encrypted emails generated by Bugzilla (Crypt::OpenPGP) in K9 mail, OpenKeychain should decrypt them normally.

## Current Behavior
The message fails to decrypt without even prompting me for my password. The message I get is:

    Error decrypting email
    No encrypted data with known secret key found in stream!

No extra info is logged to logcat with debugging enabled.

I'm able to decrypt these emails without warning in enigmail, and I'm able to decrypt other emails in K9 Mail.

## Possible Solution
My only guess is from the integrity protection warning from gpg. Decrypting the PGP block in a shell I get:

    gpg: WARNING: message was not integrity protected

## Steps to Reproduce (for bugs)
1. Put your public key in my.key
2. Save the following perl script locally and run it. (extracted from [bugzilla source](https://github.com/bugzilla/extensions-SecureMail/blob/master/Extension.pm))

       use Crypt::OpenPGP::Armour;
       use Crypt::OpenPGP::KeyRing;
       use Crypt::OpenPGP;
       use Email::MIME;
       
       sub _pgp_encrypt {
           my ($pgp, $text) = @_;
       
           my $encrypted = $pgp->encrypt(Data       => $text,
                                         Recipients => ""@"",
                                         Cipher     => 'CAST5',
                                         Armour     => 1);
           if (!defined $encrypted) {
               return 'Error during Encryption: ' . $pgp->errstr;
           }
           return $encrypted;
       }
       
       sub _make_secure {
           my ($email, $key) = @_;
       
           my $pubring = new Crypt::OpenPGP::KeyRing(Data => $key);
           my $pgp = new Crypt::OpenPGP(PubRing => $pubring);
       
           $email->body_set(_pgp_encrypt($pgp, $email->body));
       }
       
       my $email = Email::MIME->create(
           attributes => {
               content_type => 'text/plain',
               charset      => 'UTF-8',
               encoding     => 'quoted-printable',
           },
           body_str => ""hello world""
       );
       
       open(my $fh, ""<"", ""my.pub"")
        or die ""cannot open < my.pub: $!"";
       my $public_key;
       { local $/ = undef; $public_key = <$fh>; }
       close($fh) or die ""$!\n"";
       Crypt::OpenPGP::Armour->unarmour($public_key) or die ""failed to read valid key"";
       
       _make_secure($email, $public_key);
       
       $email->walk_parts(sub {
           my ($part) = @_;
           print $part->body;
       });

3. Paste the output into a plaintext email and decrypt it with K9/OpenKeychain

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2 LineageOS
* K-9 Mail Version: 5.303
* OpenKeychain Version: 4.8-beta1
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Add/modify helper for getting authentication provider information,[],"## Motivation and Context
I'm using these in ConnectBot;while they are rather trivial, they are neccessary in all provider implementations.

## How Has This Been Tested?
Works in ConnectBot.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,open,DecryptActivity should finish() when the passphrase is cleared,[],"
When decrypting a file, OpenKeychain will stay at DecryptActivity even after viewing the document elsewhere.  This is a nice feature since you can go back and see where the file came from.  But that view stays active even when the passphrases have been cleared.  And since the decrypted file contents are written to cache and retained for up to a day, clicking on the file in the list will still show the document, even when no passphrases are cached.

I have a fix coming that deletes all decrypted files from the cache when the the passphrases are cleared from cache.  But I can't for the life of me figure out how to make DecryptActivity `finish()` when the passphrases are cleared.

## Steps to Reproduce (for bugs)

1. open PGP-encrypted PDF
2. type passphrase
3. click on the PDF in the list to view it
4. clear the passphrase cache from the notification
5. go back to OpenKeychain
6. click on the PDF in the list and it will still work, the temp file is still there and `ContentProvider` is still serving it

## Context

This is to provide a secure workflow for viewing PGP-encrypted documents that are never decrypted to disk.

## Your Environment
* Android Version: 8.0 and 7.1.1 
* OpenKeychain Version: master 
* my own builds
 
"
open-keychain/open-keychain,closed,first decrypt-n-view fixes,[],"This is all code that I wrote, and I contribute it to OpenKeychain under an Apache-2.0 license.

These are the first random commits for the work I'm doing on improving the file decryption and integration with viewer apps.  These are a random collection of fixes that I did while doing the work.  Each commit includes more detail in the message.

## Motivation and Context

Start the process of getting the rest of the work merged.  The meat will come after, once its polished, or I could add it to this.

## How Has This Been Tested?

I ran the test suite, and I have done lots of testing while developing on the 7.1.1 and 8.0 emulators, and 7.1.1 Nexus 9 tablet.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Nitrokey Start/Storage Support,[],"* Removes GNUK_UNKNOWN, not used anywhere
* Add support for Nitrokey Start and Storage

## How Has This Been Tested?
Tested with Nitrokey Start and Storage

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Enable multidex for release build,[],"## Description
Due to [Add sshauthentication-api v1 support](https://github.com/open-keychain/open-keychain/commit/2619cb1db38f2b9c21a49e2c928cb48d4bc16c8a) multidex is now needed for release build

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,open,Decrypt from clipboard extremeley temperamental #Oreo,[]," I should preface this with the fact that my Android device is running Copperhead OS, A security focused operating system for android that does not support having google services or google play store etc. Comes preinstalled with f-droid 


in order to get openkeychain on android 8 to decrypt a PGP encrypted message I have to first:
1.**paste it into a text file** (I use totalcmd-edit)
2.**Remove any tags** (left by most clients on line2 after the ----GPG line 
3.**Make sure its spaced out correctly** (fix any funky stuff that looks out of place)
4.**Save the file as a .txt**

then and only then I will be able to import the file into openkeychain and decrypt it. 

TL;DR I have had zero success using the decrypt from clipboard option. And limited success decrypting anything at all. Have tried with imported keys and keys created using default parameters in app with same result.


* Android Version: Android 8.0.0
* OpenKeychain Version: latest on F droid repo
* From Google Play or F-Droid?: Fdroid
 
"
open-keychain/open-keychain,closed,More Gnuk improvements,[],"## Description
* Fix for version check
* Check for life cycle management support and use this to decide if token can be resetted


## Motivation and Context
* Gnuk still not working

## How Has This Been Tested?
* new unit tests
* with all tokens on my table

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)"
open-keychain/open-keychain,open,"Menu Settings | ""Passwords and PINs"" is almost empty",[],"## Expected Behavior
When going to Settings|""Password and PINs"", I would expect to be able to set the remember time.


## Current Behavior
When accessing Settings|""Password and PINs"", the only option that is shown is ""Remember passwords by subkey"", with a little option slider on the right. Nothing else is shown.

As a matter of fact, after unlocking the password, it's always used no matter what I do (e.g. lock the phone). I was used to be asked for the password at any access.

## Possible Solution
No clue.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
* Android Version: 7.0 (EMUI 5.0.1, Huawei P9 lite)
* OpenKeychain Version: 4.7 (47001)
* From Google Play or F-Droid?: from Google Play. Note that installation from F-Droid stopped working, had to remove and reinstall from Google Play.
 
"
open-keychain/open-keychain,closed,Bad performance on Android 8/Copperhead OS,[],"

## Expected Behavior
Unlock key and/or decrypting text (k-9 email) should be much faster. This was the case on this same device & with the same key in the past. Unfortunately I don't know which version of openkeychain this issue started..

## Current Behavior
Unlocking a key takes several minutes (either on import, or if the key has been 'cleared' in the notification). Decrypting text emails now takes several seconds.

## Possible Solution
Is there a way to profile performance? I will try to install older versions of openkeychain to bisect the version where this started to occur.

## Steps to Reproduce (for bugs)
1. Install openkeychain
2. Import key from file
3. Enter passphrase to unlock key
4. App sits at ""unlocking..."" screen for several minutes before it succeeds. Note: this also occurs when unlocking the key after clearing the passphrase from the openkeychain notification.

## Your Environment
* Android Version: 8.0
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: F-Droid
* Device: Nexus 5x
 
"
open-keychain/open-keychain,open,Yubikey 4 touch support,"[Label(name=""enhancement""), Label(name=""security token"")]",Allow sign/decrypt only on touching the yubikey 4 as in https://github.com/a-dma/yubitouch
open-keychain/open-keychain,closed,"Edit/Remove/Update GitHub, Twitter, WebSite — Identities",[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Edit/**Remove** custom identities. Or update/upgrade.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
Nothing.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Upgrade code/feature.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. (Identities) Link to account
2. Proof account
3. Change username account
4. Proof account again
5. Have old/double version identity
6. Can't remove old/double version identity

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I need it feature.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 4.4.2
* OpenKeychain Version: 4.8-beta1 (48000)
* From Google Play or F-Droid?: Google Play"
open-keychain/open-keychain,closed,Gnuk,[],"This is my take on the gnuk branch. I rebased the voltage selection commit from #1914, and only afterwards noticed that the actual GNUK token I have does support voltage auto selection. I tested with that token, and signing and decryption work as expected with no further changes.

I also added a bunch of tests for CcidReceiver, fixing two bugs in the process."
open-keychain/open-keychain,closed,Android Oreo,[],"Thank you for the app, I would give you something back with a PR for upgrade to Andorid O

_**Feel free to decline or close**_

## Description
- PR updates build to Android O

## Motivation and Context
- to be up to date with recent Android version

## How Has This Been Tested?
- test was not possible

## Types of changes
I split it in three PR
1 : update to Android O
2 : I'm not sure if you like, when I update the hashes. Having it in one commit, it's easy to remove
3 : api 26 removes PskKeyManager, I tried to fix, but this doesn't work, obviously org.conscrypt:conscrypt-android:1.0.0.RC11 contains a PskKeyManager, but here it's deprecated interface instead of a class

Here I've to less knowledge and for me it's a blocker. I gave up

## Summary
It doesn't work, see it as a work-in-progress or as an stimulation to go to Android O, or what else.

_**Feel free to decline or close**_"
open-keychain/open-keychain,closed,WIP: GNUK Support (Rebase of #1914),[],see https://github.com/open-keychain/open-keychain/pull/1914
open-keychain/open-keychain,closed,How to backup/restore keypair only with a password by pgp,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
Hello, I have build your source, That's very use full but now i only want to create a RSA keypair, and store it to pgp file with a string password as open-keychain. Which class i can view for do this? Thank you!
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Fix NPE upon dialog dismissal in RemoteDeduplicatePresenter,[],"## Description
Upon dialog dismissal the view is set to null, consequently there is no view when the loader is reset as result of the activity being destroyed.
I found this since I based RemoteSelectAuthenticationKeyPresenter on RemoteDeduplicatePresenter.

## How Has This Been Tested?
Not tested in RemoteDeduplicatePresenter, but works in RemoteSelectAuthenticationKeyPresenter.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,closed,I can not build project with Openpgp-api-lib,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
Hi, i can not run Open Keychain master because the configuration for openpgp-api-lib, i have move this project to Open-keychain-master but it still have error related with openpgp-api-lib project compile. Can you help me about that?
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Change USB filtering,[],"Instead of filtering by the USB xml, we will move to a method of filtering inside OpenKeychain, so we can display helpful messages to the user.

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Remove colorization of fingerprints,[],"The colorization of fingerprints never really provided a lot of benefits as only OpenKeychain implements this method and there exist better methods such as QR Code and SafeSlinger between two OpenKeychain apps.
In addition, the security of such a scheme is not easy to evaluate. An attacker may generate a partial pre-image considering similar looking colors.

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Fix showing of some notifications,[],"## Description
Add missing .show() to some Notify.create() calls.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,Select key prompt pop up,[],"Android constant prompt from open keychain to select key. No known reason. <!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Can this library can restore key and certificate data after re-install application on Android?,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
Hi, I am developing an app to encrypt/decrypt file with public/private key. The problem is in case the user remove app and re-install it, i must create new keypair and this can not restore old keypair for derypt the file before. Have this project can save key after remove application?

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 5.1

"
open-keychain/open-keychain,closed,Accept dash character (-) in GitHub user names when checking for Gist URL,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->
GitHub allows dash / minus characters in usernames (e.g. ""wiktor-k"" or
""open-keychain""). This change extends the regular expression to capture
this missing character.


## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
It allows displaying Github Linked Identity resources that contain dash character.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
It has not been tested at all. I imagine one character change will not break anything but if it's required I can setup the project and build it to see if it really works :)

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Disable unsupported USB tokens,[],"I propose we disable unsupported USB devices for now until we properly support them.

I also worked on the [wiki page about supported tokens](https://github.com/open-keychain/open-keychain/wiki/Security-Tokens) which is now linked from our FAQ page: https://github.com/open-keychain/open-keychain.github.io/commit/53ee5c718af59897dec992ac606e1bd2de932416"
open-keychain/open-keychain,closed,Remember Passphrase dialogue to narrow for drop-down list,[],"When the Remember Passphrase dialogue appears on-screen in portrait orientation on a Mako (Google Nexus 4), the text in the length of time to remember drop-down is cut off. When dropping down the list it’s fine, but when the list is not dropped down, the current entry is truncated. I will note that my name, shown in `Enter password for ‘Christopher Head’`, is long enough that that text occupies two lines in the dialogue box. Perhaps this is why the lower controls are squished? I would include a screenshot but, well, OpenKeychain won’t allow it.

## Context
This was a bit annoying because I didn’t know, for a long time, whether my preferred remembering time was being saved from invocation to invocation, so I kept reselecting it.

## Your Environment
* LineageOS 2017-10-12 based on Android 7.1.2
* OpenKeychain 4.7 from F-Droid
* K-9 Mail 5.208 from F-Droid"
open-keychain/open-keychain,open,IllegalStateException: Fragment PassphraseDialogFragment not attached to Activity,[],"## Current Behavior
This crash could be triggered while asking for a passphrase to encrypt and sign an e-mail being sent in K-9 Mail. The backtrace is:
```
0-16 10:42:40.246 14482 14482 E AndroidRuntime: FATAL EXCEPTION: main
10-16 10:42:40.246 14482 14482 E AndroidRuntime: Process: org.sufficientlysecure.keychain, PID: 14482
10-16 10:42:40.246 14482 14482 E AndroidRuntime: java.lang.IllegalStateException: Fragment PassphraseDialogFragment{14fc079} not attached to Activity
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.support.v4.app.Fragment.getResources(Fragment.java:651)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.support.v4.app.Fragment.getString(Fragment.java:673)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment$6$1.onPostExecute(PassphraseDialogActivity.java:500)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment$6$1.onPostExecute(PassphraseDialogActivity.java:448)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.os.AsyncTask.finish(AsyncTask.java:667)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.os.AsyncTask.-wrap1(AsyncTask.java)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:684)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.os.Handler.dispatchMessage(Handler.java:102)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.os.Looper.loop(Looper.java:154)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at android.app.ActivityThread.main(ActivityThread.java:6186)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at java.lang.reflect.Method.invoke(Native Method)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:889)
10-16 10:42:40.246 14482 14482 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:779)
```

## Steps to Reproduce (for bugs)
I don’t have reliable steps to reproduce. It may involve moving focus between the passphrase field and the drop-down to choose passphrase retention period. Rotating the screen with the passphrase dialogue visible is probably necessary. Tapping outside the dialogue box may be necessary.

## Context
This is extremely rare and hard to trigger. However, it’s somewhat high-impact because, for some reason, after this happens, K-9 mail completely drops the e-mail on the floor: it isn’t sent, the compose activity disappears, and it also isn’t saved to drafts.

## Your Environment
* LineageOS 2017-10-12 based on Android 7.1.2
* OpenKeychain 4.7 from F-Droid
* K-9 Mail 5.208 from F-Droid"
open-keychain/open-keychain,closed,Refactor OpenPGP applet communication code,[],"Another refactoring PR. Clarity, testability, less magic constants, factories, etc etc.

A bunch of things are changed around, this should probably receive some testing before it gets into a stable release."
open-keychain/open-keychain,open,Encrypt on selection didn't work.,[],"<!--- Provide a general summary of the issue in the title above -->
When OpenKeychain opened through Text Selection, press Encrypt button at top-right corner didn't encrypt anything.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
OpenKeychain shall encrypt text and save to clipboard.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
OpenKeychain closed without doing anything.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
No idea, but encrypt through share method do work.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Select some text on device with Android 6.0 or above.
2. Press Encrypt button on popup menu (which has Cut, Copy, Paste and more).
3. OpenKeychain started. Select recipient to encrypt.
4. Press Encrypt button on top-right corner.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
Encrypt something when chatting, writing or whatever without switching between App.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0.0
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: Google Play (Beta channel)"
open-keychain/open-keychain,open,"Check all possible tokens for decryption, if multiple are available","[Label(name=""security token"")]","The APP asks me to provide secondary Yubikey (but the file is encrypted with Primary one and secondary in parallel). I believe it happens because of an ""Anonymous Recipient"" data set.

## Expected Behavior
Expected one is: like in **GPG** with a key **--try-all-secrets**

## Current Behavior
It just asks the ""other"" key. Not the one which was provided.

## Possible Solution
Try to make use of **--try-all-secrets** approach
or List intended recipients (from all keys used in encryption process)

## Steps to Reproduce (for bugs)
1. Encrypt any data to a couple of keys (numerous recipients)
2. All recipient keys have the same EMAIL address 
3. All the recepients have the Private key on a Yubikey NEO NFC keychain.
4. Try to decrypt it with a phone

## Context
Cannot decrypt while we have more than 1 recipient

## Your Environment
* Android Version: Android 7.1.2 on Google Nexus 5X
* OpenKeychain Version: 4.7 (47001)
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,"Add ""Where is my NFC reader?"" button to nfc waiting dialog",[],"This PR adds a ""Where is my NFC reader?"" button to the ""Waiting for NFC"" dialog under ""Manage My Keys"". The button is only shown if we have a position for the nfc reader for the phone model. When clicked, the nfc reader position is shown in a full screen activity (see screenshot).

The overlay is removed on touch, and if an nfc token connects its info is handed through to the calling activity. Yada, yada, it behaves as you would expect.

This is based on data scraped from the nfc keyring hotspot api. I converted their values to relative screen positions, and took the median of all data points ([raw data](https://gist.github.com/Valodim/12c35acbeaffedd4650777de88c9da20)). I'm not sure about their accuracy, we might want to only use values that have a lower bound of data points?

This PR supersedes #2177.

## Screenshots (if appropriate):
![sweetspot screenshot](https://user-images.githubusercontent.com/27813/31367651-0504a9d8-ad79-11e7-937b-1f0280511a58.png)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Usb refactoring,[],"This PR refactors parts of our usb otg support, improving code style, readability and testability (though no tests yet).

It also handles the initial IccPowerOn command differently, by skipping over leading data before the command is sent (see https://github.com/open-keychain/open-keychain/issues/1936#issuecomment-335002988 for details).

This *might* fix #1936"
open-keychain/open-keychain,open,Removed password cache time,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->Its not like bug, maybe you explained it earlier but i didnt find. Any reason it was removed. I would like to clear my pin cache everytime i close screen. 
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 8.0
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Not finding existing keys for decryption,[],"Trying to decrypt a mail, I get the message stating that the key is not available.
But I do have the key in my chain. 

## Expected Behavior
I do have the needed keys, the message should have need decrypted.

## Current Behavior
A message pops up stating that the key is not available
If I encrypt amessage, it is decrypted corectly.
In a former device - Samsung S7 edge I couls decrypt file correctly (with the same set of keys)

## Possible Solution
N/A

## Steps to Reproduce (for bugs)


## Context
This is a showstopper for me!
![smartselectimage_2017-10-01-07-56-50](https://user-images.githubusercontent.com/32583816/31301681-806b9432-ab04-11e7-86a5-f5780f46968d.jpg)
![screenshot_20171001-073918](https://user-images.githubusercontent.com/32583816/31301684-86556b48-ab04-11e7-926b-1f7592d843ee.jpg)



## Your Environment
Device: Samsung Note 8
Android Version: 7.1.1
Latest K9: Version: 5.208
Latest OpenKeychain: 4.7 (47001)
 
"
open-keychain/open-keychain,open,Yubikey Neo with Samsung S5 mini: Failed to chain apdu,"[Label(name=""security token"")]","I go to decrypt a test message and it fails with ""Failed to chain apdu""

## Expected Behavior
The message should be decrypted.

## Current Behavior
Error: Failed to chain apdu

Take away the Security Token now and touch TRY AGAIN.

## Possible Solution
I do not know

## Steps to Reproduce (for bugs)
1. Click my key
2. Encrypt a message (not signed) to myself
3. Go to main screen
4. Encrypt/Decrypt
5. Read from clipboard
6. Hold Yubikey Neo to the back of the phone when requested.

## Context
I am unable to use my key for decrypting messages. All I seem to be able to do is sign.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 6.0.1
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Support for Curve 25519 ECC Keys,[],"**Edit:** As noted in the comments on this issue, it's only Curve 25519 keys that are unsupported at present.

OpenKeychain doesn't appear to have support for the shorter Elliptic Curve keys. Would be be possible to include this at some point?

## Expected Behavior
Private keys utilising ECDSA and ECDH should be able to be imported and used for encryption / decryption.

## Current Behavior
Openkeychain errors out stating No valid keys found in 'file/clipboard'

## Steps to Reproduce (for bugs)
Here are a couple of example private keys that should reproduce the behaviour:

Curve 25519 Key
-----BEGIN PGP PRIVATE KEY BLOCK-----

lFgEWdH5RRYJKwYBBAHaRw8BAQdALipXVLTtZqnQTRgmwCzXi4DJq4QlqNBJzxJ1
V4ybgjAAAQCHol8gGx+dQvFoD4Q4vw6qkQAmR7OQ1LnQpmHRlD12Kw5FtBdFeGFt
cGxlIEN1cnZlIDI1NTE5IEtleYiQBBMWCAA4FiEEBUxaMbaUp9xqZ971/TQrgcbe
H3gFAlnR+UUCGwMFCwkIBwIGFQgJCgsCBBYCAwECHgECF4AACgkQ/TQrgcbeH3hl
KgEAiUNVquTfmxh4yBdXiUonQjexwesnpa5Hd1XodOpKwtoBALKN6vokVU0AkkFn
SVCwVULhi4hDEWxnjj28Vd6ClpIBnF0EWdH5RRIKKwYBBAGXVQEFAQEHQFXFCUxI
iAE5dMowpngJ5/MpOkshMClkARJr9hAx+MZXAwEIBwAA/2++eZjymsROLw0J862h
q3L2HxzMmo2G7oXYKDDknS9YEdOIeAQYFggAIBYhBAVMWjG2lKfcamfe9f00K4HG
3h94BQJZ0flFAhsMAAoJEP00K4HG3h94ws8A+wcetXwcuxkhrTSqCGwr9yxODnam
QpAoryXkw52Z/GDnAP0YTxcvifhay39hXP0KPpiKgYwESsSqBVV+lavZ3Th6Ag==
=Dkph
-----END PGP PRIVATE KEY BLOCK-----

## Your Environment
* Android Version: Nougat
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: Google Play 
 
"
open-keychain/open-keychain,closed,Show heatmap to find out where nfc sensor is,[],"Last time I checked there was no heatmap widget around, but now [there is](https://github.com/HeartlandSoftware/AndroidHeatMap)! I fiddled around with simply displaying the values from the nfc ring sweetspot api in the waiting for token fragment, to see how it goes. Doesn't look great yet I guess, but.. it's something?

Disclaimer: Code is a proof of concept hot mess! Don't merge this! 

Feedback? Better ideas where to place this? There are a bunch of parameters that can be played around with to influence how the heatmap is drawn exactly

I also made a PR for that lib to add rendering on a background thread, 300ms on the UI thread caused ui stutter. Related PR https://github.com/HeartlandSoftware/AndroidHeatMap/pull/3

## Screenshots:
![image](https://user-images.githubusercontent.com/27813/31036492-b59cd06e-a56c-11e7-8bc0-e8e5aa76d35c.png)


## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,"Connected identities is off, but shown in UI anyway",[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

When the slider is off, the feature should be off.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

The setting for ""connected identities"" in advanced/experimental settings is off, but UI item is shown and can be used.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Go to the settings and disable/enable that button.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

Previously I always had it disabled, discovered the functionality in the UI now and tested it (see https://github.com/open-keychain/open-keychain/issues/2175). Then I noticed that the slider in the settings for exactly that thing is actually set to ""off"". Enabled it and I did not see any difference. Disabled it again – no difference.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: LineageOS 14/Android 7.1.2
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: F-Droid"
open-keychain/open-keychain,closed,Cannot connect to Twitter/GitHub for verification,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

Verification/Sending should work.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

Any network connection to Twitter (when verifying tweet) or GitHub (when trying to publish gist, after login) fails.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Go to one of your keys.
2. Try to publish it on Twitter or GitHub.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

Note that I verified that network connections in general work. The flattr button can be loaded and keys can be renewed.

Possibly this is this infamous [Android 7 bug](https://stackoverflow.com/questions/39133437/sslhandshakeexception-handshake-failed-on-android-n-7-0)? Although I am on Android 7.1.2, so it should be fixed there, AFAIK.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: LineageOS 14/Android 7.1.2
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Update support libraries to 25.3.1 and update gradle-witness hashes,[],"## Description
Updated support libraries and ran ./gradlew calculateChecksums

## How Has This Been Tested?
Compiles just fine. Deployment to test device apparently needs multidex."
open-keychain/open-keychain,closed,"Request: return the ""time to live"" setting",[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
I use OpenKeyChain exclusively with Password Store, a [pass](https://www.passwordstore.org/) client for android. Until v4.7 of OpenKeyChain I could configure the app to cache the password for a key until the screen was turned off, then erasing the key automatically. This fits my use case well since my passwords will only be decryptable while I am actively using my phone.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
In version 4.7 the TTL option has been removed, and the used TTL seems to be very long (24 hours)? The cache can be erased manually by clicking a notification, but I'd rather this behaviour occurred automatically as it used to.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.0
* OpenKeychain Version: 4.7
* From Google Play or F-Droid?: Play

If there is a reason for the feature being removed I'm sure I could accept that, it just appears that if a reason exists it hasn't been communicated.
 
"
open-keychain/open-keychain,closed,WIP: SSH Authentication API,[],"## Description
add SSH authentication API and implementation

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)"
open-keychain/open-keychain,closed,Update interop test license to Apache 2.0,[],"Change the license for the interoperability test runner
to Apache 2.0, matching standard Google open source practice.
"
open-keychain/open-keychain,closed,Localized strings fit over each other,[],"In first-time wizard, localized strings fit over each other:
![2](https://user-images.githubusercontent.com/14265316/30880032-f3336b6e-a309-11e7-8d4f-79505c580ea9.png)
"
open-keychain/open-keychain,closed,WIP: Travis: use sys-img-armeabi-v7a-android-25,[],Travis: use sys-img-armeabi-v7a-android-25
open-keychain/open-keychain,closed,NPE in ManageSecurityTokenFragment,[],"Going back and forth using the key creation wizard for security tokens:

```
09-25 10:35:44.755  21364    21364         AndroidRuntime  D  Shutting down VM
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  FATAL EXCEPTION: main
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 21364
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  java.lang.NullPointerException: Attempt to invoke virtual method 'void org.sufficientlysecure.keychain.ui.widget.StatusIndicator.setDisplayedChild(org.sufficientlysecure.keychain.ui.widget.StatusIndicator$Status)' on a null object reference
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.token.ManageSecurityTokenFragment.statusLineError(ManageSecurityTokenFragment.java:221)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.token.ManageSecurityTokenPresenter.continueSearchAfterError(ManageSecurityTokenPresenter.java:92)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.token.ManageSecurityTokenPresenter.access$900(ManageSecurityTokenPresenter.java:44)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.token.ManageSecurityTokenPresenter$2.onLoadFinished(ManageSecurityTokenPresenter.java:254)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.token.ManageSecurityTokenPresenter$2.onLoadFinished(ManageSecurityTokenPresenter.java:204)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.LoaderManagerImpl$LoaderInfo.reportStart(LoaderManager.java:312)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.LoaderManagerImpl.doReportStart(LoaderManager.java:824)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.Fragment.performStart(Fragment.java:2122)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1151)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1295)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.BackStackRecord.popFromBackStack(BackStackRecord.java:1038)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.popBackStackState(FragmentManager.java:1796)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.popBackStackImmediate(FragmentManager.java:626)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.CreateKeyActivity.onSecurityTokenPostExecute(CreateKeyActivity.java:156)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.onPostExecute(BaseSecurityTokenActivity.java:163)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.onPostExecute(BaseSecurityTokenActivity.java:136)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.os.AsyncTask.finish(AsyncTask.java:695)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.os.AsyncTask.-wrap1(Unknown Source:0)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:712)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:105)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:164)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:6541)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
09-25 10:35:44.762  21364    21364         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
```
"
open-keychain/open-keychain,closed,"Ditch ""consolidate"" mechanism",[],"I have been annoyed with the consolidate mechanism for a while now. We used to use it for migrations, but this has always caused problems and we have actually had it disabled for a very long time now. Now a bug was introduced that lost public keys during the consolidate operation (fixed in 318005dbb6318a68bc9728aa35920bf603084b35), and this finally got me to sit down and get rid of it.

Other than migration, the other use of consolidate was to refresh the trust status of all keys after the user imported or deleted some secret key. With 200 keys this took an unacceptably long time (two minutes-ish?) on my Nexus 5X, where interrupting the operation caused it to start over at best.

To replace this, I introduced a table that maintains the key ids of all foreign signatures, for all keys. That way, we can easily list keys that were signed by a particular key, and reimport only those keys that were actually signed by the changed secret keys. The method that does this is much simpler than consolidate.

This is a WIP, it's still missing logging and polish."
open-keychain/open-keychain,closed,Fix EC decipher template,[],"<!--- Provide a general summary of your changes in the title above -->
This commit reflects a [recent commit](https://git.gnupg.org/cgi-bin/gitweb.cgi?p=gnupg.git;a=commitdiff;h=ff7ccd284c327a5b1c89603f157089177dac9d13) in GnuPG to fix incorrect encoding of data sent to a security token for the deciphering using ECC with large parameters (Brainpool 512 or NIST p521).

## Description
<!--- Describe your changes in detail -->
For large EC parameters (Brainpool 512 or NIST p521) the length of TLV encoded data for the decipher command is encoded on two bytes instead of one. It is actually systematically encoded on one byte in the existing code, which is wrong. This wrong encoding scheme, also present in GnuPG, as been [recently fixed](https://git.gnupg.org/cgi-bin/gitweb.cgi?p=gnupg.git;a=commitdiff;h=ff7ccd284c327a5b1c89603f157089177dac9d13).

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
With large EC parameters (Brainpool 512 or NIST p521) the length of TLV encoded data for the decipher command sent to a security token is above 127 bytes so it must be encoded on two bytes and not just one.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
It has been tested with SmartPGP applet (version 1.9).
This change breaks compatibility with previous versions of the SmartPGP applet, and possibly other applet/tokens, but only when a deciphering key on Brainpool 512 or NIST p521 is used.

## Screenshots (if appropriate):

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Breaking change (fix or feature that would cause existing functionality to change)

"
open-keychain/open-keychain,closed,Remove password from setup dialog,[],"Just that.

Part of #2163"
open-keychain/open-keychain,closed,Simplify cache TTL logic,[],"This PR drops the custom TTL times setting. Instead, it leaves four settings (screen off, one hour, one day, until cleared) and remembers the user's last choice.

Motivation: This setting was rather obscure in the first place, removing it simplifies our settings but costs very little flexibility. It also encouraged shorter rather than longer caching times. Remembering the last choice give the user a more straightforward way of stating a preference, and optimistically assumes that they want to store it until cleared."
open-keychain/open-keychain,open,App Lock,[],"## Summary

We would like to move away from individually encrypted keys, towards an app lock mechanism. It's too difficult to create an actual migration, so we will try to break this down into steps that we can deploy incrementally.

## Plan

The ground work for this has been laid in #2066, but it's still missing quite a few things. Based on a few discussions, here is the rough plan we have in mind:

- [ ] Add app lock to settings. This is only available when all keys have no password, which should be the default case for installations that don't already have an encrypted key from a previous version. This is the preferred way to protect keys.
- [ ] Move ""change password"" option from overflow menu in key display into a tab under advanced.
- [ ] Remove ""choose password"" from key creation.
- [ ] Decrypt keys in symmetrically encrypted backup.
- [ ] Ask for key passphrase during import, and decrypt.
- [ ] (low prio) Hide individual passwords for new installations.

## Out of scope (for now)

- For now, we won't encrypt the entire database. The most important reason is that this would break the default workflow in K-9 of showing recipient information.
- A full migration is very difficult, and bugs could result in loss of secret keys. We will need to keep support for individual passphrases"
open-keychain/open-keychain,closed,Reformat public key blocks when loaded from clipboard,[],"This PR adds some logic that attempts to reformat public key blocks read from the clipboard. It checks for patterns in the first twelve bits of encoded key data, so it makes more assumptions than previously about the structure of these blocks.

This allows recovering keys from arbitrary whitespace changes. It also drops ascii armor headers, but we never use those for public keys so that shouldn't be an issue.

Fixes #2161

## How Has This Been Tested?
Unit tests included

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Copy And pasting keys issue,[],I try and copy&paste a pgp key and it never reads the paste from Android. Is there a specific text editor I could use and what exact format does a pgp key and a pgp msg look exactly like?
open-keychain/open-keychain,closed,"remove ""Move to Card"" action from subkey edit ui",[],"This PR removes the ""Move to Card"" feature from the subkey edit UI. This is due to a number of reasons:

- as implemented, the operation invariably led to an NPE. from what I could see in the git history, this has been the case for a long time, so it's unlikely this feature was actually used
- beyond the crash, this would only work if the admin pin was set to 12345678, and we don't have a very good concept yet of what to do if this isn't true (see also #1844). this is not quite trivial since we only have three attempts at wrong pins. consequently, assuming it's the default first will use up one of these attempts, but assuming otherwise (which should rarely be the case) makes the operation as a whole much less user friendly.
- even if this had worked as intended, the feature would have been very difficult to use correctly, and dangerous if used incorrectly, e.g. involuntarily deleting subkeys in openkeychain or overwriting them on the token

If we do want to support this, we should probably spend time on the whiteboard to think it through some more. From my point of view though, setting up subkeys and security tokens in a custom manner seems like a use case we can safely defer to GunPG.

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,open,USB Security Token + PIN has UX issues,"[Label(name=""security token"")]","<!--- Provide a general summary of the issue in the title above -->

I'm trying to use a Yubikey through USB-C OTG for GPG. I'm able to use it, but the UX is broken.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

1. app asks for my key to be inserted
1. once inserted, it asks for my PIN
1. keyboard shows up correctly

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

1. I open [Password Store (beta)](https://play.google.com/store/apps/details?id=com.zeapo.pwdstore)
1. I look for my encrypted file
1. It asks for my PIN before I even connect the key
1. If the key is connected, the keyboard sometimes doesn't show up

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

1. type PIN before inserting the key
1. dismiss dialogs when they show up repeatedly

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->

* Android Version: Android O
* OpenKeychain Version: 4.6 (4600)
* From Google Play or F-Droid?: Google Play
 
Thanks!"
open-keychain/open-keychain,closed,No longer encrypting to the singing key,[],"## Expected Behavior
If you encrypt+sign in OpenKeychain it should also encrypt to signing key.

## Current Behavior
No longer working

## Steps to Reproduce (for bugs)
1. encrypt to someone + sign to your own key directly in OpenKeychain
2. try to decrypt -> fails

## Your Environment

* Android Version: 7.1
* OpenKeychain Version: 4.6
* From Google Play or F-Droid?: Play
 
"
open-keychain/open-keychain,closed,new Security Token import flow,[],"This is a rewrite of our security token import ui flow. It assumes more things than the previous, and uses specialized import mechanisms instead of reusing the key import fragment.

This follows up on the ideas in #1587, and hopefully fixes (or makes easily fixable) the issues mentioned in #1681. It adds support for fetching from the security token uri, has a nice logging capability and hopefully provides an extensible basis for more features in this direction.

## What's missing?

- [x] consider entry points to this ui flow
- [x] remove ""Bind Key"" in view key activity
- [x] finish ""reset security token"" flow
- [x] deal with blank token
- [x] deal with non-trivial key constellations
- [x] test with usb tokens

There is probably more that I'm not thinking of. I'm not sure all of these need to be done, either - I think this really isn't missing much until it's an improvement over what we have, so I would aim for a quick beta release to gather feedback and find bugs early.

## Screenshots:
![output](https://user-images.githubusercontent.com/27813/30061979-d7e3c1cc-9249-11e7-819e-077faac506ed.gif)

## Types of changes
- ✅ New feature"
open-keychain/open-keychain,closed,Linking Github Profile: Failed at Second Step - Post Gist Failed.,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
Linking PGP Identity in Github should be linked easily.

## Current Behavior
*Post Gist - Status Failed.
*My Github profile has been flagged because of this issue.

## Possible Solution
Check for Github API 
<!--- Provide a link to a live example, or an unambiguous set of steps to -->

## Context
Trying to 'Linked my Identity' on Github for PGP Fingerprint Verification.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 6.0.1
* OpenKeychain Version: 4.6
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Cannot enter PIN with letters for Yubikey,[],"Cannot enter PIN with letters for Yubikey.

## Expected Behavior
When prompt for entering a PIN to unlock smartcard, letter keyboard should appear.

## Current Behavior
Only numeric keyboard appears, cannot enter letters.

## Possible Solution
Change to letter keyboard when prompt a PIN.

## Steps to Reproduce (for bugs)
1. Set Yubikey PINs with letters (use `--edit-card` from GnuPG 2 on computers);
2. Insert Yubikey to Android Phone with OTG adapter to import the keys;
3. Draft a message, encrypt with the Yubikey;
4. When prompt for a PIN, cannot enter letters to unlock.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
According to OpenPGP card spec, ""Length of PIN between 6 and 254 characters; not restricted to numbers.""
#1393 states ""(for the record) even though they are called ""pins"", technically any password can be used. we will stick to numeric pins though"", but it should support letters.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 6.0.1
* OpenKeychain Version: 4.5
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Automatic verification of signature,[],"Hi! First thank you for this app! I would like to ask if possible, for the app, ""intercept"" the download link and verify automatically the signature and the integrity of the downloaded files. If I am asking something impossible or stupid, apologies"
open-keychain/open-keychain,open,Decrypt context menu,[],"

## Expected Behavior
As android now supports custom entries for the selected text, you have made it so you can encrypt the selected text, but you haven't made it possible to decrypt it from the context menu. 

## Current Behavior
You can only encrypt from the context menu. 

## Possible Solution
Look for the opening and closing lines of the PGP encrypted message and if they are selected, offer to decrypt it in the context menu. 



## Context
I want to send PGP encrypted/signed emails through Gmail. I am able to encrypt them by selecting the message body, but I am unable to decrypt them, unless I go to share and send it to the app (which is a lot more work than just selecting and tapping ""decrypt"" :) ) 

## Your Environment

* Android Version: 7.0 (EMUI 5.1) 
* OpenKeychain Version: 4.5 (45000)
* From Google Play or F-Droid?: Google play 
 
"
open-keychain/open-keychain,closed,[Question] Why support for elgamal algorithm is dropped?,[],
open-keychain/open-keychain,closed,Please support adding comment field in user ID,[],"When adding user ID to own key, one is only able to add a name and an email address, although PGP also supporta a comment fielx for user IDs. Please support setting the comment field for user IDs. 

OpenKeychain version: 4.5"
open-keychain/open-keychain,closed,Please support adding comment field in user ID,[],"When adding user ID to own key, one is only able to add a name and an email address, although PGP also supporta a comment fielx for user IDs. Please support setting the comment field for user IDs. 

OpenKeyChain"
open-keychain/open-keychain,closed,Feature request: export secret key to ASCII armored file,[],"This feature was available in APG. The ability to export secret key to ASCII armored file is useful to import secret keys created/edited by OpenKeychain, by gpg on linux machines.

Android version: 4.1.2
OpenKeychain version: 4.5"
open-keychain/open-keychain,open,NullPointerException when encrypting mail for sending (K9),[],"I'm running K9 with OpenKeychain for a while now on my Android 5.1 (Wiko Pulp).

Recently I added a new mail account also encrypting mails using OpenKeychain but using a different private key.
This works great. 

But since then the old account cannot encrypt mails anymore. I get a NPE.  
![screenshot](https://i.stack.imgur.com/lCJKP.png)

### Update
meanwhile I deleted all K9 accounts.

After new setup of the old account I still get the NPE.

### Update 2
Meanwhile I created a new key pair. Using this new Key pair I can successfully encrypt mails.

This means That the error may have to do with the format of my old key pair (which was about 20 years old...)

## Expected Behavior
encrypt mail from multiple K9-Accounts using separate private keys.

## Current Behavior
encryption only possible with last K9 account.

## Possible Solution
none

## Steps to Reproduce (for bugs)
1. configure OpenKeychain with two public/private key pairs.
1. create a K9 account and set up encryption
2. create another K9 account and setup encryption with the other private key 
3. send an encrypted mail from the first account.

## Context

## Your Environment
* Android Version: 5.1 (Baseband: MOLY.WR8.W1449.MD.WG.MP.V16.P5, 2015/09/21 17:44)
* OpenKeychain Version: 4.5 (45000)
* From Google Play or F-Droid?:  Google Play
 
"
open-keychain/open-keychain,closed,App crashes while moving subkeys onto a NFC Security Token,[],"<!--- Provide a general summary of the issue in the title above -->
Moving subkeys onto the Fidesmo Card as suggested in [#1838](https://github.com/open-keychain/open-keychain/issues/1838) results in a crash. Afterwards the subkeys are detected on the NFC Security Token, but entering the passphrase results in a error now: ""Wrong PIN""

Creating a new key on the NFC Security Token instead works indeed without any problems. 

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
The app shouldn't crash. 

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
While moving the subkeys the app crashes. Afterwards the keys can't be used correctly anymore


## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Import an existing key (2048 bit RSA keys due to the limitation of the Fidesmo Card: [#1845](https://github.com/open-keychain/open-keychain/issues/1845))
2. Open Key view
3. Go to Menu
4. Go to Advanced
5. Go to the Subkeys tab
6. Press Edit
7. Press on the Subkey
8. Press Move Subkey to Security Token
9. Press Save

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
It's not possible to use a NFC Security Token with an existing key this way. 

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2
* OpenKeychain Version: 4.5 from F-Droid
 
"
open-keychain/open-keychain,closed,Decrypt/Verify writes to disk immediately,[],"As far as I can tell, Decrypt/Verify writes to cache immediately after the user enters the password.

## Expected Behavior
Show verification status, ask user if they want it to be written to disk or decrypt in memory.

## Current Behavior
Decrypts to disk immediately if the password is correct.

## Context
The user might only want to verify the files without writing them to disk. Then decrypt them in a more secure environment.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* OpenKeychain Version: 4.5 from F-Droid
 
"
open-keychain/open-keychain,closed,Ditch Android Beam feature,[],"## Motivation and Context

I got this stacktrace when opening the (huge!) Edward the GPG Bot key:

```
java.lang.RuntimeException: An error occurred while executing doInBackground()
	at android.os.AsyncTask$3.done(AsyncTask.java:325)
	at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
	at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
	at java.util.concurrent.FutureTask.run(FutureTask.java:242)
	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:243)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)
	at java.lang.Thread.run(Thread.java:761)
Caused by: java.lang.IllegalStateException: Couldn't read row 0, col 0 from CursorWindow.  Make sure the Cursor is initialized correctly before accessing data from it.
	at android.database.CursorWindow.nativeGetBlob(Native Method)
	at android.database.CursorWindow.getBlob(CursorWindow.java:403)
	at android.database.AbstractWindowedCursor.getBlob(AbstractWindowedCursor.java:45)
	at android.database.CursorWrapper.getBlob(CursorWrapper.java:147)
	at org.sufficientlysecure.keychain.provider.KeyRepository.getGenericData(KeyRepository.java:129)
	at org.sufficientlysecure.keychain.provider.KeyRepository.getGenericDataOrNull(KeyRepository.java:93)
	at org.sufficientlysecure.keychain.provider.KeyRepository.loadPublicKeyRingData(KeyRepository.java:310)
	at org.sufficientlysecure.keychain.util.NfcHelper$3.doInBackground(NfcHelper.java:133)
	at org.sufficientlysecure.keychain.util.NfcHelper$3.doInBackground(NfcHelper.java:128)
```
this is caused by a key blob that is too large for the database to handle. The underlying problem is fixed since #2066, however this can apparently still occur for old keys. Regardless, it led me to investigate that piece of code.

## Changes

This PR does two things:

* rewrite of the NfcAdapter class. it is now nice™
* delete the NfcAdapter class, removing the Android Beam feature

I first just wanted to handle that error case by disabling the feature instead of crashing (this should happen very rarely anyways). Then I noticed the class was quite old and ugly, so I rewrote it. And when I tested the feature, I found that it simply doesn't work. The ViewKeyActivity where it is used in has an NfcForegroundDispatcher enabled which listens for security tokens, which entirely overrides the registered NDEF tag.

Android beam is an awkward feature that people very rarely use. We never even received a bug report about this being broken. Time to get rid of it.

But hey, at least the class is very nice after the first commit.

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,open,Untranslatable strings,[],"There are some untranslatable strings (version 4.5): ""You don't have any keys yet! Click here to create or import one."" and all FAQ.
![2](https://user-images.githubusercontent.com/14265316/28748520-8cdfba4a-74c2-11e7-8e04-80dabacbd6ef.png)
![1](https://user-images.githubusercontent.com/14265316/28748521-90574d8c-74c2-11e7-9b09-0e36969b4b5a.png)
"
open-keychain/open-keychain,closed,Fix #2080 by adding Javascript ,[],"Enables Javascript for the github OAuth webView.
## Description
Enables Javascript in the webView used by the github OAuth 

## Motivation and Context
This fixes #2080 

## How Has This Been Tested?
Runs OK, single line of code should not effect other areas

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,NPE in HkpKeyserverClient.query,"[Label(name=""bug"")]","From Google Play dev console:

Since bug has been introduced in 4.5:

```
java.lang.NullPointerException: 
  at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.query (HkpKeyserverClient.java:379)
  at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.search (HkpKeyserverClient.java:154)
  at org.sufficientlysecure.keychain.keyimport.HkpKeyserverClient.search (HkpKeyserverClient.java:53)
  at org.sufficientlysecure.keychain.keyimport.CloudSearch$1.run (CloudSearch.java:66)
  at java.lang.Thread.run (Thread.java:762)
```"
open-keychain/open-keychain,open,IllegalArgumentException in TemporaryFileProvider.cleanUp ,"[Label(name=""bug"")]","From Google Play dev console:

This is happening really often (most encountered crash) on Android 6.

```
java.lang.RuntimeException: 
  at android.app.ActivityThread.handleBindApplication (ActivityThread.java:6319)
  at android.app.ActivityThread.access$1800 (ActivityThread.java:221)
  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1860)
  at android.os.Handler.dispatchMessage (Handler.java:102)
  at android.os.Looper.loop (Looper.java:158)
  at android.app.ActivityThread.main (ActivityThread.java:7224)
  at java.lang.reflect.Method.invoke (Native Method)
  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:1230)
  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:1120)

Caused by: java.lang.IllegalArgumentException: 
  at android.content.ContentResolver.delete (ContentResolver.java:1376)
  at org.sufficientlysecure.keychain.provider.TemporaryFileProvider.cleanUp (TemporaryFileProvider.java:115)
  at org.sufficientlysecure.keychain.KeychainApplication.onCreate (KeychainApplication.java:121)
  at android.app.Instrumentation.callApplicationOnCreate (Instrumentation.java:1036)
  at android.app.ActivityThread.handleBindApplication (ActivityThread.java:6316)
```
"
open-keychain/open-keychain,closed,Add andOTP openkeychain supported app,[],"This is a fork of the OTP Authenticator app. It's open sourced, encryption (openkeychain) and lock screen supported awesome app.

[https://github.com/flocke/andOTP](url)

Expected Behavior

You may add this app to [https://www.openkeychain.org/apps/](url)"
open-keychain/open-keychain,closed,[feature] Full support for Curve25519,[],"It would be great if you could add that!
More text in here soon..."
open-keychain/open-keychain,closed,"refactor keyserver class structure, use AutoValue for ParcelableHkpKeyserver",[],"what it says on the tin. these changes were made almost entirely with refactoring operations, plus fixing errors that occured here and there. I changed some namings while I was at it, and extracted the actual querying logic from the parcelable data class.

I also noticed the EmailKeyHelper class isn't used... was this ever in use somewhere?"
open-keychain/open-keychain,closed,The how to link is broken,[],"From 2015: https://www.openkeychain.org/new-howto

The link in there doesn't work: http://www.openkeychain.org/howto
"
open-keychain/open-keychain,closed,Cannot import key from file - can't specify the file,[],"When I select *Import from File*, the *Import Keys* window appears with the text *Nothing to show yet*. From here I am not able to select the file to import. If I click the ""folder"" icon in the top-right corner, I get three options: *Dropbox*, *Gallery*, and *Sound picker*. My file is not on Dropbox and I can't select it using Gallery or Sound picker. The context menu contains only *Read from clipboard*.

## Your Environment
* Android Version: `4.3`
* OpenKeychain Version: `4.4.1 (44100)`
* From Google Play or F-Droid?: Google Play 
 
"
open-keychain/open-keychain,closed,Support for the Ledger Nano S (requires T=0 protocol),"[Label(name=""security token"")]","<!--- Provide a general summary of the issue in the title above -->
The Ledger Nano S is a cryptocurrency wallet that also implement the OpenPGP smart card protocol.

Web page : https://www.ledgerwallet.com/products/12-ledger-nano-s

Some details about the implementation : https://github.com/LedgerHQ/blue-app-openpgp-card

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
Using the Ledger with Open-Keychain should just work (like e.g. with a Yubikey).
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
Nothing happens when I plug it in.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2
* OpenKeychain Version: 4.4.1
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,"Signing and Decryption operations will only use Signing and Encryption keys, respectively, on a Security Token","[Label(name=""security token"")]","<!--- Provide a general summary of the issue in the title above -->

## Expected vs Current Behavior
`gpg` will use either of the signing or authenticating keys on a token that matches the fingerprint required for a given operation (e.g. gpg is perfectly happy signing with the `Authentication Key` and authenticating with the `Signature Key`). 

`OpenKeychain` selects the key to use based on the slot that it's in and the operation it's trying to perform (meaning that it will only decrypt with the `Encryption Key` and only sign with the `Signature Key`). Ideally, it would try that slot first and check the other slot.

<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Possible Solution
The problem appears to be line  215 of [open-keychain/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/SecurityTokenOperationActivity.java](https://github.com/open-keychain/open-keychain/blob/6459deb6b8e772df1f9d24116f0ddc14f0df7108/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/SecurityTokenOperationActivity.java#L215). Replacing `mSecurityTokenHelper.getKeyFingerprint(KeyType.ENCRYPT));` with code to run through both slots would fix it. So would replacing `throw new IOException(getString(R.string.error_wrong_security_token));` on line 218 with code to try the next key.

<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Put a signing subkey in the authentication slot of your token.
2. Try to sign something. `OpenKeychain` will return `Error: this security token doesn't contain required key` for 2

Here's an excerpt from `gpg` that succeeds:

```
$ gpg --card-status 
[...]
Signature key ....: 96F7 BD3B F035 DFE2 1604  2B7F 877C EFD4 771F E455
      created ....: 2017-07-12 16:17:46
Encryption key....: 1361 A355 81B7 11C4 D845  4127 A44E F335 94FC 1C4D
      created ....: 2017-06-23 18:35:38
Authentication key: 4BB8 AD10 4B41 C93C 09CC  C43F BF08 4503 F8D2 0A89
      created ....: 2017-06-23 18:38:45
[...]

$ echo ""test"" | gpg --local-user 4BB8AD104B41C93C09CCC43FBF084503F8D20A89 -s | gpg --verify
gpg: Signature made Thu 13 Jul 2017 04:25:46 AM EDT
gpg:                using RSA key 4BB8AD104B41C93C09CCC43FBF084503F8D20A89
gpg: Good signature from ""Taowa Munene-Tardif <taowa@taowa.ca>"" [ultimate]
gpg:                 aka ""Taowa <taowa@santropolroulant.org>"" [ultimate]
```
As you can see, gpg has no problem using an `Authentication key` for a signing operation. This same signature operations fails on `OpenKeychain1

## Context
I have 2 keys, one with two subkeys, the other has none. One is a ECC key, the other RSA. I have to have the RSA key for debian, as they don't yet support ECC. This key is my `Signature Key`. My ECC key has two subkeys, the signature/authentication one is the `Authentication Key` and the encryption one is the `Encryption Key`. I can't use my main signature key with `OpenKeychain` because it's set as my `Authentication Key`, even though it works in `gpg`.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2
* OpenKeychain Version: 4.4.1 (44100)
* From Google Play or F-Droid?: Google Play (probably, I think)
"
open-keychain/open-keychain,closed,Update SecureMessaging/SCP11b wrt OpenPGP card v3.3,[],"OpenPGP card specification v3.3 introduces a bit for secure messaging using SCP11b. It should now be used to avoid any conflict with the AES secure messaging described in the specification.

## Description
Use the correct secure messaging type to trigger SCP11b establishment.
As the AES key sizes cannot be inferred from the secure messaging type, they are now fixed and determined by the size of the field of the curve used for secure messaging, as recommended in SCP11 specification.

## Motivation and Context
Correction of the existing workaround which can trigger a SCP11b establishment while the token is not supporting it.

## How Has This Been Tested?
Tested on SmartPGP version 1.3 with SCP11b enabled.
Should not impact other cards (the value 03 for the secure messaging type was unused until OpenPGP card v3.3).

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,[feature] App Lock support,[],"Provide support for a pin, pattern and fingerprint app-wide lock.

Despite having no access to private keys, there're still a lot of data an attacker could mine from browsing the public keys list."
open-keychain/open-keychain,closed,Yubikey 4C Support,"[Label(name=""security token"")]","Yubikey 4C not recognized by OpenKeychain at all.

## Expected Behavior
Should be able to import keys and use transparently with k9mail and android-password-store like I can with my Yubikey 4 or Yubikey Neo.

## Current Behavior
Openkeychain pops up and asks for key when expected. Does not recognize that key is inserted or tapped when that key is a 4C

## Possible Solution
Perhaps the usb id of the 4C needs to be added to a whitelist somewhere?
Happy to patch/test myself if someone can point me in the right direction.

## Context
I currently must use both a Yubikey 4 and a Yubikey Neo day to day since the Neo is the only one I can use on my phone without carrying an adapter.

Support for the 4C will allow me to use a single yubikey for all devices and reduce complexity in my life :)

## Your Environment
* Android Version: 7.1.1 on Nexus 6P
* OpenKeychain Version: 4.4
* From Google Play or F-Droid?: F-Droid"
open-keychain/open-keychain,open,PGP Integration in Conversations is not user-friendly / buggy,[],"
## Expected Behavior
(Fresh Start => Conversations is **not** legitimated as **API** app in OpenKeychain and **no** key is unlocked in OpenKeychain). 
1. Open Conversations. 
2. Configure Accounts
3. Long-Press on one account, for which you have a **private** OpenPGP key in OpenKeychain. 
4. Select ""Publish public OpenPGP key""
5. Conversations asks for the permission to access OpenKeychain keys. 
6. OpenKeychain asks for a password to unlock the private key for the public key you requested. This is needed to sign a message for Conversations, proving that you are the owner of both the public and private key. 
7. Conversations publishs the public key

## Current Behaviour: 
1. Open Conversations. 
2. Configure Accounts
3. Long-Press on one account, for which you have a **private** OpenPGP key in OpenKeychain. 
4. Select ""Publish public OpenPGP key""
=> **ERROR**: Could not connect to OpenKeychain

I first had to 
- manually enable the API integration of Conversations inside OpenKeychain by going to apps -> Conversations; selecting the correct key; and saving. 
- **I first had to unlock the applicable private key. There is no possibility to do that from inside Openkeychain**. I had to find an encrypted E-mail which I could decrypt with OpenKeychain. Another possibility would have been, to encrypt and afterwards decrypt a random file (to get the password request dialog). 

**Only then**, Conversations could successfully publish my OpenPGP key. 

## Possible Solutions
- Request API integration permission for Conversations not only from apps section inside Openkeychain, but also from Conversations with a dialogue! 
- **When Conversations requests a public key, also request the password for the key! Show the password unlocking screen!**
- Be **noisy** and **detailed** when failing! 


## Your Environment
* Android Version: 6 (CyanogenMod 13)
* OpenKeychain Version: 4.4.1
* OpenKeychain from F-Droid"
open-keychain/open-keychain,closed,Autocrypt,[],"This is my working branch for [autocrypt](https://autocrypt.org) support in K-9 Mail. It goes a long way towards automating public key management and *actually* making encryption accessible. It still has some rough edges I'm sure, but it's working at this point :)

## How Has This Been Tested?
Not thoroughly, yet. :( I will add unit tests for the provider things when I know I won't be changing them again :)

## Screenshots (if appropriate):

Click [here](http://valodim.stratum0.net/autocrypt_ui_1.gif) for a gif of the interface in action (warning: 1.1MB)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Search user using email instead of keyid,[],"When trying to import contact from K9, can we search the user using email instead of keyid?
I know keyid is passed here:
https://github.com/open-keychain/open-keychain/blob/6459deb6b8e772df1f9d24116f0ddc14f0df7108/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/remote/OpenPgpService.java#L503

When I try signatureResult.getPrimaryUserId(), I get a null value."
open-keychain/open-keychain,closed,Empty directory generation,[],"Every time OpenKeychain starts, it generates an empty directory called ""OpenKeychain"" in ""/sdcard"". It would be better if this directory would be generated only if OpenKeychain actually has to store something on external storage. At the very least, the location of this external directory should be configurable in ""Settings"".

## Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2
* OpenKeychain Version: 4.4.1
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,multiDex needed for building?,[],"I just tried building commit 258ba1fa1fbbfd3c38110dab1076ae2f5c471aee to test the patch in https://github.com/open-keychain/open-keychain/issues/2049.

`./gradlew installGoogleDebug` got me:

```
:OpenKeychain:mergeGoogleDebugAssets
:OpenKeychain:transformClassesWithDexForGoogleDebug
Dex: The number of method references in a .dex file cannot exceed 64K.
Learn how to resolve this issue at https://developer.android.com/tools/building/multidex.html
    UNEXPECTED TOP-LEVEL EXCEPTION:
    com.android.dex.DexIndexOverflowException: method ID not in [0, 0xffff]: 65536
        at com.android.dx.merge.DexMerger$6.updateIndex(DexMerger.java:495)
        at com.android.dx.merge.DexMerger$IdMerger.mergeSorted(DexMerger.java:261)
        at com.android.dx.merge.DexMerger.mergeMethodIds(DexMerger.java:504)
        at com.android.dx.merge.DexMerger.mergeDexes(DexMerger.java:161)
        at com.android.dx.merge.DexMerger.merge(DexMerger.java:188)
        at com.android.dx.command.dexer.Main.mergeLibraryDexBuffers(Main.java:504)
        at com.android.dx.command.dexer.Main.runMonoDex(Main.java:334)
        at com.android.dx.command.dexer.Main.run(Main.java:277)
        at com.android.dx.command.dexer.Main.main(Main.java:245)
        at com.android.dx.command.Main.main(Main.java:106)
```

I followed https://stackoverflow.com/a/36638920/263061 to make the build succeed, using this change:

```diff
diff --git a/OpenKeychain/build.gradle b/OpenKeychain/build.gradle
index 93c8f5c17..af03ea66f 100644
--- a/OpenKeychain/build.gradle
+++ b/OpenKeychain/build.gradle
@@ -172,6 +172,7 @@ android {
         // with android studio single test execution. use it to generate coverage
         // data, but keep the other one otherwis
         // testInstrumentationRunner ""org.sufficientlysecure.keychain.JacocoWorkaroundJUnitRunner""
+        multiDexEnabled true
     }
 
     compileOptions {
```

This builds, but when running it I get:

```
E/AndroidRuntime(27318): java.lang.RuntimeException: Unable to instantiate activity ComponentInfo{org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.MainActivity}: java.lang.ClassNotFoundException: Didn't find class ""org.sufficientlysecure.keychain.ui.MainActivity"" on path: DexPathList[[zip file ""/data/app/org.sufficientlysecure.keychain.debug-1.apk""],nativeLibraryDirectories=[/data/app-lib/org.sufficientlysecure.keychain.debug-1, /vendor/lib, /system/lib]]
E/AndroidRuntime(27318): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2135)
E/AndroidRuntime(27318): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2269)
E/AndroidRuntime(27318): 	at android.app.ActivityThread.access$800(ActivityThread.java:139)
E/AndroidRuntime(27318): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1210)
E/AndroidRuntime(27318): 	at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(27318): 	at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(27318): 	at android.app.ActivityThread.main(ActivityThread.java:5102)
E/AndroidRuntime(27318): 	at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(27318): 	at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(27318): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
E/AndroidRuntime(27318): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
E/AndroidRuntime(27318): 	at dalvik.system.NativeStart.main(Native Method)
E/AndroidRuntime(27318): Caused by: java.lang.ClassNotFoundException: Didn't find class ""org.sufficientlysecure.keychain.ui.MainActivity"" on path: DexPathList[[zip file ""/data/app/org.sufficientlysecure.keychain.debug-1.apk""],nativeLibraryDirectories=[/data/app-lib/org.sufficientlysecure.keychain.debug-1, /vendor/lib, /system/lib]]
E/AndroidRuntime(27318): 	at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)
E/AndroidRuntime(27318): 	at java.lang.ClassLoader.loadClass(ClassLoader.java:497)
E/AndroidRuntime(27318): 	at java.lang.ClassLoader.loadClass(ClassLoader.java:457)
E/AndroidRuntime(27318): 	at android.app.Instrumentation.newActivity(Instrumentation.java:1084)
E/AndroidRuntime(27318): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2126)
E/AndroidRuntime(27318): 	... 11 more
```"
open-keychain/open-keychain,closed,Support 25519 keys,[],"Support for 25519 keys has been added to GnuPG a while ago and people are busy adding it to the OpenPGP RFC. It would be really nice if we could use those keys with OpenKeychain.

## Expected Behavior
You can use ed25519/cv25519 keys just like any other key, covering generation, import/export, signing, encrypting and decrypting.

## Current Behavior
Currently it doesn't work."
open-keychain/open-keychain,closed,fix issue #2049,[],"<!--- Provide a general summary of your changes in the title above -->

Temporary workaround to fix issue #2049.

## Description
<!--- Describe your changes in detail -->
The temporary workaround proposed does not rely only on the ""secure messaging"" bit from the ""extended capabilities"", but also on the ""secure messaging key size"" declared in the ""extended capabilities"" to trigger on SmartPGP secure messaging only if secure messaging is configured for AES (appeared in specification v3) and not DES.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
A regression with OpenPGP applets other than SmartPGP that support secure messaging was introduced by commit a6b7b2bf4ec204cd647db9f0bead53476069d34f, including Yubikey NEO (issue #2049).

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
No test as been done on Yubikey NEO to verify the issue is fixed.

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,Unable to save synchronization setting on identity,[],"When trying to disable the ""Synchronize with the Internet"" setting for an identity, it seems impossible to save the changes. 

In contrast to #1847 and the related closed issues this is a bug report for fixing the current UI checkbox logic, *NOT* a feature change request. 

## Expected Behavior
I should be able to modify the synchronization setting for an existing key.

## Current Behavior
The application does not save my changes, thus making it impossible to disable synchronization.

## Possible Solution
Maybe the UI code is not listening for enable/disable events on the sync option? If we are not supposed to change this setting, please replace the checkbox with a simple text label so people will stop being confused about what it means.

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. Open application
2. Select ""Keys"" view
3. Under ""My Keys"", click any key name to enter the key settings
4. Under ""Identities"", click ""EDIT"" to enter the identity settings
5. Uncheck ""Synchronize with the Internet"" option at top of the screen
6. Click ""SAVE""

Now, go back to the key view and open the key settings again. No changes made to the sync option.

### Log output
- Performing key operation
  - Fetching key to modify (0xacab...)
  - Modifying keyring (0xacab...)
    - Nothing to do!

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I am using a local PGP key for my password manager and would like to disable online sync of this key.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2
* OpenKeychain Version: 4.4.1 (44100)
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,"Locked out of my key after phone reset, even with backup key?",[],"Phone crashed, have a backup of key, passphrase, and the 'backup key' but the key just keeps asking for the backup phrase upon import. 

Without the backup phrase, is there ANY way to recover my key? Or even revoke it? "
open-keychain/open-keychain,open,Changing color of text in the headbar,[],"Hello, could you change the color in the headbar of OpenKeychain window from black to white (like VLC on the screenshot 1)?
![1](https://cloud.githubusercontent.com/assets/24421310/26703480/928899fc-4732-11e7-8dc3-675b385cf885.png)
White color has more contrast with green than black one. Look at the screenshot 2.
![2](https://cloud.githubusercontent.com/assets/24421310/26703489/9a92c23a-4732-11e7-8a9b-94067d388744.png)
Version 4.4.1 from Google Play."
open-keychain/open-keychain,closed,Fix Constants.java Orbot proxy settings,[],"Fix settings to correct default Orbot proxy port and type

## Description
Change Orbot proxy port and type to `9050` and `SOCKS`, respectively.

## Motivation and Context
Does not correctly connect to Orbot because the proxy settings do not match those set by default by Orbot. Failure occurs silently; to the user, appears as if Tor connection is not active.

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Key transfer using TLS-PSK,[],"Inspired by #2083, this PR introduces a ""Secure Device Setup"" mechanism, which allows bi-directional transfer of secret key material that is authenticated via qr code, transferred via local network, and forward-secret via tls-psk.

![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/avGdBSqKMIEkJflJXVWZquUm?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/RtQuWbCAtqDogBSIvKGHHsvP?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/wQdgMZvjlwOTGidAGJgkvStO?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/OKhyuLhBaIPybeXzFJxFBomG?width=800&height=600)

This requires Android 5+, lower versions will display an error screen. The user also gets an error if wifi is disabled, and I tried to gracefully handle other error states."
open-keychain/open-keychain,closed,Delayed keyserver upload (WIP),[],"This should allow offline confirmation of public keys by delaying the upload to keyservers to later points in time by integrating this into the KeyserverSyncAdapterService.

WIP: Do not merge
Based on https://github.com/open-keychain/open-keychain/pull/2110

## Description
<!--- Describe your changes in detail -->

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->


## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,open,Advanced password,[],"This PR is a first step towards an app lock centered security model: It moves the ""change password"" operation from key view overflow menu into a tab under advanced key view. 

I had first considered adding more methods here, but we don't really want to stick with per-key passphrases for much longer anyways :)

## Screenshots:

![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/xmeYICVLxeahPIbRTHHqxLhq?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/kBszMMfIRSJboVgJlEYHUYLz?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/MrxXXTvxwkFfyBXgBtgKmqrr?width=800&height=600)"
open-keychain/open-keychain,open,Tor URL of sks-keyserver empty on new install,[],"Tor URL of sks-keyserver is empty on new install.

Assigned to me."
open-keychain/open-keychain,closed,Accept hashed primary key binding signatures,[],"At least PGP Keyring generates keys in a way that the primary key binding certificate is part of the hashes subpackets, rather than the unhashes ones (which seems unnecessary, but it's not wrong either)

See https://github.com/open-keychain/open-keychain/blob/c917262957e3fd182f77fa32b9de5bd24abbd6e1/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/UncachedKeyRing.java#L950-L950"
open-keychain/open-keychain,closed,Cannot upload/download my key,[],"OpenKeychain refuses to upload or download my key after I edited it to rekove an old identity.  My key ID is EDDDA1B7. I tested the following:

* Edited my key to remove the old identity, then when I attempt to upload the key, the upload fails with an error message to check the internet connection. Although uploading/downloading any other key using the same keyserver is successful.

* Hence I uploaded the updated key using APG, then try to update the key on OpenKeychain from the same key server, this also fails with an error message that keyserver cannot be contacted.

Android version: 4.1.2
OpenKeychain version: 4.4.1 from Fdroid"
open-keychain/open-keychain,closed,Auto value,[],"The *Operation classes take parcelables as both their input/output and output. At the moment, those classes aren't properly immutable (in fact we have several hacks in place that rely on their mutability), don't use builder patterns in most cases, and add a *lot* of boilerplate for implementing the Parcelable interface.

This PR introduces the [AutoValue](https://github.com/google/auto/tree/master/value) library to improve on all three of those points. I didn't yet convert all classes, and this needs more testing because it's not a pure semantics-preserving refactoring, but I got rid of a whoopin' 500 lines of pure boilerplate so far while moving many classes to a proper builder pattern."
open-keychain/open-keychain,closed,Keyserver status,[],"We *almost* save enough information to know whether keys are published on keyservers or not. This is a thing I had in the back of my mind for a while and I felt like writing it down into code today :)

What this basically does is it saves a flag on whether a key has (ever) been seen on keyservers during import, in addition to the last updated status. This information is displayed on a card, but it's currently not actionable.

This is still rough around the edges and I really didn't think the user workflows through. Is this even useful for users? If so, for what? Should there be actions associated with this? What about different keyservers?

Putting this here for discussion, for now :)

## Screenshots (if appropriate):
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/odROAtZVwHnDdmVklitelOap?width=800&height=600)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,set cache notification to low priority,[],"Super small PR: This sets the notification priority for our passphrase cache service to ""min"", which (at least on my phone) hides the notification from the lock screen and also the icon bar on top.

This seems appropriate to me, given we require no attention whatsoever from the user. And from what I can tell, it doesn't mess with foreground status of the service."
open-keychain/open-keychain,closed,security token ecdsa signature encoding,"[Label(name=""discussion""), Label(name=""security token"")]","Ping @af-anssi 

A discussion just came up on irc with @biafra23 and @nmikhailov, and we were a little confused about the signature format for ECDSA.

Looking at [SecurityTokenHelper:700](https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/securitytoken/SecurityTokenHelper.java#L700), OpenKeychain expects the returned data to be the raw values for R and S, and then applies ASN1 encoding. In SmartPGP's [sign method](https://github.com/ANSSI-FR/SmartPGP/blob/master/src/fr/anssi/smartpgp/PGPKey.java#L663), it looks like the asn1 value is decoded and then sent individually?

The openpgp card spec isn't very detailed on what should happen here, can you elaborate what's going on? Thanks in advance!"
open-keychain/open-keychain,open,"Authorize keys via fingerprint error: ""error on unlocking main key""",[],"Hello,

I want to authorize keys to get a green status instead of an orange one. I scan the qr code or I compare the figerprints of corse. But I cannot end the steps. I am using a yubikey. Please can someone advise?
Thanks in advance.

Best regrads
"
open-keychain/open-keychain,open,Improvements to backup key UI,[],"Hi,

I'd like to request a few enhancements to the backup key UI, if possible. These are small things that might enhance usability.

1) When using the backup feature, the code that is generated is always selected from  upper case letters + digits. When re-entering the key, it is case senstive. This is not stated anywhere, and you have to figure this out (its not hard, but it means re-entering the key).  A small message ""case sensitive"" on the code confirmation screen would make things easier.

Alternatley, as the key is always in upper-case, if an attacker knows it was generated using openkeychain, there is no extra gain in space from a wider char set, as the attacker knows it is upper case anyway. So there is no point in allowing the user to enter in mixed case, so simply let the user enter in whatever, and convert to upper case

However, as it is now,  when trying to enter in upper case, the keyboard keeps switching back to lower case - you can only enter a maximum of 4 digits by using the caps-lock feature, as moving between fields resets the case sensitivity of the keyboard (at least on my phone). This brings me to my next sub-query:



2) Because the fields auto-advance (when you enter the 4th letter/digit into each field, then if you make a mistake (25% chance on a random field position), then you cannot delete the last entry (at least on my phone - I cannot place the cursor on the right of the last letter).  My workaround is to select mid-way in the field, delete a few good letters/digits, and then delete the bad ones after, re-entering them.

It would be a lot easier if the field was one large list, which below it broke up the string into sections. For example

Current UI:
abcd - 1234 - abcd - 1234

New UI
User enters into text box : abcd1234abcd1234  
User is shown : ABCD - 1234 - ABCD - 1234 

This would make the auto-advance issue and case sensitivity issues a lot less problematic for an end user. "
open-keychain/open-keychain,open,Crash on key backup,[],"Hi,

I'm using 4.4.1 from fdroid, and I cannot export my key using the backup feature (I'm trying to place it on my desktop).

The backup program runs, and generates a code, this I can then entre and it says it matches. When I try to save it to my device, the file chooser runs, and then the program crashes. The file with the key is created in the selected folder, but is empty (0 Bytes).

PS :  This works fine when using bluetooth to send the key. I've 848MB of storage space left on the device, so its not out of space...


This is on android 5.1.1"
open-keychain/open-keychain,closed,Restore own key with yubikey neo,[],"Hello,
I don't have an openkeychain specific backup. I don't habe an Internet connection. But Plesse tell me how to connect my yubikey neo with openkeychain? I lost the APP data. But all keys in yubikey are OK. And I habe a file which can be imported to restore the public keys. But how to tell my private key is in yubikey and can be used. TIA"
open-keychain/open-keychain,closed,TYPO: singing replaced to signing,[],"Replaced singing with signing

I have replaced the incorrect word 'singing' to 'signing'

## Description
Previously singing was present in the text.  I corrected this to signing.

## Motivation and Context
Correct spelling helps make the program look more professional.  I use this on a regular
basis and I want to help make it better.

## How Has This Been Tested?
Plain-text change that doesn't require recompilation to test.

## Screenshots (if appropriate):

## Types of changes
Text change (non-code) change.
"
open-keychain/open-keychain,closed,Error Message when sending mail,[],"
When sending an encrypted mail (to myself or to others) I see an error messages. Sending with encryption is not possible.

Please see https://github.com/k9mail/k-9/issues/2421 for description and error screenshot

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. select mail recipient that has public key
2. send encrypted mail
3.
4.

## Your Environment
Galaxy S7 Edge with Android 7
Galaxy Tab A with Android (5 or 6)
K9 Mail  5.206
"
open-keychain/open-keychain,open,Fidesmo: not enough width to fit value,"[Label(name=""bug""), Label(name=""google play crash-report"")]","User messages seem to indicate that this happens while trying to move keys to fidesmo card

```
Caused by: java.lang.IllegalArgumentException: not enough width to fit value: 192/128
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtils.writeBits(SecurityTokenUtils.java:230)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtils.createRSAPrivKeyTemplate(SecurityTokenUtils.java:89)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.putKey(SecurityTokenHelper.java:513)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.changeKey(SecurityTokenHelper.java:163)
	at org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity.doSecurityTokenInBackground(SecurityTokenOperationActivity.java:266)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity.handleSecurityToken(BaseSecurityTokenActivity.java:446)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:172)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:162)
	at android.os.AsyncTask$2.call(AsyncTask.java:295)
	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
	... 4 more
```"
open-keychain/open-keychain,open,Import progress should also display the absolute count of keys to import,"[Label(name=""enhancement"")]","## Expected Behavior
The ""Importing keys"" dialog should display the absolute amount of pending keys and keys already imported on the right side.

## Current Behavior
The key import progress dialog displays the progress in percent and `x/100` but not the absolute count of keys already imported and the amount of pending keys.

<img src=""https://cloud.githubusercontent.com/assets/5571650/25582595/5e84e0f0-2e8e-11e7-90eb-46b3c38213d5.jpg"" alt=""current import progress dialog"" width=""500px""/>

## Possible Solution
It should behave like the ""Updating keys"" dialog and display the absolute amount like `61/541` on the right side.

![current updating keys progress dialog](https://cloud.githubusercontent.com/assets/5571650/25582711/edf37b34-2e8e-11e7-8207-fb9e0d07bf57.jpg)

## Steps to Reproduce (for bugs)
1. Import keys from a file. There should be not exactly 100 keys in this file.

## Context
It is not an important bug but it was more consistent.

## Your Environment
* Android Version: Ansroid 7.1.2 (LineageOS)
* OpenKeychain Version: 4.3
* From Google Play or F-Droid?: F-Droid"
open-keychain/open-keychain,closed,Security token: Show bind activity when importing key from file,[],"Fixes #2098.

## How Has This Been Tested?
Tested manually. Steps are the same described in #2098.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)

## Note

Changes were heavily copied from `BaseSecurityTokenActivity.onSecurityTokenPostExecute()`. I don't mind refactoring these changes to avoid the duplication, but I would love to know where to put the common parts.
"
open-keychain/open-keychain,closed,Yubikey: Wizard should allow to bind token after public key is imported (from file),[],"I understood why I thought the import of a Yubikey failed (in #2075): the wizard brings you back to the key list.

## Expected Behavior
After importing the public key (from a file), the wizard should show you the `ViewKeyActivity` which shows the button ""Bind key""

## Current Behavior
At the moment, you're brought back to the main list. This may lead users to think the import went wrong (#2075), because only the public key is imported.

**Workaround:** Go through the ""Manage my keys"" wizard one more time, and `ViewKeyActivity` will be displayed in lieu of step 3.

## Possible Solution
Modify `ImportKeysActivity.handleResult()` to redirect the activity to `ViewKeyActivity` instead of going back to the main list, in this particular case.

## Steps to Reproduce (for bugs)

1. Go to ""Manage my keys"" (or start the first time usage wizard)
1. Tap ""Use security token""
1. Select ""Import key information from file"" and select the file
1. After the key data is display, tap ""import""

Reproduction rate: 10/10

## Context
I thought the usage of a Yubikey was impossible in my case, and it seems I'm [not the only one](https://github.com/open-keychain/open-keychain/issues/1681#issuecomment-280689658) 😃 


## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: LineageOS 14.1, 20170418
* OpenKeychain Version: Debug version built from master, which is currently at 6c2c8b248073864f9750e7a4dbd54c5282aa7dfd. This is also reproducible from the Google Play beta version (still 4.4-beta1)
* From Google Play or F-Droid?: Google Play
* Yubikey Firmware: 4.3.4

"
open-keychain/open-keychain,closed,Security Warnings API,[],"This PR adds support to the api to display extended information about ""insecure"" decryption/verification state. It does so by adding a PendingIntent result that can be called to display a dialog. The client app can also indicate that it supports an ""override"" mechanism, which will show a suppress button in the dialog. If the user does this, the client app will be informed of this right there, and also receive extra in the result if the same security problem is encountered at a later point.

Two things missing still: some security problems have no identity yet, which is no big deal. the bigger issue is the wording and layouts, which I'm sure can be improved in many ways. I'm not quite sure how to approach this :)

## How Has This Been Tested?
Only manually - there's no unit tests yet :(

## Screenshots
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/kUFMweAMLhaRcYAWwrJbyelM?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/ICkoEcppcnDkVFlfTVcNnYYi?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/kCTSDXqiBJfpXlQpGcgfhIBD?width=800&height=600)
![](https://matrix.stratum0.org/_matrix/media/v1/thumbnail/stratum0.org/pZUVNtukaRGkbrlPzoVVuTYh?width=800&height=600)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,"Error ""Encountered an error reading input data"" when decrypting files created by gpg4win",[],"## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
I first reported this issue as a comment on issue #1687. @dschuermann suggested I opened a separate issue.
The issue is as follows:
I encrypt a file on Windows, using gpg4win. I've tried both with text files and binary files, and I see the same behavior: when I decrypt with OpenKeychain on Android, the decryption phase works fine, and ends with ""Unknown filename (touch to open)"". But when I touch to go ahead, I get an Android popup saying ""Decrypt with OpenKeychain"" popup. This seems to invoke OpenKeychain on the decrypted file, and that fails with an error ""Encountered an error reading input data"".
I'm attaching 4 screenshots. Two of them are the popups, and the other two are the logs from the two invocations to OpenKeychaing (the original and the nested one)
[drive-download-20170429T142514Z-001.zip](https://github.com/open-keychain/open-keychain/files/966188/drive-download-20170429T142514Z-001.zip)


<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
The decryption of any file encrypted with gpg4win, results in a nested invocation of OpenKeychain from within OpenKeychain. The top level invocation succeeds, but the nested one fails with ""Encountered an error reading input data"". As a result I can't see or save the decrypted file.
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
It seems to me that after proceeding from ""Unknown filename (touch to open)"", OpenKeychain is calling some Android action that triggers the nested invocation. Maybe it's trying to save the file using "".asc"" or "".pgp"" extension?
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
Hopefully the attached screenshots help. Let me know if I can provide anything else.
If you provide a key, I could encrypt a file for you using gpg4win, so that you can reproduce.
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
I'm simply trying to keep encrypted files in Google drive that I can decrypt on my phone.
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
6.0.1
* OpenKeychain Version: 
4.3
* From Google Play or F-Droid?: 
Google Play
 
"
open-keychain/open-keychain,closed,Stop service when passphrase is cleared,"[Label(name=""bug"")]","The passphrase caching system service should be exited when the passphrase is cleared to free up system resources.

## Expected Behavior
When passphrase is manually removed from cache or expires automatically, the passphrase caching android system service should be stopped.

## Current Behavior
Services continues running forever.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.1.2
* OpenKeychain Version: 4.3
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,New SafeSlinger instance stopped working: Error 500,[],tracked upstream: https://github.com/SafeSlingerProject/SafeSlinger-AppEngine/issues/41
open-keychain/open-keychain,closed,Key Status Card,[],"This is a follow-up to #1450. It adds a ""key status"" card to key view, that displays a summary of key health. I think it came together rather nicely.

I'm fairly happy with the summary info at this point, and if there are problems with the primary key (revoked,expired, insecure, ...) then subkey state is never displayed. The per-subkey state could use some more work, and there is no distinction yet between the user's own keys or other keys.

One more thing we should also rethink is the status string up in the toolbar, which is now redundant information (see screenshots).

## Screenshots:
![](https://matrix.org/_matrix/media/v1/download/stratum0.org/wLmWQuNwmAFPzFyYiZLHPGGK)
![](https://matrix.org/_matrix/media/v1/download/stratum0.org/CprFAsigqXEDyEHUXBHfaFaz)
![](https://matrix.org/_matrix/media/v1/download/stratum0.org/hApdMIzxLpMDbHYXrZLpqjTy)

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Remove accounts api,[],"Remove the accounts api, which has been deprecated since api version 7 from march 2015 (see https://github.com/open-keychain/openpgp-api/commit/4b6bc5a956dc3268ca9f50e0171f10894fd6428f)

I prepared deletion of the table from the database, but it's not actually deleted right now. We can still do that in the version after the next, to make sure we don't lose data before we are sure we won't need it anymore.

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Revocation fixes,[],"Opening as an issue to not forget it for the next release.

* fix comment why NO_REASON is used (GnuPG does the same thing)
* drop the critical bit of the subpacket"
open-keychain/open-keychain,closed,"Additional information regarding ""Insecure key must not be used anymore!""",[],"I imported a secret key and received the above message.

## Expected Behavior
I would like to know why OKC considers it insecure.
## Current Behavior
Am just told that it is insecure but it is unclear which are the offending parameters
## Your Environment
* Android Version: 7.1.2
* OpenKeychain Version: 4.2.4
* From Google Play or F-Droid?: G 
 
"
open-keychain/open-keychain,closed,Symantec PGP desktop: Key encoding unspecified,[],"I was using Symantec PGP desktop to compare keys hosted in their keyserver and found that the ""Encoding"" field on their keys showed ""PGP/MIME"" while my keys showed ""Unspecified""

Is there a setting that I am missing?"
open-keychain/open-keychain,closed,Use KeychainExternalProvider for resolving encryption keys in api,[],"This PR unifies the way key lookup (user id -> key id) is done. This affects primarily OpenPgpServiceKeyIdExtractor, which previously had its own logic, but now queries the external provider for key ids instead.

This PR *also* introduces EXTRA_DRY_RUN, which causes a SIGN_ENCRYPT operation to abort once all input parameters are determined, and returns a status of keys that would be used in the process. This change is quite simple and isolated in a commit of its own.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Handle crcrlf,[],"So gpg4usb (and possibly gpg4win, will check with those guys when I have time) generates ascii armor files with CRCRLF line endings. Those confuse our ArmoredInputStream :(

See https://github.com/gpg4usb/gpg4usb/issues/25

This PR adds a test case, and a fix.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Not able to search on custom keyserver,[],"I am trying to search for keys on my custom sks keyserver, but everytime the result comes as failed.

I am able to upload my key to same server though!

What am I missing?"
open-keychain/open-keychain,closed,Show either key(s) or create if none exist,[],"More of a how to then an issue. I was playing around with K9 and Openkeychain, and noticed that when select key from cryptography settings of K9, I am given 3 options (i.e. if I only have 1 masterkey) - Choose none, choose the master key, choose to create one.

What if I want to enforce openkeychain and give the user the option to only select the master key, create one if none exist and disable the none altogether?  how would i do that

Apologies in advance for the question as I am very new to this."
open-keychain/open-keychain,closed,Repopulate Key list ,[],"We were using an older version of openkeychain (I think 3.7). After updating to the latest (i.e. 4.2.4) the name and email of keys have disappeared and are replaced by ""no name"". Is there a way I can bring the names back without deleting and readding the keys?
![screenshot_20170324-114055](https://cloud.githubusercontent.com/assets/22820969/24309004/5ccb28ca-1087-11e7-811f-2873e001b8d0.png)
"
open-keychain/open-keychain,closed,Secure private key transfer,[],"## Description

Private keys can be imported via a new actionbar item in the import keys fragment and exported via a new button in the view key fragment. The key is transferred over a wlan network. The connection between both devices can be established by scanning a QR Code or by entering the ip address and port number of the second device manually. Using the SecureDataSocket library (https://github.com/MrJabo/SecureDataSocket) guarantees a secure transmission of the private key. The private key can also be exchanged with a computer that has installed Kelivery (https://github.com/svenklaus/keylivery). This feature is available for devices with Android version Kitkat or higher. Older versions cannot be used with the SecureDataSocket library.

SecureDataSocket uses a commitment scheme based on hash commitments (http://crypto.cs.mcgill.ca/~crepeau/COMP647/2007/TOPIC07/Halevi-Micali.pdf) and SAS (https://www.iacr.org/archive/crypto2005/36210303/36210303.pdf). After the key exchange succeeded the private key will be send encrypted with AES-GCM 128 bit (based on diffie hellman) to the other device.

## Motivation and Context
 
 Many users need to transfer their private key from their computer to open-keychain. This feature simplifies this process. Moreover, the keys can also be transferred to other android devices such as a tablet.

## Screenshots

Import a key via QR Code:

![qr](https://cloud.githubusercontent.com/assets/7397157/24211903/c5398920-0f2d-11e7-93e4-c280f9a28f02.jpg)

Export a key (3 screenshots on left side) and import on another device (3 screenshots on the right side) without QR Code:

![manual](https://cloud.githubusercontent.com/assets/7397157/24212022/36f4afd6-0f2e-11e7-97a5-d7daa80b6d11.jpg)


## Types of changes
✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,Cannot change PIN for Security Token,"[Label(name=""security token"")]","I am trying to change the password from my private key.

## Expected Behavior
The password been changed.

## Current Behavior
[START] Performing key operation
 [DEBUG] Fetching key to modify (xxxx)
    [ERROR] Fatal error decrypting master key! This is likely a programming error, please file a bug report!

## Steps to Reproduce (for bugs)
1. Open your key
2. Go to menu(3 dots)
3. Press Change Password
4. Fill with the new password.

## Context
I was trying to import my private key to use with GnuPG/Enigmail. I couldn't import because everytime it say my password is wrong, them I tried to change it on OpenKeychain and bug happen. This key I created few days ago on OpenKeychain using the Security Token option with my YubiKey NEO.

## Your Environment
* Android Version: LineageOS 7.1.1
* OpenKeychain Version: 4.2.4
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,closed,Add version underneath ---Begin pgp message---,[],"How can we add this version line in the keyblock as mentioned below? Many pgp encrypters use this and would be great we can do this too.

-----BEGIN PGP MESSAGE----- 
Version: openkeychain  <-- **Add this line.**

owEBTQGy/pANAwACARsm2bqGdVliAcsdYgBUavgLVGVzdCBmb3IgU3RhY2tPdmVy
ZmxvdyCJARwEAAECAAYFAlRq+AsACgkQGybZuoZ1WWKlVgf/cfsU/aJYnNIimAwq
DKKfWox9c7rEC5ug6qcQzb5YFPsGuyMtZ1Tx9SwCmvU7IXtlnK/BY6H4ut50zOzl
8O8fYaaK63NupeEThlNK1fMvTmt56GLRSgGZ9yBOdkaC3A3SWBAsniPoj5wjBr7m
/MHnqs5Gw1Mtp8I8issZzTQXGjq4j6mAli1Vb3lBpESuF/s/uOxY8jSCV8SDH0UU
RxKoVnzqXd7mD2Dv+KE8K1PKVbVNyT+vIc+rOsRKkaW+6rSXVXie4DWkKxCP5RPe
3Ma3KMark71EwNW86IWryFm8YkP4vt31HKMwW4HUb6nhFF24IQOPle51YoiyZWUC
ejtY4Q==
=xKTQ

-----END PGP MESSAGE-----
 
"
open-keychain/open-keychain,closed,"When trying to link github account to a key, Authorize applications is greyed out","[Label(name=""help wanted"")]","## Expected Behavior
What should hapen is I can press the green authorize application button to link github and open keychain

## Current Behavior
Instead the button is greyed out,and if I try andclcik thedropdown by ""Read and write gists"" the page refreshes.

## Steps to Reproduce (for bugs)
Have a key through Yubio and a 2-step authentiction protected github.
Try to link the two together

## Context
This prevents me from linking my github .

## Your Environment
From Google play.
Android: 6.0.1
Open-Keychain : 4.2 
"
open-keychain/open-keychain,closed,[FR] please provide apk file in releases page,[],"i have device without google play services. i use apps which are absolutely necessary for me.

can you please provide apk file, if possible: https://github.com/open-keychain/open-keychain/releases

downloading from other apps has its own quirks & from web is fraught with risks."
open-keychain/open-keychain,open,"Add to FAQ: Background process must be enabled on Nubia, Meizu phones",[],"I had import secret key into OpenKeyChain through asc file. In it main page, one key is shown.
I had cp my .password-store directory in android mobile, and setup Password-Store to use this directory, and Password-Store can show all sub-dir name in main page.
But in Password-Store->setting->Select OpenPGP Key Id, nothing here."
open-keychain/open-keychain,closed,Signature authenticator?,[],"Hello. I hope it is not a stupid request, but it would be possible, for the app, add an ability to work as ""authenticator"" signature when downloading files from the Internet ?? To verify the integrity of the files ??"
open-keychain/open-keychain,closed,Which code is the private key?,[],"<!--- Provide a general summary of the issue in the title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. I have joined a website that requires a PGP  After entering the public key, it asked for the private key. I tried all 3 of the subkeys. What do I do?
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Cannot import keys from Yubikey 4 if public key is stored locally,"[Label(name=""security token"")]","First of all, thank you for maintaining this project! 😃 

Although a Yubikey and the public key are correctly detected, no match is done between the 2.

## Expected Behavior
When selecting the public key associated to the one present on the Yubikey, OpenKeyChain should put the key under ""My Keys"" on the main screen.

## Current Behavior
OpenKeyChain imports the key as if it were an untrusted contact's key.

## Possible Solution
I looked at the logs and the state of the SQLite database, and I think the public key is not matched to the one present on the Yubikey.

## Steps to Reproduce (for bugs)
1. From a blank yubikey, generate a new set of keys or import existing keys. Both lead to the same results. Regarding the case of generation: 
   1. `gpg --card-edit`
   1. `generate`. You can change values or not. In this example, I stuck to the default values.
1. Export the public key: `gpg --armor --export issue-2075@git.hub > public.gpg`
1. Push it to your phone: `adb push public.gpg /sdcard/public.gpg`
1. Launch OpenKeyChain and plug your yubikey on your phone via USB-OTG.
1. Yubikey is detected, select ""Import key information from file"", and pick `public.gpg` store at the root of your sdcard.
1. See the key details being correctly displayed, and tap ""import""

For more details, I extracted [this piece of logcat](https://gist.github.com/JohanLorenzo/22161fc09e9dfe026e30aba576191322) from a debug build.

## Context
I'd like to use a Yubikey 4 on Android. I saw it's currently not officially supported, but #1833 is being worked on.

## Your Environment
* Android Version: LineageOS 14.1 (This may be a bug on the OS. But I don't see a clue [in the logs](https://gist.github.com/JohanLorenzo/22161fc09e9dfe026e30aba576191322) at the moment).
* OpenKeychain Version: Debug version built from master, which is currently at tag [v4.3-beta1](https://github.com/open-keychain/open-keychain/releases/tag/v4.3-beta1). This is also reproducible from the Google Play beta version (still 4.3-beta1) 
* From Google Play or F-Droid?: Google Play
* Yubikey Firmware: 4.3.4

Please tell me if you need more information, I'll be glad to provide some 😃 
 
Edit: Corrected logcat link."
open-keychain/open-keychain,closed,Mention Using adb push as a way to transfer key to android device,[],"Perhaps I'm missing something obvious here, but it seems `adb push` should be among the recommended ways to transfer keys to one's android device in the frequently asked questions on the official website (https://www.openkeychain.org/faq/#what-is-the-best-way-to-transfer-my-own-key-to-openkeychain). Is there a reason that this method is not mentioned?"
open-keychain/open-keychain,closed,Passphrase necessary when sending mail - bug?,[],"Hi,

after having installed the latest version from Google Play, I am always asked for my PGP-passphrase when sending an encrypted email via K-9. This is a bit annoying and destroys the usability. I think this is a bug, as I believe I should only be asked to enter my passphrase when **de**-crypting an email.

What do you think?

Best regards,
dacryptor"
open-keychain/open-keychain,closed,handle unknown key algorithms using opaque keys,[],"This PR adds handling of keys with unknown algorithms as opaque keys. Those will be removed during canonicalization so they never end up in the database, but at least those keys don't break our import completely anymore. Keys with eddsa primary key will simply fail to import, subkeys will be stripped so they won't be available.

This can lead to weird scenarios where signatures can't be verified because the specific subkeys aren't available, but it's a lot better than what we have now.

Relevant changes mostly in bouncycastle. I actually had handling for this in canonicalize all along, it just never got to that because bouncycastle would throw an IOEXception before we ever got there :)

(@dkg made me do it)"
open-keychain/open-keychain,closed,Bad performance on LG G4,[],"I recently switched from a moto g 2013 to an LG G4. I have one key I use with [pass](https://www.passwordstore.org/) on my computers and [Password Store](https://play.google.com/store/apps/details?id=com.zeapo.pwdstore) on my phone. Decrypting a password takes about a second on my moto g and about a minute on my G4. I created the key on an FX-8350. It is RSA 2048 bit.

## Environment
* Android Version: 6.0
* OpenKeychain Version: 4.2.4
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,Crash on Startup,[],"The app is closed instantly after opening.

## Current Behavior
since shortly the App is not workung anymore.
*When i hit the icon the app opens and display a white screen, after 1 second the app closes it self.
*decrypting with k9 still works: it prompts the overlay for password entry.
*opening the app via an intent ( import to openkeychain) still works to: as soon as i return to the homescreen of the app it it closed
*Encrypting with k9 is not working too.

Normaly i would try to uninstall an re-install the app: but me newly generated key is still within the phone. and i wasn#t able to back it up somewhere: so if ich would delete the app my key would belost but still unrevoken


## Your Environment (friends phone)
Sony Xperia M4 Aqua
* Android Version: Android 5.0
* OpenKeychain Version: 4.2.4
* From Google Play
 
"
open-keychain/open-keychain,closed,"YubiKey 4 (USB): Key generation fails (put key) (""Invalid data"")","[Label(name=""security token"")]","When creating new keys on a YubiKey 4 via the ""Use security token"" wizard, I end of with ""Entered PIN is too short. PINs are at least 6 digits long. Error Invalid data"".

## Current Behavior / Steps to Reproduce

The page ""Would you like to use this blank security token..."" appears, either when I insert the Yubikey via an USB OTG cable while OpenKeyChain is open, or when navigate to Manage my keys -> Use security token when it was connected before. When I insert the YubiKey when the homescreen is shown, the screen flickers shortly, but nothing else hapens.

The first page of the security token wizard says ""You will be prompted when it is needed again"", but when I click next on the page where I choose my PIN, and the YubiKey is not connected, OpenKeyChain crashes with

```
03-01 11:02:15.962 21967 21967 E AndroidRuntime: FATAL EXCEPTION: main
03-01 11:02:15.962 21967 21967 E AndroidRuntime: Process: org.sufficientlysecure.keychain, PID: 21967
03-01 11:02:15.962 21967 21967 E AndroidRuntime: Theme: themes:{default=overlay:org.cyanogenmod.hexolibre, iconPack:org.cyanogenmod.hexolibre, fontPkg:org.cyanogenmod.hexolibre, com.android.systemui=overlay:org.cyanogenmod.hexolibre, com.android.systemui.navbar=overlay:org.cyanogenmod.hexolibre}
03-01 11:02:15.962 21967 21967 E AndroidRuntime: java.lang.NullPointerException: Attempt to read from null array
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.parseOpenPgpVersion(SecurityTokenHelper.java:107)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at org.sufficientlysecure.keychain.ui.CreateSecurityTokenPinFragment.nextClicked(CreateSecurityTokenPinFragment.java:204)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at org.sufficientlysecure.keychain.ui.CreateSecurityTokenPinFragment.access$100(CreateSecurityTokenPinFragment.java:41)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at org.sufficientlysecure.keychain.ui.CreateSecurityTokenPinFragment$3.onClick(CreateSecurityTokenPinFragment.java:163)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at android.view.View.performClick(View.java:5204)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at android.view.View$PerformClick.run(View.java:21158)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at android.os.Handler.handleCallback(Handler.java:739)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at android.os.Handler.dispatchMessage(Handler.java:95)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at android.os.Looper.loop(Looper.java:148)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at android.app.ActivityThread.main(ActivityThread.java:5461)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at java.lang.reflect.Method.invoke(Native Method)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
03-01 11:02:15.962 21967 21967 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
03-01 11:02:15.969  1527  3169 W ActivityManager:   Force finishing activity org.sufficientlysecure.keychain/.ui.CreateKeyActivity
```

Otherwise:

On the PIN screen, I enter my chosen PIN.  I tried entering a 6 and a 7 digit PIN.
When I attach my YubiKey on the PIN screen, unfortunately the first page of the wizard appears again, since I set OpenKeyChain as default application for this USB device. I can navigate back, though. The Admin Key changed then. The PIN fields still show dots.

When I click Next now, I get the ""You entered the following identity"" screen.
When I click ""Create Key"", the key is created, but then I get the error ""Entered PIN is too short. PINs are at least 6 digits long. Error Invalid data"". (No warnings / errors to see in the logcat in this case, though).

Unfortunately, I can't re-enter any PIN while the YubiKey is connected on the PIN screen.

## Expected Behavior

 * Keys get generated on the YubiKey without the error being shown, since the PIN is 6 digits long.
 * If possible, the wizard shouldn't get opened again if it is already being shown

## Context

I'm trying to generate keys on a blank YubiKey 4 with OpenKeyChain.

## Your Environment

* Android Version: LineageOS 13.0, self-built, (20170227)
* OpenKeychain Version: 4.2.4
* From Google Play or F-Droid?: Installed via F-Droid
* Asus Zenfone 2
* YubiKey 4, Firmware Version 4.3.4
"
open-keychain/open-keychain,closed,Put SHA1 on insecure algorithm list,"[Label(name=""discussion"")]","Due to http://shattered.io/, I propose we put SHA1 on the list of insecure algorithms. See https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpSecurityConstants.java#L82

Any objections?"
open-keychain/open-keychain,open,No key found on private keyserver,[],"Hi,

I'm a junior programmer, new on topics like this... Yesterday i made my private key server on a debian based linux distribution.

I tried to set it on Openkeychain application and everything goes well, even the key share (I checked on the web interface of my server and i see my key), but when I search the key from the app i can't retrieve anything (the message is No key found). I searched on the internet and also on known issue in this repository, I saw that other person have the same problem (like issue #1872) but i cannot find the solution. Can you help me?"
open-keychain/open-keychain,closed,Refactor database access,[],"I started refactoring our database access methods. The name ""ProviderHelper"" has been a thorn in my side for a while, but we also get two practical benefits:

- I separated write access from read access, so classes that don't write to the db can work with a superclass that doesn't implement methods that write to the db. As a very direct benefit, since both OpenPgpService and the `Pgp*` operations don't require write access, the class with write access can be package local.

- My plan is to centralize all access to the actual key blobs into as little code as possible, ideally only a single method per public and secret key reading and writing. This isn't finished, but I've made progress, most notably getting rid of the join for the blobs in the unified key query, which should reduce the attack surface to get to those blobs significantly.

The latter aspect is going to be useful down the line in two (and a half) ways:

- We can apply transformations (like encryption) more easily

- Since access happens in fewer places, it becomes feasible to store the blobs externally, sidestepping sqlite filesize restrictions

- We could choose to store *all* keys as blobs in internal storage, keeping none or only a minified version in the database. That would allow restoring the database from those files more easily, but also comes at a higher risk of consistency problems.

So far, this PR *should* contain no actual semantic changes, but merely changes the way things are loaded in some places.

I actually noticed after I did the renaming that Interactor is not a good term for what the classes do, I believe the correct term is ""Repository"", although ""Data Access Object"" would also be fine. However rebasing that rename is difficult so I'm going to do that as a last step when everything else is done here."
open-keychain/open-keychain,closed,Fix crash inside MultiUserIdsFrag because of null lastName,[],"## Description
Add a null safety check before calling the `String#equals` method.

## Motivation and Context

There is a crash whenever the `lastName` variable happens to be null.
This is documented inside issue #2044 

## How Has This Been Tested?
Tested the changes on Travis CI. The build passes.

[Build #1](https://travis-ci.org/icyflame/open-keychain/builds/203469302) (First draft of the commit message)

[Build #2](https://travis-ci.org/icyflame/open-keychain/jobs/203541336) (Present commit)

## Types of changes

- ✅ Bug fix (non-breaking change which fixes an issue)"
open-keychain/open-keychain,closed,Fix IllegalArgumentException in SecurityTokenUtils #2036,[],"Improved handling of RSA modulus length in SecurityTokenUtils.

## Description
The code was containing hard coded values for 2048 bits RSA modulus length. This patch fixes this by extracting the size of the RSA modulus from the RSAKeyFormat parameter.

## Motivation and Context
Fix #2036 

## How Has This Been Tested?
Tested only with 2048 bits RSA.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Fix NPE in CardCapabilities #2000,[],"## Motivation and Context
Fix #2000 

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Unable to encrypt email to self (from k9 mail),[],"
## Expected Behavior
When I type in my email address in the to line in k9mail, it should show my contact as a green (has key) and then successfully encrypt to it.

## Current Behavior
my contacts (both emails for which I have my own keys (public and private) show up as red; when I tell it to encrypt then try to send it says 'no keys found for some of the recipients (or similar)


## Steps to Reproduce (for bugs)

1. Install F-droid version 4.24, setup
2. try to send an email from yourself to yourself in k9mail.


## Context
Forgive me if I'm doing something wrong in how this is supposed to work but I can't get it to work for me...any suggestions appreciated. I appreciate I'm experiencing this within k9mail but it seems to relate to openkeychain...

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: CyanogenMod 13 / Android 6.0.1
* OpenKeychain Version:  F-droid version 4.24

"
open-keychain/open-keychain,closed,Mailvelope keyserver does not work,"[Label(name=""bug""), Label(name=""help wanted"")]","Add Mailvelope Keyserver with cert at https://github.com/mailvelope/keyserver/issues/7

Search for thomas@mailvelope.com

Compare
* https://keys.mailvelope.com/pks/lookup?op=index&options=mr&search=thomas@mailvelope.com
* https://pgp.mit.edu/pks/lookup?op=index&options=mr&search=thomas@mailvelope.com"
open-keychain/open-keychain,open,Name on import card not correctly updated,"[Label(name=""bug""), Label(name=""help wanted"")]","The following key contains invalid user IDs: 
https://pgp.mit.edu/pks/lookup?search=0x403C2657CD994F73&op=index

OpenKeychain should be protected against this as we download the whole key after clicking on the card. Looks like this works EXCEPT that the shown name is not updated. It is still shown as ""dontuseee"" even after clicking the card.

Corresponding discussion on SKS:
https://bitbucket.org/skskeyserver/sks-keyserver/issues/41/web-app-displays-uids-on-keys-that-have"
open-keychain/open-keychain,closed,how to change security token admin key,"[Label(name=""enhancement""), Label(name=""help wanted""), Label(name=""security token"")]",I tried bit didnt find any way to change admin key for security token. For example sigilance i could change on pc. But how about fidesmo
open-keychain/open-keychain,open,Consider key insecure if any subkey is insecure,[],"An OpenPGP key must be considered insecure if any of the subkeys is insecure (and not revoked), not just the master key. The insecure subkey is then the weakest link and could be used by an attacker.

We haven't thought about this earlier."
open-keychain/open-keychain,closed,UnsupportedCharsetException: uft-8,"[Label(name=""bug""), Label(name=""help wanted"")]","We had a similar issue with querying some keyservers.

We simply need to implement the fallback to UTF-8 also for add.

```
java.nio.charset.UnsupportedCharsetException: uft-8
	at java.nio.charset.Charset.forName(Charset.java:309)
	at okhttp3.MediaType.charset(MediaType.java:111)
	at okhttp3.ResponseBody.charset(ResponseBody.java:182)
	at okhttp3.ResponseBody.string(ResponseBody.java:173)
	at org.sufficientlysecure.keychain.keyimport.ParcelableHkpKeyserver.add(ParcelableHkpKeyserver.java:436)
	at org.sufficientlysecure.keychain.operations.UploadOperation.uploadKeyRingToServer(UploadOperation.java:160)
	at org.sufficientlysecure.keychain.operations.UploadOperation.execute(UploadOperation.java:107)
	at org.sufficientlysecure.keychain.operations.UploadOperation.execute(UploadOperation.java:59)
	at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:149)
	at java.lang.Thread.run(Thread.java:818)
```"
open-keychain/open-keychain,closed,Support for Gnuk security token,"[Label(name=""enhancement""), Label(name=""security token"")]","The Gnuk token is a free hardware project implementing the OpenPGP card protocol on a generic microprocessor.

I can arrange that a sample Gnuk is shipped to a developer who wants to work on Gnuk support (preferably someone who is interested in also doing so in the future, as we are thinking about either extending the OpenPGP card protocol, or adding a custom protocol to it in the future).

Project home: https://www.fsij.org/category/gnuk.html

## Expected Behavior

Using the Gnuk with Open-Keychain should just work (like e.g. with a Yubikey).

## Current Behavior

Nothing happens when I plug it in.

## Possible Solution

I see that work is underway to support a derivative of the Gnuk in #1834.

## Your Environment

* Android Version: 5.1
* OpenKeychain Version: 4.2.4
* From Google Play or F-Droid?: F-Droid
 
"
open-keychain/open-keychain,open,"Importing secret keys, show consolidate dialog",[],"Currently consolidate dialog is not shown, but only done inline.
This looks like import takes too long."
open-keychain/open-keychain,closed,Test Failed,[],"After running tests out of 131 tests 71 tests failed

Executed test like this: `./gradlew clean testFdroidDebugUnitTest --continue`
Before executing test did:
`git submodule update --init --recursive`
and 
`./gradlew assembleFdroidDebug`

Outcome:

```
org.sufficientlysecure.keychain.provider.InteropTest > testInterop FAILED
    java.lang.AssertionError at InteropTest.java:151

org.sufficientlysecure.keychain.provider.ProviderHelperSaveTest > testImportCooperPair PASSED

org.sufficientlysecure.keychain.provider.ProviderHelperSaveTest > testImportBadEncodedUserId PASSED

org.sufficientlysecure.keychain.provider.ProviderHelperSaveTest > testImportDivertToCard PASSED

org.sufficientlysecure.keychain.provider.ProviderHelperSaveTest > testImportNoFlagKey PASSED

org.sufficientlysecure.keychain.provider.ProviderHelperSaveTest > testImportSymantec PASSED

org.sufficientlysecure.keychain.provider.ProviderHelperSaveTest > testImportStrippedFlags PASSED

org.sufficientlysecure.keychain.provider.ProviderHelperKeyringTest > testSavePublicKeyring PASSED

org.sufficientlysecure.keychain.pgp.InputDataOperationTest > testMimeDecodingWithNoContentTypeHeader PASSED

org.sufficientlysecure.keychain.pgp.InputDataOperationTest > testMimeDecodingOctetStreamGuessedCharset PASSED

org.sufficientlysecure.keychain.pgp.InputDataOperationTest > testMimeDecodingExplicitFaultyCharset PASSED

org.sufficientlysecure.keychain.pgp.InputDataOperationTest > testMimeDecodingImplicitFaultyCharset PASSED

org.sufficientlysecure.keychain.pgp.InputDataOperationTest > testMimeDecoding PASSED

org.sufficientlysecure.keychain.pgp.InputDataOperationTest > testMimeDecodingImplicitGuessedCharset PASSED

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testSubkeyBindingNoPKB FAILED
    java.lang.AssertionError at UncachedKeyringCanonicalizeTest.java:119

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testSignatureLocal FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testSubkeyDestroy FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testUidRevocationRedundant FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testUidDestroy FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testSignatureBroken FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testSignatureFuture FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testRevocationRedundant FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testUidRevocationOutdated FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testUidSignature FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testForeignSignature FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testGeneratedRingStructure FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testSubkeyBindingRedundant FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testDuplicateSubkey FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testUidRedundant FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.UncachedKeyringCanonicalizeTest > testDuplicateUid FAILED
    java.lang.NullPointerException at UncachedKeyringCanonicalizeTest.java:138

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithCommentAndEmailShouldReturnCommentAndEmail PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithQuotedEmailShouldReturnEmail PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitCompleteUserIdShouldReturnEmpty PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithEmailAndEmailLookingNameShouldReturnEmailAndName PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithNameShouldReturnName PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithEmailAsNameShouldReturnEmail PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithQuotedEmailAsNameShouldReturnEmail PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithEmailShouldReturnEmail PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithEmailBracketsShouldReturnEmail PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithCommentShouldReturnComment PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithAllButEmailShouldReturnNameAndComment PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitCompleteUserIdShouldReturnAll3Components PASSED

org.sufficientlysecure.keychain.pgp.SplitUserIdTest > splitUserIdWithAllButCommentShouldReturnNameAndEmail PASSED

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testRestricted FAILED
    java.lang.AssertionError at PgpKeyOperationTest.java:113

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testBadKeyModification FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testUserIdPrimary FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testKeyToSecurityToken FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testSubkeyModify FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testSubkeyRevoke FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testUserIdRevoke FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testPassphraseChange FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testMasterModify FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testMasterRevoke FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testVerifySuccess FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testMasterFlags FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testMasterStrip FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testCreatedKey FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testRestrictedStrip FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testSubkeyAdd FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testUserIdAdd FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testSubkeyStrip FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testConcat FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > testUserAttributeAdd FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.PgpKeyOperationTest > createSecretKeyRingTests FAILED
    java.lang.NullPointerException at PgpKeyOperationTest.java:136

org.sufficientlysecure.keychain.pgp.UncachedKeyringMergeTest > testAddedKeySignature FAILED
    java.lang.RuntimeException
        Caused by: java.lang.NullPointerException at UncachedKeyringMergeTest.java:119

org.sufficientlysecure.keychain.pgp.UncachedKeyringMergeTest > testAddedUserAttributeSignature FAILED
    java.lang.NullPointerException at UncachedKeyringMergeTest.java:157

org.sufficientlysecure.keychain.pgp.UncachedKeyringMergeTest > testDifferentMasterKeyIds FAILED
    java.lang.NullPointerException at UncachedKeyringMergeTest.java:157

org.sufficientlysecure.keychain.pgp.UncachedKeyringMergeTest > testAddedSubkeyId FAILED
    java.lang.NullPointerException at UncachedKeyringMergeTest.java:157

org.sufficientlysecure.keychain.pgp.UncachedKeyringMergeTest > testAddedUserId FAILED
    java.lang.NullPointerException at UncachedKeyringMergeTest.java:157

org.sufficientlysecure.keychain.pgp.UncachedKeyringMergeTest > testAddedUserIdSignature FAILED
    java.lang.NullPointerException at UncachedKeyringMergeTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testMultiAsymmetricSignEncryptDecryptVerify FAILED
    java.lang.AssertionError at PgpEncryptDecryptTest.java:105

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testAsymmetricEncryptDecrypt FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testMultiSubkeyEncryptSkipRevoked FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testAsymmetricSignCleartext FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testAsymmetricInsecureEncryptDecrypt FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testSymmetricEncryptDecrypt FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testAsymmetricSignDetached FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testMultiAsymmetricEncryptDecrypt FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testMultiSubkeyEncryptSkipStripOrBadFlag FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testAsymmetricSignLiteral FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.PgpEncryptDecryptTest > testForeignEncoding FAILED
    java.lang.NullPointerException at PgpEncryptDecryptTest.java:157

org.sufficientlysecure.keychain.pgp.UncachedKeyringTest > testArmorIdentity FAILED
    java.lang.RuntimeException
        Caused by: java.lang.NullPointerException at UncachedKeyringTest.java:81

org.sufficientlysecure.keychain.pgp.UncachedKeyringTest > testPublicKeyItRemove FAILED
    java.lang.Exception
        Caused by: java.lang.NullPointerException at UncachedKeyringTest.java:100

org.sufficientlysecure.keychain.pgp.UncachedKeyringTest > testPublicExtractPublic PASSED

org.sufficientlysecure.keychain.pgp.UncachedKeyringTest > testDecodeEncodeMulti FAILED
    java.lang.Exception
        Caused by: java.lang.NullPointerException at UncachedKeyringTest.java:124

org.sufficientlysecure.keychain.pgp.UncachedKeyringTest > testDecodeFromEmpty PASSED

org.sufficientlysecure.keychain.pgp.UncachedKeyringTest > testBrokenVersionCert PASSED

org.sufficientlysecure.keychain.util.KeyFormattingUtilsTest > testStuff PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testTypeImagePngAlwaysBinary PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testUtf8GuessedAndFaulty PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testStaggeredInput PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testReadAfterGetterShouldCrash PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testWindows1252Good PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testWindows1252Faulty PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testUtf8SpecifiedButFaulty PASSED

org.sufficientlysecure.keychain.util.CharsetVerifierTest > testGuessedEncoding PASSED

org.sufficientlysecure.keychain.util.ParcelableFileCacheTest > testInputOutput PASSED

org.sufficientlysecure.keychain.operations.BackupOperationTest > testExportUnencrypted FAILED
    java.lang.AssertionError at BackupOperationTest.java:109

org.sufficientlysecure.keychain.operations.BackupOperationTest > testExportEncrypted FAILED
    java.lang.NullPointerException at BackupOperationTest.java:143

org.sufficientlysecure.keychain.operations.BackupOperationTest > testExportAllLocalStripped FAILED
    java.lang.NullPointerException at BackupOperationTest.java:143

org.sufficientlysecure.keychain.operations.CertifyOperationTest > testCertifyAttribute FAILED
    java.lang.AssertionError at CertifyOperationTest.java:86

org.sufficientlysecure.keychain.operations.CertifyOperationTest > testCertifyId FAILED
    java.lang.NullPointerException at CertifyOperationTest.java:125

org.sufficientlysecure.keychain.operations.CertifyOperationTest > testSelfCertifyFlag FAILED
    java.lang.NullPointerException at CertifyOperationTest.java:125

org.sufficientlysecure.keychain.operations.CertifyOperationTest > testCertifySelf FAILED
    java.lang.NullPointerException at CertifyOperationTest.java:125

org.sufficientlysecure.keychain.operations.CertifyOperationTest > testCertifyNonexistent FAILED
    java.lang.NullPointerException at CertifyOperationTest.java:125

org.sufficientlysecure.keychain.operations.BenchmarkOperationTest > testBenchmark FAILED
    java.lang.NullPointerException at BenchmarkOperationTest.java:52

org.sufficientlysecure.keychain.operations.PromoteKeyOperationTest > testPromoteDivertSpecific FAILED
    java.lang.AssertionError at PromoteKeyOperationTest.java:83

org.sufficientlysecure.keychain.operations.PromoteKeyOperationTest > testPromote FAILED
    java.lang.NullPointerException at PromoteKeyOperationTest.java:98

org.sufficientlysecure.keychain.operations.PromoteKeyOperationTest > testPromoteDivert FAILED
    java.lang.NullPointerException at PromoteKeyOperationTest.java:98

org.sufficientlysecure.keychain.securitytoken.Iso7816TLVTest > testDecode PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testOpenPgpCapabilities PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testWriteBitsInvalidBits PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testPrivateKeyTemplateSimple2048 PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testWriteBits PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testWriteBitsInvalidValue PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testEncodeLength PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testEncodeLengthTooBig PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testWriteBitsDoesntFit PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testCardCapabilities PASSED

org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtilsTest > testEncodeLengthNegative PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withEmptyUserId PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withUserIds__withEmptyQueryResult PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withUserIds__withDuplicate PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withUserIds PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withUserIds__withEmptyQueryResult__inOpportunisticMode PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withKeyIdsSelectedExtra PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withKeyIdsExtra PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withNoData PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withNoData__askIfNoData PASSED

org.sufficientlysecure.keychain.remote.OpenPgpServiceKeyIdExtractorTest > returnKeyIdsFromIntent__withUserIds__withMissing PASSED

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testQuery__multiple PASSED

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testQuery__withNonExistentAddress PASSED

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testQuery PASSED

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testQuery__withConfirmedKey FAILED
    java.lang.AssertionError at KeychainExternalProviderTest.java:193

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testPermission__withMissingPackage PASSED

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testQuery__withSecretKey PASSED

org.sufficientlysecure.keychain.remote.KeychainExternalProviderTest > testPermission__withWrongPackageCert PASSED

137 tests completed, 71 failed
:OpenKeychain:testFdroidDebugUnitTest FAILED

FAILURE: Build failed with an exception.
```

## Your Environment
* Android Version: Lastest API level
* OpenKeychain Version: Latest
* OS on which did the test: Ubuntu 16.04
 
"
open-keychain/open-keychain,closed,add EdDSA support,[],"## Description
Support for eddsa \o/ based on [werner's draft](https://tools.ietf.org/html/draft-koch-eddsa-for-openpgp-04), adding support for ed25519 to bouncycastle based on [ed25519-java](https://github.com/str4d/ed25519-java) by @str4d (huge thanks!).

The bulk of changes of course happened in the bouncycastle repository:
https://github.com/open-keychain/bouncycastle/compare/openkeychain-master-old...eddsa
I suggest reading those commit by commit, where the first one is purely an import of the ed25519-java classes into the bouncycastle namespace, the second adds them to the BouncyCastleProvider, and the third adds openpgp support on top of that.

## How Has This Been Tested?
I tested this manually with an imported key from gpg, and have some hacky unit tests that use the sample keys from the eddsa draft. I created a key, signed some text with it and verified it with gpg, too. Switching generated keys in unit tests out for eddsa ones also works. This still needs actual unit tests though!

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Initialize libkeychain,[],"Create ""libkeychain"" library folder and move some utils in it.

At one point this will be https://github.com/open-keychain/open-keychain/issues/1964"
open-keychain/open-keychain,closed,OpenKeychain not returning results from keys.mailvelope.com keyserver,"[Label(name=""bug"")]","Adding the hkps://keys.mailvelope.com server to the key server list in OpenKeychain OpenPGP keyservers list and moving to the top priority does not return any results.

## Expected Behavior
On searching for a key by a known email address, the appropriate key should be returned.

## Current Behavior
All searches (even for addresses known to be in the keys.mailvelope.com list) return no results.

## Steps to Reproduce (for bugs)
1. Add hkps://keys.mailvelope.com to OpenPGP keyservers list (uncheck trusted only, as mailvelope's certificate is not pinned)
2. Move to top
3. Search for an address known to be in the database

## Context
I use Mailvelope because it is a straightforward and convenient way to implement OpenPGP on my existing e-mail accounts. Manually moving all the public keys of all my contacts is time consuming and frustrating, when mailvelope's keyserver already contains them - but it appears OpenKeychain isn't on speaking terms.

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: CyanogenMod 13 (Android 6.0)
* OpenKeychain Version:  4.2.4
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,open,"Warn when user choses public key in ""Import my key from file"" dialogue","[Label(name=""enhancement"")]","I just confused myself for 5 minutes when using the ""Import my key from file"" functionality from the initial setup window: I accidentally chose my pubkey instead of the private key, with the result that it simply appeared under the list of known contact keys, but not under ""my keys"".

It would be great if OpenKeychain could warn when you go via the ""import my key"" wizard and don't select a private key."
open-keychain/open-keychain,closed,Decryption no longer works with Yubikey Neo: SecureMessagingException,"[Label(name=""security token"")]","When I try to decrypt with my Yubikey Neo over NFC (which in the past, worked fine at some point), I get an error. For example, when using the decrypt-from-clipboard feature, or when using another program like https://github.com/zeapo/Android-Password-Store/issues/271.

## Expected Behavior

Decryption succeeds.

## Current Behavior

I now get `Error: Transceive failed` in the UI and the following stack trace in `adb logcat`:

```
E/Keychain(13043): failed to establish secure messaging
E/Keychain(13043): org.sufficientlysecure.keychain.securitytoken.SecureMessagingException: failed to retrieve secure messaging key attributes
E/Keychain(13043): 	at org.sufficientlysecure.keychain.securitytoken.SCP11bSecureMessaging.establish(SCP11bSecureMessaging.java:298)
E/Keychain(13043): 	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.connectToDevice(SecurityTokenHelper.java:211)
E/Keychain(13043): 	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity.handleSecurityToken(BaseSecurityTokenActivity.java:444)
E/Keychain(13043): 	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:172)
E/Keychain(13043): 	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:162)
E/Keychain(13043): 	at android.os.AsyncTask$2.call(AsyncTask.java:288)
E/Keychain(13043): 	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/Keychain(13043): 	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
E/Keychain(13043): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
E/Keychain(13043): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
E/Keychain(13043): 	at java.lang.Thread.run(Thread.java:841)
```

## Possible Solution

Not sure, but this is definitely a regression, it worked in the past.

I wonder if it was [this commit](https://github.com/open-keychain/open-keychain/commit/a6b7b2bf4ec204cd647db9f0bead53476069d34f) that broke it -- simply by the fact that it was the last one touching the code that raises the above exception.

## Steps to Reproduce (for bugs)

1. Get a Yubikey Neo (for OpenKeychain devs: I'll buy you one if you don't have one)
2. Encrypt a message to yourself to the clipboard 
3. Use decrypt from clipboard
4. Tap the Yubikey via NFC, see it fail

## Your Environment

* Android Version: 4.4
* OpenKeychain Version: 4.2.4
* From Google Play or F-Droid?: Google Play
"
open-keychain/open-keychain,closed,Saving encrypt file with same file name destroys source file.,[],"<!--- Provide a general summary of the issue in the title above -->

1. select encrypt,
2. encrypt with password
3. add data file to be encrypted
4. select save
5. fpr file name choose the same as in folder of added file in step 3.
6. select save,
7. source file now effectively destroyed through encryption and cannot be accessed any longer,

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->

What should happen is encryption of file with same name PLUS added "".GB"" type file extension of the open-keychain.

The app should not be able to or allow encryption and saving over same file which kills the source file.

<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 
* OpenKeychain Version: 
* From Google Play or F-Droid?: 
 
"
open-keychain/open-keychain,closed,Cannot import keys from local file,[],"<!--- Provide a general summary of the issue in the title above -->
I use a Moto G4 Plus. Recently it got Android 7 upgrade. After that upgrade whenever I try to import any public/private key using a .asc file the app crashes.
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
The app should be able to import keys.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
I am able to download keys from te Keyservers and can make new keys. But I am not able to import new keys from local files.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. https://youtu.be/KYDYBqfF1rk


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.0
* OpenKeychain Version: 4.2.4 
* From Google Play or F-Droid?: Google Play 
 
"
open-keychain/open-keychain,closed,Cannot import any type of key,[],"<!--- Provide a general summary of the issue in the title above -->
I use a Moto G4 Plus. Recently it got Android 7 upgrade. After that upgrade whenever I try to import any public/private key using a .asc file the app crashes.
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
The app should be able to import keys.

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from the current behavior -->
I am able to download keys from te Keyservers and can make new keys. But I am not able to download new keys.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1. https://youtu.be/KYDYBqfF1rk


## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 7.0
* OpenKeychain Version: 4.2.4 
* From Google Play or F-Droid?: Google Play 
 
"
open-keychain/open-keychain,open,NPE in ViewKeyAdvSubkeysFragment related to ECC,"[Label(name=""google play crash-report""), Label(name=""help wanted"")]","From Google Play dev console. I suspect this has to do with ECC subkeys.

```
java.lang.NullPointerException: Attempt to invoke virtual method 'boolean org.bouncycastle.asn1.ASN1ObjectIdentifier.equals(java.lang.Object)' on a null object reference
	at org.sufficientlysecure.keychain.ui.ViewKeyAdvSubkeysFragment$5.handleMessage(ViewKeyAdvSubkeysFragment.java:374)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:158)
	at android.app.ActivityThread.main(ActivityThread.java:7229)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
```"
open-keychain/open-keychain,closed,Crash in MultiUserIdsFragment on empty name?,"[Label(name=""bug""), Label(name=""help wanted"")]","From Google Play dev console.

But I suspect this crash happens on empty name or empty email address. Should be easy to fix!


```
java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference
	at org.sufficientlysecure.keychain.ui.MultiUserIdsFragment.onLoadFinished(MultiUserIdsFragment.java:183)
	at org.sufficientlysecure.keychain.ui.MultiUserIdsFragment.onLoadFinished(MultiUserIdsFragment.java:47)
	at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
	at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:444)
	at android.support.v4.content.Loader.deliverResult(Loader.java:126)
	at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:105)
	at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:37)
	at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:252)
	at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:80)
	at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:485)
	at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:502)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:148)
	at android.app.ActivityThread.main(ActivityThread.java:5521)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:804)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:666)
```
"
open-keychain/open-keychain,closed,OutOfMemoryError with Nitrokey Pro,"[Label(name=""google play crash-report"")]","Bug from Google Play dev console

## Current Behavior
""Nitrokey Pro key import crash""

devices: Nexus 5X (bullhead), Galaxy S6 (zeroflte)

```
java.lang.RuntimeException: An error occurred while executing doInBackground()
	at android.os.AsyncTask$3.done(AsyncTask.java:325)
	at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
	at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
	at java.util.concurrent.FutureTask.run(FutureTask.java:242)
	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:243)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)
	at java.lang.Thread.run(Thread.java:761)
Caused by: java.lang.OutOfMemoryError: Failed to allocate a 1503930806 byte allocation with 14513802 free bytes and 171MB until OOM
	at org.sufficientlysecure.keychain.securitytoken.usb.CcidTransceiver.receive(CcidTransceiver.java:139)
	at org.sufficientlysecure.keychain.securitytoken.usb.CcidTransceiver.receiveRaw(CcidTransceiver.java:50)
	at org.sufficientlysecure.keychain.securitytoken.usb.CcidTransceiver.iccPowerOn(CcidTransceiver.java:81)
	at org.sufficientlysecure.keychain.securitytoken.usb.tpdu.T1TpduProtocol.<init>(T1TpduProtocol.java:41)
	at org.sufficientlysecure.keychain.securitytoken.usb.UsbTransport.configureProtocol(UsbTransport.java:219)
	at org.sufficientlysecure.keychain.securitytoken.usb.UsbTransport.connect(UsbTransport.java:179)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.connectToDevice(SecurityTokenHelper.java:191)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity.handleSecurityToken(BaseSecurityTokenActivity.java:444)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:172)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:162)
	at android.os.AsyncTask$2.call(AsyncTask.java:305)
	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
	... 4 more
```"
open-keychain/open-keychain,closed,"4.2.3 crash: IllegalStateException: Couldn't read row 0, col 0 from CursorWindow","[Label(name=""bug"")]","After upgrading to 4.2.3, @Valodim and other users got a crash with the stack trace:
""java.lang.IllegalStateException: Couldn't read row 0, col 0 from CursorWindow.  Make sure the Cursor is initialized correctly before accessing data from it.""

Afterwards all keys were marked as insecure.
This means that the upgrade worked, but consolidate crashed.

We are currently not sure why this happens, but it shouldn't be directly related to the marking of keys as insecure.
For now I deployed a workaround in https://github.com/open-keychain/open-keychain/commit/8fa9f3b2ba084794ca6385450d56378d16efd2b9 and pushed to Google Play with 4.2.4

Ideas:
* https://code.google.com/p/android/issues/detail?id=32472
* https://tapreason.wordpress.com/2014/03/02/how-to-resolve-java-lang-illegalstateexception-couldnt-read-row-0-col-y-from-cursorwindow-make-sure-the-cursor-is-initialized-correctly-before-accessing-data-from-it/
* Looks like there is a maximum of data a cursor can hold around 2MB"
open-keychain/open-keychain,closed,fix transparent header,[],"<!--- Provide a general summary of your changes in the title above -->
Fix transparent header in ViewKeyAdvCertsFragment
## Description
<!--- Describe your changes in detail -->
When working on #1957 , I found that the header in ViewKeyAdvCertsFragment is transparent

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

## Screenshots (if appropriate):
Before modification:
![photo6111930782709819305](https://cloud.githubusercontent.com/assets/11607199/22699446/6bda85b2-ed92-11e6-9d7b-a1aca6b4a5ee.jpg)

After modification:
![photo6111930782709819306](https://cloud.githubusercontent.com/assets/11607199/22699583/da96838e-ed92-11e6-81e7-e0ac7691dd0b.jpg)


## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Remove AGP db upgrade,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
At this point everyone should have updated OpenKeychain to a current version...

## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,emergency fix for crashing consolidate,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->

## Motivation and Context
Unfortunately, for some people the current upgrade crashes and left them with all keys being insecure. This issue shouldn't have something to do with the new insecure checks, instead it looks like some sort of problem when updating the database in the consolidate dialog.

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Fresh developer,[],"Hello
I'm a new developer and I want to contribute to your project as it seemed to be very interesting.
I ensure you that once it get comfortable and gain enough knowledge in your work, I will give my 100% to work for it
I'm waiting for a chance to prove myself capable
Hoping to get a chance this time
thanking you"
open-keychain/open-keychain,closed,Feature Request,[],"<!--- Change order, importance if what menus show up on opening of your app, on opening or activating Android 4.4 app of OpenKeychain when called from another Android App say Genius Scan.-->

## Expected Behavior
<!--- My use case is encrypt/decrypt document prior to upload in the cloud. So when opening from Genius Scan i would expect the app to go to encrypt added document with password. -->
<!--- in settings pane simply with checkboxes allow removal of menu item, for my use case most option related to certificates, tokens etc are in the way of doing what i need, encrypt/decrypt using a good old password. -->

## Current Behavior
<!--- it always asks to connect to key server, or when encrypting asks for keys, asks for key set on app open, etc its key centric and focused solely -->
<!--- Check what cryptomator has done to perfection, a seamless integrated way to encrypt decrypt documents from any app, to and from the cloud. -->

## Possible Solution
<!--- workaround is to jump over key selection ,setup, go intp submenues and select save with password -->
<!--- remember last setup of app, go straight to last used option and menu (save with password, enter password in field)-->

## Steps to Reproduce (for bugs)
<!--- in Genius Scan open document pdf, within select share and encrypt with OpenKeychain, now OpenKeychain app opens with document in attachment, frustratingly the option encrypt with password used from last time has been forgotten, and it asks for public keys etc. -->
<!--- no code necessary , simple workflow issue, configuration and last action cookie not implemented that remembers last way to encrypt, deceypt file, AND location of last encrypt, decrypt,  -->
1.
2.
3.
4.

## Context
<!--- issue makes it less convenient of an app to use when you dont want to us app to manage, delete, find, update or refresh keys locally or on key server -->
<!--- simply and always jump to encrypt/decrypt screen, if that doesnt work then use last known position action and automatically navigate to that app page and remember menue, selection on the page  -->

## Your Environment
<!--- Include relevant details about the environment you experienced the bug in -->
* Android Version: 4.4
* OpenKeychain Version: Newest Feb 6th 2017 as of,
* From Google Play or F-Droid?: Aptoid
* TOR: enabled
 
"
open-keychain/open-keychain,closed,IllegalArgumentException in SecurityTokenUtils (not enough width to fit value: 256/128),"[Label(name=""google play crash-report""), Label(name=""security token"")]","App-Version 42202

Android-Version Android 6.0

Device Galaxy S7 Edge (hero2lte) 3


```
java.lang.RuntimeException: An error occurred while executing doInBackground()
	at android.os.AsyncTask$3.done(AsyncTask.java:309)
	at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
	at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
	at java.util.concurrent.FutureTask.run(FutureTask.java:242)
	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:234)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
	at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.IllegalArgumentException: not enough width to fit value: 256/128
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtils.writeBits(SecurityTokenUtils.java:228)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenUtils.createRSAPrivKeyTemplate(SecurityTokenUtils.java:87)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.putKey(SecurityTokenHelper.java:513)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.changeKey(SecurityTokenHelper.java:163)
	at org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity.doSecurityTokenInBackground(SecurityTokenOperationActivity.java:264)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity.handleSecurityToken(BaseSecurityTokenActivity.java:446)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:172)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:162)
	at android.os.AsyncTask$2.call(AsyncTask.java:295)
	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
	... 4 more
```"
open-keychain/open-keychain,closed,Scanned QR codes have to be in an overly specific format,[],"## Expected Behavior
If I create a QR code with just a fingerprint, e.g. `ABAF11C65A2970B130ABE3C479BE3E4300411886`, I expect the app to recognize it. It should also work with spaces in between, e.g. `ABAF 11C6 5A29 70B1 30AB  E3C4 79BE 3E43 0041 1886`.

## Current Behavior
The app expects the QR code to be a URI using the `openpgp4fpr` scheme and rejects everything else with the non-obvious error message ""QR Code malformed! Please try again!""

## Possible Solution
Modify `ImportKeysProxyActivity` below [line 136](https://github.com/open-keychain/open-keychain/blob/d826e2c32ec49a97eb89e4fa2189143c80d69613/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/ImportKeysProxyActivity.java#L136).

## Context
I thought the app was broken because I created a normal QR code and it kept saying ""QR Code malformed! Please try again!"". I only discovered how to make QR codes that the app can read when I created a QR code of my key with the app, and then scanned it.

If you do not find it acceptable to accept arbitrary fingerprint formats, you could instead make the app inform the user about the `openpgp4fpr` scheme when he scans a QR code that doesn't use it, so that people making their own QR codes and testing them with OpenKeychain can learn more easily about it."
open-keychain/open-keychain,closed,redesign access and allowed secret key api dialogs,"[Label(name=""needs work"")]","This PR redesigns the two api dialogs, from fullscreen into regular material yes/no style dialogs."
open-keychain/open-keychain,open,cursor error during key refresh,"[Label(name=""bug""), Label(name=""help wanted"")]","```
A key could not be imported during multi-threaded import
java.util.concurrent.ExecutionException: java.lang.IllegalStateException: Couldn't read row 0, col 0 from CursorWindow.  Make sure the Cursor is initialized correctly before accessing data from it.
at java.util.concurrent.FutureTask.report(FutureTask.java:94)
at java.util.concurrent.FutureTask.get(FutureTask.java:164)
at org.sufficientlysecure.keychain.operations.ImportOperation.multiThreadedKeyImport(ImportOperation.java:506)
at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:456)
at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.directUpdate(KeyserverSyncAdapterService.java:324)
at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.updateKeysFromKeyserver(KeyserverSyncAdapterService.java:313)
at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.access$300(KeyserverSyncAdapterService.java:55)
at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService$3.run(KeyserverSyncAdapterService.java:291)
at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.IllegalStateException: Couldn't read row 0, col 0 from CursorWindow.  Make sure the Cursor is initialized correctly before accessing data from it.
at android.database.CursorWindow.nativeGetLong(Native Method)
at android.database.CursorWindow.getLong(CursorWindow.java:511)
at android.database.CursorWindow.getInt(CursorWindow.java:578)
at android.database.AbstractWindowedCursor.getInt(AbstractWindowedCursor.java:69)
at android.database.CursorWrapper.getInt(CursorWrapper.java:122)
at org.sufficientlysecure.keychain.provider.ProviderHelper.getCanonicalizedKeyRing(ProviderHelper.java:311)
at org.sufficientlysecure.keychain.provider.ProviderHelper.getCanonicalizedPublicKeyRing(ProviderHelper.java:263)
at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:935)
at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:325)
at org.sufficientlysecure.keychain.operations.ImportOperation.access$000(ImportOperation.java:83)
at org.sufficientlysecure.keychain.operations.ImportOperation$1.call(ImportOperation.java:495)
at org.sufficientlysecure.keychain.operations.ImportOperation$1.call(ImportOperation.java:483)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:423)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
```


This does not happen reproducibly, but it does happen in the auto update service, meaning random crash popup from OpenKeychain :\"
open-keychain/open-keychain,closed,Added insecure warning to import card,[],"## Description
Added an insecure warning in the key import card.

## Motivation and Context
#2030 

## How Has This Been Tested?
Imported a insecure key manually.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Tests for key imports,[],"Create tests for importing different keys in ProviderHelperSaveTest.
Also test different ASCII encodings of key files."
open-keychain/open-keychain,closed,Show insecure in import card,"[Label(name=""help wanted"")]",That a key is insecure should also be shown when expanding a card on import similar to revocation and expiry.
open-keychain/open-keychain,open,Actionable cards for insecure/revoked/expired keys,"[Label(name=""enhancement""), Label(name=""help wanted"")]","For specific key states, such as revoked, expired or insecure we should provide a card below the key view header that provides more details:

### for insecure
This key is insecure. A minimum of 2048 bit is required. Please contact your contact and tell him/her to create a new secure key.

### for revoked
This key is revoked. Please contact your contact and get her currently valid key.

### for expired
This key is expired. Please tell your contact to extend the key's validity.

This is just a first idea. We need to refine the precise texts.
For secret keys we can even provide actual actions below the card, such as an action to automatically extend the keys validity."
open-keychain/open-keychain,closed,Display insecure key warnings,[],"Added changes related to insecure keys, as described in #2022 

## How Has This Been Tested?
Import insecure keys manually.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Deletion/Revocation/Unlinking of Linked Identity,"[Label(name=""enhancement""), Label(name=""help wanted"")]","Unable to delete and/or revoke a linked identity.

## Expected Behavior
When linking identities, I'd expected to be able to unlink if needed.

## Current Behavior
While I can link it, I see no way to delete/revoke/unlink it.

## Possible Solution
Add the option to delete/revoke/unlink it.

## Steps to Reproduce (for bugs)
1. Link a Web site.
2. Find no way to delete/revoke/unlink it?

## Context
I'm trying to unlink a service (oCloud) which I'll be discontinuing.

## Your Environment
* Android Version: 7.1.1
* OpenKeychain Version: 4.2.2
* From Google Play or F-Droid?: Google Play
 
![screenshot_20170202-173156-01](https://cloud.githubusercontent.com/assets/24395966/22572575/b83c9fe0-e972-11e6-9142-4f75014afcd0.jpeg)
"
open-keychain/open-keychain,closed,Replace SuperSLim and FastScroll with FlexibleAdapter in KeyListFragment,"[Label(name=""needs work"")]","<!--- Provide a general summary of your changes in the title above -->
## Description
<!--- Describe your changes in detail -->
I replaced SuperSLim and FastScroll with FlexibleAdapter in KeyListFragment, and also adopt the built-in highlighter. Please tell me if there is something I can improve :)

I will replace these two libraries in other files next days.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
issue #1957 

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested on my phone and ran unit test

## Screenshots (if appropriate):



## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,open,WIP: Bouncy Castle 1.56,[],"TODO:
* [ ] fix Travis
* [ ] more manual testing

## Description
Updating to Bouncy Castle 1.56 release

## Motivation and Context
* newest security fixes and bug fixes

## How Has This Been Tested?
* run on my Android and tested functionality.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Update build environment,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
<!--- Describe your changes in detail -->

## Motivation and Context
Speed up build process


## Types of changes
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,[WIP] implement per key sync preference roughly,"[Label(name=""needs work"")]","<!--- Provide a general summary of your changes in the title above -->
For issue #1847 ，implement per key sync preference roughly
## Description
<!--- Describe your changes in detail -->

- add a column _sync_ in table _updated_keys_.

- When creating a new key, the value of checkbox _""Synchronize with the Internet""_ will be stored in database. 

- In turn, when editing identities of a key, this checkbox goes disabled, following the value in database.

- Updating keys synchronized automatically when entering _ViewKeyActivity_

- Add a checkbox in _ViewKeyAdvShareFragment_ to modify the synchronize configuration. When clicking the checkbox to set a key synchronized, update and upload will be triggered.

I just implement this feature roughly, there is still something I need do. I open this PR to ask for some advice :) Is there some defect in this auto sync mechanism I designed?
 
## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
#1847 

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I tested it for some keys, and ran unit test.

## Screenshots (if appropriate):

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Breaking change (fix or feature that would cause existing functionality to change)
"
open-keychain/open-keychain,closed,Display insecure key warnings,"[Label(name=""enhancement""), Label(name=""help wanted"")]","On import:
* If a subkey is insecure (as in ``PgpSecurityConstants.isSecureKey()``) it should be marked as insecure in our database, similar to revoked. 

In OpenKeychain's key lists/views:
* If all subkeys and the master key in an OpenPGP key are insecure, display them exactly like revoked keys are displayed. Only with a different message such as ""This key is no longer secure and thus must not be used anymore.""

Selection for encryption:
* Do not allow selection of these keys for encryption, similar to revoked keys handling"
open-keychain/open-keychain,closed,Does not find keys with an empty email address,[],"I have imported a public key that contains only a name, and no email address. I have linked this key to the corresponding contact in OK. However, I can't encrypt emails to this contact in k-9 mail. It only shows a red padlock, and when trying to force encryption it says ""private mode activated, but some recipients don't have keys"".

## Your Environment
* Android Version: 6.0.1
* OpenKeychain Version: 4.2.1
* From Google Play or F-Droid?: Google Play
* k-9 Version: 5.203
 
"
open-keychain/open-keychain,closed,WIP: Bouncycastle 1.56,[],"TODO:
* [ ] fix Travis
* [ ] more manual testing

## Description
Updating to Bouncy Castle 1.56 release

## Motivation and Context
* newest security fixes and bug fixes

## How Has This Been Tested?
* run on my Android and tested functionality.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,open,Implement unencrypted backup for public keys,"[Label(name=""enhancement""), Label(name=""help wanted"")]","## Expected Behavior
For backing up public keys only, we should allow unencrypted backups again.

## Possible Solution
In the Backup/Restore screen, if the user clicks ""All keys"", there should be no Backup Code generation and encryption. Instead the file dialog should directly allow backups that are unencrypted. Backing up ""All keys + your own keys"" should still be encrypted.
"
open-keychain/open-keychain,closed,"Backup API, implement EXTRA_REQUEST_ASCII_ARMOR",[],"## Description
Added a new instance variable mEnableAsciiArmorOutput to BackupKeyringParcel and updated it's usages.

## Motivation and Context
For #1856
Replacing #2017 

## How Has This Been Tested?
Created a backup with and without ASCII armor using the Backup screen in the app and opened the file to verify it's contents.


## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,"Backup API, implement EXTRA_REQUEST_ASCII_ARMOR",[],"## Description
Added a new instance variable mEnableAsciiArmorOutput to BackupKeyringParcel and updated it's usages.

## Motivation and Context
For #1856 

## How Has This Been Tested?
Created a backup with and without ASCII armor using the Backup screen in the app and opened the file to verify it's contents.

## Types of changes
- ✅ New feature (non-breaking change which adds functionality)
"
open-keychain/open-keychain,closed,Some operation tests are failing,[],"Running the tests in the operations test directory except the BenchmarkOperationTest causes an AssertionError with the message ""initial test key creation must succeed""."
open-keychain/open-keychain,open,keytransparency.org,"[Label(name=""enhancement"")]","keytransparency.org is a proposed system for publishing gpg keys and recording thair modification history.
This can replace a traditional key server.
The api has 3 commands, get a key from an email address, submit a key to the server and retrieve the history of the key.

This project seems to be in the early phase of development and it does not seem there is a public server to use yet.
See the google blog post and the project on github.
https://security.googleblog.com/2017/01/security-through-transparency.html
https://github.com/google/keytransparency/"
open-keychain/open-keychain,open,SecurityException in ImportKeysActivity,"[Label(name=""bug""), Label(name=""help wanted"")]","4.2.1

```
java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=94211, result=-1, data=Intent { dat=content://media/external/file/3662 }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.SecurityException: Permission Denial: reading com.android.providers.media.MediaProvider uri content://media/external/file/3662 from pid=11165, uid=10155 requires android.permission.READ_EXTERNAL_STORAGE, or grantUriPermission()
	at android.app.ActivityThread.deliverResults(ActivityThread.java:4094)
	at android.app.ActivityThread.handleSendResult(ActivityThread.java:4137)
	at android.app.ActivityThread.-wrap20(ActivityThread.java)
	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1529)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:154)
	at android.app.ActivityThread.main(ActivityThread.java:6123)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:867)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:757)
Caused by: java.lang.SecurityException: Permission Denial: reading com.android.providers.media.MediaProvider uri content://media/external/file/3662 from pid=11165, uid=10155 requires android.permission.READ_EXTERNAL_STORAGE, or grantUriPermission()
	at android.os.Parcel.readException(Parcel.java:1683)
	at android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:183)
	at android.database.DatabaseUtils.readExceptionWithFileNotFoundExceptionFromParcel(DatabaseUtils.java:146)
	at android.content.ContentProviderProxy.openTypedAssetFile(ContentProviderNative.java:692)
	at android.content.ContentResolver.openTypedAssetFileDescriptor(ContentResolver.java:1145)
	at android.content.ContentResolver.openAssetFileDescriptor(ContentResolver.java:982)
	at android.content.ContentResolver.openInputStream(ContentResolver.java:702)
	at org.sufficientlysecure.keychain.util.FileHelper.isEncryptedFile(FileHelper.java:233)
	at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment.startImportingKeys(ImportKeysFileFragment.java:146)
	at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment.onActivityResult(ImportKeysFileFragment.java:133)
	at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:167)
	at org.sufficientlysecure.keychain.ui.ImportKeysActivity.onActivityResult(ImportKeysActivity.java:320)
	at android.app.Activity.dispatchActivityResult(Activity.java:6931)
	at android.app.ActivityThread.deliverResults(ActivityThread.java:4090)
	... 9 more
```"
open-keychain/open-keychain,closed,Better handling of User ID corner cases,[],"<!--- Provide a general summary of your changes in the title above -->

## Description
Better handle corner cases of User IDs

## Motivation and Context
Fixes https://github.com/open-keychain/open-keychain/issues/1944 and https://github.com/open-keychain/open-keychain/issues/1699

## How Has This Been Tested?
SplitUserIdTEst

## Screenshots (if appropriate):

## Types of changes
<!--- What types of changes does your code introduce? -->
<!--- Please remove all lines which don't apply. -->
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Cannot import public key from file,"[Label(name=""bug"")]","## Expected Behavior
When trying to import [this public key](https://gist.githubusercontent.com/bartgenuit/a7cdb77ab3a5b80fde84c1c669c357d6/raw/6d1a560bbd3db24f5461864b12b297e60ae91ac2/werner.asc) (of Werner Koch, ~1MB), I expect OpenKeychain to import the keys contained in the file.

## Current Behavior
OpenKeychain throws error
```No valid keys found in file/clipboard!```

## Possible Solution
I suspect this having something to do with Werner's key not being standard, or possibly malformed by GnuPG. Loading from keyserver doesn't work either, nor does loading from the key at eifelkommune.de.

## Steps to Reproduce (for bugs)
1. Import [this key](https://gist.githubusercontent.com/bartgenuit/a7cdb77ab3a5b80fde84c1c669c357d6/raw/6d1a560bbd3db24f5461864b12b297e60ae91ac2/werner.asc) or [this key](http://werner.eifelkommune.de/mykey.asc) from file, OR
2. Import the key by searching for handle ```0xF2AD85AC1E42B367```, OR
3. Import the key by searching for email ```wk@gnupg.org```.

## Context
I'm trying to add the public key or Werner Koch, as I'm subscribed to the gnupg mailing list, which is signed with his key, and K9 doesn't even *display* a signed message if you have encryption enabled but don't have the signing key (not your fault, but that's what started this in the first place :sweat_smile:)

## Your Environment
* Android Version: 5.1
* OpenKeychain Version: 4.2.1
* From Google Play or F-Droid?: Google Play
 
"
open-keychain/open-keychain,closed,API: Restrict secret keys for sign operation,[],"## Description
- Added fields for storing allowed keys and indicating that a disallowed key was used.
- Assigned the fields to related values in the API Service
- Added the checks in the related Operation file

## Motivation and Context
For #1830 

## Types of changes
- ✅ Bug fix (non-breaking change which fixes an issue)
"
open-keychain/open-keychain,closed,Update English message for security_token_reset_or_import,[],"I feel like this version sounds more natural. If you disagree, feel free to decline the PR. :smiley: 

(Also, see [this chart](https://books.google.com/ngrams/graph?content=this+information+can%2C+these+information+can&case_insensitive=on&year_start=1800&year_end=2000&corpus=15&smoothing=3&share=&direct_url=t4%3B%2Cthis%20information%20can%3B%2Cc0%3B%2Cs0%3B%3BThis%20information%20can%3B%2Cc0%3B%3Bthis%20information%20can%3B%2Cc0%3B.t4%3B%2Cthese%20information%20can%3B%2Cc0%3B%2Cs0%3B%3BThese%20information%20can%3B%2Cc0%3B%3Bthese%20information%20can%3B%2Cc0) on Google Ngram viewer.)"
open-keychain/open-keychain,closed,"Use of Open KeyChain for Twitter, Github, etc.",[],"Hello.

I am interested in instructions on how to use the Linked Identities feature under the Settings/Experimental Features tab.

This seems interesting. How does it work?"
open-keychain/open-keychain,closed,Remove api apps when they are uninstalled,[],For #2006 
open-keychain/open-keychain,closed,[WIP] replaced some splitUserId (#1846),[],"#1846 

replaced some splitUserId that could be taken place directly by the new database columns.

seems that the other occurrences of splitUserId are irrelevant to database, e.g. The way to import key from clipboard is retrieving userId at first, and then get name etc by splitUserId. How should I deal with them?"
open-keychain/open-keychain,closed,Remove unused API apps,"[Label(name=""api todo""), Label(name=""help wanted"")]",Hear on ``PACKAGE_REMOVED`` and then remove API binding to that app.
open-keychain/open-keychain,closed,cannot import public key in open keychain,[],"When i try to import text from block ( copy to clipboard) for decryption with my key, openkey chain says "" no data to decrypt"" ... ..further i cant import public keys in text format from others...Can anybody help please?   thx"
open-keychain/open-keychain,closed,Crashes whenever I try to use a key,[],"I've imported the key for edward-en@fsf.org via search. Whenever I tap the key, Open Keychain crashes. I have tried deleting and re-importing, but no use. The same thing happens 100% consistently.

I also cannot encrypt mail to the recipient in K-9 mail. An error about selecting row 0, col 0 from cursorwindow.

This is on CyanogenMod on a Galaxy S5, and Open Keychain 4.2.1 from f-droid. Let me know if you need me to test or collect further diagnostics."
open-keychain/open-keychain,closed,Can't import private key,[],"I exported my private key using Enigmail (v1.9.6.1) on Win7. When I try to import it using OpenKeychain (v4.2.1) [Android 6.0.1 (Android security patch level Dec 1, 2016) on my Galaxy Tab S2], the program crashes. If I copy the private key to the clipboard and try to import it that way, I get an error ""bad data"". I have not modified the expiry date of the key (it has no expiration date).

I can import the key on CentOS using gpg (v2.0.14). If I export the private key from there, I get the same crash on Andriod if I try to import the key.

The key uses RSA 2048 bits. They key has three email identities,"
open-keychain/open-keychain,closed,onion address on 4.2.1,[],"After upgrading from 4.1 to 4.2.1 onion keyserver doesnt work, it crashes. If you add new keyservers onion address, always invalid url error. Worked perfect on 4.1"
open-keychain/open-keychain,closed,externalprovider: use temp table for query,[],"This commit introduces a temporary table to KeychainExternal provider.

This is used to return a result set that contains the exact query as identifying column, rather than the matching user id. This is helpful because we match case insensitively internally, while the querying implementation might wish to map search results against verbatim search strings.

The available projection columns are now address, status, and user id. If the client queries only address and status, they will be grouped into the best available verification status. Otherwise, it will be one verification status per user id (which is what K-9 does at the moment).

Related to #1935"
open-keychain/open-keychain,closed,NPE in CardCapabilities,"[Label(name=""bug"")]","From Google Play dev console
App-Version 42100
Android-Version Android 6.0

Unfortunately, we don't know which security token has been used as this is not provided by the user.

```
java.lang.RuntimeException: An error occurred while executing doInBackground()
	at android.os.AsyncTask$3.done(AsyncTask.java:309)
	at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
	at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
	at java.util.concurrent.FutureTask.run(FutureTask.java:242)
	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:234)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
	at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.NullPointerException: Attempt to read from null array
	at org.sufficientlysecure.keychain.securitytoken.CardCapabilities.<init>(CardCapabilities.java:31)
	at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.connectToDevice(SecurityTokenHelper.java:203)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity.handleSecurityToken(BaseSecurityTokenActivity.java:444)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:172)
	at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:162)
	at android.os.AsyncTask$2.call(AsyncTask.java:295)
	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
	... 4 more
```"
open-keychain/open-keychain,closed,Add buttons to get the app easily ;),[],
open-keychain/open-keychain,closed,spelling fixes,[],patch contains some spelling fixes ( just in comments ) as found by a bot ( https://github.com/ka7/misspell_fixer )
open-keychain/open-keychain,open,RuntimeException in ImportOperation,"[Label(name=""bug"")]","From Google Play dev console

Just one report until now and only with 4.2
```
java.lang.RuntimeException
	at org.sufficientlysecure.keychain.operations.ImportOperation.multiThreadedKeyImport(ImportOperation.java:515)
	at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:456)
	at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:83)
	at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:149)
	at java.lang.Thread.run(Thread.java:818)
```"
open-keychain/open-keychain,closed,Contact synchronization notification,"[Label(name=""bug"")]","My problem is related to issue #1720 

I am still experiencing these notifications ""Access to contacts required. Touch to configure linking to contacts"",
they keep coming, as I did not enable the ""Link keys to contacts"" feature.

    Nexus 5 (Android 6.0.1)
    OpenKeychain 4.2 (installed via F-Droid)

How can I help to pinpoint the problem?"
open-keychain/open-keychain,closed,support odd rsa moduli on security tokens,[],"what it says on the tin. fixes #1994 I think, but can't really check to make sure. Can you look over this @af-anssi ?"
open-keychain/open-keychain,closed,'Unusal' key length prevents signing e-mails,[],"I'm using a signing key, that uses none of the standard lengths 1024,2048,3072, 4096 ... but a length of 3104 bits. If I try to sign an e-mail with my yubikey, open-keychain complains about about an unexpected number of bytes (388 bytes in this particular case) being were returned (I assume by the yubikey?). 

From my understanding the number of bytes returned, depends on the used key length. The key length could be - more or less - arbitrarily chosen. Hence, any sanity check must not test for only four valid but must assure that the number of returned bytes is in conformance with the used key length."
open-keychain/open-keychain,closed,Move key extraction logic into its own class,[],"This PR extracts the key logic (""which encryption keys to use, given a bunch of extras, possibly returning a pending intent for user interaction"") from OpenPgpService into its own, testable class - and adds tests for it! Woop woop.

Also fixes #1990"
open-keychain/open-keychain,closed,NPE in ParcelableHkpKeyserver.getURI,"[Label(name=""bug"")]","From Google Play
since 4.2


```
java.lang.NullPointerException: Attempt to invoke virtual method 'int java.lang.String.length()' on a null object reference
	at java.net.URI$Parser.parse(URI.java:3050)
	at java.net.URI.<init>(URI.java:590)
	at org.sufficientlysecure.keychain.keyimport.ParcelableHkpKeyserver.getURI(ParcelableHkpKeyserver.java:166)
	at org.sufficientlysecure.keychain.keyimport.ParcelableHkpKeyserver.getOnionURI(ParcelableHkpKeyserver.java:157)
	at org.sufficientlysecure.keychain.keyimport.ParcelableHkpKeyserver.getHttpUrl(ParcelableHkpKeyserver.java:192)
	at org.sufficientlysecure.keychain.keyimport.ParcelableHkpKeyserver.add(ParcelableHkpKeyserver.java:413)
	at org.sufficientlysecure.keychain.operations.UploadOperation.uploadKeyRingToServer(UploadOperation.java:160)
	at org.sufficientlysecure.keychain.operations.UploadOperation.execute(UploadOperation.java:107)
	at org.sufficientlysecure.keychain.operations.UploadOperation.execute(UploadOperation.java:59)
	at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:149)
	at java.lang.Thread.run(Thread.java:761)
```"
open-keychain/open-keychain,closed,LinkedIdCreateGithubFragment: IllegalArgumentException: Unexpected char,"[Label(name=""bug"")]","From Google Play

```
java.lang.RuntimeException: An error occurred while executing doInBackground()
	at android.os.AsyncTask$3.done(AsyncTask.java:326)
	at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
	at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
	at java.util.concurrent.FutureTask.run(FutureTask.java:242)
	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:244)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)
	at java.lang.Thread.run(Thread.java:761)
Caused by: java.lang.IllegalArgumentException: Unexpected char 0x0a at 82 in header value: Basic Yzk0MmNkODE4NDRkOTRlN2U0MWI6ZjFkZDE3ZTcwYTA2MTRhYmJkOTMxMGIwMGEzMTBlMjNjNmM4
ZWRmZg==
	at com.android.okhttp.Headers$Builder.checkNameAndValue(Headers.java:313)
	at com.android.okhttp.Headers$Builder.set(Headers.java:275)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.setRequestProperty(HttpURLConnectionImpl.java:545)
	at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.setRequestProperty(DelegatingHttpsURLConnection.java:258)
	at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.setRequestProperty(HttpsURLConnectionImpl.java)
	at org.sufficientlysecure.keychain.ui.linked.LinkedIdCreateGithubFragment$7.doInBackground(LinkedIdCreateGithubFragment.java:383)
	at org.sufficientlysecure.keychain.ui.linked.LinkedIdCreateGithubFragment$7.doInBackground(LinkedIdCreateGithubFragment.java:373)
	at android.os.AsyncTask$2.call(AsyncTask.java:306)
	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
	... 4 more
```"
open-keychain/open-keychain,closed,Can't select keys from open-keychain to use with Android Password Store,[],"In Android Password Store I can select OpenKeychain as my OpenPGP provider to select which keys to use for encryption. Both my keys are listed but when I try to select receivers and save the screen is just reloaded showing the same keys with none selected.

![screenshot_2017-01-11-12-50-11](https://cloud.githubusercontent.com/assets/10165473/21847619/16230536-d7fd-11e6-973b-cdbeca214762.png)
"
open-keychain/open-keychain,closed,Can't confirm keys with Yubikey,[],"I have a Yubikey with only subkeys which I use for encrypt/decrypt and signing operations. I've successfully imported my public key which is only present on keybase.io and then bound my yubikey to it in the open-keychain app. However, when I try to confirm another key with a fingerprint I can't select my key from the list. It is present but I can't select it.

Another problem I noticed is related to the Android Password Store where I can't select my gpg key to use for encryption. I can select open-keychain as an OpenPGP provider and then list the keys available. When I try to select receivers I can see my key but when I try to select it the screen is just reloaded."
open-keychain/open-keychain,closed,my yubikey just put in a key at complete random please delete.,[],
open-keychain/open-keychain,closed,K9 does not appear to recognize a PGP key if there is a capital letter in the email address,[],"If I use K9 to send an email to ""Look@my.amazin.horse"", it will not recognize the pgp key.

However, if I use K9 to send an email to ""look@my.amazin.horse"", it will recognize the pgp key.

The only difference is the auto-capitalization on the ""L"" at the start of the email address.

As email addresses are not case sensitive, this is a corner case that renders Open-KeyChain unusable for the vast majority of people, especially as Android automatically capitalizes the email address. "
open-keychain/open-keychain,closed,Error! Could not decrypt this message: Error: Ascii armor integrity check on message failed: '' should be 'VQBO',[],"I encrypted a message with OpenKeyChain v4.1 (41010) using K9 on Android. This message failed to decrypt on my PC with the following 3rd party PGP apps:
- Mailvelope (Chrome version)
- Mailvelope (FireFox version)
- CryptUP (Chrome version)

In every case, the error message was the same:

> Ascii armor integrity check on message failed: '' should be 'VQBO'

It worked fine when decrypting on Android/K9.

Here is the message (its the same for Mailvelope as well):

```
Message is either badly formatted or not compatible with CryptUP. 

Ascii armor integrity check on message failed: '' should be 'VQBO'

-----BEGIN PGP MESSAGE-----

hQIMA6J6dUviQC7vAQ//SQjiQvVYhpat+8K65AJbUjgVGXBXhDLzQNqP69U0uKkp
RWBNhu4J/RUCDdMarDu9CSYZiAEeYAZILHEhpxaSLIHW+VccyS7Ov4CBLpcHE9lW
8oKnhs6CH0Fgi6sz1qH8X+DaWR9DXlnpfvTJ/OmmbV2f4MBLXdiWKnrw+GD9Sv06
013291cVT+Ra5SWwhLXO7S+19G3eYUQy7qgDXqGOO9G39BjCnjpQsnKEpR8yJtEE
FiDo2mSJyGmoPqMpKeeLfHs5zRMh9326WwgJSLiCn2EVMU7z05XMB9jyBDAZ26Zx
+k0MNZ8UjuyaysvfBbWjiMAUGxEKno+pMCgoteykDaf0hlTIWgJrVJDao2D/RdAc
glsCSeNDUEdG9vkI0Knx1jecft9qPfdmDTHvMm1vaDowEQa7MXA8ktl+cVdaKsSG
OZZmmFxlIlMb58dX4VDreebv/AcxtSh2yfKPSO3z2VU9oGSl1W4Jey+VUcTLxH2y
QEPP/R5LgmfmnBzj+Rl3408rC6ukKMhI4Xv7OgIx9vDGE+xRs+lrYSnE0ATSBTQ0
CguhcYJDeWoze44au68MwJ+KJGysvNUWuXfk6jhfNFN72scb6nqEWBET02/y/SsY
GMfJM3PN94vQ7BQoKSPNtQ60HU01Zj1ngaUz9erQjooFMW5JlwiKU54JzabcgRuF
AgwDiOGbcUTEMM0BEACQUnNoK37GC4VaVWbnbmzqM6XUDabomP1Go6e1TI9PI8H8
YNXhF6JIeclTeEZwViu/9ngAonkDVe/FtyTzwRjBbiQ7+hJOee7oN1RpfXeowVGV
BLPJ+DqF3z5lg5IujejflXYNQGbej2Wx061qLp7etbirmJLqFNf0SwKENf0sEvTs
NJRHRk5seCYstEuI+QMnt6bIfTlkDZQdKzwzHVgNUUr7XugJFMxnVqpBu6y/4cyo
ruGSTSU5W5IqAUy3YHvy/zFpqRfB5MpFqhR7YCqIcdyNJ7vTyIjIkqTAzhuChe7R
Mm0ywmNFanZB3V5/R0rcSRqNt5icctWTN+MRPH1UaRfMzF0sbS0gejCSzgqulUTb
Ql/vh+FStW1vKuxoc35oP4Wt8IsES0QMSAynbQhrqXdJk3qAEvrKKDzsfJGuBmrr
thvweTwU0jGYnzfiTu3rFaEX9UlgfA0pENMGzQB4EgvoDk3cGMPwDy3HJ6yUsmFv
aRbkOl+6HAyqcwf4drNcJi5pWYH935aDoF61vLWUdeIuR5n+ORAlcGsF97qZL3tV
JTkoPZVDR/hLI3QylpRBQYcwXr48GqM+jIoiFKYJOXiMsTrwWTpbyOv9CuEZZDPN
DW5KitU1g6nxayyULThR4rF9rRqcM91YjYRPWK3cV7zkwm82Xbw5YYk0DN1Iw4UB
jANhKyOXt2PxSAEMAKpLULcKw0MkDlAgPXQEsDiqfi/HlAVV2nJ4f69WQYC+p2ET
agH8+7o/2mGo7QOYzL43O8WzHQXjnYDX+xp1vz46ggkXmOU6xaTUXWv//MOM+h72
ICqTEl04dWQ+p8aKtRzTM0zOjgMP3UoC1cpU/UeHj1qaFw3waz0XOhtIwE/r5K6Y
tlizsUIYggFydKr7zKYV1aZlwPgNJqfpgahVAKFvNtlRaMIg16XNbyoOC3MlmKdc
En3NTnWmlWvUeZUO3yw8Q9GbNgtOB0YeY6BFso0D86y0vdjIHZYsO16sTtV3VAx7
/jr/lFFSVJqPJz67uzSavSd4PktJwyyvpmiQtnDLq3znkkTO3tdejuWw7LkY+Zx8
CPfTTFlZXUGmtP/QwRWklKjPkmc0JtaGC5aiygmMwE5TkmRn7kHjj5+0u6nKK+0B
x3IPqOgvuCDnlrTSkNCcn9V2PXxeH60Ttrgo6TggF3Yku3cYnAOUC9DOvZF5duyK
0G9yt9uw8UE6GJGbf4UBjANhKyOXt2PxSAEMAJ+CzK3gKARvD6ql9OzYnojqxoui
Hcrb9rrmERdiwlgs96QE+U4idBIS1q8z3pO1Wg8ZdKP7I7v+RnClGi3OsIwlzsz2
sIzNyw0+YURKhN2H1IWn1BJvMI4U3+CmesiMqqGUQpkeohcxZev9X0iJ1PPY2liP
WNMeTh00ZQoyDhMRGj3YHSkvPvoIxpKwoqSiL5Se5DVCr4MwHBvQwGWurQe8CIuI
s1TZjKFxaNWUpi6oYwKXfV9rlX9KgVF36RUhtaeEGiQJ9FoBbQww0sF2lgbZVdFK
1SYSXJ3QVfo/f1rpQ0XHk1a3upFF3tn7fVDKD56gtqQwm5iB1yJZIrmoB/mCEwMK
2/y2i9EPN/bZ3TTi1TDm5qFpSpsN1pcg60HZUh1ftweur10dEe+YBhiDTu/ilGvR
k4s/9tcgYZ5IKBbcX82dTylvy4E+qRYfvqEus9acwtX5rxoCRxs0MRVvaMKxQQPs
ws6i4GnPS+497NKHeMfmDfIE0uSj4IuAwjjg/tLBbAG4ph/4n9CzOi4lZMG2BJdF
c8zMXayuqh7miQs5PNuKht1J6ZhYCkOcDdnmEBX31kf1g4w58RsZ3dAhANfMWNDM
QF2WBBnqA1wh6mDnCGqCaoTbNMKsFVKmx/KdGZ7iah/9YWqXylf95K2/X/aHceU8
DEdOlwDoVjXqJ+8oXr//NvqDhr1kk2qEdMobA9awuP6imjtJVxQLa6aecfINph4p
1yzfSfqUJcLvJqSk+fHWPJJIP2/4V38xErcVZ31SdiFIjBKYottLqfaDPBh1Uppz
3r09YfBse903x9uoBXi0zB34NTkSnX2XmrA+Ukzg6TPyo1FuoKSo8o9HGQ69ho0w
7SYr8UjQtRYkKyKO7xeZ5tMnxfGWeTMfqX1eTQeJ16OboBhpphXZEuspbme02NJt
5F9tL/ALHydowNFuDqct1Z89mxQg4KmB1BzapdEXhrbYSNeh9yPdrvykPPdBuL3t
R4ns91/hTyx5gEvSNbmN5ff/BaZE4SFay3NtCoPvU/QBjOQ/s1S0HkPTBtz0051O
cSh4K+1GXOfsIAN9Af5oszlzdu7v2yEut5DgRtupddzaoqbRVM+3jSmhFqatwVJI
ZffbIKU5mjiLr2UBGbwv7CUlnuIZJwtx4xqGernwrTvOisyh+2QzYTUoyyUvdjYv
bRaoysPe52DaWYSAVLeKR631ALz4WW2r6SWT+ku3nhaXnth5D7CxIvm1jG+xhbJI
XSCV8Q1KNpFrzzMqKpE
-----END PGP MESSAGE-----
```

"
open-keychain/open-keychain,closed,Encrypt/Decrypt text doesn't preserve new lines,[],"When you encrypt some text in OpenKeychain and you use the newline character, it's not preserved during decryption."
open-keychain/open-keychain,closed,Add new authors to about,[],Add new authors to about for next release
open-keychain/open-keychain,closed,Expired key while just made,[],"I have two phones with k9 installed and Openkeychain. I used https://www.openkeychain.org/howto to configure both phones. So i created a key, uploaded it to the keyservers and downloaded the key of the other phone from the server.

So everything is set, but when i want to send mail with K9 (version 5.200) it gives me a weird error.

> Send failed: Revoked/Expired key cannot be used for sign or encryption

Both keys are brand new, so they are not revoked or expired (or Openkeychain must has its settings wrong).

Another strange part is this

Phone A (K9 5.200) gives the error above when i want to send the mail.
Phone B (K9 5.202) doesn't give an error and sends the mail to the other phone, but on the other phone i get:

> Security Warning: This message was signed by an expired key

So apparently both phones have expired keys. Help?"
open-keychain/open-keychain,closed,synchronize,[],
open-keychain/open-keychain,open,NPE in ImportKeysAdapter.handleResult,"[Label(name=""bug""), Label(name=""help wanted"")]","
```
AndroidRuntime  D  Shutting down VM
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  FATAL EXCEPTION: main
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 28846
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.Object java.util.List.get(int)' on a null object reference
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysAdapter.handleResult(ImportKeysAdapter.java:257)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at org.sufficientlysecure.keychain.keyimport.processing.ImportKeysOperationCallback.onCryptoOperationSuccess(ImportKeysOperationCallback.java:48)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at org.sufficientlysecure.keychain.keyimport.processing.ImportKeysOperationCallback.onCryptoOperationSuccess(ImportKeysOperationCallback.java:24)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.onHandleResult(CryptoOperationHelper.java:346)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper$1.handleMessage(CryptoOperationHelper.java:299)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:154)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:6119)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)
01-05 14:44:20.892  28846    28846         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)

```"
open-keychain/open-keychain,closed,fix loop bug in key selection,[],"I originally wanted to redo this entire activity, but that turned out to be more complex than I had thought. This fixes the current dialog instead - I hope :)"
open-keychain/open-keychain,closed,Completed translation into Dutch,[],Completed translation into Dutch through Transifex.
open-keychain/open-keychain,closed,Form for selecting multiple keys does not close,[],"How to reproduce:

1. Import two different keys for the same email address
2. Create an email in K-9 Mail addressed to the above recipient
3. Enable encryption, then send the email
4. The attached form will open

The checkboxes won't toggle if I click on them.
If I hit the OKAY button, the window disappears and appears again.

There is no way to continue from here, other than canceling and returning to the mail editor.
"
open-keychain/open-keychain,open,Bad key for encryption: %s,"[Label(name=""bug"")]","### Expected behavior

When sending an email to a contact with an outdated encryption subkey, I should get an error message explaining what failed and on which key.

### Actual behavior

Currently, a toast appears with message ""Bad key for encryption: %s"" which:

- does not tell me which key has a problem
- does not tell me what the problem is

### Steps to reproduce
1. compose an email to a contact with an outdated encryption subkey
2. press the send button
3. you get a toast with ""Bad key for encryption: %s""

### Environment
- K-9 Mail version: 5.200
- Android version: 6.0.1
- OpenKeychain version: 4.1 (41010)

/cc @DamianCassou "
open-keychain/open-keychain,closed,"Replace ""remembered passwords"" wording in notification",[],"I've noticed wrong wording for cached passwords:

![screenshot_2016-12-31-05-29-44](https://cloud.githubusercontent.com/assets/223439/21584160/ca0a3c1c-d06a-11e6-892e-ea80cee5bfeb.png)
![screenshot_2016-12-31-05-29-08](https://cloud.githubusercontent.com/assets/223439/21584162/cc32b758-d06a-11e6-9c9f-4b77db2723af.png)

While one can ask an app to remember credentials, the app itself does not remember them, but uses a cache to store them.

The correct term is `cached` instead of `remembered`.

I've opened a pull request #1975"
open-keychain/open-keychain,closed,fix wording: remembered -> cached,[],"While one can ask an app to remember credentials, the app itself does not remember them, but uses a cache to store them.

The correct term is `cached` instead of `remembered`."
open-keychain/open-keychain,closed,fix typos in german translation,[],
open-keychain/open-keychain,closed,fix loading of multiple keys simultaneously,[],the way `mCurrent` was used simply wasn't capable of handling multiple processes at once. proposed fix
open-keychain/open-keychain,open,"""No data to decrypt"" when using clipboard on Android 6.0.1",[],"I use Gmail on Android and copy encrypted messages to clipboard since Gmail doesn’t have any integration for encryption. I saw some similar errors on Google from about a year ago but don’t see this as a current issue. When attempting to decrypt clipboard contents, I receive the “No data to decrypt” error. I also receive this error when using Android’s built in text selection share. My current work around is to copy the encrypted content from the email, paste it into a text file and then use the select input file option. This workaround decrypts the contents just fine. I have also tried using PGPClipper (yes, I know it’s deprecated) but that didn’t work either. I am using a Galaxy S6 running Android version 6.0.1 with Openkeychain version 4.1"
open-keychain/open-keychain,closed,Large import breaks on unknown public key type,[],"When I attempt to import a key using a file picker, I get the message ""No keys found"". If I try import by the clipboard, I get the message ""Bad data"". I am quite sure these keys are valid; they are identical files to ones I used to import into APG.  This is an Asus tablet, Android 5.0.2."
open-keychain/open-keychain,closed,"Using keys for other applications (password store or k9mail) gives a ""toast"" error",[],"Hi, I have lolipop on my phone and openkeychain seems to not be working as expected (it works fine on a kitkat phone i have), when i select the key to encrypt the files i get a ""floating message"" (i think it is called toast) saying something like this:

`Error from OpenKeyChain: attemp to invoke method 'android.content.intent org.openintents.openpgp.IOpenPgpService2.execute(android.content.intent, android.or.parcelfiledescriptor, int)' on a null object reference`

The error may not be exactly the same as the one that showed on screen because i dont know how to copy toast messages
"
open-keychain/open-keychain,closed,Uses wrong key for signing,[],"I am using K9 mail and in OpenKeychain I have two private keys for the same mail address, one older one without a name field (listed first in OpenKeychain) and one recent version with a name field.

For some strange reason for signing always the old one is used, probably because it is listed first. However as keys sometimes replaced by new ones and in this case it would be more useful if the most recent key is used for signing."
open-keychain/open-keychain,closed,Importing keys already on token,[],"I have a Yubikey Neo already with keys stored from an air gapped machine.  I don't see how to convince OpenKeychain to use these.  If it's possible then can we get some specific documentation on the method, or if currently not possible, add a method for enabling use of keys already on token.  I could help test or with docs.
"
open-keychain/open-keychain,closed,Sender's Pub key used,[],"Hi,
I have two same email adresses from different providers:
Some.email@provider1.com
Some.email@anotherprovider2.com
For each of those adresses I have separate keys. When I am sending an encrypted email from first one to second one, pubkey from first one is used.
Then, I must decrypt an email in Some.email@anotherprovider2.com with privkey for Some.email@provider1.com.

I tested on Android and on Linux with Thunderbird. Only Android with openkeychain do the mistake.

Thank you, Michael Kej"
open-keychain/open-keychain,open,Allow saving same new key to multiple NFC tokens,"[Label(name=""enhancement"")]","It is a bit scary to save a key that one expects to use to just one NFC Token, but if you have multiple tokens there seems to be no way to save the same newly generated key to multiple devices?  With  a Yubikey NEO it seems one can do the backup and then manually import the key into the Yubikey using command line tools and the USB interface, but how would one provision the same key to multiple Fidesmo cards?  It would be nice to have the option after saving the key one device to save it immediately to another, or to copy a key from an existing device to a backup device."
open-keychain/open-keychain,closed,Import of ECC primary keys OR RSA4096  subkeys not working from local keyring or  smartcard.,[],"Using LG LS665, running  Android 5.1.1 and openkeyring version 4.1 (41010) --from play store.


Using  Key Search (with hkps://pgp.mit.edu | hkps://pool.sks-keyservers.net| hkps://keys.fedoraproject.org ) 
my key shows using the standard hex notation but shows as unknown,256 bit

The key has  ed25519 primary , 2 nist521 subs, 1 cv25519 [E] subkey, and one each [SEA] rsa4096  subkeys ( 6  subs in total) and openkeychain seems to be unable to toggle to teh rsa keys to import.

Same thing is observed with import from file with $keyid.asc 
this all done without an OTG or NFC."
open-keychain/open-keychain,open,"Refactor OpenKeychain into a OpenPGP library for Java and Android, and an Android app","[Label(name=""enhancement"")]","As discussed before, it would be great to have a consumable OpenPGP library which runs on Java SE and on Android. This would allow me for example to implement XEP-373 / -374 in Smack.

The work you guys did for OpenPGP is just awesome, I'm sure other projects would love an usable open-source OpenPGP Java library. So please consider splitting the OpenKeychain (OK) codebase into a functional OpenPGP library part and OK."
open-keychain/open-keychain,closed,Not able to send encrypted mail to receipts whose keys are not present,[],"When I try to send an signed, encrypted email to a recipient the openkeychain pops up says ""No keys were found for these email addressess"" and the mail cannot be send. There is no need for the recipient's  key inorder to send. Eg: Thunderbird (dekstop) sends fine. Please remove this restriction."
open-keychain/open-keychain,closed,Before next release: Test old Android versions,[],"Before releasing OpenKeychain 4.2:
Test it on old Android versions"
open-keychain/open-keychain,open,Implement signature issuer fingperint,[],"Agreed upon in the WG:

 

>  #### Issuer Fingerprint
>   
>   (1 octet key version number, N octets of fingerprint)
>   
>   The OpenPGP Key fingerprint of the key issuing the signature.  This
>   subpacket SHOULD be included in all signatures.  If the version of the
>   issuing key is 4 and an Issuer subpacket is also included in the
>   signature, the key ID of the Issuer subpacket MUST match the low
>   64 bits of the fingerprint.
>   
>   Note that the length N of the fingerprint for a version 4 key is 20
>   octets.
>   "
open-keychain/open-keychain,closed,"""Update all keys"" broken: freezes and crashes OpenKeychain",[],"Only on current git master:

No progress shown and kills app with OOM"
open-keychain/open-keychain,closed,Fix smart card support,[],"From https://github.com/open-keychain/open-keychain/pull/1885

This broke smart card support :cry: since it requires the activity to implement `ImportKeysListener` which is implemented by `ImportKeysActivity`. Smart card support uses the activity `CreateKeyActivity`.

```
java.lang.ClassCastException: org.sufficientlysecure.keychain.ui.CreateKeyActivity@xxxxxxx must implement ImportKeysListener
```"
open-keychain/open-keychain,closed,WIP: Switch to RecyclerViews (Fixes),"[Label(name=""needs work"")]",This is a new pull request to introduce fixes for problems in #1926. 
open-keychain/open-keychain,open,Replace unmaintained SuperSLiM library with FlexibleAdapter library,"[Label(name=""help wanted"")]","Currently we use https://github.com/TonicArtos/SuperSLiM and https://github.com/FutureMind/recycler-fast-scroll

Looks like SuperSLiM is not maintained anymore. A good alternative could be: https://github.com/davideas/FlexibleAdapter"
open-keychain/open-keychain,closed,Account crash on Android 7,[],"* only PreferenceScreen and PreferenceCategory are now allowed
* PreferenceScreen with title and summary are displayed similar to Preference"
open-keychain/open-keychain,closed,Crash when opening keybase profile,[],"When I open my key with keybase.io enabled, the app crashes. It only happens with keybase.io proofs enabled, and I could only reproduce it with my keybase profile so far. Other keybase profiles work as intended.
I am rmf on keybase."
open-keychain/open-keychain,open,Key Import Design Improvements,"[Label(name=""help wanted"")]","Leftovers from https://github.com/open-keychain/open-keychain/pull/1885

* enable fastscroll and always visible scrollbar
* When importing from file: Don't close after refreshing single keys
* Show verified or unverified icons (as seen in our main key list) on cards with keys which are already in OK's database.
* For import from file: Change ""3 keys found"" to ""Found 3 keys (2 new)""
* import activity looses state when resuming (go to key and return)

"
open-keychain/open-keychain,closed,Openpgp signature result v4,[],"use enums instead of constants, and also add timestamp

this time nicely compatible :)"
open-keychain/open-keychain,open,Fidesmo card: BufferUnderflowException,"[Label(name=""bug""), Label(name=""security token"")]","I've installed on a FIDESMO CARD with Dual Interface the PGP application from Fidesmo and when I try to use it as a security token on a Nexus4 I get this exception:

	Caused by: java.nio.BufferUnderflowException
		at java.nio.Buffer.checkGetBounds(Buffer.java:171)
		at java.nio.ByteArrayBuffer.get(ByteArrayBuffer.java:108)
		at java.nio.ByteBuffer.get(ByteBuffer.java:376)
		at org.sufficientlysecure.keychain.util.Iso7816TLV.readSingle(Iso7816TLV.java:106)
		at org.sufficientlysecure.keychain.util.Iso7816TLV.readList(Iso7816TLV.java:140)
		at org.sufficientlysecure.keychain.securitytoken.OpenPgpCapabilities.<init>(OpenPgpCapabilities.java:46)
		at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.connectToDevice(SecurityTokenHelper.java:168)
		at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity.handleSecurityToken(BaseSecurityTokenActivity.java:437)
		at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:171)
		at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenActivity$1.doInBackground(BaseSecurityTokenActivity.java:161)"
open-keychain/open-keychain,closed,Yubikey 4 touch feature,[],"Hi,

Is there a way to get Yubikey 4 touch feature to work. I can use my Yubikey 4 without any issues if I have the ""touch feature"" disabled but I'm also using my Yubikey with my laptop and I like that feature for additional security.

https://developers.yubico.com/PGP/Card_edit.html
Here is the yubitouch.sh:
https://gist.github.com/a-dma/797e4fa2ac4b5c9024cc"
open-keychain/open-keychain,closed,OpenPgpSignatureResult v5,[],"This PR primarily deprecates v3 of OpenPgpSignatureResult, switching out the int constants of sender result info for an enum. Note that this breaks *forward* compatibility, i.e. if OpenKeychain cannot be newer than the client app it won't work. However, v3 (i.e. sender result) has so far only been used experimentally in the K-9 beta, so if we leave some time between rolling out a new version in K-9 and only then mergereleasing this, it should be fine.

While I was at it, I added a field for the signature timestamp in version 5. No concrete plans to use it yet, but the timestamp definitely belongs next to other signature info. (this closes #1949)"
open-keychain/open-keychain,closed,Date and time API,[],"Hi,
is it possible to create an API that K-9 could retrieve the date and time for a verified signature and when decrypting an encrypted message?

EDIT: The corresponding issue in the K-9 repo is no. 1761."
open-keychain/open-keychain,closed,break down result handling in OpenPgpService into methods,"[Label(name=""needs work"")]","Preparations for work on per-client tofu trust model. There *should* be no semantic changes in this PR.

I changed some api level constants into descriptive feature-based names, and broke down the way pgp results are parsed into result intent into nicely separated methods."
open-keychain/open-keychain,closed,KeychainDatabase: enable secure_delete explicitly to address GH #1905,"[Label(name=""needs work"")]","When the database is open, alongside enabling foreign key support, enable secure_delete so that platforms that support secure_delete will use it even if the default wasn't to enable it."
open-keychain/open-keychain,closed,add support to remove an identity from a key,[],"now you can only revoke 1 identity of a key with multiple identities.
please add support to remove 1 identity from a key (and upload/update on keyserver)"
open-keychain/open-keychain,closed,OpenPGP error CursorWindow,[],"When i try to send an encrypted email from K-9, i get the error in a toast:
`OpenPGP Fout: Couldn't read row 0, col 0 from CursorWindow. Make sure the Cursor is initialized correctly before accessing data from it.`

I tried reinstalling K-9 but it didn't work.

Also when i tap the recipient of that mail in OpenKeychain (edward-en@fsf.org, key found via the server) OpenKeychain crashes.

K-9 version: 5.010
OpenKeychain version: 4.1
Both downloaded from F-Droid"
open-keychain/open-keychain,closed,Signing keys creates stupid contacts,[],"Let's say I sign a key `""mail.test@example.com"" <mail.test@example.com>`. Afterwards OpenKeyChain creates the following contact:
* First name `""mail`
* Second first name: `test@example.`
* Family name: `com`

Together they appear in the contacts as: `mail test@example .com`

This issue may be related to the quotes surrounding the name. See https://github.com/open-keychain/open-keychain/issues/1943

And all this is done even though the mail address (`mail.test@example.com`) is already saved in my contacts (under a different name - of course)."
open-keychain/open-keychain,closed,Ignore quotes (when sorting public keys),[],"Keys created with Mailvelope have this UID format for their mail address: `""mail@example.com"" <mail@example.com>`.
As it begins with `""` these keys are unfortunately sorted first under `""`. In other applications (e.g. Mailvelope itself or e.g. Seahorse this quotes are hidden anyway, so either you also do this or you at least ignore the quote when sorting the keys as it is useless if all keys with `""` appear at the top.

OpenKeyChain 4.1 (41010)"
open-keychain/open-keychain,closed,Cannot send mail if email address matches more than one key,[],"# How to reproduce
1. Create two public keys for the same email address and import them into OpenKeychain
2. Try to send an encrypted email with K9 to this address
3.  OpenKeychain complains that there exists more than one key matching the recipients address and offers a list with checkboxes to select keys
4.  Select one of the recipients keys and press OK
# Expected behaviour
- OpenKeychain uses the selected key to encrypt the message, message is send
# Actual behaviour
- OpenKeychain window vanishes, K9 is briefly displayed, then back to OpenKeychain, the same screen as in step 3 is displayed, both keys are checked. Stuck in a loop, cannot continue to send email.
# Additional information

OpenKeychain 4.1
K9-Mail 5.114
"
open-keychain/open-keychain,open,"Dialog to unlock key looses state if interrupted, e. g. by other apps",[],"When I'm asked to unlock a key by OpenKeychain, a dialog opens asking for the passphrase as well as presenting options how long the passphrase should be remembered.

If I start filling in this information and then this get's interrupted, e. g. by simply switching to another app or the app overview for a moment, after switching back to the dialog, the state of this dialog is cleared. I. e. the passphrase field is empty again, and the remember duration is back to its default setting.

This especially occurs in my use case every time that I use the dialog, as part of my passphrase is stored on a Yubikey NEO. I pull that part of the passphrase via the YubiClip app (via NFC) which also interrupts the dialog as outlined above.

I wanted to supply screenshots for this issue, however it seems to be not allowed to screenshot that dialog (understandably ;) ).

Let me know, if you need more details.
"
open-keychain/open-keychain,closed,Support of OpenPGP card v3,[],
open-keychain/open-keychain,closed,Support of OpenPGP card v3 + SmartPGP secure messaging,[],
open-keychain/open-keychain,closed,Filesystem read permission not asked for initial key import,[],"Sorry about this incomplete issue report. I experienced it a few days ago and at that time the phone wasn't connected to my computer and logcat running. I can only give the behaviour and how to reproduce.

On a first execution of Open Keychain (OK) I wanted to import my PGP key exported from my desktop and copied on Android internal storage. But I couldn't with a permission denied error.

It's only when I did some other operations and that OK asked for storage permission that I could import the key.
"
open-keychain/open-keychain,closed,"Nitrokey Pro / Storage: Key generation (Put key command) fails (""invalid data"")","[Label(name=""security token"")]","Application shows USB transmission error when trying to use Nitrokey Storage as a security token.
Please let me know how can I create / extract the logs.

App version: 4.2 beta 1 (42000)
Android 6.0.1, Galaxy S6
Nitrokey Storage v0.43 (OTG USB)
Frequency: Always (5/5)

Scenario:
1. Insert Storage stick
2. Open application
3. Tap `Manage my keys`
4. Tap `USE SECURITY TOKEN`
5. Tap `USE THIS SECURITY TOKEN`
6. Enter arbitrary name, email and PIN and tap `Next`
7. Uncheck `Synchronize with the internet` and tap `CREATE KEY`
-  A Bar with key creation progress is shown
- Image is shown with instructions to holding a security token against the NFC marker
- Red LED on the device blinks a couple of times
- After next 10 seconds the error is shown:

```
Error: USB error - failed to transmit data -1
Take away the Security Token now and touch TRY AGAIN
```
1. After tapping `TRY AGAIN` error is shown again after another 10 seconds delay
2. After reinsertion application crashes but returns to the screen where key is created
3.  Tapping `CREATE KEY` another time red LED on device is flashing for about 10 seconds
4. After the delay same error with `-1` code is shown.

Calling possibly interested: @jans23 @nmikhailov 
"
open-keychain/open-keychain,closed,OutOfMemory with Nitrokey Pro,"[Label(name=""bug""), Label(name=""security token"")]","Application crashes when I insert Nitrokey Pro and try to use it as a security token to generate key. Same was after clearing the stick with `factory reset` command (done using Nitrokey App). 
Please let me know how can I create / extract the logs.

App version: 4.2 beta 1 (42000)
Android 6.0.1, Galaxy S6
Nitrokey Pro v0.7 (OTG USB)
Frequency: High (9/10)

Scenario:
1. Insert Pro stick
2. Open application
3.  Tap `Manage my keys`
4. Tap `USE SECURITY TOKEN`
4a. Red led on device flashes 2 times
5. Application crashes
"
open-keychain/open-keychain,closed,User ID matching for key selection is case sensitive,[],"I report this on [K-9](https://github.com/k9mail/k-9/issues/1645), but probably it's a Openkeychain issue.

I have a contact who, for some weird reason, has a couple of capital letters on his pgp email id. So when I pick him as recipient on K-9, OpenKeyChain fails to detect the correct key.
"
open-keychain/open-keychain,closed,Physical keys cause app to crash solved.(Issue number 1928),[],"Physical key crash issue solved.
"
open-keychain/open-keychain,closed,Null object reference when ECDSA key,[],"I've recently generated ECDSA(brainpoolIP256r1) gpg key and applications which use OpenKeychain (k9-mail and PaswordStore) generate error:

> Attempt to invoke virtual method 'org.bouncycastle.math.ec.ECCurve org.bouncycastle.asn1.x9.X9ECParameters.getCurve()' on a null object reference

I use OpenKeychain v.4.1 from f-droid
"
open-keychain/open-keychain,closed,[QUESTION] Chatsecure integration?,[],"Hi! Chatsecure (in combination with Orbot) is probably the best solution for ""secure"" communications.. so, is possible for OpenKeychain work with Chatsecure?? (I see the integration with Orbot, but I don't understand if is possible with Chatsecure, because this don't reveals nothing like Conversations..)
"
open-keychain/open-keychain,closed,Black theme AMOLED,[],"Is possible add an black theme ""AMOLED"", for save the battery??
"
open-keychain/open-keychain,closed,WIP: Switch to RecyclerView in KeyListFragment,[],"Relates to #1052:

Since RecyclerView is now the recommended (and more efficient way) to display lists of items,
ListViews parts of the ui should be ported to it.

Activities / Fragments ported:
- [x] KeyListFragment

These changes made to KeyListFragment and other associated files were separated from #1926 in favour of better readability.
"
open-keychain/open-keychain,open,Support AES-GCM from new IETF proposal,[],"Hi,

there is a [IETF proposal](https://tools.ietf.org/html/draft-ford-openpgp-format-00) that among other things specifies the use of AES-GCM. I would like to see support for this in OpenKeychain. Would this be a lot of work?
"
open-keychain/open-keychain,closed,Physical keyboard causes crash,[],"If you try to navigate this app with the arrow keys on a keyboard or on an Android device with physical keys, it will crash. Usually happens on the button for the sidebar drawer.
Please fix this so I can use this app instead of the outdated APG app. 
"
open-keychain/open-keychain,open,Enigmail and Claws do not import secret key from backup,[],"Since the mailing list seems dead I'll gibe it another shot here.

I've recentyl started using OKC and created a new pair of keys. When trying to transfer them to my laptop I've encountered a little problem. There is only the public key in the backup file.

This is what I did:
- Select the key and press ""backup key""
- Unlock my key with my passphrase
- Write down the backupcode
- Type in the backupcode
- Transfer the file to my laptop
- Decrypt and import the keys using the backup code

After this the only thing I get is my private key. During the whole backup process there aren't any options to include my private key.
I'm using a Galaxy Note4 with the stock Android ROM (6.0.1).
"
open-keychain/open-keychain,closed,WIP: Switch to RecyclerViews,"[Label(name=""needs work"")]","Relates to #1052: 

Since RecyclerView is now the recommended (and more efficient way) to display lists of items,
ListViews parts of the ui should be ported to it.

Activities / Fragments ported:
- [x] ViewKeyAdvCertsFragment
- [x] LogDisplayFragment
- [x] SelectPublicKeyFragment
- [x] SelectSignKeyIdListFragment
"
open-keychain/open-keychain,closed,Wrong passphrase error,[],"Hi,
I installed OpenKeyChain and K-9 Mail on my android device and imported in OKC the pair of keys I'm using on my pc. Although both apps seems correctly configured I'm unable so sign or decrypt mails using the passphrase. Since I exclude an input error, could it be that OKC has problem managing uncommon characters? For instance, my passphrase contains  ( $ @ / \ maybe one of them pops the error?

The same emails can be opened with the same key from kmail on linux.

The only gpg feauture working on android is encrypting a mail with recipient pub key.

Thanks
"
open-keychain/open-keychain,closed,Add support for fingerprint readers,[],"It would be useful if support for fingerprint readers could be added for unlocking keys. I know this on itself isn't fully secure, so it would be useful if a warning is given when only using a fingerprint without a second factor (I.e. a PIN code). 

You could create a new key with a ""hash"" of a fingerprint for example.

I am not a PGP expert, so don't take this seriously if it isn't possible.
"
open-keychain/open-keychain,closed,Travis cleanup,[],"~~Testing, ignore this PR for now~~
Actually wanted to use trusty so using ppa's won't be needed, but `language: android` doesn't work there :/ Anyway cleaned up a bit as a side effect of testing.
"
open-keychain/open-keychain,open,"Grey out stripped keys and rename ""stripped""","[Label(name=""enhancement""), Label(name=""help wanted"")]","From my comment in https://github.com/open-keychain/open-keychain/issues/1917

Maybe we should grey out the stripped subkeys like we do it with revoked ones to indicate that they are not usable and change the language from ""stripped"" to ""not on this device"".
"
open-keychain/open-keychain,closed,ignore deprecated snackbar in dependencyci.yml,[],"testing, don't merge
"
open-keychain/open-keychain,closed,"auto-linkify text in DisplayTextActivity, if data is signed",[],"Wanted to send a link and noticed that in our text view activity, links weren't auto-linkified.

There is some room for discussion here: At the moment, I only linkify text if it comes with a valid signature, both confirmed and unconfirmed. We could handle this more strictly (only valid+confirmed) or less strictly (all non-error states), there probably isn't a perfect decision here 
"
open-keychain/open-keychain,open,SQLiteException,"[Label(name=""bug"")]","From Google Play dev. App is not starting anymore. Also happens on the tablet of my colleague.

```
java.lang.RuntimeException: Unable to create application org.sufficientlysecure.keychain.KeychainApplication: android.database.sqlite.SQLiteException: duplicate column name: name (code 1): , while compiling: ALTER TABLE user_packets ADD COLUMN name TEXT
    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5231)
    at android.app.ActivityThread.access$1600(ActivityThread.java:181)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1535)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:6117)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
Caused by: android.database.sqlite.SQLiteException: duplicate column name: name (code 1): , while compiling: ALTER TABLE user_packets ADD COLUMN name TEXT
    at android.database.sqlite.SQLiteConnection.nativePrepareStatement(Native Method)
    at android.database.sqlite.SQLiteConnection.acquirePreparedStatement(SQLiteConnection.java:1093)
    at android.database.sqlite.SQLiteConnection.prepare(SQLiteConnection.java:670)
    at android.database.sqlite.SQLiteSession.prepare(SQLiteSession.java:588)
    at android.database.sqlite.SQLiteProgram.<init>(SQLiteProgram.java:59)
    at android.database.sqlite.SQLiteStatement.<init>(SQLiteStatement.java:31)
    at android.database.sqlite.SQLiteDatabase.executeSql(SQLiteDatabase.java:1798)
    at android.database.sqlite.SQLiteDatabase.execSQL(SQLiteDatabase.java:1729)
    at org.sufficientlysecure.keychain.provider.KeychainDatabase.onUpgrade(KeychainDatabase.java:311)
    at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked(SQLiteOpenHelper.java:256)
    at android.database.sqlite.SQLiteOpenHelper.getReadableDatabase(SQLiteOpenHelper.java:187)
    at org.sufficientlysecure.keychain.KeychainApplication.onCreate(KeychainApplication.java:125)
    at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1020)
    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5228)
    ... 9 more
```
"
open-keychain/open-keychain,closed,added oversec to apps list,[],"FYI,

[Play Store](https://play.google.com/store/apps/details?id=io.oversec.one)
[WebSite](http://oversec.io)
"
open-keychain/open-keychain,closed,Not ignoring CRC errors,[],"CyanogenMod: 13.0-20160816-SNAPSHOT-ZNH5YAO0F8-hammerhead
K-9 Mail: 5.010
OpenKeychain: 4.1 (41010)

I have an RSA 8192-bit key I use with Thunderbird/Enigmail without issue. I recently set up K-9 and APG and that also worked without issue. I just read on K-9's site that APG is unmaintained and installed OpenKeychain instead, imported the same key, pointed K-9 at OpenKeychain, and now I'm getting this error:

```
08-18 11:08:35.522 18783 18803 W Keychain: You are using a deprecated service which may lead to truncated data on return, please use IOpenPgpService2!
08-18 11:08:35.660 17982 17982 D k9      : OpenPGP Error ID:0
08-18 11:08:35.660 17982 17982 D k9      : OpenPGP Error Message:No encrypted data with known secret key found in stream!
```

I get asked to approve K-9 and select the key, but I'm never prompted for my private key passphrase.
"
open-keychain/open-keychain,closed,README: Fix commands to run tests,[],
open-keychain/open-keychain,closed,Fix travis android-24 dep,[],
open-keychain/open-keychain,closed,[WIP] Support for GNUK and Nitrokey Start,"[Label(name=""needs work"")]","There are some difficulties with GNUK:
- can't be rested to default - in fact our procedure will most likely brick it
- keys can't be overriden(there is a tool to remove keys with admin PIN in gnuk sources, but I think that it out of scope for us)
- Some weird admin-less mode which messes our token initialization routine.
- [x] fix sign/decrypt
- [ ] fix(or disable) token initialisation for gnuk
- [ ] disable key move if its gnuk
- [ ] disable token reset if its gnuk
"
open-keychain/open-keychain,closed,Linked Identities: sign with subkey,[],"Currently the identity-linking functionality doesn't permit signing if the master key is stripped.  This effectively prevents the use of sane and standard key policies (namely keeping the master offline, or at least on a more easily and thoroughly controllable platform that's less likely to be lost or stolen).

Does it make sense to support signing such proofs with a subkey?  If not, and perhaps easier either way, the ability to save the intended content of the message for export to a device with the master, for signing and posting, would work as well.  It should logically be possible to sign a given statement on another machine and post manually, later clicking something like ""I've already uploaded it, please check it"" in the android client.

Without such function, I'm skeptical of the utility of the feature, as keeping the master off the phone would seem to me to be a very common and standard process (especially given the number of potential Android vulnerabilities announced lately).
"
open-keychain/open-keychain,closed,Support for OpenPGP Smartcard in USB reader,"[Label(name=""enhancement""), Label(name=""security token"")]","I don't know how much work it would be to add this, but I assume now that OpenKeychain supports tokens over USB it shouldn't be too much work.
I have a [OpenPGP smartcard](https://g10code.com/p-card.html) in an [Gemalto K30](http://www.cryptoshop.com/gemalto-idbridge-k30-usb-shell-token-v2.html) reader. It seems to not work with OpenKeychain currently. It would be great, if it could work with OpenKeychain. I assume a lot of people have such cards, the [FSFE also gives them out to supporters](https://fsfe.org/fellowship/card.en.html).

From what I understand, the protocol is exactly the same as with the yubikey, so probably only the detection/support for additional smartcard readers is missing?
"
open-keychain/open-keychain,closed,import fails with eddsa authentication packet,[],"Just like #1279

STEPS TO REPRODUCE

Attempt to add secret key (encrypted and in asci--armored format) with RSA (Sign and Certify, 2048 bits) and RSA (Encryption, 2048 bits) and Curve25519 (Authentication, 256 bits)

Tried with both file and with copy-pasting raw text.

EXPECTED RESULTS

Import succeeds.

ACTUAL RESULTS

Invalid key data

While the merge by @adithyaphilip on spongycastle (Pull#5 github.com/open-keychain/spongycastle/pull/5, incorporated into Openkeychain @Valodim) lets Openkeychain merely ignore the as yet unrecognized EdDSA keys for signing, the patch may not apply to importing private keys and/or may not apply to keys flagged for authentication and/or may get tripped up by encrypted keys.

Key was created in GnuPG 2.1.11

Few distributions have GnuPG 2.1.14+ so I can't easily test exporting an unencrypted key, then saving it onto my phone via USB and then importing into OpenKeychain.

Attempted import on arm64 running Android 5.1 and OpenKeychain 4.1.
"
open-keychain/open-keychain,closed,Travis failing,[],"I will look into this end of the week.

See https://github.com/travis-ci/travis-ci/issues/6260 and https://github.com/tangrams/tangram-es/pull/878/commits/3ecab28fa90b153950d23a0a8e9b0e042807de29

Locally all tests work for me.
"
open-keychain/open-keychain,open,Remember options not working,[],"OpenKeychain 4.1 from F-Droid on CyanogenMod 13 (Android 6.0.1).

When using [Password Store](https://github.com/zeapo/Android-Password-Store) 1.2.0.52 (also from F-Droid), the OpenKeyChain dialog to unlock my key with the passphrase pops up upon selecting a password. In here I enter my password, set Remember for to ""One day"" and press OK. However, as soon as I turn the screen off, I have to enter the password again.
"
open-keychain/open-keychain,open,Key import crash: NPE when removing cert in canonicalize(),"[Label(name=""bug"")]","This could be possibly related to the key, the key contains many IDs. OKC crashes on import from server or from file. I can import all other key fine. OKC also crashed on updating all keys and I added this key somehow before. I now removed it to test if updating all works and it does work now without a crash. But I can't import the key again into OKC. 

Key Fingerprint is: [B83559F2E5B4743316FB760A9C44492F5D25FD75](https://pgp.mit.edu/pks/lookup?search=0xB83559F2E5B4743316FB760A9C44492F5D25FD75&op=index)
"
open-keychain/open-keychain,open,Private key is overwritten with key from keyserver with missing key flags,"[Label(name=""bug""), Label(name=""help wanted"")]","My Note 8 I can encrypt and sign with my password after I import my private key.  The next day I can encrypt but no longer sign as my key comes up but not enabled.  I have to clear all my data in sytem apps and reinstall my keys to sign a message.  Then the next day I can no longer sign.
"
open-keychain/open-keychain,closed,Changing keylength is not straightforward,"[Label(name=""discussion"")]","Branching from #1896 .

It is not obvious how to change keylength on key creation. From google play store comments:

> Key size version 3.9.5; installed on tablet (android 5)- when creating a key; doesn't give option to chose the key size 1028 to 4096 bits!!!!! Why? I hope it's not because the default key size that is forced by the gov. is only 1028 bits (crackable).

Also this is frequently discussend on IRC, and

> (22:16:04) nmikhailov1: JohnDroid: when you are creating a key press on button in title bar
> (22:16:50) nmikhailov1: JohnDroid: its on a screen after configuring password
> (22:17:40) JohnDroid: or I could just use APG app and generate a 4096 key from there
> (22:19:03) nmikhailov1: JohnDroid: yes, but generating 4096 key in openkeychain is possible
> (22:19:24) JohnDroid: nmikhailov1: yes but its not straithforward

cc @dschuermann 
"
open-keychain/open-keychain,closed,Use secure_delete for SQLite,[],"A deleted secret key is currently not overwritten by zeros, but this behavior could maybe reached by configuring sqlite correctly.

see recently merged patches in AOSP:
https://android-review.googlesource.com/#/c/210080/
https://android-review.googlesource.com/#/c/209123/

Looks like these options can also be set with a pragma statement (https://www.sqlite.org/pragma.html#pragma_secure_delete) so maybe we could adopt these.
"
open-keychain/open-keychain,closed,Keyboard lag in password input widget,[],"With the latest upgrade it is almost impossible to type in the password in the input widget as there is a long (as in 5 seconds) lag before each character is accepted. This happens with either Swiftkey Keyboard or AOSP keyboard. 
This is so bad and so obvious that I am sure it cannot be reproduced by many others. I'll be happy to provide more info if needed
Edit: I downgraded to 4.0.1 (which I thought to recall it worked fine) and in the process cleared the app db; it still lags heavily. Even the cancel or unlock buttons are unresponsive for several seconds.
I will try to downgrade to <4.0
Edit²: I downgraded to 3.9.5: still the issue is present. If I blind-type on the unresponsive keyboard, the entered characters eventually show up (all at the same time after the long lag). The whole UI is unresponsive (home and back keys don't work either).  Running top shows just openkeychain absorbing ~50% CPU and apparently nothing else out of the ordinary.  
[trace.zip](https://github.com/open-keychain/open-keychain/files/402457/trace.zip)
"
open-keychain/open-keychain,closed,Unable to run this project,[],"when I am going to run this project I am getting following error

Gradle 'open-keychain-master' project refresh failed
Error:Configuration with name 'default' not found.
"
open-keychain/open-keychain,closed,"Key import fails with ""truncated subpacket data""",[],"I'm trying to import key 0x2A411DFD from keyserver
[hkps://hkps.pool.sks-keyservers.net](hkps://hkps.pool.sks-keyservers.net)

open-keychain fails with the following:

```
E/Keychain( 8111): Encountered bad key on import!
E/Keychain( 8111): java.io.EOFException: truncated subpacket data.
E/Keychain( 8111):      at org.bouncycastle.bcpg.SignatureSubpacketInputStream.readPacket(SignatureSubpacketInputStream.java:116)
E/Keychain( 8111):      at org.bouncycastle.bcpg.SignaturePacket.<init>(SignaturePacket.java:76)
E/Keychain( 8111):      at org.bouncycastle.bcpg.BCPGInputStream.readPacket(BCPGInputStream.java:230)
E/Keychain( 8111):      at org.bouncycastle.openpgp.PGPKeyRing.readSignaturesAndTrust(PGPKeyRing.java:53)
E/Keychain( 8111):      at org.bouncycastle.openpgp.PGPKeyRing.readUserIDs(PGPKeyRing.java:91)
E/Keychain( 8111):      at org.bouncycastle.openpgp.PGPPublicKeyRing.<init>(PGPPublicKeyRing.java:76)
E/Keychain( 8111):      at org.bouncycastle.openpgp.PGPObjectFactory.nextObject(PGPObjectFactory.java:114)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.pgp.UncachedKeyRing$2.cacheNext(UncachedKeyRing.java:191)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.pgp.UncachedKeyRing$2.hasNext(UncachedKeyRing.java:212)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.decodeFromData(UncachedKeyRing.java:155)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:209)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.operations.ImportOperation.access$000(ImportOperation.java:84)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.operations.ImportOperation$1.call(ImportOperation.java:490)
E/Keychain( 8111):      at org.sufficientlysecure.keychain.operations.ImportOperation$1.call(ImportOperation.java:478)
E/Keychain( 8111):      at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/Keychain( 8111):      at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)
E/Keychain( 8111):      at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/Keychain( 8111):      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
E/Keychain( 8111):      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
E/Keychain( 8111):      at java.lang.Thread.run(Thread.java:818)

```

Enigmail, gpg CLI have no problems importing this key from the same keyserver(pool).
"
open-keychain/open-keychain,closed,`Bad data` importing gpg private keys,[],"I'm trying to import private keys freshly created and exported with gpg 2.1.14. No expiry date has been changed (#996, #1003, #1026). I'm running OpenKeychain 4.0.3 from F-Droid in CyanogenMod 13.0 (unofficial).

The key only contains the signing subkey meant for the phone. The master key and all other subkeys are ""present"" as dummys.

The subkey was exported with the `--export-secret-subkey <subkey_id>!` command and later by removing the unwanted keygrips before the export (starting from the full key in both cases). The result was the same in both cases: the import fails with a `Bad data` warning.

Probably related: #1793. No crash in my case though. `gpg-agent` was restarted prior to the export (#1529), `gpg-agent --version` confirms that version 2.1.14 is running.

Can send the output of `gpg2 --list-packets` if needed.
"
open-keychain/open-keychain,closed,Turn off header detection in decrypted text,[],"Several issues have been filed about dropped lines from decrypted text, e.g. #1592. In general, OpenKeychain cannot know how to post-process decrypted text. Therefore, it would be nice to have the option of turning this feature off entirely, such that a decrypted text is displayed without post-processing.
"
open-keychain/open-keychain,closed,K9 mail complains that the signing subkey can not be found when sending mail,[],"I have a PGP key with several identities (uid). When I try to send email with k9 with a sender-address of one of these identities, K9 mail displays a message that the signing subkey can not be found. When I send mail with the sender-address of the primary identity it works. Not sure what the problem is here. I use the same key w/ OS X Mail.app and it works fine with all my mail account there.
"
open-keychain/open-keychain,closed,K9 mail: Cannot select correct key,[],"When I e.g. have two keys for a mail address and I try to send a mail with K9 mail OpenKeyChain asks me to select one address of the two. So if I select one or two addresses and press OK(= tap on the send button) the screen goes away and appears again (as if the result was not recognized/accepted). I cannot end this loop without deleting one key out of OpenKeyChain, so that this message does not appear anymore.
"
open-keychain/open-keychain,closed,Support EdDSA keys and signatures,[],"GnuPG 2.1.8 et seq. now support EdDSA (ed25519) keys and signatures.  There's an Internet-Draft for this, but alas no full RFC yet (https://datatracker.ietf.org/doc/draft-koch-eddsa-for-openpgp/).  It would be really nice if OpenKeychain supported this (particularly since some people have already started using these keys).  (It appears that the I-D for OpenPGP use is being held pending approval of the underlying specification of EdDSA, which is under review.)
"
open-keychain/open-keychain,closed,Security Token: Support non-numeric PIN,[],"I have a OpenPGP-Smartcard in a USB-Adapter and tried to use it with the new USB-Support of OpenKeyChain. Unfortunately I'm not able to input my PIN as it contains non-numeric ASCII-Characters and the input field only allows me to enter numbers.
"
open-keychain/open-keychain,open,Unclear API message when no signing subkey is available,"[Label(name=""api todo"")]","Hi there,

I just triggered some rare case, where I only have a subkey for decryption but none for signing on my device and so the keychain is insufficent for Conversations, because it needs to sign and decrypt.

The problem was not so obvious, because I only got a ""missleading"" error message ( https://goo.gl/photos/XHyF75cBoNsCQWBf6 ).
It would be great to get an error which states, that a signing request failed or that no signing key was found.

My keyset looks as following on my mobile device atm https://goo.gl/photos/eY2XcLLa3RebQQ7k7

hf
DooMMasteR
"
open-keychain/open-keychain,closed,Crash on key confirmation,[],"Hello,

Today when going to compose an email I noticed that my contact, with whom I have a confirmed  key, was missing when inputting the name in the To section. I thought this odd.

I checked the contact card and indeed the keyo was missing. So, I opened the Open Keychain app to check the status. The key, which had been confirmed before,  was showing as unconfirmed.

I attempted to reconfirm the key to no avail. 

I deleted the key and used the QR Code to rescan. Still no confirmation.
Same with the search on the keyserver. Unconfirmed.

Everytime there is a popup saying there is an error & asks for a google error report or o force close.
When I choose force close, it does not. The screen simply flashes and returns to the unconfirmed key page.

Issue is only in this tablet.

See screenshots.
![screenshot_2016-06-29-19-15-25](https://cloud.githubusercontent.com/assets/14078434/16472428/00a0f6d8-3e32-11e6-9c13-3158af6c4164.png)
![screenshot_2016-06-29-19-15-33](https://cloud.githubusercontent.com/assets/14078434/16472443/09db71a6-3e32-11e6-91d8-ebcbc521a1f2.png)
![screenshot_2016-06-29-19-15-39](https://cloud.githubusercontent.com/assets/14078434/16472444/10807614-3e32-11e6-9335-49c5a67f6ef1.png)
"
open-keychain/open-keychain,closed,updated calls to KeyRings.Name & KeyRings.Email,[],"In Progress of Issue #1846. If this seems headed in the correct direction. I would proceed further.

ccing @dschuermann  (I apologise in advance if it's not correct)
"
open-keychain/open-keychain,closed,Problem while building on Mac OS (Related to #558),[],"@dschuermann The build failed for me too on Mac OS X. Any other alternatives ?
"
open-keychain/open-keychain,closed,Signature message digest,"[Label(name=""needs work"")]","This PR changes `PgpSignatureChecker` to obtain the computed message digest as an intermediate result, which is then placed in OpenPgpSignatureResult.

Unfortunately, I had to work around BouncyCastle a bit more than I would have liked. Most importantly, I ended up doing the PKCS1 DER formatting for RSA signatures manually which uh, sort of sucks. It seems to be the intended way though, since there is a comment ""For raw RSA, the DigestInfo must be prepared externally"" in DigestSignatureSpi.

The point of this is that this digest can be cached, and revisited at a later point. This is helpful internally because we can ""refresh"" the key status simply by running the verification again. It also means we don't have to decrypt and verify all data again after download if we didn't have a signing key available when we first processed the data.

The same applies for client apps. Decryption delay in K-9 is a serious problem, which is why I would like to cache some of the decryption results in K-9 at some point. However, just caching the decrypted data isn't enough, and I really wouldn't feel comfortable ""caching"" the signature status, since it can change over time (due to expiry or revocation).
"
open-keychain/open-keychain,open,Add support to revoke signatures (certifications),[],"It is possible to confirm users with OpenKeychain by singing their keys. But the opposite is currently not possible: Revoking such a signature.

UI flow:
Klick on contact → If contact confirmed, then display ""revoke confirmation"" in the overflow menu.

Rationale: The revocation UI elements should not be prominently visible, since revocation is something you usually don't do very often.
"
open-keychain/open-keychain,closed,Issue sending e-mail with more than one key per e-mail address,[],"Hello,

@dschuermann asked me to raise following issue:

I'm facing an issue with OpenKeychain and K9 Mail. I've created a new secret key for my e-mail address to mitigate a key length issue with my original key.
Of course, the new and old key need to be present in my keyring (see screenshot 1) to support
1. encryption and signing of new mails and
2. decrypting old mails.

Now, with the two keys present, it seems I cannot send an e-mail to myself (screenshot 2 and 3). OpenKeychain comes up with a selection screen, telling ""there are more than one key existing for this e-mail address"". Unselecting either one of the keys and pressing ""OKAY"" raises the same dialogue again.

I hope I#ve been clear enough. If you need any further information, I'll be glad to help.

Thanks for your support,
Thomas

![20160613-1](https://cloud.githubusercontent.com/assets/6893444/16010634/62b0b654-3182-11e6-8625-13504da4aeb1.png)
![20160613-2](https://cloud.githubusercontent.com/assets/6893444/16010635/62b1fca8-3182-11e6-8aa5-b003e3e6df49.png)
![20160613-3](https://cloud.githubusercontent.com/assets/6893444/16010633/62b05542-3182-11e6-9737-918a743c660e.png)
"
open-keychain/open-keychain,closed,Question: Open Keychain adaptation for laptop/desktop?,[],"Although not actively able to contribute to development of O.K. app, I am curious as to whether your code can be adapted for laptop/ desktop systems running Windows 10.

Most PgP programs available are gargantuanly miserable to implement for most people.

I would use it if there were a program which looked exactly like the Android app you are working on but for mail programs on Windows 10. Something which looks and works exactly the same?
Or just as great, an extension for the browser, (I use Yandex, a Chromium build) which works just like the Android App? 

These are things I look forward to in order to simplify Pgp for average users.

Thanks for listening.
"
open-keychain/open-keychain,closed,Automatic upload is an incredibly bad choice,[],"So, I downloaded the app, just to play with it. And I generated a key (using a smart card).

And, unlike any other PGP implementation I've ever seen, it instantly and automatically uploaded that key to the keyservers. It took this irrevocable action with no direction from me, no warning, no confirmation, and no chance to prevent it. The only way I even know it happened is because of a message that flashes on the screen for maybe one second.

If I'd needed privacy about the fact that I had a key, I would have been hosed. And now the database is polluted with yet another useless, confusing revoked key that can never be removed.

I was shocked. I must have generated dozens of PGP keys for all kinds of uses over the last 22 years. Of those, there have been maybe 4 or 5 that I actually wanted to publish.

Seriously not a feature. Please at least ask the user to confirm these uploads.
"
open-keychain/open-keychain,closed,Instrumented unit tests: fix for execution,[],"I've spent quite some time trying to understand the reason for a lot of proguard errors while trying to start instrumented unit tests. This PR contains an edit to gradle that is necessary to fix the problem. (Probably this is needed because of an upgrade of gradle)

Trying to execute instrumented unit tests, i saw that a lot of them are failing. (Probably because of updates in the code of the app).

If you agree, i will stop a bit from my main task, to spend some time trying to fix all the error in these tests. In this way we will have a good testing enviroment for future developments (mine included).
"
open-keychain/open-keychain,closed,Improve ImportKeysListFragment,[],"I've started working on improving various parts of the UI of the app.

This is a first step regarding ImportKeysListFragment. 
I've in mind other improvements but i think it's already better than before.
Other things will come soon. (for both UI and code)

(I'm sorry for the language of the screenshots)

<img src=""https://cloud.githubusercontent.com/assets/2026137/15754252/a4b59e2c-28f7-11e6-8b0c-2380237aed8e.png"" width=""200px"" /> <img src=""https://cloud.githubusercontent.com/assets/2026137/15754250/a4adb2ca-28f7-11e6-8a2a-5bfccfb521c9.png"" width=""200px"" /> <img src=""https://cloud.githubusercontent.com/assets/2026137/15754251/a4b18260-28f7-11e6-93bd-0e882389c89c.png"" width=""200px"" />
"
open-keychain/open-keychain,closed,WIP: Migration to symmetrically encoded key blocks for secret keys,"[Label(name=""on hold"")]","Migration away from s2k to symmetric secret key blocks

TODO:
- [x]     Modify consolidate to write secret key related data directly to db, instead of importing secret keys*
- [x]     Refactoring of provider helper (remove remnants from api level 11)
- [x]     Ask for passphrases when importing
- [x]     Modify secret key related operations (sign, decrypt, new id, etc)
- [x]     Modify new key creation
- [x]     Modify secret key export
- [x]     Migrate old secret keys to symmetric key blocks

*Current consolidation requires reimporting secret keys. This would not work with symmetric key blocks as they would have to be decrypted, which means we have to ask for passphrases on each consolidate. 
- [x]       Refactoring
- [ ]       Rebasing on Andrea's work to add in the change in key import
- [ ]       Using the key import interface for migration

Targets for refactoring:
1) PassphraseDialogActivity (is in a somewhat disorderly state, as it has to handle key s2k keys, sym encrypted keyrings, both types of backup codes)
2) ProviderHelper (has grown quite greatly in size) 

Both the single & multi-passphrase workflows have been added, 
along with an applock which works with the master passphrase. 

There is probably a need to refine the UI for both migration and a fresh install of the application.
However, it is definitely usable in its current state, with support for all pre-existing features before this PR.
"
open-keychain/open-keychain,closed,Make Use of Fingerprint,[],"With the advent of API 23, we can now store secure information into the [Android Keystore](https://developer.android.com/training/articles/keystore.html). For the ease of use of the client, storing their private key's password into the Android Keystore would allow for easier access. There's a [package](https://github.com/square/whorlwind) that makes this easy via [RxJava](https://github.com/ReactiveX/RxJava).
"
open-keychain/open-keychain,closed,Saving attachments results in empty files,[],"Hi!
I sent myself a ssh_key from my laptop via enigmail.
When I decrypt the mail on my phone, I can view the attachments and even copy its content to the clipboard. But when I long click the file and save it to storage, the file is empty.

Here is a log:

> 05-27 10:33:16.881  3601  3619 D Documents: Update found 7 roots in 1616ms
> 05-27 10:33:16.882  1852  2647 I ActivityManager: Killing 30896:com.android.music/u0a39 (adj 15): empty #17
> 05-27 10:33:16.914  3601  3645 D Documents: Update found 7 roots in 731ms
> 05-27 10:33:16.982  3601  3666 D Documents: userMode=0, userSortOrder=0 --> mode=1, sortOrder=1
> 05-27 10:33:16.991  3601  3666 W Documents: Failed to query
> 05-27 10:33:16.991  3601  3666 W Documents: android.os.OperationCanceledException: The operation has been canceled.
> 05-27 10:33:16.991  3601  3666 W Documents:     at android.os.CancellationSignal.throwIfCanceled(CancellationSignal.java:54)
> 05-27 10:33:16.991  3601  3666 W Documents:     at android.content.ContentProviderClient.query(ContentProviderClient.java:132)
> 05-27 10:33:16.991  3601  3666 W Documents:     at com.android.documentsui.DirectoryLoader.loadInBackground(DirectoryLoader.java:167)
> 05-27 10:33:16.991  3601  3666 W Documents:     at com.android.documentsui.DirectoryLoader.loadInBackground(DirectoryLoader.java:94)
> 05-27 10:33:16.991  3601  3666 W Documents:     at android.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:312)
> 05-27 10:33:16.991  3601  3666 W Documents:     at android.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:69)
> 05-27 10:33:16.991  3601  3666 W Documents:     at android.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:66)
> 05-27 10:33:16.991  3601  3666 W Documents:     at android.os.AsyncTask$2.call(AsyncTask.java:295)
> 05-27 10:33:16.991  3601  3666 W Documents:     at java.util.concurrent.FutureTask.run(FutureTask.java:237)
> 05-27 10:33:16.991  3601  3666 W Documents:     at com.android.documentsui.ProviderExecutor.run(ProviderExecutor.java:107)
> 05-27 10:33:16.992  3601  3666 D Documents: userMode=0, userSortOrder=0 --> mode=1, sortOrder=1
> 05-27 10:33:18.420  3601  3666 D Documents: userMode=0, userSortOrder=0 --> mode=1, sortOrder=1
> 05-27 10:33:18.427  3601  3601 D Documents: onFinished() [content://com.android.externalstorage.documents/document/primary%3Akey.txt]
> 05-27 10:33:18.586  1852  1891 I ActivityManager: Displayed org.sufficientlysecure.keychain/.ui.DecryptActivity: +143ms

Also the key gets the suffix .txt, which could be missleading, since the file originally had no suffix.
"
open-keychain/open-keychain,closed,Randomness in tests,[],"Travis build failed.
Probably due non determenism of https://github.com/open-keychain/open-keychain/blob/ce5e5f36c56fe14cb4a90a912eece07e4cb92285/OpenKeychain/src/test/java/org/sufficientlysecure/keychain/util/TestingUtils.java#L30

Using random(especially without fixed seed) in unit tests is generally a bad practice.
"
open-keychain/open-keychain,closed,Adds support for ACTION_DECODE_PUBLIC_KEY,"[Label(name=""needs work"")]","Reads a public key in from the InputStream and returns the master key id, and user ids.
Necessary for the contact key retrieval portion in OX.

Was tested with Conversations (the action and result strings were hardcoded).

Current workflow in Conversations:
- Contact key downloaded, key ID and user IDs retrieved via this action.
- If xmpp:user@email is one of the user IDs, ACTION_GET_KEY is used with the key id to check if the key already exists in OK. Else, an error is toasted saying contact key does not contain the required user id.
- If the key does not exist in OK, it should be added (would firing an ""Import Key via OK"" intent suffice?).
- If the key exists in OK, it is associated with the contact in Conversations.

Depends on https://github.com/open-keychain/openpgp-api/pull/6 being merged before the corresponding submodule can be updated.
"
open-keychain/open-keychain,open,Location of master password symmetric key,[],"This is regarding the shift to using a single master password for all keys/subkeys. 
Storing the master password in a separate location is required. 

This is because it is not reliable to rely on encrypted private keys for verifying the master password. There may be configurations where there is no private key in the database, or no private key has a password equals to the master password. (through the optional different passwords for private keys option)

I have identified 2 possible options for the storage of the symmetric key.

1) Creating a table in the database just for the master password
Going with this feels a little strange as the table will only contain 1 entry, which is a symmetric key blob for the master password. However, the symmetric key blob will be as safe as the database. That's one less item to take care of in terms of security.

2) Make full database encryption compulsory and use unlocking of the database to verify the master password
Going with this approach requires unlocking of the database for every database transaction. This includes the obtaining of public keys through openpgp-api and other similar transactions. It might pose as a hassle for users who do not wish to cache the master password into the password cache. Also, this approach links the implementation of the master password and full database encryption together - something which might not be desired.

*I'm assuming we'll encrypt the database with the master password when doing full database encryption as I don't think users would want to remember an additional password/pin just for accessing the database.

I'm leaning towards option 1 but perhaps there's some alternatives/ considerations that I've missed out. @Valodim , @dschuermann  Any comments?
"
open-keychain/open-keychain,closed,Download and read encrypted messages from provider,[],"I have a problem with reading emails which are encrypted on the providers server and downloaded into my email client K-9 in my android smartphone. I can´t read them directly and have to decrypt them everytime with open-keychain although the keys are known to open-keychain.

Downloading encrypted emails works fine with Thunderbird and Enigmail. Once my pgp keys are into Enigmail/ Kleopatra I only have to enter my keyphrase once a day. Each email is decrypted automatically then.

How open-keychain handles downloading encrypted messages and reading them although they keys are known is annoying.
"
open-keychain/open-keychain,closed,Import from Yubikey fails,[],"I cannot import from my Yubikey, which contains subkeys I generated specifically for my Yubikey
"
open-keychain/open-keychain,closed,4.0 build fails on fdroid,[],"Hi!
I just wanted to update openkeychain from fdroid and noticed, that the current version can not be built.
Take a look at the [log](https://f-droid.org/wiki/page/org.sufficientlysecure.keychain/lastbuild_40000)
"
open-keychain/open-keychain,closed,Added passphrase check for stripped masterkeys,[],"For #1874 
"
open-keychain/open-keychain,closed,Able to backup keys without passphrase check if all masterkeys are stripped,[],"As above, it is possible to backup keys without a passphrase check if all private keys in the DB have their masterkeys stripped. 

This allows attackers to strip and steal keys of unsuspecting users, including those who use a stripped masterkey configuration. The risk is probably quite small though, given that it takes quite a long time to copy and enter the random backup key.

Users are unlikely to detect the stripped masterkey as day to day app functionality (signing, encryption, decryption) is not affected with the masterkey missing.
"
open-keychain/open-keychain,closed,Upload personal key to keyserver issue,[],"I have just installed the 5/16/16 update.

App was located on SD card. After update it was again in internal storage.

Able to upload all installed and confirrmed keys to keyserver.

Unable to upload my own key.  When y key is selected>advanced>share>upload to keyserver, that particular action does not work. The screen flips to a white screen with a grey header and then bounces back to the original screen where all my emails are listed under one key.  This happened both when I noticed it was in the interal storage as well as after moved to the external SD card.

Key has worked fine but I wanted to refresh my key on the server.

I do not understand this issue so I cannot relate further what is happening here.

Can you please look into it?

The issue appears to be only on my phone but all is normal on my tablet.
"
open-keychain/open-keychain,closed,openkeychain unable to retrieve key from private keyserver,[],"hi , 
i m beginner for this encryption decryption 
i used openkeychain and k9 mail 
i create a private sks server by the following link
https://njh.eu/keyserver
and then i add my key server in openkeychain as following
hkp://myserverip:11371
and i uploaded my key to the server through openkeychain 
and i checked the key in server through web interface browser
http://myserverip:11371
server returns the keydetail 
i tried to search the key from the openkeychain
i recieved mesage no keys found

what i need to do for search import keys in open keychain
from my private server

thanks in advance
"
open-keychain/open-keychain,closed,Minor UI improvements and cleanup,[],
open-keychain/open-keychain,closed,Shifted duplicate method implementations from KeyRing to openpgp-api …,[],"For #1867 
"
open-keychain/open-keychain,closed,Add new build type to mitigate debugging issues,[],"See http://stackoverflow.com/questions/27909613/cannot-see-parameter-value-in-android-studio-when-breakpoint-is-in-first-line-of

Very annoying.
"
open-keychain/open-keychain,closed,WIP: Security token USB handling improvements,[],"Multiple security token improvements, mainly to support Nitrokey Pro.
Substitutes  #1834
Huge changes so I encourage mass regression testing.

TODO: 
- [x] Nitrokey Pro
- [ ] Nitrokey Start/GNUK
- [x] moving key to Nitrokey doesn't work
- [ ] refactor & add some comments
- [ ] fix CR
"
open-keychain/open-keychain,closed,Duplicate code in KeyRing and openpgp-api OpenPgpUtils,"[Label(name=""help wanted"")]","splitUserId and createUserId are in both files while only the versions in KeyRing have been updated. We should remove that redundancy.
"
open-keychain/open-keychain,closed,Single key used with several addresses is refused,[],"I am using K-9 mail. 
If I attempt to encrypt an email to an address which uses a key with no obvious relation the encryption fails. 

Example: 
I address to: friend@server.com 
wanting to use key: name@random 
A selection box comes up with a selection of stored public keys. Even if the key I wish to use is shown & selectable the selection box comes up again when I tap [ok] 
The email is neither encrypted nor sent. 

As I see it the standard allows me to use any key to send to any address. Where a key matches an address it is convenient for it to be offered pre-selected, but this should not be a requirement & I should be able to select any key (or number of keys), even de-selecting any offered choice. 
"
open-keychain/open-keychain,closed,Fixed 'Orbot appears not to be running' (#1792),[],"Hi!
I tried my best to fix the faulty ""Orbot appears not to be running"" message on Android 6 by ditching the old OrbotHelper.isOrbotRunning() method. I implemented a BroadcastReceiver that listens for Orbot Status intents and acts as a singleton with getters for the received states.

Im unsure, whether this is secure and proper implemented or not, so please take a close look at my changes :)
"
open-keychain/open-keychain,closed,Problems when trying to restore PGP file in the Tails system.,[],"I do all the private key backup process the in the application but at the time of import into GnuPG Tails, I insert the backup code and it gives the ""bad key"". I've tried the password to decrypt also and nothing.
"
open-keychain/open-keychain,closed,YubiKey 4 Nano Error.. Another one.,[],"Hi again!

I've built the source code to try the fixes made for #1852 issue.
Now when i insert the YubiKey into the OTG cable, the app alerts me with:

""Errore: USB error - failed to connect to device
Take away the Security Token now and touch TRY AGAIN.""

I've inserted the correct PIN, i'm sure.

Thanks for your work!
"
open-keychain/open-keychain,closed,travis test,[],
open-keychain/open-keychain,closed,Travis crashes for pull requests,[],"Known issue at Travis: https://github.com/travis-ci/travis-ci/issues/5669
Waiting for a fix from their side.
"
open-keychain/open-keychain,closed,"in OpenPgpServiceTest, use new service interface instead of deprecated old interface",[],"just a small change to make sure the test is using the ""new"" service
"
open-keychain/open-keychain,closed,Problemas ao tentar restaurar arquivo PGP no sistema Tails.,[],"Faço todo o processo de backup da chave privada no aplicativo porém na hora de importar para o GnuPG do Tails coloco o código de backup e ele dá senha errada. Já tentei com a senha para descriptografar tbm e nada.
"
open-keychain/open-keychain,closed,SecurityToken: add support for 3072 & 4096bit RSA keys,[],"fixes #1852 
"
open-keychain/open-keychain,closed,Additional unwanted recipient is added on Encrypt&Sign activity,[],"Additional unwanted recipient is added to 'Encrypt to' field after selecting key for 'Encrypt to' field(from the popup list) and clicking on message text field 
"
open-keychain/open-keychain,closed,"Backup API, implement EXTRA_REQUEST_ASCII_ARMOR","[Label(name=""api todo"")]","Implement EXTRA_REQUEST_ASCII_ARMOR for backup API (currently always true)
"
open-keychain/open-keychain,closed,Fixes bug for #1854,[],"As above, fixes the bug for #1854 
"
open-keychain/open-keychain,closed,Importing keys: listview may show keys although no valid keys are found ,[],"A little bug I found when helping a user in the mailing list with key importing.
As above, when importing keys, listview may show keys although no valid keys are found.

Also, choosing to import the displayed key crashes the app.
Attached is the a key which results in this situation. 
(newline between armor checksum & ascii armored data missing) ([invalidkey.txt](https://github.com/open-keychain/open-keychain/files/253209/invalidkey.txt))

![resz-0](https://cloud.githubusercontent.com/assets/11351531/15089104/dadd9708-142e-11e6-8895-06f6caccc5a5.png) ![resz-1](https://cloud.githubusercontent.com/assets/11351531/15089105/dae4113c-142e-11e6-9760-3457aabfb74f.png)

The key is detected fine, but the code isn't sure if there's more than 1 key to import. This key is saved. Further parsing of the key file soon gives an error.

The detected key is displayed, but the activity thinks no valid keys are found and did not assign key data to its variables. Accessing this key data when importing results in the crash.
"
open-keychain/open-keychain,open,"Crash with ""Rank 0 user packet must be a user id!""","[Label(name=""bug""), Label(name=""help wanted"")]","Hi,

I am stuck with a 'broken' Open-Keychain update on my phone. When opening the application it will try to reimport the keys and crashes at around 65%. I have several secret keys and >300 public keys. 

Stacktrace from `logcat`:

```
E/AndroidRuntime(20571): FATAL EXCEPTION: Thread-48963
E/AndroidRuntime(20571): Process: org.sufficientlysecure.keychain, PID: 20571
E/AndroidRuntime(20571): java.lang.AssertionError: Rank 0 user packet must be a user id!
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.provider.KeychainProvider.insert(KeychainProvider.java:810)
E/AndroidRuntime(20571):        at android.content.ContentProviderOperation.apply(ContentProviderOperation.java:214)
E/AndroidRuntime(20571):        at android.content.ContentProvider.applyBatch(ContentProvider.java:1617)
E/AndroidRuntime(20571):        at android.content.ContentProvider$Transport.applyBatch(ContentProvider.java:260)
E/AndroidRuntime(20571):        at android.content.ContentProviderClient.applyBatch(ContentProviderClient.java:377)
E/AndroidRuntime(20571):        at android.content.ContentResolver.applyBatch(ContentResolver.java:1233)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedPublicKeyRing(ProviderHelper.java:730)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:978)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:321)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:101)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1357)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1259)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.operations.ConsolidateOperation.execute(ConsolidateOperation.java:43)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.operations.ConsolidateOperation.execute(ConsolidateOperation.java:31)
E/AndroidRuntime(20571):        at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:146)
E/AndroidRuntime(20571):        at java.lang.Thread.run(Thread.java:841)

```

Unfortunately I couldn't find out yet which key is affected.

Maybe related to #1660? There are a couple of revoked keys (pub and sec) in my keyrings.
"
open-keychain/open-keychain,closed,Error with Yubikey 4 Nano during decryption and signing.,"[Label(name=""security token"")]","Hi all!
When i try to decrypt or sign some text/file, the app alerts me saying that it expects a sign long 128 or 256 bytes, but it was 512.

I encounter this error only when i try to use the smartcard functionality of the Yubikey 4 Nano, if i import the secret subkeys directly to openkeychain, i can decrypt and sign without problems.

The keys are RSA4096.
"
open-keychain/open-keychain,closed,API to programmatically forget rembered passwords,[],"Having an API method or intent that would tell open-keychain to immediately forget all remembered key passwords (in the same way as when the user clicks on the ""n remembered passwords"" notification)
 would allow implementation of client apps that provide advanced ""password forget triggers"" like e.g.
- ADB (USB) connected
- Wrong lockscreen PIN input [together with ""remember password forever""]
- Based on (loss of) proximity to bluetooth device (smart watch)

Probably an intent would be better than having this in the service API - with an intent users could easily implement such functionality without coding just by using the ""tasker"" app
"
open-keychain/open-keychain,closed,Fix rotation crash in CreateSecurityTokenWaitFragment #1849,[],"Fix for #1849
"
open-keychain/open-keychain,closed,Security Token: NullPointerException on UsbConnectionDispatcher,"[Label(name=""security token"")]","From Google developer console:
version 39510
Android-Version Android 6.0

```
java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.CreateKeyActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'void org.sufficientlysecure.keychain.util.UsbConnectionDispatcher.rescanDevices()' on a null object reference
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2434)
    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2494)
    at android.app.ActivityThread.handleRelaunchActivity(ActivityThread.java:4120)
    at android.app.ActivityThread.access$1000(ActivityThread.java:157)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1362)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5525)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void org.sufficientlysecure.keychain.util.UsbConnectionDispatcher.rescanDevices()' on a null object reference
    at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity.checkDeviceConnection(BaseSecurityTokenNfcActivity.java:486)
    at org.sufficientlysecure.keychain.ui.CreateSecurityTokenWaitFragment.onCreate(CreateSecurityTokenWaitFragment.java:43)
    at android.support.v4.app.Fragment.performCreate(Fragment.java:1951)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1029)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1234)
    at android.support.v4.app.FragmentManagerImpl.dispatchCreate(FragmentManager.java:2041)
    at android.support.v4.app.FragmentController.dispatchCreate(FragmentController.java:163)
    at android.support.v4.app.FragmentActivity.onCreate(FragmentActivity.java:332)
    at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:74)
    at org.sufficientlysecure.keychain.ui.base.BaseActivity.onCreate(BaseActivity.java:49)
    at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity.onCreate(BaseSecurityTokenNfcActivity.java:203)
    at org.sufficientlysecure.keychain.ui.CreateKeyActivity.onCreate(CreateKeyActivity.java:74)
    at android.app.Activity.performCreate(Activity.java:6272)
    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1107)
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2387)
    ... 10 more
```
"
open-keychain/open-keychain,closed,Incorrect pin error message is misleading.,[],"I'm using OpenKeychain with the Yubikey Neo. I entered my PIN wrong once, but, rather than get ""invalid PIN"", I got a message saying ""security status not satisfied"". Having no idea what this means, I tried two more times, thinking the token wasn't close enough to the sensor, which locked my card.

Please change the message to something more informative so people won't retry the same PIN.
"
open-keychain/open-keychain,open,Keyserver Sync Preference per Key,"[Label(name=""discussion""), Label(name=""help wanted"")]","To bundle discussion about keyserver sync issues, I opened this issue.
This is basically copy paste from: https://github.com/open-keychain/open-keychain/wiki/Google-Summer-of-Code-2016#keyserver-sync-preference-per-key

So our current idea how to handle this is as follows, feedback welcome:
While communication with keyservers and upload of keys is a feature of OpenKeychain which technically works, this area is quite lacking in usability. Many users have also expressed a desire to keep their keys off keyservers. A good way to deal with both of these problems is to mark the user's keys on creation whether they should be distributed via keyservers or not, and equivalently making other keys aware of whether they are already available on keyservers or have been obtained by different means. This information should then be used as a basis to decide how to deal with publication of certificates, and solve cases where a key has new certifictes locally but is not updated on keyservers.

Expected results: A per-key preference on whether the key should be kept in sync with keyservers, and relevant behavior based on that preference.
"
open-keychain/open-keychain,closed,Use KeyRings.NAME etc instead of KeyRing.splitUserId,"[Label(name=""help wanted"")]","Since we introduced KeyRings.NAME, KeyRings.EMAIL in https://github.com/open-keychain/open-keychain/pull/1763 we should now use this in more places to replace calls to `KeyRing.splitUserId`.
"
open-keychain/open-keychain,closed,Security Token: Limitations of moving existing key to token,"[Label(name=""help wanted""), Label(name=""security token"")]","Currently `EditKeyFragment` and `ViewKeyAdvSubkeysFragment` allow only 2048 bit RSA keys to be moved to security tokens.

This is a hardcoded limitation which must be changed to work with bigger RSA keys or ECC keys for newer tokens, such as the YubiKey 4 over USB.
"
open-keychain/open-keychain,closed,Security Token: Admin PIN handling,"[Label(name=""help wanted""), Label(name=""security token"")]","We assume that the Admin PIN is 12345678 by default when creating new keys or moving existing keys to security tokens.
A problem can occur when the token has no keys on it, but the user already changed the Admin PIN or the token has been shipped with a different Admin PIN.

Thus, we should let the user input the Admin PIN if 12345678 did not work. I would strongly favor for a solution that still uses 12345678 by default to keep user interaction to a minimum.
"
open-keychain/open-keychain,closed,Synchronization checkbox checked even if no upload chosen,[],"I created a new key with OpenKeychain and have chosen not to upload / share my key. When I now click on ""edit"" the check box ""synchronize with internet"" is checked anyway and even when unchecking it won't save that state.

As I primarily use OpenKeychain to encrypt files, I am somewhat concerned that my mail address has now been uploaded or will be uploaded to the internet where spam bots get access to it.

I would appreciate
- to fix that check box function
- make the status visible whether a key is online available on a server
- adding a function to add/edit/remove key servers

Kind regards
Thomas
"
open-keychain/open-keychain,open,PubKey export encryption,[],"Hi,
could you implement a possibillity in the advanced setting to deactivate the encryption if exporting only the public keys?
"
open-keychain/open-keychain,closed,Make ACTION_GET_KEY find _sub_keys as well.,[],"I have a use case where, upon receiving an encrypted message,  I would like  to show to the user the list of _other_ recipients , i.e. a list of all the public keys the message has been encrypted for.
And I'd like to show not only the key ID but also the identity information (email address) of that key  (in case the user has that key stored in his local keyring )

Now one can using ACTION_GET_KEY to retrieve public keys from the keyring and that works fine for main keys, but unfortunately this operation only finds _main_ keys with a matching key ID - though in most cases the keys used for encryption are _sub_ keys.

Would it be possible to add support for retrieving _sub_ keys by their key ID?

[I could probably create a pull request for this, but It would either  change the general behavior of ACTION_GET_KEY  or add a boolean extra flag to that action or even create another action like ACTION_GET_SUBKEY or so. 
Since this is touching the API design / contract either way, I'd rather leave this decision to the ""core"" people...]
"
open-keychain/open-keychain,open,Improve QR Scanner - (Invert Colour / Camera Focus),[],"I imported a new key using a security token from my YubiKey NEO ... everything was hunky dory until I had to confirm the key by scanning the QR code. Openkeychain was unable to detect it.

I downloaded ""QR Barcode Scanner"" which has an option to invert the image to scan for white barcodes on black background, take an image and then scan the image with Openkeychain.

It would be really handy if the ability to adjust this within Openkeychain was possible along with a manual focus / disable continuous focus
"
open-keychain/open-keychain,closed,Make OpenKeyChain a Decryption Server,[],"Hey, OpenKeyChain is such a perfect app, thank you for all your amazing work!

Please consider making it a **Decryption Server**. By doing this, I will never have to setup PGP software or place keys everywhere. It's easy to deal with pgp message, and maybe ""upload-decrypt-download"" things for dealing with pgp files. The only problem is the security between the client-server connection.
"
open-keychain/open-keychain,closed,Import existing Key and store it on NFC device,[],"I recently purchased a Fidesmo Privacy Card as suggested on the [OpenKeychain FAQ Page](https://www.openkeychain.org/faq/#what-security-tokens-are-recommended-for-openkeychain). The FAQ only helps with importing keys to a YubiKey, since Fidesmo Privacy Card is nfc only, [this way](https://developers.yubico.com/PGP/Importing_keys.html) is not possible. I followed the [tutorial](http://about.fidesmo.com/about/devices/) linked by Fidesmo but was disapointed that there seems to be no way to import an existing key on the card. Did I miss something? Is this related to https://github.com/open-keychain/open-keychain/issues/1717 ?
"
open-keychain/open-keychain,closed,cleartextSign oncancel,[],"Hi,
Im doing a cleartextSign, it asks for my password and when i enter it it works.
If i type the wrong password or click cancel it i get the result in my ""onActivityResult"" where i start the cleartextSign again but now its not doing anything.
Am i forgetting something or is this a bug?

gr
yrm
"
open-keychain/open-keychain,closed,Integration with K-9 Mail is broken,[],"I unlock my key in OpenKeychain outside K-9 Mail and attempt to sign an e-mail with the following pop-up error dialog (captured by visual inspection as it is a transient dialog):

OpenPGP Error: Attempt to invoke virtual method
'org.bouncycastle.openpgp.PGPPublicKey
org.bouncycastle.openpgp.PGPSecretKey.getPublicKey()' on a null
object reference

I believe my public and private keys are correctly configured. They are visible in the OpenKeychain App keys page.
"
open-keychain/open-keychain,closed,Check security token,[],"Currently user can sign and decrypt with wrong security token which should not happen.
This PR adds checks before signing and decryption.
"
open-keychain/open-keychain,closed,WIP: Add Nitrokey support,[],"Currently I get

```
AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 1924
  1924         AndroidRuntime  E  java.lang.RuntimeException: An error occured while executing doInBackground()
  1924         AndroidRuntime  E  at android.os.AsyncTask$3.done(AsyncTask.java:304)
  1924         AndroidRuntime  E  at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
  1924         AndroidRuntime  E  at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
  1924         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:242)
  1924         AndroidRuntime  E  at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
  1924         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
  1924         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
  1924         AndroidRuntime  E  at java.lang.Thread.run(Thread.java:818)
  1924         AndroidRuntime  E  Caused by: java.lang.OutOfMemoryError: Failed to allocate a 688448510 byte allocation with 16777216 free bytes and 166MB until OOM
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.securitytoken.UsbTransport.receive(UsbTransport.java:255)
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.securitytoken.UsbTransport.setIccPower(UsbTransport.java:82)
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.securitytoken.UsbTransport.connect(UsbTransport.java:192)
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.securitytoken.SecurityTokenHelper.connectToDevice(SecurityTokenHelper.java:150)
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity.handleSecurityToken(BaseSecurityTokenNfcActivity.java:412)
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity$1.doInBackground(BaseSecurityTokenNfcActivity.java:171)
  1924         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity$1.doInBackground(BaseSecurityTokenNfcActivity.java:161)
  1924         AndroidRuntime  E  at android.os.AsyncTask$2.call(AsyncTask.java:292)
  1924         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:237)
  1924         AndroidRuntime  E  ... 4 more
```
"
open-keychain/open-keychain,closed,Security Token: Improvements to USB support,"[Label(name=""help wanted""), Label(name=""security token"")]","- Add more devices to the whitelist: e.g., Nitrokey
- Other pictures with USB devices for the dialog
- Key generation on security token: a method is already there but not used because key generation over NFC is extremely unreliable and works only 1/3 of the time. I suspect that is because of power issues, which should not happen with USB.
- warning for reset procedure?
- animation when going from the CreateSecurityTokenWaitFragment moves into the wrong direction (just a minor glitch)
"
open-keychain/open-keychain,closed,Fix Wrong file encrypted from cached input,[],"To reproduce it:
1.  Select a file to encrypt
2.  Click on the save icon
   << Now user might realize that he selected the wrong file to encrypt So, he/she will cancel it (don't save) >>
3.  Remove file
4.  Select correct file
5.  Save it

But it will still encrypt the previous file from cache.
"
open-keychain/open-keychain,closed,Handle user input on key creation more generously,[],"Allows an empty name on key generation and does not enforce email formats by regex matching. Instead, it shows a warning in the CreateKeyFinalFragment if an email does not match the regex. The explanation is only shown when the email field was clicked on, to not hide the sync option.

relevant issue: #1825 

![](https://i.imgur.com/qawnhu7.png)
"
open-keychain/open-keychain,closed,API: Restrict secret keys for sign operation,"[Label(name=""help wanted"")]","OpenKeychain allows to restrict the set of secret keys allowed for decrypt operation per registered app. This means secret keys not explicitly selected by the user cannot be used to decrypt content.

The same restriction to selected secret keys must be implemented for the sign operation.
"
open-keychain/open-keychain,closed,Cannot import .pfx file from storage as my key.,[],".pfx contain private and public key. I want to import my .pfx file from mass storage. So, under Manage my keys, I click IMPORT KEY FROM FILE>>Choose my .pfx file. But OpenKeyChain cannot detect it as a key.
"
open-keychain/open-keychain,closed,Add missing keyholder string param,[],"Not sure about other languages though. I assume they should be fixed via transifex, right?
"
open-keychain/open-keychain,closed,Cannot upgrade to Gradle Plugin 2.0,[],"We currently cannot upgrade to Android Gradle Plugin 2.0 due to http://stackoverflow.com/questions/33878465/cannot-change-dependencies-of-configuration-after-enabling-instant-run / https://code.google.com/p/android/issues/detail?id=197604

I am waiting for Google to resolve this, I don't think we should rename subfolders.
"
open-keychain/open-keychain,closed,Decrypt strips data before first ... BEGIN PGP ...,[],"Decrypted a symmetric message that contains a PGP public key among other things.  Gpg on linux decrypts it correctly.  Open-keychain on android M strips data before the key block, including the armor header and blank line.
"
open-keychain/open-keychain,closed,Cannot use i2p Email address,[],"We prevent the usage of test@mail.i2p. We should fix our regex or simply don't hard-fail if a non-conforming Email address is added. I favor the second option.
"
open-keychain/open-keychain,closed,[WIP] USB OTG Support for Yubikey,[],"Hello,
This is WIP PR for USB OTG Yubikey support (and possibly other devices like Nitrokey).

This is in very early stage, basically a quickly hacked proof of concept, but I decided to open anyway and to show some progress, as @Valodim suggested in #1550 

Despite being in early stage, everything should be usable, so you can test it if you want.

Issues:
- [x] User shouldn't need to reinset device on each operation
- [x] Disconnects are not handled properly
- [x] Reinsert required in some ocasions(encrypting after reinserting on prev screen)
- [x] Update Manage my keys -> Security token thing
- [x] Investigate issue with transmitting -1 
- [ ] Investigate bricking on card reset
- [ ] Needs refactoring (error handling, ....)
- [ ] Tests?
- [ ] Nitrokey & others

cc @Valodim @dschuermann
"
open-keychain/open-keychain,closed,Only lookup on keybase when entered search string is no mail address,[],"What about skipping the keybase.io query when the entered search query is a mail address (so when it contains an `@`)?

I don't know if keybase supports mail address lookups at all, but in any case it is most likely used (and intended) for searching for usernames and not mail addresses (that's what usual keyservers are for).
"
open-keychain/open-keychain,closed,"Add + button besides TokenAutoComplete, Issue #925",[],"![screenshot_20160405-233757](https://cloud.githubusercontent.com/assets/7701929/14292872/9f778940-fb87-11e5-9ab5-e79ff9afda7d.png)
"
open-keychain/open-keychain,closed,Can we send email from Android (K9-Mail) to PC(Microsoft Outlook)?,[],"I want to know whether smartphone(Android using K9-mail) can send/receive email  (also can encrypt and decrypt by using Openkeychain) to/from PC (PC use Microsoft Outlook for encrypt and decrypt) ?

I tried send sign from phone to PC but PC cannot detect the signature.. The recipient(PC) only can view like below, not detect it as signed email 
-----BEGIN PGP SIGNATURE-----
XXXXXXXXXXX(cipher)
-----END PGPG SIGNATURE------
"
open-keychain/open-keychain,closed,error : no such remote ref 7c84cb54df5b3d5c6780984e48f3e9e4cbc5128e Fetched in submodule path 'extern/safeslinger-exchange',[],"I want to run this apg app on Android Studio. I follow the steps provided. In step 2 which is 

`git submodule update --init --recursive`

I got error : 

> error : no such remote ref 7c84cb54df5b3d5c6780984e48f3e9e4cbc5128e  Fetched in submodule path 'extern/safeslinger-exchange', but it did not contain 7c84cb54df5b3d5c6780984e48f3e9e4cbc5128e . Direct fetching of that commit failed.
"
open-keychain/open-keychain,closed,"Fix Crash when no encryption subkey is available, Issue #1817",[],"![screenshot_20160405-040401](https://cloud.githubusercontent.com/assets/7701929/14266128/aa6728aa-fae3-11e5-8506-5f4a19d53802.png)
"
open-keychain/open-keychain,closed,"Fix Unusable signing key not properly disabled, Issue #1468",[],"In CertifyKeySpinner and SignKeySpinner item at position 0 will not be ""none"" entry because they are inner adapters. Please see KeySpinner.java:156. That's why even if the first key is revoked or didn't have a signing subkey it is selectable because it consider them as ""none"" entries.
"
open-keychain/open-keychain,open,Crash when no encryption subkey is available,[],"Follow-up on #1807. To reproduce: Revoke encryption subkey of a key, then select as recipient in one of our encryption activities.

```
 java.lang.IllegalStateException: no encryption methods specified
 at org.bouncycastle.openpgp.PGPEncryptedDataGenerator.open(PGPEncryptedDataGenerator.java:178)
 at org.bouncycastle.openpgp.PGPEncryptedDataGenerator.open(PGPEncryptedDataGenerator.java:333)
 at org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation.execute(PgpSignEncryptOperation.java:340)
 at org.sufficientlysecure.keychain.operations.SignEncryptOperation.execute(SignEncryptOperation.java:153)
 at org.sufficientlysecure.keychain.operations.SignEncryptOperation.execute(SignEncryptOperation.java:61)
 at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:146)
```

This error should be handled with a log entry and error status in PgpSignEncryptOperation, and display an error message. For the extra mile, it could also highlight the problematic recipients in our own encryption activities.
"
open-keychain/open-keychain,closed,Correctly handle keys only having an email address,[],"When a key has a user id only consisting of an email, that email is wrongly taken as name.
fixes #1699
"
open-keychain/open-keychain,closed,ditch MaskedEditText,[],"We moved to using the MaskedEditText library in 713f3076f4ee1b94f1a1a133fba32a396c0d1039. However, this  has lead to a lot of problems, even after fixing various crashes and usability misbehaviors it's still not working _good_, and apparently for some users not at all in a way we haven't managed to reproduce (#1799).

So, back to the linked EditText views it is. This worked fine actually, we just need to be careful about the width-specific variants in the resource files.
"
open-keychain/open-keychain,closed,GoogleHandwritingInput breaks backup key input,[],"Found this out while testing the MaskedEditText fix I wrote. The bug is present in the original MaskedEditText.

Characters entered from GoogleHandwritingInput do not seem to checked by the InputFilter used by MaskedEditText. The total EditText length increases as characters are entered and the input mask breaks.
"
open-keychain/open-keychain,closed,Auto-capitalization for backup code insertion,[],"InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS does not work for all keyboards*. Adding the InputFilter.AllCaps filter circumvents this problem.

*Fails on Swiftkey
"
open-keychain/open-keychain,closed,Prevent crashing caused by MaskedEditText,[],"Refer to #1809
Crashing is caused by mass deletion of text. Two fixes are introduced to prevent this.

1) Prevent mass delete when backspace button is held
SuccessTextWatcher is modified to watch for mass delete, and to emulate a single delete if detected.

2) Prevent mass selection when double tapping
OnTouch method of MaskedEditText is overridden, limiting selection size to 0.

Note that fix 2) is required as allowing mass selection but not allowing mass delete does not make sense in a UX perspective.
"
open-keychain/open-keychain,closed,Make keyserver upload non-default,[],"This is related to #1674 and #1127.

Up to now the keyserver upload checkboxes (when creating a new key pair or updating identities) are checked by default. Reasons why I think they shouldn't be:
- The checkbox on the identity edit activity can be overlooked very easily, especially when you unchecked it the last time you were editing that key.
- Data protection: As personal information will be published, this should require an Opt-in rather than an Opt-out.
"
open-keychain/open-keychain,closed,Fix link to open-keychain/bouncycastle fork,[],
open-keychain/open-keychain,closed,crash with MaskedEditText,[],"```
java.lang.StringIndexOutOfBoundsException: length=29; index=72
    at java.lang.String.charAt(Native Method)
    at com.github.pinball83.maskededittext.MaskedEditText$MaskedInputFilter.filter(MaskedEditText.java:349)
    at android.text.SpannableStringBuilder.replace(SpannableStringBuilder.java:504)
    at android.text.SpannableStringBuilder.delete(SpannableStringBuilder.java:225)
    at android.text.SpannableStringBuilder.delete(SpannableStringBuilder.java:34)
    at android.text.method.BaseKeyListener.backspaceOrForwardDelete(BaseKeyListener.java:106)
    at android.text.method.BaseKeyListener.backspace(BaseKeyListener.java:51)
    at android.text.method.BaseKeyListener.onKeyDown(BaseKeyListener.java:215)
    at android.text.method.QwertyKeyListener.onKeyDown(QwertyKeyListener.java:357)
    at android.text.method.TextKeyListener.onKeyDown(TextKeyListener.java:136)
    at android.widget.TextView.doKeyDown(TextView.java:7122)
    at android.widget.TextView.onKeyDown(TextView.java:6929)
    at android.view.KeyEvent.dispatch(KeyEvent.java:3249)
    at android.view.View.dispatchKeyEvent(View.java:9833)
```
"
open-keychain/open-keychain,closed,Warn when stripping master key #1554,[],"Based off @tdjogi010's [work](https://github.com/open-keychain/open-keychain/pull/1736), improved on the solution as mentioned in pull request 1736.

Fixes #1554
"
open-keychain/open-keychain,closed,Fix Crash on encrypt using revoked key,[],"To Reproduce
1. Revoke a key
2. Select it from the main screen 
3. Try encrypt file using menu icon in the action bar 

Fix:
Hide encrypt icon in the action bar if any selected key is revoked
"
open-keychain/open-keychain,closed,app crash on mi4i,[],"hi... it's always crash everytime i tried to encrypt a file on xiaomi mi4i (mui 7.1)
any idea or workaround?
"
open-keychain/open-keychain,open,Decrypt from clipboard doesn't work,[],"It always comes back with no data in clipboard but I certainly have data in the clipboard. Other apps can access it. 

Samsung s6 , 5.1.1, latest app version 
"
open-keychain/open-keychain,closed,tint linked contact picture in toolbar #1298,[],"Fixes #1298
"
open-keychain/open-keychain,closed,PIN not rerequested in case it is wrong with fidesmo privacy card,"[Label(name=""security token"")]","I am using openkeychain with a fidesmo privacy card. If I entered a wrong PIN for the card and connect it via NFC I see two things happening:
- the error message does not indicate that the PIN is wrong but instead only states: ""Security Token reported invalid data. Take away the Security Token now and touch TRY AGAIN""
- there is no new dialog asking for a new PIN. Instead, attempts are repeated with the old PIN, easily wasting the three iterations before the admin PIN is required.

Both things sound as if they should be solved according to #1039 but apparently are not in 3.9.4.

Additionally, I couldn't even find a way to unblock the card using openkeychain with the admin PIN.
"
open-keychain/open-keychain,closed,Possible error,[],"Should you really be checking this in?

https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/build.gradle#185
https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/build.gradle#201

```
        // Github API
        buildConfigField ""String"", ""GITHUB_CLIENT_ID"", ""\""c942cd81844d94e7e41b\""""
        buildConfigField ""String"", ""GITHUB_CLIENT_SECRET"", ""\""f1dd17e70a0614abbd9310b00a310e23c6c8edff\""""
```

> First, you'll need to register your application. Every registered OAuth application is assigned a unique Client ID and Client Secret. The Client Secret should not be shared! That includes checking the string into your repository.

https://developer.github.com/guides/basics-of-authentication/
"
open-keychain/open-keychain,closed,Crashes when being a protected app of Cyanogenmod,[],"OS: `CM-13.0-20160325-NIGHTLY-jfltexx`

Reproduce:
1. [Protect](http://androidcommunity.com/cyanogenmod-adds-protected-apps-teases-cmhome-20140622/) OpenKeychain with a pattern.
2. Try to open an (PGP/MIME) encrypted mail with K9 mail (this means you basically open an `.asc` file): [screencast.mp4.zip](https://github.com/open-keychain/open-keychain/files/192163/screencast.mp4.zip)

After unlocking the app it crashes. Note that this does _not_ happen when the app is not a hidden/protected app.
"
open-keychain/open-keychain,closed,"K-9 complains that none of the keys is able to decrypt, when mail sent from Thunderbird/Enigmail",[],"Hi,

In K-9 on my android phone, I get the message ""None of the allowed keys is able to decrypt the content"", when the email has been sent from Thunderbird/Enigmail.
No problems when the email has been sent from another android device with K-9.
Both above cases use the same public key of mine that was generated and uploaded by an earlier version of openkeychain, don't know exactly, it was about 6 months ago.

When Enigmail imported my public key (check the 1st line):

```
gpg: assuming bad signature from key 7715252F due to an unknown critical bit
gpg: key 7715252F: public key ""Elias Papanikolaou <opapanik@gmail.com>"" imported
gpg: marginals needed: 3  completes needed: 1  trust model: PGP
gpg: depth: 0  valid:   1  signed:   1  trust: 0-, 0q, 0n, 0m, 0f, 1u
gpg: depth: 1  valid:   1  signed:   0  trust: 1-, 0q, 0n, 0m, 0f, 0u
gpg: Total number processed: 1
gpg:               imported: 1
```

I have deleted and re-imported my public key to enigmail, but I always get the same message.

I have made sure that the message from Enigmail is sent as plain text and pgp/inline.
Also tried revoking access from K-9 and starting again, problem still there.

Probably Enigmail's or gpg's fault? Something they don't understand in the key?
- no problems with messages between K-9 on Android tablet with Lollipop and Android LG G4 with Marshmallow
- Thunderbird 38.7.0, Enigmail 1.9.1, gpg 2.1.11 on Windows 10
"
open-keychain/open-keychain,closed,Backup of key not working,[],"Android 4.4.2, Samsung Galaxy S4 mini, OpenKeyChain 3.9.4

Created new key pair. Now I am trying to export the thing.
Menu -> backup key -> entered password -> wrote down Backup-code -> pressed ""OK, I have it..."" -> entered the same Backup code (why???) -> nothing, no button to confirm this, no message, it just sits there showing me the code I just entered
"
open-keychain/open-keychain,open,Import keys when same key available twice on keyserver (#1707),[],"#1707 Allow for import of keys when the same key is available twice on the keyserver.
"
open-keychain/open-keychain,closed,Merged the latest changes from NetCipher,[],"Issue #1792
"
open-keychain/open-keychain,closed,Refer to issue #1600 Limit create key options,[],"Also changed key type of default keys in key creation wizard to RSA, 3072 bit.

Implementation details:
Using the default spinner results in the dropdown focusing on the default item (RSA, 3072) in the list
when selected. This obscures RSA 2048 on smaller screens (tested on a 800x480), which is not very intuitive in my opinion. As such, a custom spinner is used to ensure that the focus is always set on the first item in the list instead. A hack was used to achieve this. (refer to FocusFirstItemSpinner.java)
"
open-keychain/open-keychain,closed,#1661 - Don't expose CertifyActivity,[],"*Add new activity - RedirectImportKeysActivity, which prompts user to
use Openkeychain directly
*Add intent filter for the activity
*Change intent filter for CertifyActivity
"
open-keychain/open-keychain,closed,Request the storage read permissions when it is not granted.,[],"I have a problem importing my new key. The app crashes with `open failed: EACCES (Permission denied)`. After some googling, I found that the permission is not granted in my Android 6 phone. I changed the permission and everything works fine now.

I think the app needs to implement [Requesting Permissions at Run Time](https://developer.android.com/training/permissions/requesting.html#handle-response) so that app won't crash when the storage permission is not granted.
"
open-keychain/open-keychain,open,Importing a sub-key only gpg key fails,[],"When I try to import a gpg key which only contains the private sub-keys but not the private key of the master key, open key chain 3.9.2 shows the key details correctly after choosing the file, but then crashes on import.
"
open-keychain/open-keychain,closed,"Update NetCipher to get rid of ""Tor appears not to be running""-message","[Label(name=""help wanted"")]","Hi!
On AOSP>=Android N and also on CopperheadOS the flag hidepid=2 is set, which prevents apps from detecting, whether Tor is running or not. The GuardianProject fixed this in the latest version of NetCipher. Could you please update NetCipher, to make Key Synchronization via tor possible again?
"
open-keychain/open-keychain,closed,Use different subkey with different passphrase,[],"This is a enhancement I think.
As me ,I use two subkeys one for encrypt and the other for singing.
There two subkeys use different passphrase,and passphrase cache will get wrong passphrase.
I watch the code, the service will compare the subkeyID.
How to enhancement it?
"
open-keychain/open-keychain,closed,"Wrong ""Invalid signature""",[],"When I send cleartext-signed message to peers that do not use PGP in their replies, OpenKeychain refuses to display their response, and just give me the red bar with ""Invalid signature"" in it.

The problem of course is that there is no signature in the response besides what's in the **quoted** message. This is what it looks like in Apple Mail:
![openkeychain-mess](https://cloud.githubusercontent.com/assets/5923577/13801219/4ac77f18-eb06-11e5-9f25-64b00d449e19.png)

Trying to cut-and-paste from that window though produced this:

```
......
 Do we need to discuss confidential things???

On Mar 14, 2016, at 4:58 PM, Uri ... wrote:

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

......
Thanks!
Uri
- --
Sent from my Android device with K-9 Mail. Please excuse my brevity.
-----BEGIN PGP SIGNATURE-----

iQFABAEBCgAqIxxVcmkgQmx1bWVudGhhbCAoTUlUKSA8dXJpQG1pdC5lZHU+BQJW
5yX2AAoJEGw0pJdB6QkCz4MH/3nEa2AgrHtdcWjC5MVa6Ut6f0O8nLXpBX05Xikh
GpGSbNuzV+Q3VNQIBgAsvABQgeLyzd04sf/L6EtRhYpFgFX2CDJZY61yTqst51yq
ZoB9j+dHi9zbFRnLcvDJUSX59q6RrXxn6te/hdyXiulL7oDSgqcZkEmA6eidt8Bb
AhVyRcgJrfRiIuBAwLKpOqTRCV4MKpb7ifKHQGVNY9cA/AQKAMmAQfkxtAcZc0QN
uCaaYaZI+Cf8egJ7G5k6kPRj2M80nsdJC4BlU1+MDaKWKBxUX9sMTCVpqpok6oHI
FArZCs2MFHTkrU9BrWQ0B7YVM91g67ncrKOYlOHbKe9/o3A=
=eKhJ
-----END PGP SIGNATURE-----
```

On their end - it looks like Microsoft Exchange is involved, possibly MS Outlook. Server - Gmail. On my end - OpenKeychain-3.9.4 (was 3.9.2) and K-9 Mail 5.008 (released).

I can see how OpenKeychain can get confused, if the quoted message is simply appended to the response. But it is rather inappropriate to prevent the incoming message from being viewed! Putting that very visible red bar with ""Invalid signature"" should be quite enough to inform the reader/receiver that there are problems with message signature. Completely preventing me from even seeing this message on my mobile device is bad. **I urge you to reconsider**. 

**Update** R2Mail2 app displays the message in question correctly. And it correctly determines that the signature in the appended message does not relate to the current one. So it reports the message as not signed (which is correct). _The main reason I don't switch to R2Mail2 is that it does not support hardware tokens._
"
open-keychain/open-keychain,closed,Update to 3.9.4 removes any existing key,[],"Upgrading to 3.9.4 causes my existing public/private key to be no longer available. Unable to determine if it was overwritten or just no longer accessible.
"
open-keychain/open-keychain,closed,App broken,[],"Today's update broke the app entirely :-/
"
open-keychain/open-keychain,closed,Signature shown wrongly as invalid,[],"Send myself a signed and a signed/encrypted email with
K-9 Mail 5.008
OpenKeychain 3.9,2
and looking at the send and received emails with OpenKeychain they are always shown as ""Invalid signature"", while I can decrypt ok. Looking at the email using KMail on Linux, the signature is shown as valid in all cases.
"
open-keychain/open-keychain,closed,Import key from clipboard causes force close,[],"Hey guys,

Having issues with the import from clipboard functionality.

Steps to reproduce:

Load https://xmpp.is/pgp.asc.txt in chrome.
Select all, copy.
Load OpenKeychain.
Press plus action button on bottom right.
Press import from file.
Press clipboard icon to the right of the folder icon on the open button, top right.
""Unfortunately, OpenKeychain has stopped.""

Logcat error looks like this:

> 03-15 14:02:39.344 15332-15332/? E/AndroidRuntime: FATAL EXCEPTION: main
>                                                    Process: org.sufficientlysecure.keychain, PID: 15332
>                                                    java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String android.net.Uri.getScheme()' on a null object reference
>                                                        at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.checkAndRequestReadPermission(ImportKeysListFragment.java:271)
>                                                        at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.loadNew(ImportKeysListFragment.java:338)
>                                                        at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadCallback(ImportKeysActivity.java:331)
>                                                        at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment$2.onClick(ImportKeysFileFragment.java:89)
>                                                        at android.view.View.performClick(View.java:5204)
>                                                        at android.view.View$PerformClick.run(View.java:21155)
>                                                        at android.os.Handler.handleCallback(Handler.java:739)
>                                                        at android.os.Handler.dispatchMessage(Handler.java:95)
>                                                        at android.os.Looper.loop(Looper.java:148)
>                                                        at android.app.ActivityThread.main(ActivityThread.java:5422)
>                                                        at java.lang.reflect.Method.invoke(Native Method)
>                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
>                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
"
open-keychain/open-keychain,closed,Sync only when unmetered internet is available #1670,[],"Final PR, all changes included and tested throughly.
"
open-keychain/open-keychain,closed,WIP: Change password when key is stripped #1692,[],"Approach:
Find the first unstripped secret key and use it for passphrase verification
All unstripped keys will have their passphrase changed to new passphrase, if possible.
This quite resembles #1085 (which is closed) so I'm a little unsure if I'm going in the right direction, would like some confirmation before I proceed.

Current Progress:
Changing the passphrase of keys seems to work fine. Pin & related data is not yet removed.
Refactoring to combine ""modifySecretKeyring"" and newly added method, ""modifyKeyRingPassword""
may be possible if given the go-ahead.

Extra notes:
Might be a good idea to clear the remember passphrase option /
wipe all remembered passphrases when a passphrase is changed as well.
"
open-keychain/open-keychain,closed,okhttp2 to okhttp3,[],"Hi,

I've changed okhttp to version 3. Because in version 3 each client has its own connection pool I've made factory for okhttpclient. I also had to change  OkHttpKeybaseClient because UrlFactory is deprecated (which also needs change in KeybaseLib in other request)
"
open-keychain/open-keychain,closed,Set MIME application/pgp-keys when sending a key,[],
open-keychain/open-keychain,closed,Missing key for encryption: %s in K9-Mail,[],"Android: 6.0.1
CyanogenMod: 13.0-20160205-NIGHTLY-peregrine
OpenKeychain: 3.9.2 (from F-Droid)
K9-Mail: 5.008 (F-Droid as well)

I am trying to send encrypted message, I've got public keys for both sender and recipient, no private key for sender though. I get the ""Missing key for encryption: %s"" message, meanwhile logcat shows

```
03-14 21:08:59.729  3888  5239 W Keychain: You are using a deprecated service which may lead to truncated data on return, please use IOpenPgpService2!
03-14 21:08:59.930 11761 11761 E k9      : OpenPGP Error ID:0
03-14 21:08:59.930 11761 11761 E k9      : OpenPGP Error Message:Missing key for encryption: %s
```

Both keys are valid and haven't expired. I can encrypt a message for those keys in OpenKeychain.

If you want more debug information please give me a step-by-stap for I am not an Android developer.
"
open-keychain/open-keychain,closed,Provisional backup-code text selection fix,[],"For #[1779](https://github.com/open-keychain/open-keychain/issues/1779),
A provisional fix is made to make selection more difficult. Preventing selection altogether is not possible due to the internal implementation in the Masked-Edittext dependency.

To be updated when Masked-Edittext fixes this bug.
"
open-keychain/open-keychain,closed,Text selection bug on backup code insertion screen,[],"Selecting and deleting text in the edit-text field will break the current code and result in an out-of-bounds exception. This seems to be a bug with the Masked-Edittext dependency used.

![resized000](https://cloud.githubusercontent.com/assets/11351531/13720151/673737d2-e83c-11e5-82b5-7224a3777441.png) ![resized002](https://cloud.githubusercontent.com/assets/11351531/13720152/673b018c-e83c-11e5-9d48-4abe1aa66582.png)
"
open-keychain/open-keychain,closed,key creation - master key removal fix,[],"A fix for [#927](https://github.com/open-keychain/open-keychain/issues/927), with approach outlined on the page.
"
open-keychain/open-keychain,closed,Updated HAS_DUPLICATE_USER_ID in KeychainProvider #1745,[],
open-keychain/open-keychain,closed,Update Keyserver Sync if Sync Interval Changed,[],"Until now the only way to update sync interval was uninstalling/re-installing the app. Shouldn't have affected any of our release builds since we never changed it.
"
open-keychain/open-keychain,closed,Migrate to OkHttp3,"[Label(name=""help wanted"")]","We should migrate from OkHttp2 to OkHttp3. See https://github.com/square/okhttp/blob/master/CHANGELOG.md#version-300-rc1 for migration notes.
"
open-keychain/open-keychain,closed,Fix display of keyserver item in dark theme in SettingsKeyserverActivity,[],"![bug](http://i.imgur.com/rv0IgOv.png) ![fix](http://i.imgur.com/y56LSVe.png)
"
open-keychain/open-keychain,closed,Use white icons in Settings for dark theme,[],"Please, use white icons in Settings for dark theme. 
"
open-keychain/open-keychain,closed,"Handle encrypted files in ""import key"" file selection",[],"This is a solution for:
https://github.com/open-keychain/open-keychain/issues/1673
"
open-keychain/open-keychain,closed,PgpSignEncryptOperation refactoring,[],"This refactoring is needed for two reasons:

1) Because https://github.com/open-keychain/open-keychain/blob/8b8b91e24722f254ad84916d3e1b6c6210906924/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpSignEncryptOperation.java#L108
2) Because it's needed to produce good code for my other PR #1760

It's a WIP because it needs a bit more testing, a bit of code clean up and probably tests should be adapted too. This doesn't introduce functional changes. I will continue to work on this during next days. Advices and suggestions are welcome :)
"
open-keychain/open-keychain,closed,"Add button ""Get it on F-Droid""",[],"Please, upgrade the ""Get it on F-Droid"" on your website https://www.openkeychain.org/ with a PNG file from https://commons.wikimedia.org/wiki/File:Get_it_on_F-Droid.svg Also add a button in your README.md file on GitHub. Both buttons please with the appropriate link to the page of your app on F-Droid.
"
open-keychain/open-keychain,closed,"Fix NullPointerException in ImportKeysListFragment.checkAndRequestReadPermission, #1766",[],
open-keychain/open-keychain,closed,None of the allowed keys is able to decrypt the content.,[],"Hi,
since 3.9.2 I can't decrypt chat messages in Conversations(Jabber client) anymore. Error message is: ""None of the allowed keys is able to decrypt the content.""
I deleted OpenKeychain and reinstalled it, same error. I downgraded to 3.9 and it works again.
"
open-keychain/open-keychain,closed,Sync only when unmetered internet is available? #1670,[],"@adithyaphilip I have included the changes you suggested on the previous pull request.

However there were 2 issues left unresolved (refer notes). There might be a case where the wifi is off when the periodic sync takes place. The sync should either be postponed or resumed once wifi is back else it will never happen (unless wifi is active when next scheduled sync takes place, even then it can only possibly happen once in 3 days). What are your thoughts on that? 
"
open-keychain/open-keychain,closed,NullPointerException in ImportKeysListFragment.checkAndRequestReadPermission,"[Label(name=""help wanted"")]","Looks like a regression bug.

```
java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String android.net.Uri.getScheme()' on a null object reference
    at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.checkAndRequestReadPermission(ImportKeysListFragment.java:271)
    at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.loadNew(ImportKeysListFragment.java:338)
    at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadCallback(ImportKeysActivity.java:331)
    at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment$2.onClick(ImportKeysFileFragment.java:89)
    at android.view.View.performClick(View.java:4803)
    at android.view.View$PerformClick.run(View.java:19981)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:135)
    at android.app.ActivityThread.main(ActivityThread.java:5430)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
```
"
open-keychain/open-keychain,closed,Link to search from AutoTextComplete,[],"Issue : https://github.com/open-keychain/open-keychain/issues/1228

Added a small search button besides `EncryptKeyCompletionView`. Directly performs cloud key search using the text obtained from the view.
"
open-keychain/open-keychain,closed,Display Key in UploadKeyActivity Issue #506,[],"![screenshot_2016-03-07-17-36-11](https://cloud.githubusercontent.com/assets/7701929/13568988/45972e98-e48b-11e5-8b04-894c579804db.png)
Fix #506
"
open-keychain/open-keychain,closed,WIP: Save split user ids in database #1745,[],"Save split user ids in database
"
open-keychain/open-keychain,closed,Import From File: Import from multiple files not working,[],"In Import from the file if we first open file then open another file without import this one then it will replace it.  I will be better to allow import both. @dschuermann was it intended or can be improved ??
"
open-keychain/open-keychain,closed,is there a way to query keys from Symantec Unified PGP Server,[],"Hi,

I just wanted to know is there a way to query keys from Symantec Unified PGP Server over LDAP/S ?

P.S . sorry if I am putting the query in wrong place / section.

Cheers,
Roy
"
open-keychain/open-keychain,closed,WIP: Improve EncryptFilesFragment,"[Label(name=""needs work"")]","We have some limitations in EncryptFilesFragment. Mainly:
- Saving of files not supported <= KitKat
- Saving of multiple files not supported
- No control on output filenames (useful when sharing with email..)

So, i spent some time to improve the situation by solving these problems.
This is a screenshot after this PR at this time (remember it's WIP)

![screenshot_20160306-225101](https://cloud.githubusercontent.com/assets/2026137/13557418/4a2e67dc-e3f0-11e5-9c9a-dcacbacb5b4a.png)

Here we have the list of files we want to Encrypt.
If you tap on a file you get:

![screenshot_20160306-225117](https://cloud.githubusercontent.com/assets/2026137/13557424/741e8a18-e3f0-11e5-807b-5be2616e688f.png)

Here you can set the filename of the output file. (Probably we can add other file specific options..)
This filename will be used for saving and share actions.

If you tap the save icon in the action bar you get a folder picker to set the path where you want to place the output files. Now i'm using a library for the folder picker because i wanted to share a more or less completed idea in the shortest time to get feedback. But the plan is to write an own folder picker, specific for our use case.

This PR is a WIP because code needs a bit of clean up, some checks are needed, UI need to be improved, bugs need to be fixed, granting of storage permission, i need to write a proper folder picker, i will add gestures etc..
But i wanted to start sharing this work to hear your opinions.
Do you like this idea? Do you have any suggestions before i go deep on this way?

I think all these things are pretty useful.
"
open-keychain/open-keychain,closed,Fix CertifyKeyActivity back button on action bar not working #1758,[],
open-keychain/open-keychain,closed,CertifyKeyActivity back button on action bar not working,[],"To Reproduce 
Try to confirm any key with fingerprint or phrases and go back without confirming using back button on the action bar.
"
open-keychain/open-keychain,closed,Fix K-9 stable: OpenPGP: Unknown compression algorithm #1752,[],
open-keychain/open-keychain,closed,sync only when unmetered internet is available?,[],"Created a Sync Only on Wi-Fi switch in Settings. When On, a receiver is
created when the sync is pending and Wi-Fi is disconnected. This
listens for any Wi-Fi state change broadcasts. Once connected the
receiver is disabled.
"
open-keychain/open-keychain,closed,sync only when unmetered internet is available? #1670,[],"Created a Sync Only on Wi-Fi switch in Settings. When On, a receiver is
created when the sync is pending and Wi-Fi is disconnected. This
listens for any Wi-Fi state change broadcasts. Once connected the
receiver is disabled.
"
open-keychain/open-keychain,closed,Backup code: Copy to clipboard option,[],"Currently, we have to write down the backup code. There is no option to copy and paste it somewhere. It will be good to provide an option to copy the backup code to clipboard.
"
open-keychain/open-keychain,open,Min SDK 16 for grantUriPermission?,"[Label(name=""discussion"")]","This is the the outcome of a discussion with @cketti 

Currently we use an approach with UUIDs in https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/TemporaryFileProvider.java to prevent other apps from reading every temp file and not all temp files. We didn't use `grantUriPermission` because it didn't work correctly with `ACTION_SEND` and `ACTION_SEND_MULTIPLE` (see comments on top of class).

This is actually because it has not been implemented properly on SDK < 16. See comment in https://developer.android.com/reference/android/content/Intent.html#ACTION_SEND

So if we want to use Uri permissions, we should switch to min sdk 16 and always use  `setClipData(ClipData)` with `FLAG_GRANT_READ_URI_PERMISSION` for all intents.

Currently we would loose 1,74 % of all users when moving from SDK 15 to 16 according to our developer console statistics. I am in favor of moving to SDK 16 and using Uri permissions. It's a much cleaner approach in my opinion and uses the OS security.

Feedback?
"
open-keychain/open-keychain,closed,"K-9 stable: ""OpenPGP: Unknown compression algorithm""",[],"When encrypting a mail with current K-9 Mail it shows a toast ""OpenPGP: Unknown compression algorithm"" 

Reproduce:
1. Open K-9 Mail
2. Create new mail and check ""encrypt"" and ""sign""
3. On sending mail, I see the OpenKeychain dialog that asks for the allowed keys. After saving, a toast comes up ""OpenPGP: Unknown compression algorithm"" and the mail is not send
4. After this first error, it works. This toast is only shown this one time for me.

I can't remember that this happened with 3.8, must be new. There is also a Google Play review about this.

We should better also test this with the other client apps.
"
open-keychain/open-keychain,closed,Fix wrong behavior of third-party apps while opening files after decryption,[],"Some behave strangely when opening files after decryption because they have no name. 
(Ex: Adobe Reader crashes)

Fix it by setting the correct name after decryption.
"
open-keychain/open-keychain,closed,"Fix Dark theme no longer works in main screen on android 5, Issue#1746",[],
open-keychain/open-keychain,closed,Backup reminder notification implemented (#1659),"[Label(name=""on hold"")]","Currently, it will trigger a notification after 30 seconds (For testing).
"
open-keychain/open-keychain,closed,Replaced apache http to okhttp in LinkedTokenResource,[],"Changed LinkedTokenResource fetResource to okhttp.
Checked for github and tweeter.
"
open-keychain/open-keychain,closed,Fix duplicate file insertion while encrypting,[],"Uri should be removed from pending even when it was already added.
Otherwise we are stuck and can not add new files anymore.
"
open-keychain/open-keychain,closed,Dark theme no longer works in main screen on android 5,"[Label(name=""help wanted"")]","By mail:

```
Hello. The latest version the dark theme no longer applies to the main screen
on android 5.5.1 on my sony experia z5. It does apply in the menu and options
settings. Previous version had no issues. Thanks.
```

On Android 6 it works. I assume it has to do with the changes in the support lib 23.2, see http://android-developers.blogspot.de/2016/02/android-support-library-232.html
"
open-keychain/open-keychain,closed,Save split user ids in database,"[Label(name=""help wanted"")]","This is a follow-up of #1536. We want to be able to disambiguate user ids in the key list even if they have comments, so we can't simply compare user id strings for this (cf. [here](https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/KeychainProvider.java#L311)) without completely destroying search index performance.

As a first step, the split user ids should be saved in the database in addition to the full user id string. This is redundant, but user ids are short so it's no big deal.
"
open-keychain/open-keychain,closed,Replaced org.apache.http dependencies in LinkedTokenResource etc. #1570,[],"I replaced the org.apache.http to UrlConnection. 
Checked manually on device on github linked identity
(Sorry for any mistakes, it's my first request),  
"
open-keychain/open-keychain,closed,Contact Synchronisation Notification,[],
open-keychain/open-keychain,closed,Contact Synchronisation Notification,[],
open-keychain/open-keychain,closed,Contact Synchronisation Notification,[],
open-keychain/open-keychain,closed,issue/1625 (Xiaomi save dialog) quickfix,[],"This is a quick fix for xiaomi phones.[Issue](https://github.com/open-keychain/open-keychain/issues/1625)
Currently works on my Redmi Note 2 prime.

I didn't want to mess FileHelper/EncryptFilesFragment structure for such a rare exception so i decided to fake the ACTION_CREATE_DOCUMENT activity when it fails.
Didn't include Activity.class and EncryptFilesFragment on FileHelper and use the static code integers for the same reason.

I would be more than happy to create a cleaner solution if needed but i will have to change the rest of the filesystem code a lot. 
"
open-keychain/open-keychain,closed,Update ContactSyncAdapterService.java,[],"Introduced a check in the requestContactsSync method to check if user has disabled automatic sync. If that is the case method will simply return and notification will be avoided.
"
open-keychain/open-keychain,closed,Always check read permission,[],"This solve a wrong ""File not found"" when the user try to import a key when the app was not granted read permission previously. (Using Android 6.0)
Allow the user to grant read permission even in this case.

This is a quick fix.
Probably the code here need a bit of refactoring. 
If you agree i will try to restructure it a bit in the future.
"
open-keychain/open-keychain,closed,Fix backup code comparison,[],"Backup functionality was broken because of a wrong comparison of the backup code. 
Save the string as it's used more than one time.
"
open-keychain/open-keychain,closed,Warning when stripping master key.,[],
open-keychain/open-keychain,closed,Increase API version for 3.9,[],"Increase API version and write API changelog before release
"
open-keychain/open-keychain,closed,Decrease display duration after NFC operation,[],"After https://github.com/open-keychain/open-keychain/pull/1705 , the display duration after NFC operations has increased. Maybe due to nordpol's usage of the NFC reader mode instead of foreground dispatch? Other ideas inside the pull request.

This should be fixed for 3.9!
"
open-keychain/open-keychain,closed,import private key crashes due to lack of permission,"[Label(name=""help wanted"")]","This is cyanogenmod 13 (android 6) on my moto g 2014. Trying to import my private key, I open the file manager, select my key file and BOOM OpenKeychain crashes. Stacktrace below indicates a lack of file permission, and the privacy settings do not show an file acces permission indeed.
This is OpenKeychain 3.8.2 from fdroid, in case this matters.

```
E/Keychain(27421): FileNotFoundException!
E/Keychain(27421): java.io.FileNotFoundException: /storage/emulated/0/spaetz/gpg_2016_sspaeth_65B22153_sec.asc: open failed: EACCES (Permission denied)
E/Keychain(27421):  at libcore.io.IoBridge.open(IoBridge.java:452)
E/Keychain(27421):  at java.io.FileInputStream.<init>(FileInputStream.java:76)
E/Keychain(27421):  at java.io.FileInputStream.<init>(FileInputStream.java:103)
E/Keychain(27421):  at android.content.ContentResolver.openInputStream(ContentResolver.java:662)
E/Keychain(27421):  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.getInputData(ImportKeysListLoader.java:143)
E/Keychain(27421):  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:76)
E/Keychain(27421):  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:45)
E/Keychain(27421):  at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:296)
E/Keychain(27421):  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:54)
E/Keychain(27421):  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:42)
E/Keychain(27421):  at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:128)
E/Keychain(27421):  at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/Keychain(27421):  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
E/Keychain(27421):  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
E/Keychain(27421):  at java.lang.Thread.run(Thread.java:818)
E/Keychain(27421): Caused by: android.system.ErrnoException: open failed: EACCES (Permission denied)
E/Keychain(27421):  at libcore.io.Posix.open(Native Method)
E/Keychain(27421):  at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186)
E/Keychain(27421):  at libcore.io.IoBridge.open(IoBridge.java:438)
E/Keychain(27421):  ... 14 more
E/AndroidRuntime(27421): FATAL EXCEPTION: ModernAsyncTask #1
E/AndroidRuntime(27421): Process: org.sufficientlysecure.keychain, PID: 27421
E/AndroidRuntime(27421): Theme: themes:{}
E/AndroidRuntime(27421): java.lang.RuntimeException: An error occurred while executing doInBackground()
E/AndroidRuntime(27421):    at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:142)
E/AndroidRuntime(27421):    at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
E/AndroidRuntime(27421):    at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
E/AndroidRuntime(27421):    at java.util.concurrent.FutureTask.run(FutureTask.java:242)
E/AndroidRuntime(27421):    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
E/AndroidRuntime(27421):    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
E/AndroidRuntime(27421):    at java.lang.Thread.run(Thread.java:818)
E/AndroidRuntime(27421): Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.io.InputStream org.sufficientlysecure.keychain.util.InputData.getInputStream()' on a null object reference
E/AndroidRuntime(27421):    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.generateListOfKeyrings(ImportKeysListLoader.java:111)
E/AndroidRuntime(27421):    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:77)
E/AndroidRuntime(27421):    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:45)
E/AndroidRuntime(27421):    at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:296)
E/AndroidRuntime(27421):    at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:54)
E/AndroidRuntime(27421):    at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:42)
E/AndroidRuntime(27421):    at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:128)
E/AndroidRuntime(27421):    at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/AndroidRuntime(27421):    ... 3 more
W/ActivityManager( 2987):   Force finishing activity org.sufficientlysecure.keychain/.ui.ImportKeysActivity
I/OpenGLRenderer( 2987): Initialized EGL, version 1.4
I/ThermalEngine( 2401): Sensor:batt_therm:27600 mC
I/Process (27421): Sending signal. PID: 27421 SIG: 9
I/WindowState( 2987): WIN DEATH: Window{45d67fe u0 org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.CreateKeyActivity}
D/GraphicsStats( 2987): Buffer count: 16
I/ActivityManager( 2987): Process org.sufficientlysecure.keychain (pid 27421) has died
W/ActivityManager( 2987): Force removing ActivityRecord{66e2cbd u0 org.sufficientlysecure.keychain/.ui.CreateKeyActivity t147}: app died, no saved state
```
"
open-keychain/open-keychain,closed,Use Rfc822Tokenizer instead of Regex?,"[Label(name=""help wanted"")]","I just discovered Rfc822Tokenizer, which could be used to parse User IDs. Maybe this works better than our regex.

This must be tested!
"
open-keychain/open-keychain,closed,Discover public key not on keyserver (its on symantec pgp server),[],"Hi,

I created a app that uses OpenKeychain and it works great!
Now i got some contacts from which i only have a email address and there is no public key found on the keyserver for that email address.

I now the contacts use PGP and the reason i cant find the public key i believe is because they use PGP trough the Symantec universal PGP server. Is there any way to get the public key from the symantec server?

Thanks in advance
"
open-keychain/open-keychain,closed,Updating support lib blocked by Bottomsheet library,[],"see https://github.com/soarcn/BottomSheet/issues/108
"
open-keychain/open-keychain,closed,API: ACTION_GET_KEY_IDS always returns user interaction,[],"Hi,

calling `getKeyIds(new Intent())` on the following code results in requiring user interaction but the key for the specified email is already imported into open-keychain app.

```
public void getKeyIds(Intent data) {
        data.setAction(OpenPgpApi.ACTION_GET_KEY_IDS);
        data.putExtra(OpenPgpApi.EXTRA_USER_IDS, ""afftrader@rival.work"");
        Log.i(""test"", data.getExtras().toString());

        OpenPgpApi api = new OpenPgpApi(this, mServiceConnection.getService());
        api.executeApiAsync(data, null, null, new MyCallback(false, null, REQUEST_CODE_GET_KEY_IDS));
    }
```

Doing something wrong or am i just misunderstanding how it should work?
any advise is welcome!
"
open-keychain/open-keychain,closed,Resize QR code properly in landscape orientation,[],"Fixes #1644

`AspectRatioImageView` is removed because it is no longer used.
"
open-keychain/open-keychain,closed,try to guess if data is text or not,[],"We very often get data which is marked as binary even though it's really text. This happens from gpg4win, and also when people use `gpg --encrypt <<< blah` without using the --text option.

I added a mechanism to attempt an educated guess on whether the data we receive is binary, by trying to decode the data as the specified charset, so basically we now show the ""View in OpenKeychain"" intent whenever there is no reason _not_ to believe that the data we receive is text, e.g. when we have a known mimeType which cannot be text, or the data contains characters which are invalid for the specified charset.

This should hopefully fix #1687

Feel free to test & review, will merge in a couple of days otherwise.
"
open-keychain/open-keychain,closed,Importing private key fails: no valid user IDs!,[],"When importing my private key, the following error occurs:

`Importing secret key xxxxx`
`canoncializing secret keyring xxxxxx`
`processing master key`
`removing bad self certificate for user ID xxxxx`
`removing invalid user ID xxxxxx`
`removing bad self certificate for user ID xxxxx`
`removing invalid user ID xxxxxx`
`Keyring has no valid user IDs!`
`merging in self-certificates data from public keyring`

GPG key created on Ubuntu 15.10, GnuPG  1.4.18
Key size 4096 bit RSA
Key ID 9B747005

I changed the digest preference to SHA512, this may be causing the bad self certificate error?
"
open-keychain/open-keychain,closed,selectively import subkeyes,[],"This is kind of a merge between issues #1555 and #1627. Since my master key is Ed25519, I can't import my subkey for encryption, which is rsa4096 and the only one I need to use.

It could also be another problem (if you say Openkeychain can import Ed25519), but I only get ""No valid keys found in file/clipboard"" with no details. I can import/export the same key in gpg2. Tried binary and ascii formats.

Also, forcing users to transport main key to mobile is bad policy, imho.
"
open-keychain/open-keychain,closed,WIP: Backup API,[],"WIP: needs testing...
"
open-keychain/open-keychain,open,Return status of specific User IDs via OpenPgpSignatureResult,"[Label(name=""api bug""), Label(name=""api todo"")]","Using `getUserIds()` on a `SignatureResult` object returned by  `ACTION_DECRYPT_VERIFY` includes revoked userids.
"
open-keychain/open-keychain,closed,Better seperation of remote activities,[],"Awaiting feedback from @Valodim 
"
open-keychain/open-keychain,closed,WIP: Split RemoteServiceActivity into multiple activities,[],"WIP: Do not merge!
"
open-keychain/open-keychain,closed,Contact synchronization notification,"[Label(name=""help wanted"")]","On Android 6.0 Openkeychain keeps asking me to allow contact synchronization. It seems it'll keep bothering me until I allow permission to my contacts. It should only appear once if at all (if contact synchronization is disabled there's no point to ask for contact access)
To be clear, it's not an Android permission dialogue, it's notification from the app itself that links to the settings page for synchronization.

Besides, I don't see the point in syncing openkeychain to my contacts since it will only create duplicated contacts. 
"
open-keychain/open-keychain,closed,When trying to import a key using the Yubikey NEO no key is found,[],"Am currently running Android version 6.0.1 and OpenKeychain version 3.8.2 
"
open-keychain/open-keychain,closed,Autorename while Encrypting File,[],"If we encrypt a file and provide a filename which already exists. It automatically renames it to `<filename> (1)`, `<filename> (2)`, `<filename> (3)`, ... and so on without notifying user.
"
open-keychain/open-keychain,open,Better UX on key import/creation and location decision,"[Label(name=""discussion"")]","Currently when the user starts the app for the first time or manually enters the ""Manage my keys"" screen she has to choose between three ""non-exclusive"" options:
""Create my key""
""Use security token""
""Import key from file""
(and ""Cancel"")

This seems confusing to the user as where the key is finally put (""Use security token"") is mixed in with options about creation or importation (""Create my key"", ""Import key from file""). Rather than a simple decision followed up by another simple decision the user is faced with deciding both key location and key origin.

I suggest that the questions are formed rather in the following way:
Key origin:
    - Create new key
    - Import key from file
Key location:
    - Put key on phone
    - Put key on security token

This way the user only has to make one decision at a time and the options really exclude each other.
"
open-keychain/open-keychain,closed,Backup Format v2,[],"@Valodim feedback please ;)
# Display on Nexus 6P

![device-2016-02-10-163338](https://cloud.githubusercontent.com/assets/321888/12953716/e7bf1ade-d01b-11e5-85a3-b47f2b61a206.png)
![device-2016-02-10-163357](https://cloud.githubusercontent.com/assets/321888/12953717/e7c2ef1a-d01b-11e5-8eae-6c2830c6e73e.png)
# Display on Nexus 4

![device-2016-02-10-173159](https://cloud.githubusercontent.com/assets/321888/12953863/8926df6a-d01c-11e5-8406-45c8426176b4.png)
![device-2016-02-10-173213](https://cloud.githubusercontent.com/assets/321888/12953862/89246ad2-d01c-11e5-98b3-cc6d3828dbaf.png)
# Display on Nexus One (3.2"")

![device-2016-02-10-173555](https://cloud.githubusercontent.com/assets/321888/12953951/de4477dc-d01c-11e5-8c0a-113ad8367d1b.png)
![device-2016-02-10-173612](https://cloud.githubusercontent.com/assets/321888/12953950/de41ebfc-d01c-11e5-9ba6-10dff8539b37.png)
![device-2016-02-10-173635](https://cloud.githubusercontent.com/assets/321888/12953949/de403316-d01c-11e5-8102-477338e06651.png)

The EditText is configured to resize automatically if more lines are required.
"
open-keychain/open-keychain,closed,Switch to Bouncy Castle,[],"As detailed in https://github.com/open-keychain/open-keychain/issues/1676 I would like to switch to Bouncy Castle.

This has the advantages of making pull requests to the original bouncycastle repo easier and it is one small part of a bigger step of making our OpenPGP code available as a library for desktop systems.

Currently only tested on Sony z3 Cyanogenmod 12.1 nightly. Will test some more devices tomorrow.
"
open-keychain/open-keychain,closed,Crash when using a key over 1MB (edward-en@fsf.org),"[Label(name=""bug"")]","OpenKeychain 3.8.2. (38200) regularly crashes on Android 4.4.4 when I try to visualize details of a certain contact. It also crashes when in K-9 email client I try to open messages signed or encrypted by this contact.

The app doesn't crash with other contacts.

The contact is edward-en@fsf.org aka ""Edward the GPG Bot"" (it's a [public email service](https://emailselfdefense.fsf.org/en/#section3) mentioned in a FSF guide to GPG). 
I don't know much about this but I note that, unlike my other OpenKeychain contacts, this User ID of this key includes many international characters:
http://pgp.mit.edu/pks/lookup?search=edward-en%40fsf.org&op=index
"
open-keychain/open-keychain,closed,Deletes linked OpenKeychain contacts if sync is disabled,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1712. Deletes linked contacts in both situations:
- **When the user disables contact linking in the app** - Linked contacts are immediately deleted.
- **When the user disables contact linking in permissions** - Linked contacts are deleted the next time any of our activities are resumed. (Wasn't able to find a way to be notified of a change in sync settings except with a <a href=""http://developer.android.com/reference/android/content/ContentResolver.html#addStatusChangeListener(int, android.content.SyncStatusObserver)"">`SyncStatusObserver`</a> whose implementation seems to require having an always running service).
"
open-keychain/open-keychain,closed,Still links to contacts even after disabling it,[],"Disabling ""Link keys to contacts"" inside the preferences and maybe also disabling the ""Contact"" sync inside Android's account preferences should remove all existing raw contacts created by OpenKeychain.

Users expect that OpenKeychain no longer shows up in their contacts after disabling the feature, which is right in my opinion.

@adithyaphilip Do you have some free time to look into this?
"
open-keychain/open-keychain,closed,Spreadshirt Shop,[],"Hey there, 
do you have a Spreadshirt shop? It is an awesome possibility to collect supporters. 
Thanks. 
"
open-keychain/open-keychain,closed,Can't enter Alphanumeric Key for Yubikey,[],"Hi,

i have setup my yubikey with some other method and now I am failing to decrypt a message with open-keychain.

What do I do?
- Open The App
- Decrypt from paste
  > It asks for pin.

My ""pin"" is a 18 letter alphanumeric string. However I can only enter a number. Any letter is ignored, just the numbers of my ""pin"" are accepted.

My setup works fine on windows and linux. Please enable all characters for the pin.

Thank you.
"
open-keychain/open-keychain,closed,ArrayIndexOutOfBoundsException in BaseSecurityTokenNfcActivity.nfcPutKey,[],"Got this while testing https://github.com/open-keychain/open-keychain/pull/1705 but I think it's unrelated. I created a new key and took of the YubiKey NEO while the key was being transmitted to interrupt the process.

```
 18155         AndroidRuntime  E  FATAL EXCEPTION: AsyncTask #3
 18155         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 18155
 18155         AndroidRuntime  E  java.lang.RuntimeException: An error occured while executing doInBackground()
 18155         AndroidRuntime  E  at android.os.AsyncTask$3.done(AsyncTask.java:304)
 18155         AndroidRuntime  E  at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
 18155         AndroidRuntime  E  at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
 18155         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:242)
 18155         AndroidRuntime  E  at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
 18155         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 18155         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 18155         AndroidRuntime  E  at java.lang.Thread.run(Thread.java:818)
 18155         AndroidRuntime  E  Caused by: java.lang.ArrayIndexOutOfBoundsException: src.length=127 srcPos=-1 dst.length=934 dstPos=550 length=128
 18155         AndroidRuntime  E  at java.lang.System.arraycopy(Native Method)
 18155         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity.nfcPutKey(BaseSecurityTokenNfcActivity.java:900)
 18155         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.SecurityTokenOperationActivity.doNfcInBackground(SecurityTokenOperationActivity.java:226)
 18155         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity.handleTagDiscovered(BaseSecurityTokenNfcActivity.java:450)
 18155         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity$1.doInBackground(BaseSecurityTokenNfcActivity.java:168)
 18155         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseSecurityTokenNfcActivity$1.doInBackground(BaseSecurityTokenNfcActivity.java:158)
 18155         AndroidRuntime  E  at android.os.AsyncTask$2.call(AsyncTask.java:292)
 18155         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:237)
 18155         AndroidRuntime  E  ... 4 more
```
"
open-keychain/open-keychain,closed,performance improvements (WIP),[],"I did some profiling yesterday, and was horrified to find that on my device, decrypting a small amount of data from k9 takes about 500ms:
- 100ms setup time from the binder framework
- **300ms spent on s2k and key extraction**
- 30 on the RSA operation
- 70 on the rest (aes decrypt, another shoter rsa for verification, sending)

I looked around a bit and found that we use the immensely expensive s2k operation all over the place, sometimes within 20 lines of code without caching. I spent some time caching the session keys in addition to the passphrases, and got the same operation down to 250ms total. I cache per ""compatible s2k-configuration"", i.e. encryption hash algo + method + iteration count + iv.

I also got rid of _all_ uncached calls to getSecretKeyType, which were strewn all over the crypto operations. This is actually the change where I expect more stuff to break because of some underlying changes to ProviderHelper.

This is a WIP pull request, it does a lot of changes which are likely to break stuff so it requires extensive testing! This is still a large deal in my opinion, and we should try to get it into a release ASAP.
"
open-keychain/open-keychain,open,Same key available twice on keyserver,"[Label(name=""help wanted"")]","I'm unsure if there is something wrong with my keypair, or with openkeychain. I search the issues, but couldn't find a solution so far.

When I refresh my own key (or all keys) I get an error (Dutch):

```
[START] Bezig met importeren van sleutel
 [DEBUG] Sleutelserver hkps://hkps.pool.sks-keyservers.net wordt gebruikt
  [INFO] Bezig met ophalen van sleutelserver: 0xe40adc64193e10fd
 [ERROR] Importeren mislukt!
```

However, I can use it for everything else, I can trust people, encrypt data, etc. How can I see more details about the error?
"
open-keychain/open-keychain,closed,Prevent Rare KeyserverSyncAdapterService Crash,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1701. 

Caused by no account being created by the time `isSyncEnabled` was called. The intent was using `ACTION_CANCEL` (used in the `onResume` of `BaseActivity`), and since no Activity could have started before `onCreate` in `KeychainApplication` (<a href=""http://developer.android.com/reference/android/app/Application.html#onCreate()"">documentation</a>) was called, it looks like `onSyncCancelled` in `KeyserverSyncAdapter` was triggered somehow before `onCreate` completed. Is this possible? 

Either way, this PR should prevent a crash in case an account is not created as expected.
"
open-keychain/open-keychain,closed,Better transaction animation,[],"This PR adds a transaction animation similar to what is found in the Fidesmo app to all NFC transaction views. The animation comes straight from the latest version of Nordpol.
"
open-keychain/open-keychain,closed,OpenKeychain on Chrome,"[Label(name=""discussion"")]","Hi, I have converted the OpenKeychain apk to a Chrome app using ARC Welder. It has a few bugs but works well for my intended purpose (symmetric text encryption).

Many core functions such as key creation, importing keys, and signing messages work flawlessly.

There seems to be an issue with the ability to write files as well as some minor GUI issues. Are there any plans by the project to release OpenKeychain on Chrome? I am willing to submit it myself to the Chrome store for my own convenience however I would hold off if an official release is in the works as it would be much more desirable to have a package from upstream since we are dealing with security software.

Thanks.

![c1](https://cloud.githubusercontent.com/assets/4731927/12592568/ffb6737c-c43a-11e5-85d9-1ed9d08bfcfe.png)
![c2](https://cloud.githubusercontent.com/assets/4731927/12592570/ffbdcbea-c43a-11e5-8a47-091867c048f7.png)
![c3](https://cloud.githubusercontent.com/assets/4731927/12592569/ffb74194-c43a-11e5-9b6c-eee58a6f14ad.png)
"
open-keychain/open-keychain,closed,encrypted txt by 8192 bits rsa cannot to be decrypted,[],"app said that cannot found the key in the stream
could you let the app support 8192 rsa ?
"
open-keychain/open-keychain,open,NullPointerException in ImportKeysListLoader,"[Label(name=""google play crash-report"")]","```
java.lang.RuntimeException: An error occurred while executing doInBackground()
    at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:142)
    at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:354)
    at java.util.concurrent.FutureTask.setException(FutureTask.java:223)
    at java.util.concurrent.FutureTask.run(FutureTask.java:242)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
    at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.io.InputStream org.sufficientlysecure.keychain.util.InputData.getInputStream()' on a null object reference
    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.generateListOfKeyrings(ImportKeysListLoader.java:111)
    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:77)
    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:45)
    at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:296)
    at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:54)
    at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:42)
    at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:128)
    at java.util.concurrent.FutureTask.run(FutureTask.java:237)
```

this one happened fairly often (21 reports), and apparently for those users who experience it it's consistent
"
open-keychain/open-keychain,closed,crash in KeyserverSyncAdapterService,"[Label(name=""google play crash-report"")]","only happened a single time, so not really high prio

```
java.lang.RuntimeException: Unable to start service org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService@434523f0 with Intent { act=cancel flg=0x10 cmp=org.sufficientlysecure.keychain/.service.KeyserverSyncAdapterService }: java.lang.ArrayIndexOutOfBoundsException: length=0; index=0
    at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2877)
    at android.app.ActivityThread.access$2200(ActivityThread.java:161)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1362)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:157)
    at android.app.ActivityThread.main(ActivityThread.java:5356)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:515)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1265)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1081)
    at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)
    at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=0
    at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.isSyncEnabled(KeyserverSyncAdapterService.java:528)
    at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.onStartCommand(KeyserverSyncAdapterService.java:85)
```
"
open-keychain/open-keychain,closed,"NFC bug, Unhelpful error message, Yubikey NEO",[],"Setup: K-9 mail, OpenKeychain, Yubikey NEO w/ 3 subkeys (master key is stripped & stored offline).

Issue: Decrypt (& verify?) operations fail with error message ""OpenPGP Error: Data is corrupt!"". Does not matter if decryption operation occurs from K-9 or OpenKeychain app.
Encryption & signing operations work without issue.

```
[START] Processing input data
 [DEBUG] Attempting to process OpenPGP data
 [DEBUG] Starting decrypt operation???
  [DEBUG] Found block of asymmetrically encrypted data for key 0xb8855e5234ffe589
  [DEBUG] Encountered trailing, asymmetrically encrypted data for key 0xb8855e5234ffe589
   [INFO] Unlocking secret key
   [ERROR] Data is corrupt!
```

[screenshots.zip](https://github.com/open-keychain/open-keychain/files/100103/screenshots.zip)

Fix: Toggle NFC off and on (I'm 90% certain that I tried rebooting to fix this, and it did not fix it.)

Phone: Note 4 (SAMSUNG-SM-N910A)
OS: Samsung's Android 5.1.1 (Kernel: 3.10.40-5613584 Build: LMY47X.N910AUCU2DOI2)
"
open-keychain/open-keychain,closed,Does not auto-select keys without an empty name field,[],"I have a few keys, which only have an email field, but no name field. This is mostly for anonymity and is e.g. also a [requirement of Posteo](https://posteo.de/en/help/policies-for-public-keys#names) for publishing the public key in their [OpenPGPKey](https://openpgpkey.info/) DNS.

But when sending an encrypted mail to a mail address whose public key has this format OpenKeyChain always asks for the key and does not select it automatically. Instead I have to choose it manually every time.
"
open-keychain/open-keychain,closed,PIN set as numpad only after update (3.8.2),[],"Can only revert to passphrase by checking/unchecking numpad only in prefs
"
open-keychain/open-keychain,closed,PendingIntent (for unlocking key / enter password) returned be decrypt operation becomes stale on next decrypt operation.,[],"Consider this use case:

An app calls decrypt and gets back a PendingIntent to enter the key password in OpenKeyChain. The app then shows a notification that tells the user that he needs to enter the password in OpenKeyChain, when tapping that notification the original PendignIntent from OpenKeyChain will get fired.

If the app now does another decrypt information (in the background), before it uses the original PendingIntent to unlock the key, it gets a new PendingIntent and the PendingIntent from the first operation becomes stale, i.e. can't be used any more, will throw an IntentSender exception or so when attempting to use. (Note that possibly this might also happen if another app does a decrypt operation requiring the same key, but I haven't checked this scenario yet) 

I had to do implement quite some workaround in my app to make sure that only the latest PendingIntent gets used and/or that no other decrypt operation happens before using the PendingIntent of the last operation.

A possibly simply solution for this would be if you would just somehow expose (possibly in the OpenKeyChain Intent API) a method or intent that one could call _anytime_ to unlock a specific key - even _preemptively_ before attempting a decrypt operation.
"
open-keychain/open-keychain,closed,"Decrypt operation wrongly returns a PendingIntent to show the signature key in the OpenPgpSignatureResult, even though there is no signature at all",[],"a trivial bug, just stumbled upon it by chance:
There's a PendingIntent to show the signature key returned even though the signature result is ' `RESULT_NO_SIGNATURE`. That pending intent of course is unusable ( nonsensical) ;) 
For more details see [this pull request](https://github.com/open-keychain/open-keychain/pull/1695) 
"
open-keychain/open-keychain,closed,"Decrypt operation wrongly returns a PendingIntent to show the signature key in the OpenPgpSignatureResult, even though there is no signature at all",[],"Please ignore the commits regarding the submodules, couldn't figure out how to exclude them. The only relevant change is in ""OpenKeychain/src/main/java/org/sufficientlysecure/keychain/remote/OpenPgpService.java""
"
open-keychain/open-keychain,open,Reproducible builds,[],"I just wanted to check whether Openkeychain is using Reproducible builds for F-Droid. Meaning the .Apks are still signed by the devs of Openkeychain? 
Otherwise OpenKeychains security relies greatly on the trust of f-droid.
"
open-keychain/open-keychain,closed,Always revoke subkeys with a revocation signature.,[],"Unlike UID revocations which are ""reversible"" by newer UID
self-signatures, a subkey revocation should be ""permanent"" even if
followed by a newer self-signature.

The RFC is ambiguous on this, but this is the convention used by (e.g.)
GnuPG. The rationale for this behaviour is available as comments within
the GnuPG source.

UID signatures:
https://github.com/mtigas/gnupg/blob/50c98c7ed6b542857ee2f902eca36cda37407737/g10/getkey.c#L1668-L1674
Subkey signatures:
https://github.com/mtigas/gnupg/blob/50c98c7ed6b542857ee2f902eca36cda37407737/g10/getkey.c#L1990-L1997
"
open-keychain/open-keychain,closed,Change password when key is stripped,"[Label(name=""help wanted"")]","Implement functionality to change the password even when the key is stripped.
"
open-keychain/open-keychain,closed,Verify .pgp signatures ,[],"Would it be possible for OpenKeychain to verify signatures from seperate files.
For example, I have a developers public key imported and I download an .iso aswell as the corresponding .iso.pgp. When I try to verify the signature OpenKeychain says it hasn't found data to verify, It should look for the a file in the same directory with the same name except the .pgp extension.
"
open-keychain/open-keychain,closed,export Sec Key,[],"Hi,

my computer crashed, so I lost my keys.
But in OpenKeychain they still exists.
Is there a way to export them to use them on my computer again?

Thanks
"
open-keychain/open-keychain,closed,"Revert ""Sync from upstream""",[],
open-keychain/open-keychain,closed,crash on FileNotFoundException in ImportKeysListLoader,"[Label(name=""bug"")]","```
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.io.InputStream org.sufficientlysecure.keychain.util.InputData.getInputStream()' on a null object reference
    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.generateListOfKeyrings(ImportKeysListLoader.java:111)
    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:77)
    at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:45)
```

From a quick glance, `getInputData` returns null on a FileNotFoundException which simply isn't handled
"
open-keychain/open-keychain,closed,Unknown filename,[],"When trying to open any encrypted data from either clipboard or a file the app gives me an Uknown filename output. When I'm trying to open it it gives me 'show with Nova launcher or decrypt with openkeychain' the latter results in getting to the same screen I came from. 
I'm using Gpg4win to encrypt stuff
"
open-keychain/open-keychain,closed,Handle not installed PGP applet,[],"Handles the case of a PGP applet not being available on a (possibly) compatible Security Token.
If the Security Token is a Fidesmo device it prompts the user to install the applet through the Fidesmo app. If the Fidesmo app is not installed the user is prompted about that. 
"
open-keychain/open-keychain,closed,Lookup missing key under tor results in loop,"[Label(name=""help wanted"")]","I want to lookup a missing key from k9 Mail with OpenKeychain and I'm using tor (configured in OpenKeychain settings), but this results in following loop, even if tor is running and is connected:

![anim](https://cloud.githubusercontent.com/assets/5571650/12311269/5c574168-ba56-11e5-8cb7-60a0fb6d2530.gif)

This might be a useful `adb logcat`:

``` adb
01-14 00:34:11.084   803  2957 W InputMethodManagerService: Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@6ee59c6 attribute=null, token = android.os.BinderProxy@c907cf1
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103385): avc: denied { search } for name=""1"" dev=""proc"" ino=6098 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:init:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103386): avc: denied { search } for name=""2"" dev=""proc"" ino=10655 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103387): avc: denied { search } for name=""3"" dev=""proc"" ino=10656 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103388): avc: denied { search } for name=""7"" dev=""proc"" ino=10660 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103389): avc: denied { search } for name=""8"" dev=""proc"" ino=10661 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103390): avc: denied { search } for name=""13"" dev=""proc"" ino=10662 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103391): avc: denied { search } for name=""14"" dev=""proc"" ino=10663 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103392): avc: denied { search } for name=""18"" dev=""proc"" ino=10666 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103393): avc: denied { search } for name=""19"" dev=""proc"" ino=10667 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103394): avc: denied { search } for name=""20"" dev=""proc"" ino=10668 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103395): avc: denied { search } for name=""22"" dev=""proc"" ino=10670 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103396): avc: denied { search } for name=""23"" dev=""proc"" ino=10671 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103397): avc: denied { search } for name=""24"" dev=""proc"" ino=10672 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103398): avc: denied { search } for name=""25"" dev=""proc"" ino=10673 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103399): avc: denied { search } for name=""26"" dev=""proc"" ino=10674 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103400): avc: denied { search } for name=""27"" dev=""proc"" ino=10675 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103401): avc: denied { search } for name=""28"" dev=""proc"" ino=10676 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103402): avc: denied { search } for name=""29"" dev=""proc"" ino=10677 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103403): avc: denied { search } for name=""30"" dev=""proc"" ino=10678 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.092 25198 25198 W pidof   : type=1400 audit(0.0:103404): avc: denied { search } for name=""31"" dev=""proc"" ino=10679 scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:r:kernel:s0 tclass=dir permissive=0
01-14 00:34:11.118 23533 23839 E TorServiceUtils: unable to parse process pid: 332 3260 3289 3345 3367 3464 3516 3649 3811 4038 4066 4602 4707 4818 4853 5077 17927 17997 18348 18501 18668 18833 18856 21737 22087 23506 23533 23563 23583 23798 24956 25133 25167 25175 25179 25198 26567 27269 27299 31480
01-14 00:34:11.118 23533 23839 E TorServiceUtils: java.lang.NumberFormatException: Invalid int: ""332 3260 3289 3345 3367 3464 3516 3649 3811 4038 4066 4602 4707 4818 4853 5077 17927 17997 18348 18501 18668 18833 18856 21737 22087 23506 23533 23563 23583 23798 24956 25133 25167 25175 25179 25198 26567 27269 27299 31480""
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.lang.Integer.invalidInt(Integer.java:138)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.lang.Integer.parse(Integer.java:410)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.lang.Integer.parseInt(Integer.java:367)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.lang.Integer.parseInt(Integer.java:334)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.TorServiceUtils.findProcessIdWithPidOf(TorServiceUtils.java:116)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.TorServiceUtils.findProcessId(TorServiceUtils.java:78)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.isOrbotRunning(OrbotHelper.java:154)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.isOrbotInRequiredState(OrbotHelper.java:287)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListCloudLoader.queryServer(ImportKeysListCloudLoader.java:119)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListCloudLoader.loadInBackground(ImportKeysListCloudLoader.java:82)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListCloudLoader.loadInBackground(ImportKeysListCloudLoader.java:39)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:296)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:54)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:42)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:128)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.util.concurrent.FutureTask.run(FutureTask.java:237)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)
01-14 00:34:11.118 23533 23839 E TorServiceUtils:       at java.lang.Thread.run(Thread.java:818)
01-14 00:34:11.278 23533 23533 E TorServiceUtils: unable to parse process pid: 332 3260 3289 3345 3367 3464 3516 3649 3811 4038 4066 4602 4707 4818 4853 5077 17927 17997 18348 18501 18668 18833 18856 21737 22087 23506 23533 23563 23583 23798 24956 25133 25167 25175 25179 25200 26567 27269 27299 31480
01-14 00:34:11.278 23533 23533 E TorServiceUtils: java.lang.NumberFormatException: Invalid int: ""332 3260 3289 3345 3367 3464 3516 3649 3811 4038 4066 4602 4707 4818 4853 5077 17927 17997 18348 18501 18668 18833 18856 21737 22087 23506 23533 23563 23583 23798 24956 25133 25167 25175 25179 25200 26567 27269 27299 31480""
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at java.lang.Integer.invalidInt(Integer.java:138)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at java.lang.Integer.parse(Integer.java:410)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at java.lang.Integer.parseInt(Integer.java:367)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at java.lang.Integer.parseInt(Integer.java:334)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.TorServiceUtils.findProcessIdWithPidOf(TorServiceUtils.java:116)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.TorServiceUtils.findProcessId(TorServiceUtils.java:78)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.isOrbotRunning(OrbotHelper.java:154)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.putOrbotInRequiredState(OrbotHelper.java:332)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.putOrbotInRequiredState(OrbotHelper.java:374)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at org.sufficientlysecure.keychain.ui.ImportKeysListFragment$3.run(ImportKeysListFragment.java:457)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at android.os.Handler.handleCallback(Handler.java:739)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at android.os.Handler.dispatchMessage(Handler.java:95)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at android.os.Looper.loop(Looper.java:148)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at android.app.ActivityThread.main(ActivityThread.java:5417)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at java.lang.reflect.Method.invoke(Native Method)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
01-14 00:34:11.278 23533 23533 E TorServiceUtils:       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
```
"
open-keychain/open-keychain,closed,App crashes when importing exported keychain,"[Label(name=""help wanted"")]","I exported my public keychain with `gpg2` and want to import it in OpenKeychain, but it  always crashes.

I think this is the relevant `adb logcat` output:

``` adb
01-14 00:17:49.887 21972 21972 D AndroidRuntime: Shutting down VM
01-14 00:17:49.888 21972 21972 E AndroidRuntime: FATAL EXCEPTION: main
01-14 00:17:49.888 21972 21972 E AndroidRuntime: Process: org.sufficientlysecure.keychain, PID: 21972
01-14 00:17:49.888 21972 21972 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object android.support.v4.util.LongSparseArray.get(long)' on a null object reference
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.ui.ImportKeysListFragment$1.next(ImportKeysListFragment.java:118)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.ui.ImportKeysListFragment$1.next(ImportKeysListFragment.java:103)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.util.ParcelableFileCache.writeCache(ParcelableFileCache.java:77)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.util.ParcelableFileCache.writeCache(ParcelableFileCache.java:56)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.ui.ImportKeysActivity.importSelectedKeys(ImportKeysActivity.java:373)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.ui.ImportKeysActivity.access$000(ImportKeysActivity.java:51)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at org.sufficientlysecure.keychain.ui.ImportKeysActivity$1.onClick(ImportKeysActivity.java:106)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at android.view.View.performClick(View.java:5204)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at android.view.View$PerformClick.run(View.java:21153)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at android.os.Handler.handleCallback(Handler.java:739)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:95)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:148)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:5417)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
01-14 00:17:49.888 21972 21972 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
01-14 00:17:49.889   803  2958 W ActivityManager:   Force finishing activity org.sufficientlysecure.keychain/.ui.ImportKeysActivity
01-14 00:17:49.929   803  1180 I OpenGLRenderer: Initialized EGL, version 1.4
01-14 00:17:50.392   803   872 W ActivityManager: Activity pause timeout for ActivityRecord{3d845f2 u0 org.sufficientlysecure.keychain/.ui.ImportKeysActivity t331 f}
```

And this is an animation :sunglasses: 

![anim](https://cloud.githubusercontent.com/assets/5571650/12311067/f3142b90-ba54-11e5-8ec4-3ac8ab5f6f0b.gif)

Additionally there is a very confusing error message ;)
"
open-keychain/open-keychain,closed,"allow ""panic button"" apps to clear all passphrases",[],"We've been developing ""panic button"" features in our apps for years, and now we are working to make a more flexible and open ecosystem of apps that can both trigger other apps, or respond to triggers. Since OpenKeychain already caches passphrases and includes a ""clear"" feature, it is a natural panic responder app. This setup allows for easy configuration of a single trigger action which can then trigger multiple apps.

The first commit adds support for receiving the panic trigger. The second commit wipes OpenKeychain from the Recent Apps when it is responding to a panic trigger.

I made a video to demonstrate the user experience, this pull request offers the same user experience as the demonstration with Orweb:
https://www.youtube.com/watch?v=mS1gstS6YS8

The first panic button app that sends this kind of trigger is called Ripple, and it is available here:
- https://github.com/guardianproject/ripple
- https://play.google.com/store/apps/details?id=info.guardianproject.ripple
- https://guardianproject.info/fdroid

I've added support to this app, and it'll be included in the next release:
- https://panicbutton.io/
- https://play.google.com/store/apps/details?id=org.iilab.pb

This pull request just implements the most basic panic response.  I could see OpenKeychain offering more options, like disguising itself, deleting all files (especially if the user has an off-device backup), etc.  That would require adding a ""panic setup"" Activity like [Zom](https://zom.im) has for the user to opt-in.  Read all about that here:
https://guardianproject.info/2016/01/12/panickit-making-your-whole-phone-respond-to-a-panic-button/
"
open-keychain/open-keychain,open,IllegalStateException with ViewKeyKeybaseFragment and OrbotHelper,[],"From Google Play dev console

@adithyaphilip Can you look into this one? I think it's not that important since it is related to the keybase support which is an experimental feature, which actually needs more polishing in general...

v3.8.1
Android 6.0 
Nexus 6 (shamu)

```
java.lang.IllegalStateException: Can not perform this action inside of onLoadFinished
    at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1493)
    at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1507)
    at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:634)
    at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:613)
    at android.support.v4.app.DialogFragment.show(DialogFragment.java:139)
    at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.putOrbotInRequiredState(OrbotHelper.java:326)
    at org.sufficientlysecure.keychain.util.orbot.OrbotHelper.putOrbotInRequiredState(OrbotHelper.java:374)
    at org.sufficientlysecure.keychain.ui.ViewKeyKeybaseFragment.startSearch(ViewKeyKeybaseFragment.java:206)
    at org.sufficientlysecure.keychain.ui.ViewKeyKeybaseFragment.onLoadFinished(ViewKeyKeybaseFragment.java:178)
    at org.sufficientlysecure.keychain.ui.ViewKeyKeybaseFragment.onLoadFinished(ViewKeyKeybaseFragment.java:64)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:444)
    at android.support.v4.content.Loader.deliverResult(Loader.java:126)
    at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:105)
    at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:37)
    at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:249)
    at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:77)
    at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:466)
    at android.support.v4.content.ModernAsyncTask.access$400(ModernAsyncTask.java:48)
    at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:483)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
```
"
open-keychain/open-keychain,closed,Token import fails when token public key is not a the master key,"[Label(name=""bug""), Label(name=""help wanted""), Label(name=""security token"")]","There is a common issue that occurs with gnupg smartcard style devices when the smartcard holds only subkeys with the master key being seperate/offline.

This [issue has been reported to gnupg issue tracker](https://bugs.gnupg.org/gnupg/issue1828), however, it will likely not be repaired for some time and will likely require pre-existing smartcards to have the keys on the device recreated/replaced.

A better option might be to modify the way you import a token to allow you to specify a file or url to the public key for the whole key not just the key that the card things is the public key.

Due to this issue I cannot use my Yubikey together with some of the great apps that integrate this app for security.
"
open-keychain/open-keychain,closed,One thought about tor,[],"Hi
I just again stumbled about the option to synchronize keys over tor and that made me thinking:
How are the keys downloaded over tor? Does the app tell the keyserver (through tor) that it needs a copy of key A,B,C,D...? If it does it in this way, the keyservers can obviously generate a profile of the tor user based on the set of requested keys (ignoring the fact that the user also synchronizes its own key).

If keys are synchronized that way, wouldn't it be better, to request the keys one after another always through a new tor identity? That way, the key servers couldn't track the user as easy as they otherwise can, because all it sees is that (tor)user X requests key A, (tor)user Y wants B and Z wants C... Additionally there could be a delay between the keys. 

Is this even possible with Orbot? And does it make sense at all?
"
open-keychain/open-keychain,closed,Hilarious FAQ typo,[],"Not sure whether you want FAQ bugs here as well, but this one is really sweet:

3.4 I have more than one subkey capable of _singing_.

Well, that's a really special subkey you have there if it's able to sing. And I agree that you are right to ""consider [...that...] an advanced usecase"". :D

(Actually I was considering not reporting this because it's too funny)
"
open-keychain/open-keychain,closed,App crashes when importing exported keys,[],"I recently switched phones and I used the encrypted export function from OpenKeychain on my old phone to upload the keys to owncloud and downloaded them on the new phone and tried to import them. I enter the password to decrypt the file and as soon as I'm finished and I click ""Entsperren"" (unlock or decrypt in english I guess), the app crashes. How can I submit some debug information?
"
open-keychain/open-keychain,closed,PassphraseDialogActivity.java:388: NullPointerException,[],"From Google Play dev

3.8.1
Stürzt beim importieren der Schlüssel von Handy zu Tablet einfach ab

```
java.lang.NullPointerException: Attempt to invoke virtual method 'int org.sufficientlysecure.keychain.ui.widget.CacheTTLSpinner.getSelectedTimeToLive()' on a null object reference
    at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment$5.onClick(PassphraseDialogActivity.java:388)
    at android.view.View.performClick(View.java:4857)
    at android.view.View$PerformClick.run(View.java:20290)
    at android.os.Handler.handleCallback(Handler.java:815)
    at android.os.Handler.dispatchMessage(Handler.java:104)
    at android.os.Looper.loop(Looper.java:194)
    at android.app.ActivityThread.main(ActivityThread.java:5637)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:959)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:754)
```
"
open-keychain/open-keychain,closed,Switch from Spongy Castle to Bouncy Castle?,[],"According to the Book Android Security Internals, the bouncycastle packages have been renamed to ""com.android.org.bouncycastle"" starting with Android 3.0. If I understand this correctly, we could switch back to bouncy instead of spongy.

See also https://android.googlesource.com/platform/libcore/+/0ac85ead96f1ba7d35f3acadd154de4ef0a8fd87^!/

I will test this in a branch when I get time.
"
open-keychain/open-keychain,closed,Debug option: export secret key,[],"Add debug option to export secret keys without backup screen
"
open-keychain/open-keychain,closed,Synchronize with internet always activated,[],"I updated to OpenKeychain 3.8 via F-Droid on CM 12.1
In the key editing dialog there's a checkbox saying ""Synchronize with the internet"" being checked.
When I uncheck it and press save, OpenKeyChain tells me that there's ""nothing to do"". So when I close the dialog and open it again, the checkbox is checked again.

Why is it activated by default anyway? I don't want to share my key. I'd prefer the option to be opt-in and not opt-out, because there's usually not opt-out on the keyservers, once it got synchronized... :-(
"
open-keychain/open-keychain,closed,"handle encrypted files in ""import key"" file selection","[Label(name=""enhancement""), Label(name=""help wanted"")]","When the user selects an encrypted file for import, they currently get an error. Since we export encrypted keys, importing it back via the import from file dialog seems like a workflow users might want to use, so we should support that.
"
open-keychain/open-keychain,closed,PassphraseDialogActivity.java:203 NullPointerException,[],"From Google Play dev console.

3.8
General Mobile 4G (gm4g_s_sprout)
""Crashed when was trying decryption.""

```
java.lang.RuntimeException: Unable to resume activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.PassphraseDialogActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
    at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3103)
    at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3134)
    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2481)
    at android.app.ActivityThread.-wrap11(ActivityThread.java)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1344)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
    at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment.onCreateDialog(PassphraseDialogActivity.java:203)
    at android.support.v4.app.DialogFragment.getLayoutInflater(DialogFragment.java:308)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1067)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1248)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:738)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1613)
    at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:330)
    at android.support.v4.app.FragmentActivity.onPostResume(FragmentActivity.java:452)
    at android.app.Activity.performResume(Activity.java:6351)
    at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3092)
    ... 10 more
```
"
open-keychain/open-keychain,open,Don't show remember dropdown for operations which enforce the passphrase dialog,[],"The remember dropdown should not be shown when operations enforce the passphrase dialog.
"
open-keychain/open-keychain,closed,sync only when unmetered internet is available?,"[Label(name=""help wanted"")]","This can probably be answered by @adithyaphilip: what are our current considerations for internet availability for key sync? If a user has a lot of keys, since we have to download the entire key to find if new content is available, it's quite possible that we sync relevant amounts of data (i.e. 1MB+). Do we currently restrict the key sync operation to a time when unmetered internet is available? Or would it also be run on mobile data?

I might have missed a conversation on this topic, but @dschuermann didn't know either. Has this been considered?
"
open-keychain/open-keychain,closed,Remove SingleTop from ImportKeysActivity,[],"Allows multiple instances of ImportKeysActivity to exist, one for each intent. Follow up on PR https://github.com/open-keychain/open-keychain/pull/1666.
"
open-keychain/open-keychain,closed,Null pointer exception on private key import,[],"I was able to import one of my private keys from file, but not the other. Using 3.7.

```
build.board: smdk4x12
build.bootloader: N7100XXUFOB1
build.brand: samsung
build.cpu_abi: armeabi-v7a
build.cpu_abi2: armeabi
build.device: t03g
build.display: cm_n7100-userdebug 4.4.4 KTU84Q aa8aa93211 test-keys
build.fingerprint: samsung/t03gxx/t03g:4.3/JSS15J/N7100XXUENB2:user/release-keys
build.hardware: smdk4x12
build.host: cyanogenmod
build.id: KTU84Q
build.manufacturer: samsung
build.model: GT-N7100
build.product: t03gxx
build.radio: unknown
build.serial: 4df7ce886274cf6f
build.tags: test-keys
build.time: 1412767754000
build.type: userdebug
build.user: jenkins
version.codename: REL
version.incremental: aa8aa93211
version.release: 4.4.4
version.sdk_int: 19

01-10 11:52:05.960 E/AndroidRuntime(5081): FATAL EXCEPTION: Thread-320
01-10 11:52:05.960 E/AndroidRuntime(5081): Process: org.sufficientlysecure.keychain, PID: 5081
01-10 11:52:05.960 E/AndroidRuntime(5081): java.lang.NullPointerException
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.spongycastle.openpgp.PGPPublicKey.<init>(PGPPublicKey.java:144)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.spongycastle.openpgp.PGPPublicKey.removeCert(PGPPublicKey.java:808)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.spongycastle.openpgp.PGPPublicKey.removeCertification(PGPPublicKey.java:801)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.canonicalize(UncachedKeyRing.java:606)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.canonicalize(UncachedKeyRing.java:271)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:1046)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:271)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:112)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:390)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:83)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:146)
01-10 11:52:05.960 E/AndroidRuntime(5081):  at java.lang.Thread.run(Thread.java:841)
```
"
open-keychain/open-keychain,closed,Fix for 1536,[],"#1536

Tested by importing keys from PC
"
open-keychain/open-keychain,closed,Fixed File Import issue due to onResumeFragments,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1664. Caused due to `handleActions` in `onResumeFragments`.
"
open-keychain/open-keychain,closed,No valid OpenPGP block found,[],"Hi!

I am not sure, whether this is an openkeychain issue or a k9 mail issue, that's why I'd like to post it here again: https://github.com/k9mail/k-9/issues/1008

 I use K9 5.007 and OpenKeyChain 3.7 on my Android with CM 12.1.

When I reply a mail, K9 mail adds the old message quoted like this:

> This is the reply mail followed by the quotation of the original mail:
> 
> > -----BEGIN PGP MESSAGE-----
> > Charset: utf-8
> > Version: GnuPG v2
> > 
> > hQIMA324sfl24ltklwqfl2tl2gw

However, K9 mail cannot decrypt my sent message then and Thunderbird tells me that no valid OpenPGP block could be found. This is how the sent mail looks then:

> -----BEGIN PGP MESSAGE-----
> 
> hQIMAypJd8s8JCpBAQ//fWrPkSHfvGyh9YPbIn9OhQCOKCQM2yUusUiGbOxYPxbZ

When I compare it to a working encrypted mail 

> -----END PGP MESSAGE-----

is missing here at the end of the mail. So only a part of the encrypted messages seems to be sent!
###### How can I help you to narrow down the problem?
"
open-keychain/open-keychain,closed,Key import from file broken since Facebook support pr,[],"Importing keys from files no longer loads the keys inside the import activity's list. Reverting https://github.com/open-keychain/open-keychain/commit/f29280bbb268d112426c6662e1227118819fb904 solves the issue.

@adithyaphilip Can you look into this?
"
open-keychain/open-keychain,closed,[Feature request] A second export method in OpenKeychain's log view,[],"This was tested with OpenKeychain v3.7 (3700) under AlienDalvik / AOSP 4.1.2:

When hitting the ""Share"" button in the log view of the key import function, the system mail client is opened with the mail body containing solely a single ""null"".  Exactly the same happens, when I try to ""share"" an actual public key in a key's ""extended information"". 
But when ""sharing"" a key's fingerprint its ""extended information"" this works well: The system mail client is opened with the mail body containing ""openpgp4fpr:..."". 
""Sharing"" text selections in K9-Mail yields the same result: The system mail client is opened with the mail body containing the selected text (truncated to roughly one KByte). 
Side note: Other Android applications, which do not exhibit a triangular ""Share"" button, but a ""share"" entry in their pull down menu (e.g. Amaze file manager, Turbo Editor), open a list of suitable Android applications. 

The awkward behaviour of the ""Share"" button in OpenKeychain and K9-Mail in general must be attributed to the fact that these tests were carried out under AlienDalvik as part of SailfishOS 2.0.0. 
But I wonder, why sharing a key's fingerprint works reliably (and so does sharing text selections in K9-Mail), but sharing a proper key or a key import log just outputs a ""null""? 

If this works well under native Android and you have no idea what OpenKeychain may do differently when sharing fingerprints (and K9 sharing text selections) in contrast to actual keys and key import logs, please do not bother about that specifically. 

The real issue IMO is, that OpenKeychain offers no alternative to ""Sharing"" when trying to save a key import log.  In contrast to this, in a key's ""extended information"" dialogue a clipboard function is offered for both, the key's fingerprint and the actual key.  Hence my feature request is:

Please do offer a clipboard button (along with the existing share button) in the log view of OpenKeychain's key import function.
## 

Kudos for your excellent work,
Olf0
"
open-keychain/open-keychain,closed,Move edit key in create key wizard into overflow menu,[],"Move edit key in create key wizard into overflow menu
"
open-keychain/open-keychain,closed,Don't expose CertifyActivity,"[Label(name=""help wanted"")]","- remove exposing of CertifyActivity by removing intent filter on openpgp4fpr.
- this should only be executed using OpenKeychain
"
open-keychain/open-keychain,closed,"`Unfortunately, OpenKeyChain has stopped` on importing revoked pub and secret key",[],"This may be related to #1447 

The .asc file I'm importing is formatted as:

```
-----BEGIN PGP PUBLIC KEY BLOCK-----
[snip]
-----END PGP PUBLIC KEY BLOCK-----
-----BEGIN PGP PRIVATE KEY BLOCK-----
[snip]
-----END PGP PUBLIC KEY BLOCK-----
```
"
open-keychain/open-keychain,open,Notification to remind user of backup,"[Label(name=""help wanted"")]","I thought of integrating a backup screen into the create key wizard to force the user of creating a backup of the newly generated private key. This way users can revoke their keys later if it got compromised. We could also generate a revocation certificate, but I think this is less usable, because users might not understand what this is exactly and how it can be used later.

On a second thought, it could make the wizard too long and annoying, so what about reminding the user via a notification after lets say 14 days to create a backup of their newly created key?
"
open-keychain/open-keychain,closed,Increase and release openpgp-api for OpenKeychain 3.8,[],
open-keychain/open-keychain,closed,"Warning when entering the ""extended information"" screen",[],"- I would like to rename the ""Extended information"" menu item to ""Expert settings"". I know, we already used ""expert"" in the past, but I no longer like ""extended"". It sounds like normal options, instead these are really expert options, no normal user should use.
- Then I would like to add a warning dialog when entering the screen that needs to be acknowledged. Like 

```
Expert setting should only be utilized for special use cases.
Misusing them can break the OpenPGP key!

Cancel      I know what I am doing
```

Feedback?
"
open-keychain/open-keychain,closed,PassphraseDialogActivity: NullPointerException,[],"From Google Play developer console

```
java.lang.NullPointerException: Attempt to read from field 'org.sufficientlysecure.keychain.service.input.CryptoInputParcel org.sufficientlysecure.keychain.ui.PassphraseDialogActivity.mCryptoInputParcel' on a null object reference
    at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity.access$300(PassphraseDialogActivity.java:75)
    at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment$5$1.onPostExecute(PassphraseDialogActivity.java:481)
    at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment$5$1.onPostExecute(PassphraseDialogActivity.java:435)
    at android.os.AsyncTask.finish(AsyncTask.java:632)
    at android.os.AsyncTask.access$600(AsyncTask.java:177)
    at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:135)
    at android.app.ActivityThread.main(ActivityThread.java:5438)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:917)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:712)
```
"
open-keychain/open-keychain,closed,KeyserverSyncAdapterService: NullPointerException,[],"From Google Play developer console

Always Android 4.4

```
java.lang.RuntimeException: Unable to start service org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService@21f63140 with null: java.lang.NullPointerException
    at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2759)
    at android.app.ActivityThread.access$2100(ActivityThread.java:138)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1333)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:149)
    at android.app.ActivityThread.main(ActivityThread.java:5061)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:515)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:788)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:604)
    at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
    at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.onStartCommand(KeyserverSyncAdapterService.java:80)
    at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2742)
    ... 10 more
```
"
open-keychain/open-keychain,open,"java.lang.AssertionError: cannot clearsign in non-ascii armored text, this is a bug!","[Label(name=""bug""), Label(name=""help wanted"")]","From Google Play dev console.

Message from user: just crashes when trying to access with another app.

```
java.lang.AssertionError: cannot clearsign in non-ascii armored text, this is a bug!
    at org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation.execute(PgpSignEncryptOperation.java:501)
    at org.sufficientlysecure.keychain.remote.OpenPgpService.encryptAndSignImpl(OpenPgpService.java:437)
    at org.sufficientlysecure.keychain.remote.OpenPgpService.executeInternalWithStreams(OpenPgpService.java:874)
    at org.sufficientlysecure.keychain.remote.OpenPgpService.executeInternal(OpenPgpService.java:829)
    at org.sufficientlysecure.keychain.remote.OpenPgpService2$1.execute(OpenPgpService2.java:62)
    at org.openintents.openpgp.IOpenPgpService2$Stub.onTransact(IOpenPgpService2.java:80)
    at android.os.Binder.execTransact(Binder.java:446)
```
"
open-keychain/open-keychain,closed,Improve stripped key handling,[],"- Proper error notify when trying to edit a stripped key in advanced screen and inline edit
- Allow changing of passphrases for stripped keys
"
open-keychain/open-keychain,closed,Fix travis,[],"Working on reducing the memory consumption and runtime of our tests
"
open-keychain/open-keychain,open,fix queueing control flow for initiateInputActivity in QueueingCryptoOperationFragment,"[Label(name=""bug""), Label(name=""help wanted"")]","```
E/AndroidRuntime( 6071): Process: org.sufficientlysecure.keychain, PID: 6071
E/AndroidRuntime( 6071): java.lang.NullPointerException
E/AndroidRuntime( 6071):        at android.content.ComponentName.<init>(ComponentName.java:77)
E/AndroidRuntime( 6071):        at android.content.Intent.<init>(Intent.java:3972)
E/AndroidRuntime( 6071):        at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.initiateInputActivity(CryptoOperationHelper.java:146)
E/AndroidRuntime( 6071):        at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.onHandleResult(CryptoOperationHelper.java:336)
E/AndroidRuntime( 6071):        at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper$1.handleMessage(CryptoOperationHelper.java:299)
E/AndroidRuntime( 6071):        at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 6071):        at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 6071):        at android.app.ActivityThread.main(ActivityThread.java:5179)
E/AndroidRuntime( 6071):        at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime( 6071):        at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime( 6071):        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)
E/AndroidRuntime( 6071):        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)
E/AndroidRuntime( 6071):        at dalvik.system.NativeStart.main(Native Method)
W/ActivityManager( 1491):   Force finishing activity org.sufficientlysecure.keychain/.ui.DecryptActivity
W/ActivityManager( 1491): Activity pause timeout for ActivityRecord{41f30c40 u0 org.sufficientlysecure.keychain/.ui.DecryptActivity t28 f}
```
"
open-keychain/open-keychain,closed,Result private keyserver not showing,[],"I have setup a private keyserver and made this my default (and only) server.
When I create a key (with OpenKeychain) , and try to upload this, it works!!
When I try to retreive a key (search with OpenKeychain), it fails.

When I capture the session with Wireshark, I can see that the response on the query is correct.
The search of keys work, with the same settings, on my windows computer and trough the web interface.

What am I doing wrong? Or is this a bug?
"
open-keychain/open-keychain,closed,Crash when clicking on advanced screen certificate,"[Label(name=""help wanted"")]","Revoked user id without email

```
 11963         AndroidRuntime  D  Shutting down VM
 11963         AndroidRuntime  E  FATAL EXCEPTION: main
 11963         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 11963
 11963         AndroidRuntime  E  java.lang.NullPointerException: Attempt to invoke virtual method 'byte[] org.spongycastle.bcpg.SignatureSubpacket.getData()' on a null object reference
 11963         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.WrappedSignature.getRevocationReason(WrappedSignature.java:135)
 11963         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.ViewCertActivity.onLoadFinished(ViewCertActivity.java:166)
 11963         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.ViewCertActivity.onLoadFinished(ViewCertActivity.java:49)
 11963         AndroidRuntime  E  at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
 11963         AndroidRuntime  E  at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:444)
 11963         AndroidRuntime  E  at android.support.v4.content.Loader.deliverResult(Loader.java:126)
 11963         AndroidRuntime  E  at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:105)
 11963         AndroidRuntime  E  at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:37)
 11963         AndroidRuntime  E  at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:249)
 11963         AndroidRuntime  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:77)
 11963         AndroidRuntime  E  at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:466)
 11963         AndroidRuntime  E  at android.support.v4.content.ModernAsyncTask.access$400(ModernAsyncTask.java:48)
 11963         AndroidRuntime  E  at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:483)
 11963         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 11963         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
 11963         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5294)
 11963         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
 11963         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
 11963         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 11963         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)

```
"
open-keychain/open-keychain,closed,Linked Identity: Upload key after adding a new Linked Identity,[],"Keys are now uploaded when adding/changing user ids using the new activity from https://github.com/open-keychain/open-keychain/pull/1584

Newly added linked identities should also trigger a key upload after adding a new one.

Until we haven't implemented a better solution, I would propose adding a checkbox into the wizard to do this (currently we use checkboxes in certify, create key, and edit identities).
"
open-keychain/open-keychain,open,Certify: Better handling if scanned key is already signed,[],"Scanning a QR code leads to the certify dialog, no matter if the key is already certified or not. This could probably be handled more nicely, particularly since the title bar in that dialog is orange independently of the key status, suggesting that it has not yet been confirmed.
"
open-keychain/open-keychain,closed,Key search: show if key is already imported,[],
open-keychain/open-keychain,closed,Search by other user ids in main key list,[],"We should not only search by primary user id but also by other user ids in the main key list.
"
open-keychain/open-keychain,closed,QR Code fullscreen: landscape broken,"[Label(name=""help wanted"")]","QR Code is not properly resized in fullscreen.
"
open-keychain/open-keychain,open,Certify: Upload operation is blocking UI,[],"Upload after certify is blocking the UI. Is there a timeout? Can we add a cancel button.
"
open-keychain/open-keychain,open,Support Fingerprint Unlocking / Protect Passphrase cache with Keystore,"[Label(name=""help wanted"")]","Using [Android's Keystore](https://developer.android.com/training/articles/keystore.html) seems like quite a sane idea to use for caching passphrases (in [`PassphraseCacheService.java`](https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/service/PassphraseCacheService.java)). (The entire private key can also be stored the same way, but I see no advantage if the device's storage is already encrypted.)

Benefits:
- When the screen is locked, the unencrypted passphrase is not in memory; live extraction is not possible without the lock screen password.
- Cold boot attacks<sup>1</sup> are not effective (with hardware-backed credentials).
-  [`FingerprintManager.authenticate`](https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html#authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject%2C%20android.os.CancellationSignal%2C%20int%2C%20android.hardware.fingerprint.FingerprintManager.AuthenticationCallback%2C%20android.os.Handler)) could optionally be required on every decrypt operation.

<sup><sup>1</sup> ~~Preforming a cold boot attack on a mobile device will likely requiring keeping the device powered on, as bit decay on [low powered memory modules (or desktop DDR3) is incredibly fast](https://www1.cs.fau.de/filepool/projects/coldboot/fares_coldboot.pdf). This is only a real concern if you have an unlocked bootloader.~~ Update: [New research in 2016](https://dfrws.org/file/635/download?token=OrfhT7Ej) shows that it's still possible to extract keys with cold boot attacks on DDR3.</sup>
"
open-keychain/open-keychain,closed,Crash when encrypting through contact key: kgpg problem?,[],"Openkeychain crashes when using the contact key dialog.  To reproduce:

1-Select a contact's key from the main app screen.
2-Select the encrypt file icon.  This also happens with the encrypt text icon, however the app crashes only after selecting the text box to type.

Encryption is successful when using the encrypt dialog from the side menu or an intent.
"
open-keychain/open-keychain,closed,#1636 -- Default behaviour is preserved.,[],
open-keychain/open-keychain,closed,Fixed #1636,[],"Overridden toString method() of KeyItem Class.
"
open-keychain/open-keychain,open,"OpenKeyChain shows keybase.io proofs as available, which it can't verify",[],"When displaying a public key which has keybase.io proofs listed, OpenKeyChain lists them all, with a verify link. However, keybase.io proofs don't have to be signed by the user's PGP key; they can be signed by a NaCl key as part of the blockchain. OpenKeyChain reliably fails to verify NaCl proofs.

An example is on my own Keybase entry: https://keybase.io/brianetta

The assertion, ""Is known on GitHub as github.com/Brianetta"" can be verified by tapping `[Verify]`.

The assertion, ""Can post to the Web site(s) tyneside.lug.org.uk"" will always fail with ""Key fingerprint doesn't match that in proof post"" when tapping `[Verify]`. The proof succeeds in keybase implementations that support NaCl, including the reference implementation and the keybase.io web site.

Either OpenKeyChain should include NaCl, or it should somehow detect signatures which cannot be verified due to the use of an unsupported algorithm, and not offer a `[Verify]` link.
"
open-keychain/open-keychain,closed,Highlighter crashes on brackets,"[Label(name=""help wanted"")]","1. Press search in OpenKeychains main key list
2. Enter ""("" -> crash

```
  7749         AndroidRuntime  E  java.util.regex.PatternSyntaxException: Incorrectly nested parentheses in regexp pattern near index 7:
  7749         AndroidRuntime  E  (?i)(()
  7749         AndroidRuntime  E  ^
  7749         AndroidRuntime  E  at java.util.regex.Pattern.compileImpl(Native Method)
  7749         AndroidRuntime  E  at java.util.regex.Pattern.compile(Pattern.java:411)
  7749         AndroidRuntime  E  at java.util.regex.Pattern.<init>(Pattern.java:394)
  7749         AndroidRuntime  E  at java.util.regex.Pattern.compile(Pattern.java:381)
  7749         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.util.Highlighter.highlight(Highlighter.java:46)
```
"
open-keychain/open-keychain,closed,EncryptKeyCompletionView: Deleting a token shows class name,"[Label(name=""upstream bug"")]","1. Add 4 keys to EncryptKeyCompletionView
2. Focus other textview, now it is shown as ""Test +3""
3. Focus EncryptKeyCompletionView. delete token:

![device-2015-12-22-142501](https://cloud.githubusercontent.com/assets/321888/11956130/241fbd70-a8b8-11e5-9cc7-b31f676abacf.png)
"
open-keychain/open-keychain,open,Bouncy Castle 1.54 changes,[],"We are now at Bouncy Castle 1.54. Maybe we can use some API changes :)
- changes: https://github.com/bcgit/bc-java/commits/master/pg
- Encodeable interface?

interesting changes:
- https://github.com/bcgit/bc-java/commit/601a0baa49dfbcbc3aea485cd1e3f6d907d510b3
- https://github.com/bcgit/bc-java/commit/7b9083391bede0a0ee7f48a10c3eb174ae73b1a0
- https://github.com/bcgit/bc-java/commit/a56fdd5c172b261df9f514e97f1b4c9dc3886092
- https://github.com/bcgit/bc-java/commit/5a13015c60fe13d28fa9bd964bd20e50c7b15f08
"
open-keychain/open-keychain,closed,Verify public key with YubiKey,"[Label(name=""security token"")]","I have an unconfirmed public key and I try to ""Confirm with fingerprint""
After manually confirming the fingerprints match and moving on to the
next screen I select my key and press ""Confirm key"" and it says
""Certification of 0 keys failed!"" with the full error log containing

```
Certifying keyrings
  Fetching certifying master key
    Unlocking master key
      Error unlocking master key!
```

This is because I'm using my YubiKey paired with OpenKeychain and it
didn't give me any option to use it. I think it just assumes that the
private key is stored on the phone and tries to access it and fails.
"
open-keychain/open-keychain,closed,Fixed Keyserver and Contact Sync turning itself on,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1622. Looks like at some point keyserver sync and contact linking was enabled whenever the app started.
Also cancels a postponed/staggered sync if it was scheduled, but was disabled in preferences before it could trigger.
"
open-keychain/open-keychain,closed,openkeychain fails to import public key,[],"Someone sent me his pgp public key, which i could successfully import into enigmail (thunderbird).
I was also able to decrypt and validate his message.

After that I installed openkeychain on my android device, and got an error message when importing that  key, whilst my own keys were imported without any problems.

The error message says 
**Unterschlüssel 0xaaf8a22aa36581cd kommt zweimal im Schlüsselbund vor.
Schlüsselbund ist fehlerhaft und wird nicht importiert**

That translates more or less to something like:
**Subkey 0xaaf8a22aa36581cd found twice in the keyring.
Keyring is faulty and will not be imported.**

Questions: 
Whats wrong with that key?
How can I validate that key? (linux commands preferred)

See below the ""key properties"" of the key in question:
![x](https://cloud.githubusercontent.com/assets/16363102/11913776/d0281ac2-a66f-11e5-8298-f21e87536558.png)

If you need more information, let me know.
"
open-keychain/open-keychain,open,iPGMail encryption won't decrypt,[],"The Apple app iPGMail will decrypt messages from open-keychain, but will not decrypt email from iPGMail; however, everything encrypted by iPGMail decrypts fine using GPG on PC. 
open-keychain message copied from email to clipboard:
X Decrypt
 [green lock icon] Encrypted
 X not signed
 [page icon] Unkown filename (touch to open)

if ""touch to open"" is touched, message says:
X No valid OpenPGP encrypted or signed data found!

NOTE: email received has a blank line between data lines:

-----BEGIN PGP MESSAGE-----

Version: iPGMail (2.9.9)

hQQOA92BXS4HLFN5EA//e1pHOc4G8mZcUCmFlddnri/T4JLXlEg/8SH5RxOrBbQu9jlpTF+rBLk7

KfWpu3IAbcw3T48tSC1GCsbUJ8Tky2Q3R3uNPfd830qWVCXWYqYp12aaN1FMMRt0ExvTZb40T0et

84WwxZtN77nETOU4ghDhzPal4YNRvkz7mD1Yr38dU9Cq9ucKFx+Ttj+vE57jY6GngdUYMgP4ZJDc

ZNV2NV1tZgSpnU3Agdx3tQNkkZO/lPiyV7ITv1iEzzMVRsAiSXpDvw2Seg2tmB8Qn//eE7evP4F0

AC9UHP4QBz+W780mbuUhSJIbMBzhtPrdXaj1fHMkZAKQlcD51g26T+08TlTZMaub1gWwHg+jKpEo

JDU5QJj2YaefuFp7OEBat5IXJroMsyCHXdwbwPo0rE0HMBkzlVz8Y8zMk1tqYRqaHIAT0yn0rnOP

krW7a/iKfG7pMyRyDmo3qt/dVFvs+dpUkk8sZNM7D7ixU5TOtO9Kns7FrXZEpjty2NNdanUNlF5V

e7KhapvHK0qF1/K5BOKTfzcsR47YUc6BkO7V6WFDfJQTmlRaZZix56WzP2HGKpRCbDsKdfqtMgXn

hl0yjP2Z3YyZWN8IfU+G3siLkOFl2NeLlT/qdK3Q1S0jalHGXXcPKvTeu47lEEyGxh9x2ltMa97W

5F4whLspvVOU4aDFJPgP/i5KLGnGCzD0xCeOh0rMx4eZUmpDeZkOUWDRB00IhoUhyTW9GaK7GQ4S

9oZuySWRHogWlxt9GtgZbznveJ2lspylGd9M0LoUPlTzJcMOV8mfTpbJdmsanQOdFv+/HTNuyU3q

CLTfAQFt3IjMHkZoZ0db0J6u6ja4Mw8jfuAaoT7y7zWdJAmGRp42c3qJ535cNf86Jfd6EVvdXtgt

ejIXbjw843Fh5Z6GRVPVDhKiGveJE4NMxvOwQk3ezroLrVXP/SuLrk8Y0XCllkpHORSRArEnfTdq

d1oKnkw16fUTBj3/2kcCMad3ANi2+SVDcDd41ERIMrw1tCHMGt4gcam76ZfPm5vhwch54mjg6lXD

XNsuMhe83/CZ1A/I0TKIAA6UBXfYdy6t0wQlj9Oz56Wov5NBexJUqS7NhMey6p8xcoD7T/QMLnch

j5UtOwEcNKbf4nsgVYCq5NaHs6k6HvxV5qPYI2adjATTE2ElK3t4TS/BtnxBB7Xd2MTCGlWITzDd

HN6ZFWKyuVZD89kvW6oYu3IOZ298Scak25I8jVh49w+oBCNDqf06KKiCRU/ahXHunOVrz7RzLHe0

j9pW5cyUy6lCx+HnHdGhcbGmjmcQK5Eb6GCq7w0lYfwEsbMx9sX30OthBHKZaxRmMC/sWPZDdDxp

lsONcn+s9S++xeNi8KEi0kABnqA7As7IT3d/L6sm1HuUiq+WpalrbFcOV2oie/LqoeExnWfpGQVE

iekjTGMC+ZTq05YqdzNwz93ltHlLOxhI

=ifDs

-----END PGP MESSAGE-----
"
open-keychain/open-keychain,closed,android 6 crash on key search,[],"```
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.SecurityException: Permission Denial: opening provider com.android.providers.contacts.ContactsProvider2 from ProcessRecord{e9b9d6e 17008:org.sufficientlysecure.keychain/u0a85} (pid=17008, uid=10085) requires android.permission.READ_CONTACTS or android.permission.WRITE_CONTACTS
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2416)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2476)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread.-wrap11(ActivityThread.java)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1344)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:148)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5417)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  Caused by: java.lang.SecurityException: Permission Denial: opening provider com.android.providers.contacts.ContactsProvider2 from ProcessRecord{e9b9d6e 17008:org.sufficientlysecure.keychain/u0a85} (pid=17008, uid=10085) requires android.permission.READ_CONTACTS or android.permission.WRITE_CONTACTS
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.os.Parcel.readException(Parcel.java:1599)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.os.Parcel.readException(Parcel.java:1552)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityManagerProxy.getContentProvider(ActivityManagerNative.java:3550)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread.acquireProvider(ActivityThread.java:4778)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ContextImpl$ApplicationContentResolver.acquireUnstableProvider(ContextImpl.java:2018)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.content.ContentResolver.acquireUnstableProvider(ContentResolver.java:1468)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.content.ContentResolver.query(ContentResolver.java:475)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.content.ContentResolver.query(ContentResolver.java:434)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at org.sufficientlysecure.keychain.util.ContactHelper.getContactNames(ContactHelper.java:298)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.ImportKeysCloudFragment.onCreateView(ImportKeysCloudFragment.java:89)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.Fragment.performCreateView(Fragment.java:1962)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1067)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1248)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:738)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1613)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:330)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:547)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1237)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.Activity.performStart(Activity.java:6253)
12-17 16:25:54.488  17008    17008         AndroidRuntime  E  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2379)
```
"
open-keychain/open-keychain,closed,Unable to checkout in submodule path 'extern/spongycastle',[],"Hi:
&nbsp;&nbsp;&nbsp;&nbsp;I clone the repo just now and run the command `git submodule update --init --recursive` but come with an error:
`fatal: reference is not a tree: b0acac5821e3cc58549c76ecc16df147796e08e1
Unable to checkout 'b0acac5821e3cc58549c76ecc16df147796e08e1' in submodule path 'extern/spongycastle'`
Does someone have the same problem with me?Any ideas?
"
open-keychain/open-keychain,closed,Issue#1595,[],"I add a link to in-app faq in the backup UI according to the Issue#1595
<a href=""https://github.com/open-keychain/open-keychain/issues/1595"">https://github.com/open-keychain/open-keychain/issues/1595</a>
"
open-keychain/open-keychain,closed,Support Curve25519 encryption,"[Label(name=""help wanted"")]","Encryption with Curve25519 should be added as a companion for Ed25519 #1533 signing.

[GnuPG 2.1.7 (August 2015) now ships with Curve25519](http://www.gniibe.org/memo/software/gpg/keygen-25519.html) and will [use it as default](https://www.gnupg.org/faq/whats-new-in-2.1.html).

It would be great if OpenKeychain follows along. That way we can have interoperable implementations getting past the NIST and Brainpool curves' doubts. This effort would help future standardization.

There is already a Curve25519 implementation on Bouncy Castle: [org.bouncycastle.math.ec.custom.djb.Curve25519](https://github.com/bcgit/bc-java/blob/master/core/src/main/java/org/bouncycastle/math/ec/custom/djb/Curve25519.java)
"
open-keychain/open-keychain,open,jacoco.exec: open failed: EROFS,"[Label(name=""help wanted"")]","Not important, but would be nice to get rid of this

```
System.err  W  java.io.FileNotFoundException: /jacoco.exec: open failed: EROFS (Read-only file system)
 17234             System.err  W  at libcore.io.IoBridge.open(IoBridge.java:409)
 17234             System.err  W  at java.io.FileOutputStream.<init>(FileOutputStream.java:88)
 17234             System.err  W  at org.jacoco.agent.rt.internal_773e439.output.FileOutput.openFile(FileOutput.java:67)
 17234             System.err  W  at org.jacoco.agent.rt.internal_773e439.output.FileOutput.startup(FileOutput.java:49)
 17234             System.err  W  at org.jacoco.agent.rt.internal_773e439.Agent.startup(Agent.java:122)
 17234             System.err  W  at org.jacoco.agent.rt.internal_773e439.Agent.getInstance(Agent.java:50)
 17234             System.err  W  at org.jacoco.agent.rt.internal_773e439.Offline.<clinit>(Offline.java:31)
 17234             System.err  W  at org.sufficientlysecure.keychain.KeychainApplication.$jacocoInit(KeychainApplication.java)
 17234             System.err  W  at org.sufficientlysecure.keychain.KeychainApplication.<clinit>(KeychainApplication.java)
 17234             System.err  W  at java.lang.Class.newInstanceImpl(Native Method)
 17234             System.err  W  at java.lang.Class.newInstance(Class.java:1208)
 17234             System.err  W  at android.app.Instrumentation.newApplication(Instrumentation.java:990)
 17234             System.err  W  at android.app.Instrumentation.newApplication(Instrumentation.java:975)
 17234             System.err  W  at android.app.LoadedApk.makeApplication(LoadedApk.java:502)
 17234             System.err  W  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4301)
 17234             System.err  W  at android.app.ActivityThread.access$1500(ActivityThread.java:135)
 17234             System.err  W  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1256)
 17234             System.err  W  at android.os.Handler.dispatchMessage(Handler.java:102)
 17234             System.err  W  at android.os.Looper.loop(Looper.java:136)
 17234             System.err  W  at android.app.ActivityThread.main(ActivityThread.java:5001)
 17234             System.err  W  at java.lang.reflect.Method.invokeNative(Native Method)
 17234             System.err  W  at java.lang.reflect.Method.invoke(Method.java:515)
 17234             System.err  W  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
 17234             System.err  W  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
 17234             System.err  W  at dalvik.system.NativeStart.main(Native Method)
 17234             System.err  W  Caused by: libcore.io.ErrnoException: open failed: EROFS (Read-only file system)
 17234             System.err  W  at libcore.io.Posix.open(Native Method)
 17234             System.err  W  at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)
 17234             System.err  W  at libcore.io.IoBridge.open(IoBridge.java:393)
 17234             System.err  W  ... 24 more
```
"
open-keychain/open-keychain,open,ActivityNotFoundException: android.intent.action.OPEN_DOCUMENT ,"[Label(name=""bug""), Label(name=""help wanted"")]","Steps to reproduce:
1) Encrypt/Decrypt
2.1) Encrypt files
3) Add Files (""Unfortunately, OpenKeychain has stopped."")
2.2) Decrypt/Verify
3) Select input file (""Unfortunately, OpenKeychain has stopped."")

Device: Redmi Note 2
Chipset: Mediatek MT6795 Helio X10
CPU: Octa-core 2.0 GHz Cortex-A53
"
open-keychain/open-keychain,open,Can not import missing key in key selection dialog,[],"(opening new ticket as no existing ticket was tryingusing multiple keywords)

Use case:
- Answer an encrypted email in K-9
- OpenKeyChain can not find a key for the receiver and prompts the user to select a key
- the key does not exist in OpenKeychain yet
- The selection-dialog should offer the ability to search key-servers for the missing key or otherwise import it without leaving the dialog.
- the user can not save the message as a draft (to sort out the missing key action) because that requires encryption of the draft
"
open-keychain/open-keychain,closed,Linked Identity Facebook support,[],"Now that we support downloading of keys from facebook (https://github.com/open-keychain/open-keychain/pull/1610) it would be awesome to support Facebook linked identities where the key itself is the ""proof"".
"
open-keychain/open-keychain,closed,Automatic Key Updates Forced Set,[],"Since the most recent update, Automatic Key Updates is enabling itself every time I turn it off. I have Enable Tor turned on, too, so every time the key update triggers, OpenKeychain connects to the Tor network but then I can't shut Tor down again until I force close OpenKeychain. Every time I try to shut it down, it reconnects immediately. Don't know if the two issues are related.

OpenKeychain 3.7 via Play Store
Nexus 5X on Verizon, Android 6.0 (MDB08L)
"
open-keychain/open-keychain,closed,Issue#1605 solved,[],"I just do some changes in OperationResult.java
"
open-keychain/open-keychain,closed,Edit subkeys,[],"More of a question than an issue, when I import a GPG subkey, I cannot edit this key, is this a sort of ""confirmation"" that the current key I am willing to edit is a subkey? 
"
open-keychain/open-keychain,closed,OpenKeychain does not return the algorithm used to sign data,[],"To implement [RFC 3156](https://tools.ietf.org/html/rfc3156) (aka PGP/MIME) in K-9 Mail, the ""micalg"" header value must be set to identify the signing algorithm used by the sender. However, OpenPgpApi.ACTION_DETACHED_SIGN doesn't seem to return the algorithm used, either as an extra or as part of the ASCII armoured signature. However, if I read the OpenKeychain source code correctly, it look as if the signing algorithm is fixed to SHA-512 for the time being.

Should applications implementing PGP/MIME just statically set the ""micalg"" value to SHA-512, and assume that's guaranteed to never change? Or should the detached signing operation return the algorithm used?
"
open-keychain/open-keychain,closed,Insecure encryption: an outdated algorithm has been used,[],"Tried moving from AGP to open-keychain with k9-mail. It seems much more usable, however, I cannot verity signatures or decrypt messages. I always get 
Insecure encryption: an outdated algorithm has been used!
Interestingly, even for messages signed and encrypted with open-keychain. The signature verification and encryption work fine using AGP and KDE's Kontact on the same messages.
"
open-keychain/open-keychain,closed,"Return EXTRA_SIGN_KEY_ID = 0L for ""none"" key chosen for ACTION_GET_SIGN_KEY_ID",[],
open-keychain/open-keychain,closed,Decrypting message of multiple keys fails,[],"When following these instructions (https://www.openkeychain.org/faq/) to import a private key, especially

gpg --armor --export-secret-keys YOUREMAILADDRESS | gpg --armor --symmetric --output mykey.sec.asc

the decryption in OpenKeychain fails.  This is likely due to me having multiple private keys.  Some have expired.

However this does work:

gpg --list-secret-keys
gpg --armor --export-secret-keys deadbeef | gpg --armor --symmetric --output mykey.sec.asc

I'm confused why the decryption fails.  I can understand the import failing.
"
open-keychain/open-keychain,closed,provider for OpenPgpApi,[],"To display contact info in K-9, I needed some way to get data per email address. The straightforward approach is adding a Provider in addition to the OpenPgpService we offer, so that's what I went with.

This is still missing a permission check. I checked and it's possible to check the calling uid just like with other service calls, so it's easy to restrict to apps which are already allowed.
"
open-keychain/open-keychain,closed,Use Nordpol for BaseNfcActivity,[],"[Nordpol](https://github.com/fidesmo/nordpol) is a library that tries to consolidate the two different ways Android interacts with NFC as well as well as provide good default values for apps that require real ISO APDU communication with the tag. On top of this provides some work arounds for some of the NFC bugs out there. It tries to do so while being a drop in replacement for the IsoTag class.

I have tried to minimize the changes to the existing code. The following have been altered:
- Replace handling of intents with Nordpol tag dispatcher
- Update CreateKeyActivity to pass it's intent to the tag dispatcher
  when invoked by the system (onCreate)
- Add Fidesmo marmeladburk repository
- Add dependency on nordpol-android and nordpol-core
"
open-keychain/open-keychain,closed,"signature valid on PC, invalid on phone",[],"On my PC (Win 7, Thunderbird, Enigmail) I wrote an e-mail with an attachment (a pdf-file). I signed the message, but not the attachment.

Thunderbird displays the signature as valid.

On my Samsung S4 mini (Android 4.4.2, K-9, open-keychain) this messsage was diagnosed as having an invalid signature.
I do suspect, this has something to do with the unsigned attachment, so the error message is at least misleading.

Maybe this helps improving user experience ;-)

Kind regards
Roland
"
open-keychain/open-keychain,closed,signing subkey not found,[],"Hi,
platform is Samsung S4 mini with Android 4.4.2.
Mailer is K-9 and open-keychain manages the keys.
Following the recomendation you gave, I generated a new, longer key.
I did this in my pc (Thunderbird / Enigmail) and transfered the new key to the phone.
Sending a signed message from the PC results in a successful verification on the phone.
Trying to reply results in ""signing subkey not found!"".
Help!
Regards
Roland
"
open-keychain/open-keychain,closed,v3.7 crashes when you click encrypt text icon,"[Label(name=""google play crash-report"")]","After upgrading from 3.6.1, when you clixk encrypt text icom it crashes on some keys, but not all
"
open-keychain/open-keychain,closed,Basic Facebook Support,[],"Related to https://github.com/open-keychain/open-keychain/issues/1321
This PR adds:
- Support for importing keys from links of the form:
  https://www.facebook.com/*/publickey/download.
  e.g. https://www.facebook.com/adithya.abraham/publickey/download <br>
  Requirement: The visibility of the key must be set to ""Public"" on Facebook.
- Reloading of `ImportKeysActivity` if the activity was already open and a new Intent is received.

Testing Facebook search:
- Clicking on above link in browser (after which you may search for any Facebook username) (or)
- Add https://facebook.com as preferred keyserver (this works because of the URL inspection mentioned below) and searching for a person's Facebook username.

A query to Facebook is currently identified in `CloudSearch` and `ImportOperation` by URL inspection. I'm guessing this should be changed to something more centralized like adding a new boolean `searchFacebook` to `CloudSearchPrefs`, similar to `searchKeybase`. Working on that right now. Is everything else fine?
"
open-keychain/open-keychain,closed,"importing public key fails with ""unsupported opengpg key version 3""",[],"Trying to import the public key below, fails with the message, that this key uses OpenPGP version 3 which is not supported.

Could someone shed some light on this? Other tools like APG or Enigmail work without any problems. What would be the steps to upgrade an ""old"" key?
I exported the public key with gpg 2.0.22.

```
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v2.0.22 (MingW32)

mQCNAzbw4eMAAAEEANdAucebluqZO90sI/PaeDnVytipTAuFHSvaLWmRJnRjQoRj
6rdqIvFdB2WzTQrBd3W2sqHMOXmQEdKs9S7yBFuF7AIItlUvO6bI9nf41zuzGb2b
lKw76VILHnp1LN545sSQ22W+XQG3HwvmUdYSWZ3gkYULqi8aXwmNEPqxBinlAAUR
tBxWZWl0IEd1bmEgPHZlaXQuZ3VuYUBnbXguZGU+iQCVAwUTQdM18gmNEPqxBinl
AQFfhQQAxvdhw+UkqBA6zmlChPh9uq7le26tomPs70piWDBoRW01Il/4WheXZ+SC
Q1LlCxzpjY7mLgWIzz20JW8Fs9qY5HSpMJziTZkF0jIUGNflSCQdYsd71z8K4kJp
cB4Yl2FRqYNZG6J794GxPLeIsNd6LvadfpsDWKAL11ihrSHFqCeIRgQTEQIABgUC
Qf6S3wAKCRC7vLGdlylFNleKAJ4k5QPR89Mi8z4O8RUPQalFYgPD4wCeOy29LKPG
iY4ni+nFvZj3EAorYr6IRgQTEQIABgUCQh/oTwAKCRCrxYzyeDJWo88hAJ9LYLnr
eDMf70DU4TyCp2Q1zlpuigCg0GVPJKR6id7QGEqTaeeRVQR1nwi0H1ZlaXQgR3Vu
YSA8ZGVhdGhAZ3JhdmUucnVoci5kZT6JAJUDBRA3Po5YtlzUHUcco7EBAfw/A/9N
hWc9MmKaEilurBRIX3523JwniPsGpOCJcYyMh2fMtelTTh9PlsyUy52qehEKiQHt
k9VxZwFvXFd/So16AscF5NWl88Lpqbj72gu43+mOf15NuI2DhgshrMRhHj9JBc6X
37cMF+qS+bvgREg2Z8Xc82igF3cJCSLYYVNhRNBByokAlQMFEDdC+st8jhCjzNbD
JQEBoasEAMyxu8l1LXtZAdr6LnBdwIXdn1dXIcQI60W7Vtzpewke6/aC2zVi/eJe
nUPxbuvAuJ16ymhJwLFG0/S4wY8HY2YVxfunKlzAQhgQYzUwUHhY+5TYC+wJ1IAe
zBJVQuyKsdbCRMPZk9HrYOsDGVRd3Sv/lPghIFMYkMwzPMC+HA1YiQCVAwUQNvDh
5wmNEPqxBinlAQENlAQAqbqfyFPGIi3LpWypudDi2qqU0RB/nkQ6KnF9Qnemt+Qy
9bU/6Ad1yfzhMc4n0oBOWjIQgyR8T8NOr4w8WCU8GnHXJyEBdI6OTklaS/Hx/Y/2
7rFvuuibldQv9s1u0eRp/GBQP5gTmtdVOw57yaCUWsP4yk4mUdhEEDUDqpcTy+qJ
AJUDBRA3MZgcRLjd1rsdn20BAZ5UA/4gmNuUvqVrnAC+xYSLrXoRDKj+w9LkhPMs
K++Z5YIH8VOStlV4EzJQrJrC3KQDEbEbjgVCFnN5rDcM2pAKYXHDjZ/KqdDcz5Im
EAZAROCX1AadsrGssBgjzz/TM2kc5bpVZqLuTXsTPb2r7WsoRAbTCFhTcwtNIaBE
7OvwgHEk/IhGBBMRAgAGBQJB/pLfAAoJELu8sZ2XKUU2EEEAniSQuUgDSgKTghbx
rrwe8gamJdCtAJ0fm4vHXkFLx0ZFaWRbIDJC+Sv61ohGBBMRAgAGBQJCH+hPAAoJ
EKvFjPJ4Mlajc9MAnizsW0nC4u7fjzKFEJ0o1BhCv7RKAKDCGoSTYINVTQ3ySmaQ
NGmGn++FDrQeVmVpdCBHdW5hIDxndW5hQHJlc2VydmVudG8uZGU+iQCVAwUTU7HB
YQmNEPqxBinlAQEv7gQAxadcFuEDDdaOF2S9oxTWn//yUKqmzgDRmrpjTIr3m8WT
pPjI0+fx0yq9uzq1J8E8BHvlh9kV7kpL4jIva8RXFUkfYUXErYaFefml/lQjeqWb
naXjLSjm58gJBt8pMZ6zLJfiVGJKWOoiYV+SvhRjg5I9tpXf2JwY+f5lqhPp/Cc=
=CbtR
-----END PGP PUBLIC KEY BLOCK-----
```
"
open-keychain/open-keychain,closed,QR Code not displayed,[],"Not sure if it's just my device, but the QR Code in my keys is not immediately displayed for me.
"
open-keychain/open-keychain,closed,Dismiss permission notification on click,[],"The notification shown when contacts permission is not granted should be dismissed on click
"
open-keychain/open-keychain,closed,Crash on cloud search,[],"Looks like I have missed one runtime permission check:
- disable contacts permission
- search cloud -> crash
"
open-keychain/open-keychain,closed,Crash on sharing empty log,"[Label(name=""help wanted"")]","Reproduce:
- Have no keys
- Update all keys
- Open log
- Share log -> crash
"
open-keychain/open-keychain,closed,unintentionally hidden reply,[],"I sent a signed message from my Windows 7 PC using Thunderbird/Enigmail.
I received an unsigned reply to this message with my initial message including its signature at the end of the reply.
I can fully view this reply (unsigned reply and signed initial message) on my PC.
On K-9 Mail with open-keychain on my Samsung S4 mini (Android version 4.4.2) I tried to read the reply. In this reply I can see only my initial signed message. The text of the unsigned reply, which is everything before the ""BEGIN PGP SIGNED MESSAGE"" of my initial message is not visible on K-9.
Thanks for any hint!
Regards
Roland
"
open-keychain/open-keychain,closed,MVP Pattern (for decrypt list activity),"[Label(name=""needs work"")]","Soo~ I played around a bit with the Model-View-Presenter (MVP) pattern, implementing it in the DecryptActivity. The basic idea is to reduce the displaying component (i.e. Fragment in our cases) to a purely passive view, and move all logic into a Presenter class. Communication happens with raw events from the ui to the presenter (like onUiLongClickFile), and updates to the ui state from the presenter to the ui (like displayFileContextMenu).

There are some limitations to this approach due to basic Android design assumptions, the presenter in particular needs to move some things through the UI component which aren't strictly UI, like startActivity/onActivityResult.

Still, I really like this approach. Makes it much easier to redesign or switch out UI components (and god knows we do that a lot), and also test ui logic independently from views themselves. It also makes lifecycle management a little easier, and makes the interface very clear - check out DecryptListInterface.java, it neatly ties logic and interface together.

I'm not sure how much we gain from rewriting existing code to use MVP, but for me the experiment was quite successful, and I will probably use the pattern when I create new activities (of some complexity) in the future
"
open-keychain/open-keychain,closed,Increase API version for next release,[],
open-keychain/open-keychain,closed,wrong signature for own key,[],"On my Samsung S4 mini (Android 4.4.2) I experienced the following issue:

After setting up open-keychain and importing my keys from the PC I sent out a signed test e-mail from my smartphone to one of my accounts using K-9 Mail and open-keychain.

The e-mail ended up in my PC-account and was read with Thunderbird and Enigmail running on Windows 7.

The signature was recognised as valid. So at first glance everything seemed fine.

The copy of the same message in the outbox of K-9 Mail was diagnosed of having a wrong signature!

Sending a signed e-mail from the PC to the smartphone is again recognised as validly signed by Thunderbird / Enigmail and diagnosed wrongly signed on K-9 Mail. All with the same account information and using the same keys.

I would really appreciate any hint on how to make this one way street into a truly working two way communication.

Thanks!
Roland
"
open-keychain/open-keychain,closed,Limit create key options / redesign subkey creation dialog,[],"Openkeychain offers the option to use an 8192 bit RSA key. I figured I might aswell use that. But it seems people reccommend not to use it because it adds extreme ammounts of overhead and is considered overkill.
Is it? 
And if it is, why does Openkeychain offer it as an option?
"
open-keychain/open-keychain,open,Saving of multiple encrypted files,"[Label(name=""help wanted"")]","Saving of files not supported. This is a limitation on current android.
I'm sure this should be possible, perhaps with some workaround. 3th party file managers can copy/move multiple files. So why wouldn't Openkeychain be able to store multiple at once?

Wouldn't it be possible to queue the files and store them one by one? 
"
open-keychain/open-keychain,closed,Decrypting from clipboard: text above a blank line is dropped,[],"When decrypting from the clipboard, all text above a blank line is dropped.

Steps to reproduce:
- encrypt the following text to yourself:

> one
> two
> 
> three
- encrypt to clipboard
- decrpt from clipboard
- find only

> three

The number of lines above the blank line doesn't seem to matter.

This also applies when having the encrypted text coming e.g. from an email. The text is the crypttext, AGP or enigmail shows it. 

I am using 3.6.1 (36100), on a german galaxy note 3.
"
open-keychain/open-keychain,closed,Select time to remember password in dialog,[],"Using different caching times at different times is quite the valid use case. If I know I'll be doing a lot of keysigning or mail reading in the next hour or so, for example, it should be in the few hours range. Otherwise, couple minutes is fine. But it really varies.

Another advantage is that it raises awareness that passwords are cached. Users are sometimes confused why they aren't asked their password on a second operation, if they havn't noticed the cache notification before.
"
open-keychain/open-keychain,closed,Openkeychain didn't return any key on ACTION_GET_KEY,[],"Hi,
I tried the pgp-mime support of k9-mail with OpenKeychain 3.6.1.
Everything works except: attach my public key.

Error message:

```
OpenPGP Error: Your Openpgp Provider didn't return any key on ACTION_GET_KEY, contact them.
Uncheck ""Attach my public key"" to proceed.
```

https://github.com/k9mail/k-9/pull/884
"
open-keychain/open-keychain,closed,"In Backup UI, add link to in-app help: ""How to import this?""","[Label(name=""help wanted"")]","Backed up keys can not be imported on other systems. Why can one not simple export the private key and import it somewhere else as opposed to a openkeychain compatible only backup?
"
open-keychain/open-keychain,open,securely delete files,[],"extracted from #1567

we delete files in a couple of places. it probably makes sense to overwrite the data in all of these places, since any data we handle might be sensitve.
"
open-keychain/open-keychain,closed,Importing key from clipboard crashes app,[],"Version 3.6, from Google Play. The same is with manual build from 4b594e4e753b4dab82dcb151502d4a0ff156e661 .
Really love that feature.
"
open-keychain/open-keychain,closed,First Line of Text Followed by Empty Line is Swallowed After Decryption,[],"I have reproduced this on multiple devices running OpenKeychain 3.6.1:
- Google Galaxy Nexus on Cyanogenmod 11
- Google Nexus 7 on Cyanogenmod 12.1

It does not matter how the text was encrypted, but for reproducing this problem, I take the following steps, all within OpenKeychain:
### 1. Enter several lines of text

In OpenKeychain's encrypt mode, select the `Encrypt text` option. Enter the following lines of text, leave a blank line between each text line:

```
Line One

Line Two

Line Three
```
### 2. Encrypt and sign to clipboard

Pick your own GPG key and encrypt and sign it.
### 3. Decrypt and display text

Go back to decrypt mode and select `Read from clipboard` to verify and decrypt what you have just encrypted. The signature validation is successful, but the shown decrypted text is missing the first line of text and the first blank line. Instead, it shows this:

```
Line Two

Line Three
```

It seems to be important that there is a blank line after the first line, because if you have no blank lines in the plain text, as in

```
Line One
Line Two
Line Three
```

then it works as expected and shows all three lines after encrypting and decrypting.

This is particularly annoying if an encrypted email response is just one line long, followed by a blank and the original quoted mail. All you get to see after decryption is the quoted mail, but the one-liner reply cannot be read. Decrypting the same ciphertext in a different tool shows that first line just fine.
### Screenshots

The following screenshots show the entered text just before encryption, and the immediately decrypted text with the first line missing.

![openkeychain_1](https://cloud.githubusercontent.com/assets/2957772/11161397/75bd1f0c-8a49-11e5-8eaf-ce4289af75f8.jpg)

![openkeychain_2](https://cloud.githubusercontent.com/assets/2957772/11161398/81111368-8a49-11e5-9752-0efbd8b3f88e.jpg)
"
open-keychain/open-keychain,closed,waffle.io Badge,[],"Merge this to receive a badge indicating the number of issues in the ready column on your waffle.io board at https://waffle.io/open-keychain/open-keychain

This was requested by a real person (user dschuermann) on waffle.io, we're not trying to spam you.
"
open-keychain/open-keychain,closed,"Blackberry Q10: ""Tag does not support ISO-DEP""","[Label(name=""upstream bug"")]","Using Openkeychain on my Blackberry Q10, when I try to use my new yubikey neo it says

```
Tag does not support ISO-DEP (ISO 14443-4)
```

What does that mean?
"
open-keychain/open-keychain,closed,Upgrade safeslinger server,[],"see https://github.com/SafeSlingerProject/exchange-android/issues/11
"
open-keychain/open-keychain,closed,Proguard workaround for Samsung still needed?,[],"see https://code.google.com/p/android/issues/detail?id=78377
"
open-keychain/open-keychain,closed,Redesign Security Token Import (Yubikey etc),"[Label(name=""enhancement""), Label(name=""help wanted""), Label(name=""security token"")]","Multiple users have expressed confusion about the import yubikey dialog. A couple of points have come up in irc while discussing the issue:
- The matching public key seems to not be up on keyservers at import time quite often. This either happens because it was created very recently and just isn't there yet (this delay is a general point of confusion with keyservers), or because people don't use keyservers.
- There do seem to be people around who have urls on their yubikeys which we can use. This is encouraged in sjoseffson's [blog post on yubikeys](http://blog.josefsson.org/2014/06/23/offline-gnupg-master-key-and-subkeys-on-yubikey-neo-smartcard/), and quite a few people seem to follow this.
- Users are _not_ aware of what the activity is actually trying to do, which is import the public key. Even users who would have no problem manually importng their public key by some means miss that, simply because we do not indicate it.

I have a suggestion in mind for a design overhaul, will write about it later.
"
open-keychain/open-keychain,closed,Apply workarounds from nordpol library to our NFC classes,[],"In nordpol, there are some device specific workarounds that could help with devices reported to be problematic.

see https://github.com/fidesmo/nordpol/blob/master/android/src/main/java/nordpol/TagDispatcher.java
and https://github.com/fidesmo/nordpol/blob/master/android/src/main/java/nordpol/AndroidCard.java

Though, I am not sure if we want to use the whole library.
"
open-keychain/open-keychain,closed,Merge safeslinger changes,[],"Getting rid of apache dep: https://github.com/SafeSlingerProject/exchange-android/issues/11
"
open-keychain/open-keychain,closed,Inline Identity Edit,[],"I added a way to edit identities inline in the extended information view as an action mode. It's a little rough around the edges still - icons aren't pretty, and ""save"" doesn't actually save anything.

This is more of a design suggestion than a definitely planned feature. Once we get rid of per-key passphrases, editing of user ids will be the only non-advanced use case left for key editing, maybe having that inline is a little neater? Not sure.

![edit redesign screenshot](https://dl.pushbulletusercontent.com/oVDrAYxmXzgqX2BpQJomxXbfYFH698DD/Screenshot_2015-11-03-10-53-10.png)
"
open-keychain/open-keychain,open,Permission Denial: reading MediaProvider uri content://media/external/fs_id,"[Label(name=""bug""), Label(name=""help wanted"")]","I get this in logcat when saving a backup on Android 6, not sure why, still everything works.

```
11-02 19:24:17.499   938      956           DatabaseUtils  E  Writing exception to parcel
11-02 19:24:17.499   938      956           DatabaseUtils  E  java.lang.SecurityException: Permission Denial: reading com.android.providers.media.MediaProvider uri content://media/external/fs_id from pid=9373, uid=10062 requires android.permission.READ_EXTERNAL_STORAGE, or grantUriPermission()
11-02 19:24:17.499   938      956           DatabaseUtils  E  at android.content.ContentProvider.enforceReadPermissionInner(ContentProvider.java:605)
11-02 19:24:17.499   938      956           DatabaseUtils  E  at android.content.ContentProvider$Transport.enforceReadPermission(ContentProvider.java:480)
11-02 19:24:17.499   938      956           DatabaseUtils  E  at android.content.ContentProvider$Transport.query(ContentProvider.java:211)
11-02 19:24:17.499   938      956           DatabaseUtils  E  at android.content.ContentProviderNative.onTransact(ContentProviderNative.java:112)
11-02 19:24:17.499   938      956           DatabaseUtils  E  at android.os.Binder.execTransact(Binder.java:453)
```
"
open-keychain/open-keychain,closed,encrypted text is decrypted in APG but not in open-keychain,[],"# i have encrypted this message:

-----BEGIN PGP MESSAGE-----
Version: 10.3.0 (Build 9060)
Comment: www.cisco.com
Charset: us-ascii

qANQR1DBwEwDt67c8DUIQ28BCAC24dgjVkT+07zIXOz7RPhm5pGWuIJmrzUyF59g
VTFiiykDCw0pb/YcZs8bo7blZKm4uVE7meej8EIx6AGSsnf69QB9mpz47g5VYAs/
pEfbKVA6IHx4/JpjfLp7dQlKwLeauw0a9vKPdsbytGpzBRLCdQSpRckOr2u82NqX
LcASg7JZvNrPJtmMyZG2JbsDTY7cq3N7/xuD7LjYEyK7z/8V34C+boPwwJYMZEG3
BgtlEmu5YYziUHQLwHeFL0SmSSi82N8deErMtMlUnLBx19Kr4AtkiTqegVOZaXk0
X5yEXK6I9qROschNt+wtERwGGrYbAaubYAEG1aQkYh30B0rk0kYB8ur9QmLadedj
tAbjrLGXE608mJ6FDRUur6aX5/6cbxetwELTlewfeBP73ABH9P1NMpglQRLXFUBl
ob33v8vUR3nhO+Ek
=6c7H
-----END PGP MESSAGE-----
# after removing the headers and feeding it to APG (like so) it worked:

-----BEGIN PGP MESSAGE-----

qANQR1DBwEwDt67c8DUIQ28BCAC24dgjVkT+07zIXOz7RPhm5pGWuIJmrzUyF59g
VTFiiykDCw0pb/YcZs8bo7blZKm4uVE7meej8EIx6AGSsnf69QB9mpz47g5VYAs/
pEfbKVA6IHx4/JpjfLp7dQlKwLeauw0a9vKPdsbytGpzBRLCdQSpRckOr2u82NqX
LcASg7JZvNrPJtmMyZG2JbsDTY7cq3N7/xuD7LjYEyK7z/8V34C+boPwwJYMZEG3
BgtlEmu5YYziUHQLwHeFL0SmSSi82N8deErMtMlUnLBx19Kr4AtkiTqegVOZaXk0
X5yEXK6I9qROschNt+wtERwGGrYbAaubYAEG1aQkYh30B0rk0kYB8ur9QmLadedj
tAbjrLGXE608mJ6FDRUur6aX5/6cbxetwELTlewfeBP73ABH9P1NMpglQRLXFUBl
ob33v8vUR3nhO+Ek
=6c7H
-----END PGP MESSAGE-----
# but it does not work in open keychain for some reason.
# (could it be because of the \r?)
"
open-keychain/open-keychain,closed,Confirm new user ids on key,[],"Scenario: Existing confirmed key has new unconfirmed user id
"
open-keychain/open-keychain,closed,QR FAB shown even when confirmed,[],
open-keychain/open-keychain,closed,Improve runtime of tests (travis failing),[],"- use ECC where possible
- test base operations with all key algorithms
- allowInsecureKeySizes in SaveKeyringParcel
"
open-keychain/open-keychain,closed,Reworked KeyserverSyncAdapterService,[],"In `KeyserverSyncAdapterService`:
- Ignore null Intents and Intents with null actions to fix https://github.com/open-keychain/open-keychain/issues/1573.
- Introduced `START_REDELIVER_INTENT` to better handle service process being killed.
- Modified staggered Orbot update so that the first key is updated immediately. A large time difference between when Orbot is started and when the key is updated could result in starvation if the user turns Orbot off before even a single key could be updated (besides repeated Orbot starts and a lengthier update).

In `ImportOperation`:
- Corrected case where an early cancellation of multi-threaded import may be interpreted as `RESULT_FAIL_NOTHING`.
"
open-keychain/open-keychain,open,service: check if supplied signing key exists,"[Label(name=""api bug""), Label(name=""google play crash-report"")]","we have a couple crash reports where a nonexistent signing subkey is used by the API. this doesn't happen from our UI, but an app using the API might supply nonexistent signing keys:

```
java.lang.NullPointerException: Attempt to invoke virtual method 'org.spongycastle.openpgp.PGPPublicKey org.spongycastle.openpgp.PGPSecretKey.getPublicKey()' on a null object reference
    at org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey.<init>(CanonicalizedSecretKey.java:73)
    at org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKeyRing.getSecretKey(CanonicalizedSecretKeyRing.java:70)
    at org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation.execute(PgpSignEncryptOperation.java:173)
    at org.sufficientlysecure.keychain.operations.SignEncryptOperation.execute(SignEncryptOperation.java:153)
    at org.sufficientlysecure.keychain.operations.SignEncryptOperation.execute(SignEncryptOperation.java:61)
    at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:143)
    at java.lang.Thread.run(Thread.java:818)
```
"
open-keychain/open-keychain,closed,Pentest-Report OpenKeychain 08.2015,[],"https://cure53.de/pentest-report_openkeychain.pdf
"
open-keychain/open-keychain,closed,NullPointerException in OperationLog from execute,"[Label(name=""google play crash-report"")]","```
java.lang.NullPointerException: Attempt to invoke virtual method 'org.sufficientlysecure.keychain.operations.results.OperationResult$SubLogEntryParcel org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog.getSubResultIfSingle()' on a null object reference
    at org.sufficientlysecure.keychain.operations.results.OperationResult.getLog(OperationResult.java:108)
    at org.sufficientlysecure.keychain.operations.results.OperationResult$OperationLog.add(OperationResult.java:924)
    at org.sufficientlysecure.keychain.operations.CertifyOperation.execute(CertifyOperation.java:234)
    at org.sufficientlysecure.keychain.operations.CertifyOperation.execute(CertifyOperation.java:66)
    at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:143)
```
"
open-keychain/open-keychain,closed,"""Wrong data type, expected text"" when sharing from OI Notepad",[],"Before version 3.6, Open Keychain was working well with text shared from OI Notepad. Now I get the ""wrong data type, expected text"" toast message.
"
open-keychain/open-keychain,closed,NullPointerException in KeySyncAdapterService,"[Label(name=""google play crash-report"")]","```
java.lang.RuntimeException: Unable to start service org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService@21f63140 with null: java.lang.NullPointerException
    at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2759)
    at android.app.ActivityThread.access$2100(ActivityThread.java:138)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1333)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:149)
    at android.app.ActivityThread.main(ActivityThread.java:5061)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:515)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:788)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:604)
    at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
    at org.sufficientlysecure.keychain.service.KeyserverSyncAdapterService.onStartCommand(KeyserverSyncAdapterService.java:80)
    at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2742)
    ... 10 more
```

the intent parameter seems to be null in `onStartCommand`. docs on the parameter:

> intent - The Intent supplied to Context.startService, as given. This may be null if the service is being restarted after its process has gone away, and it had previously returned anything except START_STICKY_COMPATIBILITY.
"
open-keychain/open-keychain,open,"""not attached to window manager"" trying to run orbot silent start","[Label(name=""google play crash-report"")]","```
java.lang.IllegalArgumentException: View=com.android.internal.policy.PhoneWindow$DecorView{b6f0f9a V.E...... R.....ID 0,0-1368,0} not attached to window manager
    at android.view.WindowManagerGlobal.findViewLocked(WindowManagerGlobal.java:424)
    at android.view.WindowManagerGlobal.removeView(WindowManagerGlobal.java:350)
    at android.view.WindowManagerImpl.removeViewImmediate(WindowManagerImpl.java:116)
    at android.app.Dialog.dismissDialog(Dialog.java:362)
    at android.app.Dialog.dismiss(Dialog.java:345)
    at org.sufficientlysecure.keychain.util.orbot.OrbotHelper$SilentStartManager$1$1.run(OrbotHelper.java:428)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
```
"
open-keychain/open-keychain,closed,Check Android 6 permissions,[],"We are now targeting SDK 23, thus we need to handle runtime permissions on our own.
There are some libraries with helper classes/annotations but I am not sure yet if we should use them.
"
open-keychain/open-keychain,closed,Remove org.apache.http dependencies in LinkedTokenResource etc.,"[Label(name=""help wanted"")]","org.apache.http has been deprecated in SDK 23. We currently use a legacy dependency for this support, see https://github.com/open-keychain/open-keychain/commit/67a51cdfe3f6fb7982b27eb2b6d4b1b5d49f69aa
"
open-keychain/open-keychain,closed,Feature Request: Decrypt PGP Message with already decrypted Session Key,[],"I would like to use Openpgp Api with a smartcard in which i hold private keys. The Smartcard will decrypt
the Session Key and the Android device will decrypt the rest of the Message.
"
open-keychain/open-keychain,closed,NetworkOnMainThreadException during import,[],"```
java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=94211, result=-1, data=Intent { dat=content://com.microsoft.skydrive.content.StorageAccessProvider/document/content://com.microsoft.skydrive.content.metadata/property/pub-sec.asc flg=0x1 }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: android.os.NetworkOnMainThreadException
    at android.app.ActivityThread.deliverResults(ActivityThread.java:3680)
    at android.app.ActivityThread.handleSendResult(ActivityThread.java:3723)
    at android.app.ActivityThread.access$1300(ActivityThread.java:156)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1400)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:211)
    at android.app.ActivityThread.main(ActivityThread.java:5373)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1020)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:815)
Caused by: android.os.NetworkOnMainThreadException
    at android.os.Parcel.readException(Parcel.java:1568)
    at android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:185)
    at android.database.DatabaseUtils.readExceptionWithFileNotFoundExceptionFromParcel(DatabaseUtils.java:148)
    at android.content.ContentProviderProxy.openTypedAssetFile(ContentProviderNative.java:691)
    at android.content.ContentResolver.openTypedAssetFileDescriptor(ContentResolver.java:1108)
    at android.content.ContentResolver.openAssetFileDescriptor(ContentResolver.java:948)
    at android.content.ContentResolver.openInputStream(ContentResolver.java:673)
    at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.getInputData(ImportKeysListFragment.java:440)
    at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.onCreateLoader(ImportKeysListFragment.java:308)
    at android.support.v4.app.LoaderManagerImpl.createLoader(LoaderManager.java:490)
    at android.support.v4.app.LoaderManagerImpl.createAndInstallLoader(LoaderManager.java:499)
    at android.support.v4.app.LoaderManagerImpl.restartLoader(LoaderManager.java:646)
    at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.restartLoaders(ImportKeysListFragment.java:293)
    at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.loadNew(ImportKeysListFragment.java:273)
    at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadCallback(ImportKeysActivity.java:353)
    at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment.onActivityResult(ImportKeysFileFragment.java:104)
    at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:165)
    at org.sufficientlysecure.keychain.ui.base.BaseNfcActivity.onActivityResult(BaseNfcActivity.java:385)
    at org.sufficientlysecure.keychain.ui.ImportKeysActivity.onActivityResult(ImportKeysActivity.java:463)
    at android.app.Activity.dispatchActivityResult(Activity.java:6236)
    at android.app.ActivityThread.deliverResults(ActivityThread.java:3676)
    ... 10 more
```

this happens when a non-local uri is opened in the import dialog, e.g. from a cloud storage DocumentProvider. the `getInputData` method is called directly in the `onActivityResult` stack (ui thread), which breaks if the uri resolves to a non-local address.
"
open-keychain/open-keychain,open,Review from Google Play: Share icons,"[Label(name=""enhancement"")]","from Google Play:

> Concerning small inconveniences in app.  1. When I send the file for encryption/decryption from other app,  at the menu of a choice there are two icons the absolutely identical. It is necessary to sign icons for distinction or  to use different icons because one of them for to encryption, another for decryption. 2. The option ""delete file after encryption"" when encryption of file. The original of the file is deleted, but can easily be restored (for example - app Dumpster). It is necessary to delete the file safely, without possibility of its restoration. (rewrite by zero digit of file place or use of other method). Device - Acer iconia tab A1 810 android 4.2.2. Thanks for Your very good app. Correct these small inconveniences, pleeeease. Because this app is better from analogues in PlayMarket.
"
open-keychain/open-keychain,closed,Translation - German - Notifcation Message,[],"Notification displayed:

> 1 Passwort gemerkt
> Berühren um Passwörter zu lehren

Notification as should be:

> 1 Passwort gemerkt
> Berühren um Passwörter zu leeren

""lehren"" means to teach,
""leeren"" means to empty
The function is to empty the stored passphrases.
"
open-keychain/open-keychain,closed,Cannot decrypt messages generated by gpg4usb,[],"Hello,

First let me apologize if this issue is not related to OpenKeychain and it's a gpg4usb problem.

When trying to decrypt emails encryoted via gpg4usb I get the following error:
""OpenPGP Error: Encountered an error reading input data!""
"
open-keychain/open-keychain,closed,key lookup improvements,[],"so far, this contains working key lookup after decryption.

to actually verify the signature, the decrypt operation is re-executed after successful import, this _should_ work in all relevant cases but maybe I'm missing something. it would be possible to store the signature hash, and re-verify without further input using a loader style refresh mechanism here - but that is a lot of work for relatively little gain.

\ edit

looked at bouncycastle, and after wading through stuff like the `JcaPGPContentVerifierBuilderProvider` for a while I found that it is _not_ easy to initialize a onepasssignature without having the public key in the first place. It might be possible to compute the digest entirely independently, but that seems error-prone. I'll leave it for now.
"
open-keychain/open-keychain,closed,Lookup button broken,[],"Lookup key button is broken
"
open-keychain/open-keychain,closed,Security Token: Allow changing of PIN via edit screen,"[Label(name=""security token"")]","Allow changing of PIN via edit screen
"
open-keychain/open-keychain,closed,remove FAQ entry how to setup YubiKey with gpg,[],"This is possible with the upcoming OpenKeychain. Then also close https://github.com/open-keychain/open-keychain/issues/1190
"
open-keychain/open-keychain,closed,Mime type detection in InputDataOperation,[],"InputDataOperation should detect mime type based on file ending for octet stream
"
open-keychain/open-keychain,open,IllegalStateException when deleting secret key: attempt to re-open an already-closed object: SQLiteQuery: SELECT user_packets.oid,[],"Got this when deleting my secret key

```
--------- beginning of crash10-15 16:55:26.643  10885    10885         AndroidRuntime  E  FATAL EXCEPTION: main
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 10885
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  java.lang.IllegalStateException: attempt to re-open an already-closed object: SQLiteQuery: SELECT user_packets.oid AS _id, user_packets.type, user_packets.user_id, user_packets.attribute_data, user_packets.rank, MIN(verified) AS verified, user_packets.is_primary, user_packets.is_revoked FROM user_packets LEFT JOIN certs ON (user_packets.master_key_id = certs.master_key_id AND user_packets.rank = certs.rank AND certs.verified > 0) WHERE (user_packets.type IS NULL AND user_packets.master_key_id = '8181922323901784706') AND (is_revoked = 0) GROUP BY user_packets.master_key_id, user_packets.rank ORDER BY user_packets.master_key_id ASC,user_packets.rank ASC
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.database.sqlite.SQLiteClosable.acquireReference(SQLiteClosable.java:55)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.database.sqlite.SQLiteQuery.fillWindow(SQLiteQuery.java:58)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.database.sqlite.SQLiteCursor.fillWindow(SQLiteCursor.java:151)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.database.sqlite.SQLiteCursor.onMove(SQLiteCursor.java:123)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.database.AbstractCursor.moveToPosition(AbstractCursor.java:236)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.database.CursorWrapper.moveToPosition(CursorWrapper.java:197)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.v4.widget.CursorAdapter.getView(CursorAdapter.java:247)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.AbsListView.obtainView(AbsListView.java:2346)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.ListView.measureHeightOfChildren(ListView.java:1280)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.ListView.onMeasure(ListView.java:1188)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.widget.FixedListView.onMeasure(FixedListView.java:50)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1465)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.measureVertical(LinearLayout.java:748)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.onMeasure(LinearLayout.java:630)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.v7.widget.CardView.onMeasure(CardView.java:198)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1465)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.measureVertical(LinearLayout.java:748)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.onMeasure(LinearLayout.java:630)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1465)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.measureVertical(LinearLayout.java:748)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.LinearLayout.onMeasure(LinearLayout.java:630)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.v4.widget.FlingNestedScrollView.measureChildWithMargins(FlingNestedScrollView.java:953)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:194)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.v4.widget.FlingNestedScrollView.onMeasure(FlingNestedScrollView.java:304)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.View.measure(View.java:18788)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5951)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.design.widget.CoordinatorLayout.onMeasureChild(CoordinatorLayout.java:582)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.design.widget.AppBarLayout$ScrollingViewBehavior.onMeasureChild(AppBarLayout.java:1038)
10-15 16:55:26.643  10885    10885         AndroidRuntime  E  at android.support.design.widget.CoordinatorLayout.onMeasure(C
10-15 16:55:26.657   783      973         ActivityManager  W  Force finishing activity org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.ViewKeyActivity

```
"
open-keychain/open-keychain,open,OpenPGPKeyPreference for public keys,"[Label(name=""api todo"")]","It would be great if you could use OpenPGPKeyPreference to select public keys in the preferences, too.
It seems like you currently have to use ACTION_GET_KEY_IDS, which is cumbersome to use in preferences.
"
open-keychain/open-keychain,closed,SpongyCastle build failure,[],"Hello,

i'm trying to compile Openkeychain from source with libs downloaded from source e.g. spongycastle:
https://github.com/rtyley/spongycastle

So. Clone rtyleys git repo, copy spongycastle to open-keychain/extern/spongycastle, compile.

When i'm trying to compile with ./gradlew assembleDebug i have this error:

```
...
...
Creating configuration testReleasePublish.
Creating configuration testReleaseProvided.
Creating configuration testReleaseWearApp.
Evaluating project ':extern:spongycastle:core' using build file '/home/administrator/apps/open-keychain_clean/extern/spongycastle/core/build.gradle'.
Evaluating project ':extern:spongycastle:pg' using build file '/home/administrator/apps/open-keychain_clean/extern/spongycastle/pg/build.gradle'.

FAILURE: Build failed with an exception.

* Where:
Build file '/home/administrator/apps/open-keychain_clean/extern/spongycastle/pg/build.gradle' line: 2

* What went wrong:
A problem occurred evaluating project ':extern:spongycastle:pg'.
> Project with path ':core' could not be found in project ':extern:spongycastle:pg'.

* Try:
Run with --stacktrace option to get the stack trace. Run with --debug option to get more log output.

BUILD FAILED

Total time: 8.137 secs
Stopped 0 compiler daemon(s).

```

What's the difference between spongycastles? Yours and rtyleys?

Thank you.
"
open-keychain/open-keychain,closed,App crash when backup,[],"aspp crashes when tries to backup keyring with a stripped masterkey
"
open-keychain/open-keychain,closed,option to selectively import/export subkeyes,[],"Feature request for selective import and export of subkeyes.
For example encryption key alone can be exported and then imported to another machine for encryption,without saving master key in that machine.

Also option to list included keys when importing so only needed keys can be imported, keeping unnecessary keys away/ofline from the phone.
"
open-keychain/open-keychain,closed,warn when stripping master key,"[Label(name=""help wanted"")]","Stripping master key renders tge key chain useless, cant revoke the keys or even modify anything for that keypair on openkeychain. So users should be warned when stripping master key. Warning may give option to revoke the keypair before the action, like the app does when deleting keypairs. creating another key if it make any sense :p
"
open-keychain/open-keychain,closed,hidden recipient v2,[],"Here is another variant of the hidden recipient patch. Some conditions have been added to avoid unneccessary checking or null values. It was tested with two email accounts having different keys and different passphrases.
"
open-keychain/open-keychain,open,DNSSec support,[],"minidns now receives DNSSEC support: https://github.com/rtreffer/minidns/pull/23

We can then start a OPENPGPKEY resolving functionality based on that...
"
open-keychain/open-keychain,closed,Open-Keychain is not detected as a cryptography provider by Kaiten Mail,[],"When going to the cryptography section of Kaiten Mail (supposedly the same as K-90), only APG is seen as a cryptography provider. I'm not sure if this is an integration problem with OKC or Kaiten so I'm reporting the issue to both.
"
open-keychain/open-keychain,closed,USB CCID Support,[],"Hello, I'm wondering if it'd be possible to use a card-reader USB CCID interface with open-keychain. The reason I ask is that I currently have a Yubikey NEO, but no NFC on my phone, so the only way to use the keys stored there from my phone would be through a USB OTG cable.

Any idea what would be necessary to support such a device ? It looks like it is possible to communicate with USB devices with the [USB Host Android API](http://developer.android.com/guide/topics/connectivity/usb/host.html). Would you be interested in supporting it ?
"
open-keychain/open-keychain,closed,signing key not found when using k-9 mail,[],"I have generated a set a keys for myself, and when I tell k-9 mail to use open-keychain to sign and encrypt I get ""OpenPGP Error: signing subkey not found!""

Can someone help me with this? I have attached some screenshots. If you need more information let me know.

![screenshot_2015-09-29-16-04-07](https://cloud.githubusercontent.com/assets/1260694/10176702/4553c22e-66c4-11e5-8558-8df67e9bc110.png)
![screenshot_2015-09-29-16-04-15](https://cloud.githubusercontent.com/assets/1260694/10176703/4558956a-66c4-11e5-9880-3e349c0e55b7.png)
"
open-keychain/open-keychain,closed,keybase proofs not working,[],"Could be related to my last changes. Assigned to me
"
open-keychain/open-keychain,open,Floating Action Mode and ACTION_PROCESS_TEXT ,[],"We should register on PROCESS_TEXT for Android 6: https://commonsware.com/blog/2015/09/15/book-excerpt-floating-action-mode.html
"
open-keychain/open-keychain,closed,Encrypted export,[],"in recent versions, we have taken some steps toward making ""key export"" more similar to ""backup"" features from other apps. the next step in this direction is to encrypt backups using a ""backup code"". this is a randomly generated (not user-chosen!) string with which the data will be symmetrically encrypted.

so far, this pull request introduces a new activity which displays a backup code, and asks the user to write it down then enter it to proceed, and finally shows ""save"" and ""share"" buttons when the code was input correctly.
"
open-keychain/open-keychain,closed,Can't import Key from GPG Keychain,[],"Hi, I just downloaded the latest version of GPG Toolkit and created two keys for my email accounts.
When I export these keys to .asc files, transfer them to my phone via usb and try to import them to open keychain, I get a message that there are no keys there.
I can select the file but nothing happens when I hit import..

I read about issues with older gpg versions but I think I have the latest version..
"
open-keychain/open-keychain,closed,Umlauts in filename prevents decrypt from detecting file type,[],"Reproduce: 
1. Encrypt Schürmann.pdf
2. Decrypt
3. Not detected as pdf
"
open-keychain/open-keychain,closed,Issue mouseover hints,[],"Changed class and string names.
"
open-keychain/open-keychain,closed,Issue better nfc handling,[],"Hi,
I've to tried handle NFC being supported by making my own Exception Class called NFCNotSupportedException and alerting the user by raising an alert Dialog. Hope it helps.
I've also changed the return type of invokebeam() to suit my requirements. Pls inform me if I shouldn't be doing such things. I'll avoid in my future contributions
"
open-keychain/open-keychain,closed,switch from passwords to app lock mechanism,"[Label(name=""discussion"")]","We had a couple of feature requests in the past for an ""app lock"" mechanism like many apps have. The idea is to encrypt all application data and require the user to enter a password to access the app at all, with a caching-mechanism just like we have for key passwords now.

We rejected this feature, arguing that:
- the key list isn't really secret, similar to the contacts app the user is better off using FDE if he wants to protect it
- the secret keys are password-encrypted already
- after import from gpg or other tools, the user can use their regular password, which seems like the natural thing to do

At this point however, other arguments have come up which favor app lock over key passwords. The implication of an app lock mechanism is that there is one password to access the app, and after that individual keys are not encrypted again.
- protecting the list of contact keys is actually a very valid use case, especially in repressive countries
- using s2k encrypted keys was adopted from established workflows in pgp, and I feel they stand more on tradition than merit. different passwords for different keys are a feature of questionable use
- moving the password input mechanism from cryptographic operations up to database unlock should significantly reduce code complexity in the crypto routines, which is always a good thing
- hidden recipients are very difficult to implement if we potentially have to ask the user for all key passwords to find the right key to use (#626)
- the s2k mechanism is slow by design, and this is actually becoming a problem for keys which were encrypted on a fast desktop machine (#1530). there are ways to remedy this, but they involve re-encrypting the key so would require password on import
"
open-keychain/open-keychain,closed,Mousehints,[],"I've implemented them for just four views. Kindly tell me if there are more so that I can implement the same. 
Also, I am a beginner to Open Source World. I hope you guys will help me in my further contributions. Thank you
"
open-keychain/open-keychain,open,AOSP mail clipboard decrypt problem,[],"From ml:

> The issue is that with OpenKeychain, it can't decrypt anything from the stock email client, whether I copy to the clipboard, or save to a file (see attached error message). I can easily do this in APG with no error message: I simply copy the encrypted text to the clipboard, open APG and navigate to Decrypt, and am immediately prompted for my passphrase. In OpenKeychain, using the same procedure, I receive the error message. However, OpenKeychain works fine when I try to decrypt from an email from a different email app (eg Gmail).  I have tested it using a couple of different email addresses and different keys, with the same result. I can't decrypt from the stock email app, but I can decrypt from other email apps. 

Could be related to HTML encoding problems we don't fix properly
"
open-keychain/open-keychain,closed,Fix build instruction,[],"Otherwise github related errors occur during the build
"
open-keychain/open-keychain,closed,"RSA key no longer working in open-keychain, unable to send gpg mail",[],"Expectation:
K9 signs & encrypts email like it used to

Reaility:
K9 throws the following error:
OpenPGP Error: Attempt to invoke virtual method 'org.spongycastle.openpgp.PGPPublicKey org.spongycastle.openpgp.PGPSecretKey.getPublicKey()' on a null object reference

Examining the subkeys of my key in open-keychain appears to indicate that some expected properties are missing from the imported key.

![screenshot_2015-09-17-18-01-45](https://cloud.githubusercontent.com/assets/3360118/9949062/7cfc3e34-5d66-11e5-9797-fc3a60fc5deb.png)
"
open-keychain/open-keychain,open,Disambiguate user ids with same email but different comment,"[Label(name=""help wanted"")]","Please add in the list of available keys UID comments next to UID name.
I have 11 keys here with the same UID name with different comment (and expiration dates), and at first sight it is not clear which key do I choose...

Would help display in the form:

```
Name (Comment)
Email
```
"
open-keychain/open-keychain,closed,Slow on S6 5.1.1,[],"Samsung S6, latest 5.1.1 firmware. When I import the key is takes a while at re-importing subkey (?) 90/100. Key seems to be imported OK though. WHen I try to sign to clipboard though I have to wait quite a bit at extracting signature key (10 seconds). Then the app seems unresponsive. Eventually the password prompt appears, then again extracting signature key... 0/100 for 10 seconds.. then success but the overall process takes 30 total to sign one word string... Key is RSA 4096/4096.
"
open-keychain/open-keychain,closed,Hidden recipient,[],"So here's a proposed implementation for hidden recipient. If the key ID cannot be obtained then each subkey for each allowed key is tried.

Admittedly for the user this could potentially be laborious if they have multiple keys, but for common use cases in which there is only a single keypair it should be reasonably convenient.
"
open-keychain/open-keychain,closed,Support Ed25519/EdDSA,[],"Unfortunately, the EdDSA GSoC project didn't make it, but there is some code left to pick up development for others:

Old GSoC code:
- https://github.com/open-keychain/spongycastle/tree/eddsa
- https://github.com/open-keychain/open-keychain/tree/eddsa

Issues:
- https://github.com/open-keychain/open-keychain/issues/1283
- https://github.com/open-keychain/open-keychain/issues/1279
"
open-keychain/open-keychain,closed,How to delete key to which I have forgotten password ,[],"Pardon my ignorance.
I am only an end userqof the app, not a developer.

I have forgotten the password to this key:
a81bfa146a90c62d0a740280677ec7a617ff39ed
And now I cannot delete & upload.

Any suggestions?

New my already generated,  but would like o remove this from my linked contact card.

Thanks in advance, everyone.
"
open-keychain/open-keychain,closed,"Importing key: ""import operation failed""",[],"I have tried importing keys, and everything works as expected. This key however, doesn't. It's the pubkey corresponding to my private key. ""Update my keys"" also doesn't work.

Log:

[START]Importing key
    [DEBUG]Using keyserver hkps://hkps.pool.sks-keyservers.net
        [INFO]Retrieving from keyserver: 0xd2e584c37c477933
    [ERROR]Import operation failed!

Please let me know if you need any other information.
"
open-keychain/open-keychain,closed,Slow encryption and decryption times in app using OpenKeychain,[],"This is a repost from https://github.com/zeapo/Android-Password-Store/issues/119#issuecomment-139668816

Basically the problem is that the operations ""finding the key and showing the auth dialog"" and ""decryption"" take both an unbearable amount of time. Somehow I _nearly_ resolved this issue by reimporting all my keys, but for other users it doesn't seem that easy.

My experience right now (after reimporting):
- When opening the show-password view of Password Store, it first shows a loading animation for 1-2 secs. During that time the process that takes the most CPU is `org.sufficientlysecure.keychain:remote_api`.
- ""Authentication required shows within the current Password Store view, under the loading circle, with 1-2 seconds delay. The most-consuming process is `org.sufficientlysecure.keychain`.
- After 3-4 seconds, the password prompt from OpenKeychain pops up and the CPU activity goes back to normal/idle.
- **10 seconds** are taken for unlocking the key and decrypting. A lot of CPU activity is spent by the `org.sufficientlysecure.keychain:remote_api`-call (as told by @dirtYICE in the linked issue), but also some activity in `org.sufficientlysecure.keychain` itself.

cc @wongma7
"
open-keychain/open-keychain,closed,Problem with importing a private key,[],"Hi, I have a problem with importing a private key.

[#1451]

```
 mf  ~  uname -r
4.1.5-1-ARCH
 mf  ~  gpg --version
gpg (GnuPG) 2.1.7
libgcrypt 1.6.4
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ~/.gnupg
Obsługiwane algorytmy:
Asymetryczne: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
Symetryczne: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256,
             TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256
Skrótów: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Kompresji: Nieskompresowany, ZIP, ZLIB, BZIP2
 mf  ~  gpg -a --export-secret-keys 88A50062 > impossible
gpg: key 88A50062/D35C60AE: error receiving key from agent: Nie można przydzielić pamięci - skipped
gpg: key 88A50062/65A62995: error receiving key from agent: Nie można przydzielić pamięci - skipped
 mf  ~  
```

Also tried Keys–>Backup in GPA.

For both files, I get `No valid keys found in file/clipboard!`.
"
open-keychain/open-keychain,open,Usag of Date in CryptoInputParcel,[],"I don't like this change: https://github.com/open-keychain/open-keychain/commit/47ef8cbe558a442fd7206208d941c0dcaa907f6a
Why using new Date() via the default constructor? It is only used for signing/certifying operations. At the time we introduced CryptoInputParcel it made sense, but now CryptoInputParcel is used in many scenarios where the date is not used.
"
open-keychain/open-keychain,closed,Install from Google Play: Error 504,[],"When I try to install this app I get unknown error 504.

My connection is not slow or poor. Of 164 apps, this is the only app I cannot install and the error occurs at installation, not at download. I cannot stress this enough, it is not a connection problem.
This device is completely wiped, it didn't make the error go away.

Ulefone Be Touch 2
Android 5.0
Kernel 3.10.61
Build: 20150803_2210

I've installed the app on an other device without a problem. So it's not my aura :D
"
open-keychain/open-keychain,closed,"YubiKey: On ""PIN too short"", clear passphrase cache",[],
open-keychain/open-keychain,closed,YubiKey NEO decrypt taking minutes,[],"Hi,
Sometimes its working fast. Sometimes it takes minutes to hold yubikey. Preparing steams takes ages. What i am doing wrong
"
open-keychain/open-keychain,closed,decrypt file list: add share,[],"Add missing share menu item
"
open-keychain/open-keychain,closed,openkeychain crashed,[],"openkeychain 3.5.1（35100）
android 4.0.4

i generate rsa key by openkeychain , but when i want to export to file ,the openkeychain crashed , is there anybody can help me ?
"
open-keychain/open-keychain,closed,Fixes #1520,[],"Move debug launcher icons to mipmap
"
open-keychain/open-keychain,closed,YubiKey: support key URL,[],"The YubiKeys can store a URL with the public key.
It would be nice if OpenKeychain could use that instead or in addition to relying on key servers, particularly for cases where the public key does not need to be public otherwise.
"
open-keychain/open-keychain,closed,move debug launcher to mipmap,"[Label(name=""help wanted"")]","The debug launcher icon is still in drawables
"
open-keychain/open-keychain,closed,Moving existing key to YubiKey NEO,[],"Hello,

Sorry if its right place to ask. I have sigilance card. How to move key to it. V3.5.1 says feature will be available in upcoming versions. Sigilance doc says to use openkeychain for moving. Is there any older versions which can move keys to smartcards?
"
open-keychain/open-keychain,closed,Fixes open-keychain/open-keychain#1515,[],"Move launcher icons to mipmap
"
open-keychain/open-keychain,closed,"On initial setup, Unkown key",[],"Hello there,

Wanted to start signing & encrypting my email via K-9 mail with OpenKeychain. However when I open the app (3.5.1) using the setup, select 'use Yubikey NEO,' then I place it on the back.

I get the correct serial number, a blank key holder, and ""Unknown key, hit next to import"" and ""No keys found!""

However when I plug it into my laptop and check the output of 'gpg --card-status' I see all the correct information. Why is it not detecting any keys?
"
open-keychain/open-keychain,closed,import text from qr code,[],"Would be nice if small encrypted or signed messages could be stored on paper.
"
open-keychain/open-keychain,closed,Move launcher icons to mipmap,"[Label(name=""help wanted"")]","http://developer.android.com/tools/projects/index.html#mipmap
"
open-keychain/open-keychain,closed,Linked Identity comments from transifex,[],"String: msg_lv_error_twitter_handle: This string as an odd ring to it. What do you actually mean? Dito next string.

String: linked_create_https_1_3: Should rather read &quot;Please enter the URL of a site where you are able to place a text file for proof.&quot
"
open-keychain/open-keychain,closed,linker ID: github,[],"""Github"" should be ""GitHub"" in all strings
"
open-keychain/open-keychain,closed,Github Linked Identity: Post gist not working,[],"Link ""Post Gist"" doesn't insert text, check Github API
"
open-keychain/open-keychain,closed,DNS linked identity not ready,[],"Adding a DNS linked identity is not ready.
Strings linked_create_dns_2_2 and linked_create_dns_2_3 contain ""bla"".

Disable DNS support for now?
"
open-keychain/open-keychain,closed,Typo in linked_create_github_1_3,[],"Must be Github
"
open-keychain/open-keychain,closed,Adding linked identity crashes OK,[],"```
16096             Keychain D  D  Everything okay!
 16096             Keychain D  D  Caching entered passphrase
 16096             Keychain D  D  PassphraseCacheService.addCachedPassphrase() for 8181922323901784706
 12252             Keychain D  D  PassphraseCacheService.onStartCommand()
 16096         OpenGLRenderer  D  endAllStagingAnimators on 0x9ce7b280 (RippleDrawable) with handle 0x9e0492b0
 12252             Keychain D  D  PassphraseCacheService: Received ACTION_PASSPHRASE_CACHE_ADD intent in onStartCommand() with masterkeyId: 8181922323901784706, subKeyId: 8181922323901784706, ttl: 28800, usrId: Dominik Schürmann <dominik@dominikschuermann.de>
  4656   WaitForWifiAsyncTask  D  waiting for an IP address...
 16096             Keychain D  D  received activity result in OperationHelper
 16096             Keychain D  D  handling activity result in OperationHelper
 16096             Keychain D  V  log: LogEntryParcel{mLevel=START, mType=MSG_ED, mParameters=null, mIndent=0}
 16096             Keychain D  V  log: LogEntryParcel{mLevel=DEBUG, mType=MSG_ED_FETCHING, mParameters=[0x718c070100012282], mIndent=1}
 16096             Keychain D  V  query(uri=content://org.sufficientlysecure.keychain.debug.provider/key_rings/8181922323901784706/unified, proj=[has_any_secret, verified, privkey_data])
 16096             Keychain D  V  log: LogEntryParcel{mLevel=START, mType=MSG_MF, mParameters=[0x718c070100012282], mIndent=0}
 16096             Keychain D  D  Send message by setProgress with progress=10, max=100
 16096             Keychain D  D  Send message by setProgress with progress=10, max=100
 16096             Keychain D  D  Send message by setProgress with progress=15, max=100
 16096             Keychain D  V  log: LogEntryParcel{mLevel=DEBUG, mType=MSG_MF_UNLOCK, mParameters=null, mIndent=1}
 16096             Keychain D  D  Send message by setProgress with progress=17, max=100
 16096             Keychain D  V  log: LogEntryParcel{mLevel=INFO, mType=MSG_MF_UAT_ADD_UNKNOWN, mParameters=null, mIndent=1}
 16096         AndroidRuntime  E  FATAL EXCEPTION: Thread-11716
 16096         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 16096
 16096         AndroidRuntime  E  java.lang.NullPointerException: Attempt to invoke virtual method 'long java.util.Date.getTime()' on a null object reference
 16096         AndroidRuntime  E  at org.spongycastle.bcpg.sig.SignatureCreationTime.timeToBytes(SignatureCreationTime.java:18)
 16096         AndroidRuntime  E  at org.spongycastle.bcpg.sig.SignatureCreationTime.<init>(SignatureCreationTime.java:39)
 16096         AndroidRuntime  E  at org.spongycastle.openpgp.PGPSignatureSubpacketGenerator.setSignatureCreationTime(PGPSignatureSubpacketGenerator.java:100)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.generateHashedSelfSigSubpackets(PgpKeyOperation.java:1483)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.generateUserAttributeSignature(PgpKeyOperation.java:1516)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.internal(PgpKeyOperation.java:614)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.modifySecretKeyRing(PgpKeyOperation.java:483)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.operations.EditKeyOperation.execute(EditKeyOperation.java:100)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.operations.EditKeyOperation.execute(EditKeyOperation.java:59)
 16096         AndroidRuntime  E  at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:145)
 16096         AndroidRuntime  E  at java.lang.Thread.run(Thread.java:818)
```
"
open-keychain/open-keychain,open,TODOs for CollapsingToolbar,[],"- elevation missing
- It also scrolls even when content region is big enough (but can only be scrolled when touched on the layout, not inside the cards)
- increase expandedTitleMarginEnd but only for pub keys (old code is commented)
"
open-keychain/open-keychain,closed,Non-clearsigned signatures generated by GPG are not recognized as valid,"[Label(name=""help wanted"")]","Generating a signature of the text `Hello world` with GPG by running `echo Hello world | gpg --sign --armor -u ""DB85C154""` produces the following signature:

```
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

owEBRAG7/pANAwAIAWNWMDfbhcFUAcsUYgBV30yESGVsbG8gd29ybGQgDQqJARwE
AAEIAAYFAlXfTIQACgkQY1YwN9uFwVRonwf/bv6t2EeepoDC8wAsEVZAoRApqkx7
0QIkYRc0MdIytbVU3KRhSPeF/V/z9Sn0vx/AOFMug9vMAfGw+klQuK9YS4Bj/y8o
zoToQ9BA8HP1U9lMWhAp9U8emlaMyCmmFJJHXLIZZtgOY7uxS6c/nlZTn2oBkucO
shZYkwVWmuYgRm28eu1psFx4fS92sXWzn1xdP42EMR2czZSbCQUxN5yDgzMdLn2U
XP4VeItInv21QXvrV9sMNOFurFVO8Yxb68KqRaORZY80+0oxEIZezBvgw0tBMRtp
XBpPrO70hIlP+tqLXSuwGVNxNWxBinREdYfoFRqnBXvLSiXUy0ameeei6g==
=3nXP
-----END PGP MESSAGE-----
```

signed by [this](https://pgp.mit.edu/pks/lookup?op=vindex&search=0x63563037DB85C154) key. Verifying by running `gpg --verify` works flawlessly:

```
gpg: Signature made 08/27/15 13:47:01 Eastern Daylight Time using RSA key ID DB85C154
gpg: Good signature from ""Ryan Petschek (YubiKey) <petschekr@gmail.com>"" [ultimate]
```

However, when I try to decrypt/verify this signature, OpenKeychain fails with the message `Encountered an error reading input data!` and nothing else in the log. OpenKeychain does seem capable of verifying clearsigned messages generated by `echo Hello world | gpg --clearsign --armor -u ""DB85C154""` which produces:

```
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Hello world
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQEcBAEBCAAGBQJV30/zAAoJEGNWMDfbhcFUmfwIAICav/5w2A1pelWGBorOURq8
Jcg3JA08f2wUWLg/TZfBLF8HIY1xqfmk4hmzPzEuV6ncG/LKlpeYbzOUpJ8Fl5pT
PcHYlBH6L1wOj6qKqwjP2i5ulViXKUhpalTreAFA0V/M/IHdBk/ZUVT3AhiT49Bv
eQLLEi3ljMEmGK8k0WHNzTv+iSTTiKkUh3zobjtyXi9+NOCaWm6dMBxoo5vJ20Nt
19+g3pfqAVkc2e0bxBC30qkTnmFIZjdRsfNzIfeaNsI+d6CBL8kMh3P9/RWVC83U
v01X9jGSVKlGcEg6d29G08UH//K79XFhIbaZZw2wTPcKdgx21tLvpsyuYNvCwFg=
=gGEe
-----END PGP SIGNATURE-----
```

Is there a specific reason that support for the first type of signature doesn't appear to be supported by OpenKeychain?
"
open-keychain/open-keychain,closed,Merge Linked Identities,[],"Merge Linked Identities branch into master and show UI when experimental feature setting is enabled (https://github.com/open-keychain/open-keychain/commit/ec7a3a704701537eda24afe16081b18b34497928)

Assigned to @Valodim 
"
open-keychain/open-keychain,closed,service side support for https://github.com/open-keychain/openpgp-api/pull/3,[],"service implementation required for https://github.com/open-keychain/openpgp-api/pull/3
"
open-keychain/open-keychain,closed,"When using the OpenPGP API library, data _returned_ from the OpenKeychain app is through the ParcelFileDescriptor stream is likely to get truncated!",[],"This is because the TransferThread doesn't necessarily read all available data back from the OpenKeychain service, because it is stopped immediately after the ""execute"" call has returned (it's stopped by  input.close();)

The obvious solution of simply waiting for (joining) the TransferThread  unfortunately does not work, because the TransferThread can not detect remote stream close/end  due to the way the pipe FileDescriptors are set up.

This is because the  FileDescriptors are ""dup""ed when going through parcels, the input ParcelFileDescriptor never realises that the FileDescriptor at the service side has been closed. It works though if the return pipe gets set up on the service side.

Note: The testcase OpenPgpServiceTest doesn't really test IPC as it runs in the same process! I've therefore created a standalone test app

For details [see this pull request](https://github.com/open-keychain/openpgp-api/pull/3)
and  [this pull request](https://github.com/open-keychain/open-keychain/pull/1505)

To reproduce build and run [this app](https://github.com/mgeier63/demo-openpgp-api-bug)
"
open-keychain/open-keychain,closed,OK gets unresponsive when opening large decrypted text file,[],"If you decrypt a large text file and then opens it with OKs internal viewer, OK slows extremly down and eventually does not respond.
"
open-keychain/open-keychain,closed,gibfrdkiubijurkfivcfchjdjvcl,[],
open-keychain/open-keychain,closed,"Fixed crash during ""update all""",[],"Fixes https://github.com/open-keychain/open-keychain/issues/1480 and provides a cleaner solution to https://github.com/open-keychain/open-keychain/issues/1221. 

Issue was due to `mProviderHelper.clearLog()` being called in parallel with `mProviderHelper.savePublicKeyring()` during multi-threaded key import. No wonder it was so hard to reproduce.
"
open-keychain/open-keychain,closed,K-@ Mail,[],"got this by mail:

> It is opening the key Association page each time I need to send an email, not just the password pop up after associating the key to the account.
> 
> Problem is happening even with most recent update to K-@Mail Pro https://play.google.com/store/apps/details?id=com.onegravity.k10.pro2
"
open-keychain/open-keychain,closed,Encryption Algorithm,[],"Add an option for change encryption algorithm
(For example camelia algorithm)
"
open-keychain/open-keychain,open,Is MTP working with decrypted files?,"[Label(name=""help wanted"")]","using MTP, newly created files aren't indexed and consequently won't show up until the storage is remounted (and scanned) or the phnone is rebooted.

workaround here: http://android.stackexchange.com/questions/46315/not-all-files-are-visible-over-mtp
"
open-keychain/open-keychain,closed,Transifex: for better translation quality please fix / review all issues there,[],"@dschuermann I saw you recently were working on the translations of your project and started fixing / reviewing some of the open issues in Transifex (see https://www.transifex.com/dominikschuermann/open-keychain/translate/#issues). IMHO you should start fixing / reviewing all of them so we can improve the overal quality of the translations.

Also I'd love to apply as a reviewer or perhaps even coordinator for the german language of the project.
"
open-keychain/open-keychain,closed,Experimental features setting,[],"Create new setting for experimental features on/off
"
open-keychain/open-keychain,closed,Fix pulling Serbian translation from Transifex,[],"[History review of translation file for Serbian language](https://github.com/open-keychain/open-keychain/commits/master/OpenKeychain/src/main/res/values-sr/strings.xml) shows that Serbian translations aren't updated since February 28th. This should fix things.
##### Changes
- added `sr: sr` to the `lang_map` array
- removed `sr_CS: sr-rCS` from `lang_map` array (it's deprecated long ago)
"
open-keychain/open-keychain,open,Long key id collision shows wrong import message,[],"Steps I did:
1. send the two cooperpair keys to my email address (https://github.com/open-keychain/open-keychain/tree/master/OpenKeychain/src/test/resources/test-keys/cooperpair)
2. Open email on Android
3. Import first key -> success, then close screen
4. Import second key -> success (it shows that it merged it with the existing one).
5. repeat 3,4 as often as you like

If I instead go to the key list after 3, and then execute 4, the proper error is shown (fingerprint missmatch).
Looks like this has something to do with database consistency...
"
open-keychain/open-keychain,closed,Unhandled exception when scanning NFC Yubikey during seemingly any crypto operation,[],"I submitted a couple of crash reports about 10 minutes ago via Google Play, it seems to happen every time I scan the Yubikey when requested by Open Keychain. Seems like something is getting missed when firing off an async operation. Device is a Nexus 6 running latest stock firmware.
"
open-keychain/open-keychain,open,First time wizard with sync options,[],"After merging https://github.com/open-keychain/open-keychain/pull/1461 I would like to propose something like the following screen to be added to our first time wizard:

---
- [x] Link keys to contacts
    (short description)
- [x] Automatically update keys
    (short description)

You can also change these settings later.

---

Basically adding the two new preferences into the first time wizard...

I am open for feedback! @adithyaphilip @Valodim and others
"
open-keychain/open-keychain,closed,Request: make used langauage selectable,[],"Reasons:
1. Makes ist easier to see context when translating via Transifex.
2. Ensures I don't have to see unprofessional parts of german translation that sneaked in, because I took a translation break ^^.
"
open-keychain/open-keychain,closed,Missing check if YubiKey is the right one,[],"NfcOperationActivity should check if the yubikey used for a operation is really the right one using RequiredInputParcel's values. If it's the wrong one, we should show an error inside the dialog.
"
open-keychain/open-keychain,closed,Password Store: class not found exception for CryptoInputParcel,[],"Needs investigation. Related to OpenPgpDecryptionResult?

From mailinglist:

```
Looks like the latest update broke Password Store ( using yubikey neo ). Is
that to be expected? Does the developer of Password Store need to update?
I'm getting a class not found exception for CryproInputParcel when trying
to decrypt using the neo. Thanks.
```
"
open-keychain/open-keychain,closed,ClassCastException: ImportKeyResult cannot be cast to EditKeyResult,[],"From https://github.com/jensstein/oandbackup/issues/101#issuecomment-128936942 :

also, now after clearing openkeychain's data when i try to import my public key as prompted during a backup, openkeychain crashes with this exception:

```
E/AndroidRuntime(23874): FATAL EXCEPTION: main
E/AndroidRuntime(23874): Process: org.sufficientlysecure.keychain, PID: 23874
E/AndroidRuntime(23874): java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=100484, result=-1, data=Intent { (has extras) }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.remote.ui.RemoteServiceActivity}: java.lang.ClassCastException: org.sufficientlysecure.keychain.operations.results.ImportKeyResult cannot be cast to org.sufficientlysecure.keychain.operations.results.EditKeyResult
E/AndroidRuntime(23874):    at android.app.ActivityThread.deliverResults(ActivityThread.java:3351)
E/AndroidRuntime(23874):    at android.app.ActivityThread.handleSendResult(ActivityThread.java:3394)
E/AndroidRuntime(23874):    at android.app.ActivityThread.access$1300(ActivityThread.java:135)
E/AndroidRuntime(23874):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1244)
E/AndroidRuntime(23874):    at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(23874):    at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(23874):    at android.app.ActivityThread.main(ActivityThread.java:5001)
E/AndroidRuntime(23874):    at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(23874):    at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(23874):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
E/AndroidRuntime(23874):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
E/AndroidRuntime(23874):    at dalvik.system.NativeStart.main(Native Method)
E/AndroidRuntime(23874): Caused by: java.lang.ClassCastException: org.sufficientlysecure.keychain.operations.results.ImportKeyResult cannot be cast to org.sufficientlysecure.keychain.operations.results.EditKeyResult
E/AndroidRuntime(23874):    at org.sufficientlysecure.keychain.remote.ui.AccountSettingsFragment.onActivityResult(AccountSettingsFragment.java:109)
E/AndroidRuntime(23874):    at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:165)
E/AndroidRuntime(23874):    at android.app.Activity.dispatchActivityResult(Activity.java:5475)
E/AndroidRuntime(23874):    at android.app.ActivityThread.deliverResults(ActivityThread.java:3347)
E/AndroidRuntime(23874):    ... 11 more
W/ActivityManager(  515):   Force finishing activity org.sufficientlysecure.keychain/.remote.ui.RemoteServiceActivity
```
"
open-keychain/open-keychain,closed,WIP: simplified internal mime parsing,[],"Work in progress

not finished...

The idea is to get the content in GMail with an app using an accessibility service, e.g. screenreader and then send this content to OK for MIME parsing.
"
open-keychain/open-keychain,closed,WIP: hidden recipients,"[Label(name=""needs work"")]","Work in progress

idea:
- If 0L try with all secret keys
- Do decrypt operation with key 0, if not successful, restart operation
- Then try with key 1, and so on.

problems:
- The current index is not properly persisted between restarts
"
open-keychain/open-keychain,closed,"revoke key as a whole, not every part of it individually",[],"I just noticed that a revocation operation revokes all user ids and subkeys.

What really should be done is revocation of only the primary key. Unlike subkey and user id revocations, this operation cannot be undone, and it revokes use of the key as a whole, which is precisely what we want.
"
open-keychain/open-keychain,closed,"""Transceiver failed"" error with Note 3 using NFC Yubikey",[],"Hello

I have a Note 3 LTE (SM-N900W8) running Android 4.3 stock ROM and I have a YubiKey Neo setup with PGP that works over USB with my computer.  I imported my public key into Openkeychain, works fine for encrypting things to other public keys and when I have the Openkeychain app open I can bump my Yubikey for the summery (public private key linked screen). However when I'm in K-9 Mail (as an example) or in general when I'm trying to decrypt a PGP encrypted file I get ""tranceiver error"" almost immediately.

Yubikey works most of the time with Authenticator app (sometimes requires a few tries, but I only recall Yubikey working with Openkeychain only one time for decryption)
![image](https://cloud.githubusercontent.com/assets/1234670/9292413/5051576c-43ac-11e5-92cb-85f01adb44bb.png)

Any help is appreciated.
"
open-keychain/open-keychain,closed,Doesn't work with oandbackup,[],"Hi!
Could you take a look at this issue?
https://github.com/jensstein/oandbackup/issues/101
Don't know, if this is an openkeychain or oandbackup problem.
"
open-keychain/open-keychain,closed,Back button dead,[],"The back button in 'Settings/cloud search/Select OpenPGP keyservers'  doesn't work. You can still get back with the hardware keys. 
"
open-keychain/open-keychain,closed,Passphrase alternatives feature,[],"This pull request includes all the passphrase alternative features like the Wizard  (#1300)
, NFC, Pattern and Pin Passphrase support (#1299).
This is the definitive pull request and the first candidate for a merge.
Any future corrections will be updated here ( no more new branches :P )

There are two conflits with the latest OpenKeyChain changes so I will wait to see what you want me to do about them.

Another thing, I don't have experience with git sub modules so I'm not sure if I have to commit the sub module (which I have yet to discover how) or if just adding it to git is enough plus the gradle changes to use it. I will wait feedback about it here. So for now do not merge the code yet.
"
open-keychain/open-keychain,closed,"Crash on ""update all"": RuntimeException in ImportOperation.java:483",[],"OpenKeychain from git master crashes when I hit ""update all""

Assigned to @adithyaphilip 

I got the following log, looks like a key is not on the keyserver:

```
[remved, see comment]
```
"
open-keychain/open-keychain,closed,"After key creation, OpenKeychain closes",[],"Mentioned in Google Play and reproduced by @Valodim 
1. create a new key using the first time wizard
2. after key creation is done, OpenKeychain closes.

It should go to the main list instead
"
open-keychain/open-keychain,closed,yubikey neo with subkeys?,[],"Hi all,

Running K9 (5.106) and Openkeychain (3.4) on Sony Z3 compact with stock 5.1.1.

I have a very recent yubikey NEO with the OpenPGP applet. I have moved my subkeys to the NEO in a setup like the one here https://www.esev.com/blog/post/2015-01-pgp-ssh-key-on-yubikey-neo/

Now this setup works as expected with thunderbird and enigmail on my desktop. But when I try to decrypt an email in k9, I get the popup asking for my yubikey PIN, I enter it, I then get the dialog to ""Hold Yubikey against the NFC marker..."", I can feel NFC working as normal and then I get the ""Take away the yubikey now"" dialog, which I do. Now I would expect the email to be decrypted just like it does with thunderbird/enigmail, but unfortunately the imgae ""Hold Yubikey against the NFC marker..."" pops up again and K9 freezes/crashes. The only way to get k9 working again is to kill the process in Settings.

Anyone else have any success with subkeys on the Neo and openkeychain with k9?

I have posted the logs from k9 and openkeychain here http://pastebin.com/2fR1mhbj

Cheers,
Peter
"
open-keychain/open-keychain,closed,WIP: EdDSA support,[],
open-keychain/open-keychain,closed,Missing security checks,[],"priority: Check binding signatures for requirements on import! throw out binding signatures with insecure
 signatures (bit length, hash algo)
- fix insecure key test in PgpEncryptDecryptTest
- put checks for curve OIDs and algorithm tags into import instead of PgpDecryptVerify?
- check signingRing in PgpDecryptVerify?
- ECC checks https://tools.ietf.org/html/rfc6637#section-13 , https://github.com/open-keychain/open-keychain/issues/1353
- check encryption algo used for encrypting secret keys?
- check S2K security on import?
- check for min rsa/dsa/elgamal/ecc requirements in key creation backend

Insecure todo:
- show warnings after import that certain keys are invalid? (also see H's master thesis) How to do this properly?
- Also check insecure keys when used via API? In PgpSignEncrypt?
"
open-keychain/open-keychain,closed,Dead Link in FAQ,[],"Simple issue. Just looks like Yubico changed their site's directory structure a bit.
FAQ -> How to import an existing key onto the YubiKey?
Current link: https://developers.yubico.com/ykneo-openpgp/KeyImport.html
Proper link: https://developers.yubico.com/PGP/Importing_keys.html

I would open up a PR to fix it, but I have no clue where to even start looking for that. Haha
"
open-keychain/open-keychain,closed,Fixed crash on api < 21 due to drawable using attrs,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1470
According to http://stackoverflow.com/questions/8041537/how-to-reference-style-attributes-from-a-drawable/13471695#13471695, drawables can't refer to an attribute. The workaround implemented from there involves having a separate drawable xml for each theme. 
Changed all the drawables I could find that do this (as tracked down from a usage search of items in attrs.xml). Hope that covers everything.
"
open-keychain/open-keychain,closed,Updated OrbotHelper with the latest NetCipher,[],"Adds silent start and resuming of interrupted operation after Orbot is started (earlier the user had to trigger the action again). Falls back to a dialog if the user has disabled silent start. Would come in handy for Keyserver sync (https://github.com/open-keychain/open-keychain/pull/1461).
"
open-keychain/open-keychain,closed,NFC Passphrase support,[],"This pull requests includes the NFC Tag Passphrase implementation.
Will gladly accept any suggestions to improve it.
Currently the license headers are missing in the files.

Implemented NFC technologies: Mifare Ultralight, Ndef/NdefFormatable.
Any future NFC technologies may be implemented easly.
"
open-keychain/open-keychain,closed,"Rename ""YubiKey NEO"" to ""Security Token""?",[],"Hello,

I have obtained a JavaCard on which I have installed the OpenPGP applet.  This is not a Yubico card in any way, but is the same applet that they forked theirs from.  OpenKeyChain works with it (so it might be time to stop calling it ""Yubikey"" and call it ""OpenPGP applet"" support.)

I also have the GnuPG  OpenPGP card v2.0 with Mifare support, as well as the SmartCard-HSM with Mifare support.  Both are seen by the NFC reader on Android, but OpenKeychain just gives an NFC initialization error on both.

I suspect that minor changes would be all it takes to get it working with these cards.  The GnuPG card is quite popular and is described here:

http://wiki.fsfe.org/FellowshipSmartCard

http://g10code.com/p-card.html
"
open-keychain/open-keychain,closed,"App crashes when click ""skip setup""",[],"App crashes when click ""skip setup"" or ""configure key"". If i click ""skip setup"", app will never run again (only after reinstall).
App builded from source (latest). Build without errors. What kind of information i need to provide? 

Error log
'''
08-05 19:02:19.289  13241-13241/org.sufficientlysecure.keychain.debug E/AndroidRuntime﹕ FATAL EXCEPTION: main
    Process: org.sufficientlysecure.keychain.debug, PID: 13241
    java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.EditKeyActivity}: android.view.InflateException: Binary XML file line #12: Error inflating class TextView
            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2192)
            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2241)
            at android.app.ActivityThread.access$800(ActivityThread.java:141)
            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1204)
            at android.os.Handler.dispatchMessage(Handler.java:102)
            at android.os.Looper.loop(Looper.java:136)
            at android.app.ActivityThread.main(ActivityThread.java:5049)
            at java.lang.reflect.Method.invokeNative(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:515)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:609)
            at dalvik.system.NativeStart.main(Native Method)
     Caused by: android.view.InflateException: Binary XML file line #12: Error inflating class TextView
            at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:716)
            at android.view.LayoutInflater.rInflate(LayoutInflater.java:758)
            at android.view.LayoutInflater.rInflate(LayoutInflater.java:761)
            at android.view.LayoutInflater.inflate(LayoutInflater.java:495)
            at android.view.LayoutInflater.inflate(LayoutInflater.java:400)
            at android.view.LayoutInflater.inflate(LayoutInflater.java:353)
            at org.sufficientlysecure.keychain.ui.EditKeyFragment.onCreateView(EditKeyFragment.java:131)
            at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1120)
            at android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:1929)
            at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:547)
            at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1171)
            at android.app.Activity.performStart(Activity.java:5259)
            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2165)
            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2241)
            at android.app.ActivityThread.access$800(ActivityThread.java:141)
            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1204)
            at android.os.Handler.dispatchMessage(Handler.java:102)
            at android.os.Looper.loop(Looper.java:136)
            at android.app.ActivityThread.main(ActivityThread.java:5049)
            at java.lang.reflect.Method.invokeNative(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:515)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:609)
            at dalvik.system.NativeStart.main(Native Method)
     Caused by: android.content.res.Resources$NotFoundException: File res/drawable/section_header.xml from drawable resource ID #0x7f0200b1
            at android.content.res.Resources.loadDrawable(Resources.java:2149)
            at android.content.res.MiuiResources.loadDrawable(MiuiResources.java:348)
            at android.content.res.Resources.loadDrawable(Resources.java:2072)
            at android.content.res.TypedArray.getDrawable(TypedArray.java:602)
            at android.widget.TextView.<init>(TextView.java:818)
            at android.support.v7.widget.AppCompatTextView.<init>(AppCompatTextView.java:44)
            at android.support.v7.widget.AppCompatTextView.<init>(AppCompatTextView.java:40)
            at android.support.v7.internal.app.AppCompatViewInflater.createView(AppCompatViewInflater.java:103)
            at android.support.v7.app.AppCompatDelegateImplV7.createView(AppCompatDelegateImplV7.java:802)
            at android.support.v7.app.AppCompatDelegateImplV7.onCreateView(AppCompatDelegateImplV7.java:832)
            at android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC.onCreateView(LayoutInflaterCompatHC.java:44)
            at android.view.LayoutInflater$FactoryMerger.onCreateView(LayoutInflater.java:172)
            at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:687)
            at android.view.LayoutInflater.rInflate(LayoutInflater.java:758)
            at android.view.LayoutInflater.rInflate(LayoutInflater.java:761)
            at android.view.LayoutInflater.inflate(LayoutInflater.java:495)
            at android.view.LayoutInflater.inflate(LayoutInflater.java:400)
            at android.view.LayoutInflater.inflate(LayoutInflater.java:353)
            at org.sufficientlysecure.keychain.ui.EditKeyFragment.onCreateView(EditKeyFragment.java:131)
            at android.support.v4.app.Fragment.performCreateView(Fragment.java:1789)
            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
            at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1120)
            at android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:1929)
            at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:547)
            at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1171)
            at android.app.Activity.performStart(Activity.java:5259)
            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2165)
            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2241)
            at android.app.ActivityThread.access$800(ActivityThread.java:141)
            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1204)
            at android.os.Handler.dispatchMessage(Handler.java:102)
            at android.os.Looper.loop(Looper.java:136)
            at android.app.ActivityThread.main(ActivityThread.java:5049)
            at java.lang.reflect.Method.invokeNative(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:515)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:609)
            at dalvik.system.NativeStart.main(Native Method)
     Caused by: java.lang.UnsupportedOperationException: Can't convert to color: type=0x2
            at android.content.res.TypedArray.getColor(TypedArray.java:327)
            at android.graphics.drawable.GradientDrawable.inflate(GradientDrawable.java:970)
            at android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:939)
            at android.graphics.drawable.Drawable.createFromXml(Drawable.java:879)
            at android.content.res.Resources.crea
'''
Thank you.
"
open-keychain/open-keychain,open,Add SOCKS support to OkHttp for quicker Tor sync,[],"The relevant issue is at https://github.com/square/okhttp/issues/1773. Once this is done, we would be able to establish fresh tor circuits by passing a random username/password combo to Orbot without having to wait 10 min for a new circuit as parcimonie does (described at https://github.com/open-keychain/open-keychain/issues/1337)
"
open-keychain/open-keychain,closed,Unusable signing key not properly disabled,"[Label(name=""bug"")]","Revoked and expired keys are disabled in the signing key spinner. Unusable keys (missing signing subkey) are not properly disabled, they can still be selected by click.
"
open-keychain/open-keychain,closed,Read from Clipboard fails with PGP Message v1,[],"In the current version of open-keychain from the Android market in a Nexus 4 with Android 5.1.1, it is not possible to decrypt PGP messages utilizing the clipboard.

This is the use-case where I've found the problem:
1) Receive an email encrypted with Enigmail (Thunderbirth plugin) which utilizes gpg 2.1.6
2) Open the GMail app and copy the email into the clippboard
3) Select the option ""Read from clipboard""
Outcome: Error message ""Encountered an error reading input data!""

If I save the encrypted message into a file and then try to decrypt the file via the option ""Select input file"", everything works fine.
"
open-keychain/open-keychain,closed,App crashes when select backup key on my own key.,[],"App keep crashes when I select backup keys on my own key, then when I insert password App crashes.
"
open-keychain/open-keychain,closed,Work in progress: Min crypto requirements,[],"WIP: don't merge

This is my branch that soon (tm) implements checks for insecure cryptography.
Consider the following attack: Your communication partner uses a 512 bit RSA key to sign a message. A three letter organization can forge such signatures due to their small bit length.
Currently there is no indication in OpenKeychain that this is a problem.
This branch should fix this and rework some result handling and API problems on its way.

I made a pull request so that everyone can see the progress here.
"
open-keychain/open-keychain,closed,Prevent confusion with contact sync,[],"We had some github issues and google play reviews showing that people don't understand what we are syncing. After thinking about this, one reason could be that in Android's preferences under Accounts, the OpenKeychain account states that it synces Contacts. This description comes from the fact that we declare `android:contentAuthority=""com.android.contacts""` in `sync_adapter_desc.xml`. Maybe this can be changed to something else by connecting it to dummy provider that is named ""Locally link keys to contacts"" or something along these lines.

http://stackoverflow.com/questions/8525721/what-are-android-syncadapter-contentauthority-and-accounttype
http://stackoverflow.com/questions/4649808/syncadapter-without-a-contentprovider
"
open-keychain/open-keychain,closed,Smaller todos from revoke/delete pull requests,[],"Before we forget about it: There are some comments by @Valodim in https://github.com/open-keychain/open-keychain/pull/1435

Assigned to @adithyaphilip ;)
"
open-keychain/open-keychain,open,Password dialog should display primary email if there is more than one private key with the same name,[],"From mailinglist:

```

bei der täglichen Nutzung von OpenKeychain ist mir ein kleiner
Änderungsvorschlag eingefallen.
Ich habe mehrere eigene EMail-Adressen mit entsprechenden
PGP-Schlüsseln importiert.
Das Problem ist jetzt bei der Entschlüsselung der Nachrichten werde
ich nach dem Passwort für ""NAME"" gefragt.
Da die PGP-Schlüssel alle den selben Namen haben, wäre es einfacher
wenn die Passwortabfrage zusätzlich die EMail-Adresse z.B.
""NAME qwertz@xyz.de""
abfragen würde.
```

I would propose not always displaying the email address, because the average case is that people have one key only. However, we could display it when there is more than one private key with the same name.
"
open-keychain/open-keychain,closed,Periodic Keyserver Sync,[],"Still a work in progress. Currently:
- A new table UPDATED_KEYS keeps track of the last updated times of keys. This values is set every time a key is imported from cloud, but not for import from file. The value is preserved during consolidate and the key deletion that takes place when you re-save an existing public key, but is lost on just key deletion.
- Every time the SyncAdapter is run, it will update all keys that are older than a day.
- All updates are cancelled when the user is on KeyListFragment.

Todo:
- Send a new username/pass to Orbot using SOCKS proxy for a new circuit each time.
- Finish implementing notification that appears if user has checked Tor in proxy settings but it is not enabled at time of sync.
- Implement the periodic interval at which the SyncAdapter runs.
- Preference to turn it off, and checkbox to enable it in FirstTimeActivity
"
open-keychain/open-keychain,closed,"Yubikey: ""Unknown key, hit next to import"" despite already imported",[],"When I touch Yubikey with PGP key to a ""cold"" phone, and select OpenKeyChain to handle it, it says ""Unknown key, hit next to import"". In reality, the key is ""imported"" long ago and is shown in the key management interface. If I touch the key when OpenKeyChain is running, it shows ""Yubikey matches and is bound to key"". Looks as if the message is shown before the check has a chance to complete.

https://goo.gl/photos/GZjtATGW4Cbv8PGB7

As an aside, the wording ""hit _next_ to import"" is incorrect: there is no ""next"" button, the button is called ""IMPORT"".
"
open-keychain/open-keychain,closed,Conversations OpenPGP support,"[Label(name=""discussion""), Label(name=""help wanted"")]","The maintainer of Conversations is searching for developers to help maintaining OpenPGP support:
https://github.com/siacs/Conversations/issues/1013#issuecomment-124063380
"
open-keychain/open-keychain,closed,cannot search online,[],"I see no way to find online a public key for a new destination. APG can do this although the option is buried in menus. 
I do not want to use APG to obtain the key, export from there then import to OpenKeychain 
"
open-keychain/open-keychain,closed,What does OpenKeychain sync?,[],"What data is sent by OpenKeychain when system sync is enabled? 

Does it ask the server about gpg contact keys only? 

Does it upload personal keys? 

Does it search the keyserver for keys against every single Android contact that are not listed in OpenKeyChain?

Syncing should be opt-in for privacy.
"
open-keychain/open-keychain,closed,ISSUE #1304: Change keybase strings ,[],"-No longer appends the links to the keybase_narratives
-Now uses '%s' to insert the names in the keybase_narratives
-added '%s' to keybase_narrative_\* in the string.xml file
-- NOTE:Have not modified for other languages
"
open-keychain/open-keychain,closed,setFirstTime should be called earlier,[],"the flag which prevents the first time wizard from showing is only set _after_ a key is fully created and a success message has been shown. this should probably be set a little earlier.
"
open-keychain/open-keychain,closed,"Public not importable, signed/encrypted files unreadable with Yubikey, maybe(?) because of ECC master",[],"Openkeychain 3.4.1 from the Playstore.

I created a new ed25519 master key on a disconnected machine, and three RSA2048 subkeys (sign, encrypt, authenticate) with GnuPG 2.1.3. I then successfully transferred subkeys to the Yubikey NEO, and exported public keys to a file.

I could successfully import public keys and create stubs for the private keys on another machine, (public keys even into gnupg 1.4).

```
$ gpg2 -vv -K 8B19FA25
gpg: using classic trust model
gpg: key 8C3A5169: accepted as trusted key
gpg: key 0155AEF9: accepted as trusted key
gpg: key 8B19FA25: accepted as trusted key
sec#  ed25519/8B19FA25 2015-07-17
uid       [ultimate] Eugene Crosser (Evgeny Cherkashin) <crosser@average.org>
uid       [ultimate] [jpeg image of size 10231]
ssb   rsa2048/FB1C827C 2015-07-17
ssb   rsa2048/F44F10F7 2015-07-17

$ gpg2 -vv -k 8B19FA25
gpg: using classic trust model
gpg: key 8C3A5169: accepted as trusted key
gpg: key 0155AEF9: accepted as trusted key
gpg: key 8B19FA25: accepted as trusted key
pub   ed25519/8B19FA25 2015-07-17
uid       [ultimate] Eugene Crosser (Evgeny Cherkashin) <crosser@average.org>
uid       [ultimate] [jpeg image of size 10231]
sub   rsa2048/FB1C827C 2015-07-17
sub   rsa2048/F44F10F7 2015-07-17
```

When I try to import the public key or select files to decrypt/verify, I get errors ""No valid keys found"" and ""Encounted an error reading input data"" respectively. When I touch the device with yubikey, it tries to get public keys from a keyserver and fails (I did not upload it - want to make sure that it works first!).

[Attachments: files and screenshots](https://drive.google.com/open?id=0ByShPJfR4k84fnJKa3ZEeloyZzQ1ZUViQVBLRVJZNmNkOE1wR2U4UXlMcWRHYUtLaFpWd00)

Please tell me if you need logcat or whatever else debugging data.
"
open-keychain/open-keychain,closed," add ""mouseover"" hints to buttons  #1378 ",[],"In OpenKeychain/...../java  ----> Cheatsheet.java created.
imported code of Cheatsheet.java in files under /java/org/sufficientlysecure/keychain/ui/
"
open-keychain/open-keychain,open,nfc sharing is broken,"[Label(name=""bug""), Label(name=""help wanted"")]","sharing keys via nfc does not work currently while OpenKeychain is open, because we enable nfcForegroundDispatch in most of our activities.

```
FATAL EXCEPTION: AsyncTask #1
Process: org.sufficientlysecure.keychain.debug, PID: 26021
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.os.AsyncTask$3.done(AsyncTask.java:304)
at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
at java.util.concurrent.FutureTask.run(FutureTask.java:242)
at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.nfc.tech.IsoDep.setTimeout(int)' on

at org.sufficientlysecure.keychain.ui.base.BaseNfcActivity.handleTagDiscoveredIntent(BaseNfcActivity.java:407)
at org.sufficientlysecure.keychain.ui.base.BaseNfcActivity$1.doInBackground(BaseNfcActivity.java:147)
at org.sufficientlysecure.keychain.ui.base.BaseNfcActivity$1.doInBackground(BaseNfcActivity.java:137)
at android.os.AsyncTask$2.call(AsyncTask.java:292)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
... 4 more
Force finishing activity 1 org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.MainActivity
```
"
open-keychain/open-keychain,closed,Problem with importing a key,[],"Hi there
I try to import my private+public key using this guide: https://github.com/open-keychain/open-keychain/issues/975
I follow it to the word
And the message pops up telling me that ""no valid keys have been found in flle/clipboard"".
Can you please help me figure out how to do it properly?
"
open-keychain/open-keychain,closed,secret key status activity,"[Label(name=""on hold"")]","I started working on what I mentioned in #1449. The idea is that a user can see what operations are available for a (secret) key, but not in terms of subkeys. This translates into a simple activity which displays a status each for confirm, sign and decrypt.

I covered all obvious cases, but currently only the subkey status itself is considered and not others, like when the entire key is revoked. I reckon there is also some room for improvement in the way of understandable wording and design.

The activity is currently accessible via the context menu, but I also thought about displaying it right after the user imports a secret key, which will hopefully help for scenarios like #1436 where the user isn't entirely aware of what operations a secret key can or cannot do.

screenshot from the fragment, it looks a little better in action but I can't make a very good screenshot at the moment:
![](http://valodim.stratum0.net/layout-2015-07-16-215801.png)
"
open-keychain/open-keychain,closed,show more information after secret key import,"[Label(name=""enhancement""), Label(name=""user interface"")]","missing secret key capabilities seem to be a constant source of confusion for users. it might be a good idea to show a dialog to the user after import of a secret key if there are any special circumstances about it (missing/divert/stripped subkeys for certify/sign/decrypt)
"
open-keychain/open-keychain,open,"Rename ""Save as default"" button","[Label(name=""discussion"")]","I think some people don't understand the button ""Safe as default"". What about renaming it to ""Always use this""?
"
open-keychain/open-keychain,open,Crash on refresh key when it has been revoked,"[Label(name=""bug"")]","1. backup db
2. revoke one of your keys (revoke all subkeys and user ids) and upload it to keyservers
3. restore db
4. Go to view of this key and click on refresh.
5. OK crashes. Looks like it has something to do with the cursor of the user ids.

```
 24548         AndroidRuntime  D  Shutting down VM
 24548         AndroidRuntime  E  FATAL EXCEPTION: main
 24548         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 24548
 24548         AndroidRuntime  E  android.database.StaleDataException: Attempting to access a closed CursorWindow.Most probable cause: cursor is deactivated prior to calling this method.
 24548         AndroidRuntime  E  at android.database.AbstractWindowedCursor.checkPosition(AbstractWindowedCursor.java:139)
 24548         AndroidRuntime  E  at android.database.AbstractWindowedCursor.getString(AbstractWindowedCursor.java:50)
 24548         AndroidRuntime  E  at android.database.CursorWrapper.getString(CursorWrapper.java:114)
 24548         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.adapter.UserIdsAdapter.bindView(UserIdsAdapter.java:74)
 24548         AndroidRuntime  E  at android.support.v4.widget.CursorAdapter.getView(CursorAdapter.java:256)
 24548         AndroidRuntime  E  at android.widget.AbsListView.obtainView(AbsListView.java:2349)
 24548         AndroidRuntime  E  at android.widget.ListView.measureHeightOfChildren(ListView.java:1270)
 24548         AndroidRuntime  E  at android.widget.ListView.onMeasure(ListView.java:1182)
 24548         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.widget.FixedListView.onMeasure(FixedListView.java:50)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1436)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.measureVertical(LinearLayout.java:722)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.onMeasure(LinearLayout.java:613)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.support.v7.widget.CardView.onMeasure(CardView.java:198)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1436)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.measureVertical(LinearLayout.java:722)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.onMeasure(LinearLayout.java:613)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.widget.ScrollView.measureChildWithMargins(ScrollView.java:1260)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.widget.ScrollView.onMeasure(ScrollView.java:337)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1436)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.measureVertical(LinearLayout.java:722)
 24548         AndroidRuntime  E  at android.widget.LinearLayout.onMeasure(LinearLayout.java:613)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:728)
 24548         AndroidRuntime  E  at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:464)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.support.v7.internal.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:124)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
 24548         AndroidRuntime  E  at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5536)
 24548         AndroidRuntime  E  at android.widget.FrameLayout.onMeasure(FrameLayout.java:436)
 24548         AndroidRuntime  E  at android.view.View.measure(View.java:17554)
  743         ActivityManager  W  Force finishing activity 1 org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.ViewKeyActivity
```
"
open-keychain/open-keychain,closed,Folder encryption.,[],"Being able to encrypt folders as well would be really nice. 
"
open-keychain/open-keychain,open,No Notify error shown for stripped keys,[],"Just tested this: On edit and certify no notify is shown for stripped keys. It should show: ""You cannot confirm with stripped keys"" or something along these lines.
"
open-keychain/open-keychain,open,NullPointerException in UncachedKeyRing.canonicalize(UncachedKeyRing.java:473),"[Label(name=""bug""), Label(name=""google play crash-report"")]","```
java.lang.NullPointerException: Attempt to read from field 'org.spongycastle.bcpg.PublicKeyPacket org.spongycastle.openpgp.PGPPublicKey.publicPk' on a null object reference
at org.spongycastle.openpgp.PGPPublicKey.<init>(PGPPublicKey.java:144)
at org.spongycastle.openpgp.PGPPublicKey.removeCert(PGPPublicKey.java:808)
at org.spongycastle.openpgp.PGPPublicKey.removeCertification(PGPPublicKey.java:801)
at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.canonicalize(UncachedKeyRing.java:473)
at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.canonicalize(UncachedKeyRing.java:280)
at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:900)
at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:302)
at org.sufficientlysecure.keychain.operations.ImportOperation.serialKeyRingImport(ImportOperation.java:131)
at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:399)
at org.sufficientlysecure.keychain.operations.ImportOperation.execute(ImportOperation.java:84)
at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:142)
at java.lang.Thread.run(Thread.java:818)
```
"
open-keychain/open-keychain,closed,Implement revocation reason in Edit key,[],"We also need to implement the revocation reasons in edit key as discussed here: https://github.com/open-keychain/open-keychain/pull/1435
"
open-keychain/open-keychain,open,ClassCastException in PgpDecryptVerify.verifyCleartextSignature,"[Label(name=""bug""), Label(name=""google play crash-report"")]","From Google Play.

That's a crazy one...

```
java.lang.ClassCastException: org.spongycastle.openpgp.PGPLiteralData cannot be cast to org.spongycastle.openpgp.PGPSignatureList
at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.verifyCleartextSignature(PgpDecryptVerify.java:918)
at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.executeInternal(PgpDecryptVerify.java:159)
at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.execute(PgpDecryptVerify.java:122)
at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.execute(PgpDecryptVerify.java:81)
at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:142)
at java.lang.Thread.run(Thread.java:818)
```
"
open-keychain/open-keychain,closed,Backup dialog: open file not showing filename input,[],"In the backup dialog, when pressing the open button, there is no filename input and save button. This should be used like done in Save of encrypted files.
"
open-keychain/open-keychain,closed,OpenKeychain App crashes when looking up for missing key,[],"When I get a signed email in K9 Mail from somebody, that's key is unknown and push the button to ""Look up missing key"", the app immediately crashes.
I'm using a Sony Xperia Z3 Compact with Android 5.0.2
"
open-keychain/open-keychain,closed,Passphrase wizard + PIN Passphrase support,[],"First Passphrase Wizard code review. There are still a few code changes that I need to implement. Also expect further changes down the line in terms of code cleanup and bug fixes.
"
open-keychain/open-keychain,closed,Check upload response code and throw AddKeyException,[],"`HkpKeyserver` now verifies that the upload succeeded. Earlier it was failing uploads only if there was an `IOException`. Does this help with https://github.com/open-keychain/open-keychain/issues/1436?
"
open-keychain/open-keychain,closed,Add OkHttp to in-app libs,[],
open-keychain/open-keychain,closed,Confirm key + upload broken?,[],
open-keychain/open-keychain,closed,Revocation on deletion,[],"Sorry for the delay, took me a while to get the workflow right.
- Making the dialog appear due to a pendingResult in DeleteOperation made the code in it too unwieldy. Instead, revocation now happens in a new `RevokeOperation`, and `DeleteKeyDialogActivity` determines what dialog to show.
- Added atomic/non-atomic upload to `EditKeyOperation`
- `mCachePassphrase` in `CryptoInputParcel` for operations to specify if they want their passphrase cached.
- Allowed operations to modify the `CryptoInputParcel` they receive - this was primarily so that `EditKeyOperation` could save the modified keyring (so it wouldn't have to repeat the operation) in case the uploading returned a pendingResult. However, this required making `UncachedKeyRing` and related `spongycastle` classes Serializable/Parcelable, so it isn't implemented as of now. Currently, this feature is only used by `RevokeOperation` to specify that it does not want its passphrase to be cached.
- Added retry on upload failure as a type of pendingResult, for operations that require atomic upload. Downside is an operation which uses this won't show an error log if the user decides not to retry, hence the wording ""Cancel Operation"" instead of just ""Cancel"" to make it clear. One workaround I'm thinking of going ahead with is adding an `OperationResult` to the `CryptoInputParcel` that is a part of the pendingResult. This could be shown in case of cancellation.

Screenshots:
![screenshot_2015-07-10-08-10-40](https://cloud.githubusercontent.com/assets/5712241/8611412/32598832-26de-11e5-9001-33923e77d05f.png)
![screenshot_2015-07-10-06-57-56](https://cloud.githubusercontent.com/assets/5712241/8610656/a96b5678-26d2-11e5-8cac-df10a2386707.png)
"
open-keychain/open-keychain,closed,Update safeslinger,[],"Due to https://github.com/SafeSlingerProject/SafeSlinger-Android/issues/133
"
open-keychain/open-keychain,closed,Re-implement fixPgpMessage,[],"We had this method fixPgpMessage in older versions (https://github.com/open-keychain/open-keychain/blob/0bbd23538065ae6531e56194ff7bd4641879b674/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/ui/DecryptTextActivity.java#L74) which we should re-implement. Maybe directly in the backend. It could be the cause of https://github.com/open-keychain/open-keychain/issues/1432
"
open-keychain/open-keychain,closed,If encrypted text includes this string Version: GnuPG v2 openkeychain will not view it natively?,[],"From email conversation:

```
I updated to 3.4 but now when I go to decrypt previously
encrypted text sometimes I am getting prompted to ""view with openkeychain""
and others not at all. Did something change? With 3.3 my device was
constantly force closing on text decryption. Previous 3.2 version was fine.
Thanks.
```

```
I noticed if my encrypted text includes this string Version:
GnuPG v2 openkeychain will not view it natively. I get an intent popup to
choose another app. 3.2 version would just decrypt and show the text
natively. 3.4 presents the text as a file? For encrypted text with no gnupg
version string seems to view in app if I choose that item from the intent
menu. Is this behavior all normal now?
```

Needs investigation...
"
open-keychain/open-keychain,closed,"illegalstateexception for dialog show during onResume(), and CryptoOperationHelper ids","[Label(name=""bug"")]","I changed PassphraseDialogActivity at some point to re-initialize the dialog fragment in onResume() at some point. turns out this doesn't work in the support library (but it does natively, apparently)

there's a discussion here: http://code.google.com/p/android/issues/detail?id=23096#c4
"
open-keychain/open-keychain,closed,Need an option to not encrypt file name by default,[],"When encrypting a file by sharing it with Openkeychain, as of 3.1.2, file names were not ""encrypted"" I.e. replaced by 1.gpg, 2.gpg etc. unless a checkbox was selected. In releases after that, this behavior reversed. There should be an option in settings to choose the default behavior so that every time this doesn't have to be selected.
"
open-keychain/open-keychain,closed,Fixed QR code import and serialKeyImport progress,[],"I wasn't able to exactly reproduce https://github.com/open-keychain/open-keychain/issues/1425 - my issue was related to when Tor was selected for proxy but wasn't running. A related issue is that selecting ""Don't Use Tor"" will result in the key being imported and the user taken to the certify screen, but no progress dialog being displayed. Looking into that too.
"
open-keychain/open-keychain,closed,Small UI glitches,[],"Just testing and noticing some UI glitches:
- If there are two keys inside the key adapter the creation date is displayed. It should also be grey if the key is revoked.
- In encrypt text: ""Encrypt and copy text"" shows the Notify behind my keyboard. Same is true for encrypt files with ""Encrypt and copy text""
- When going to a fragment from the nav drawer and then pressing back on Android's footer navigation, the title is not changed.
"
open-keychain/open-keychain,closed,Decrypt from clipboard not working on older Androids?,"[Label(name=""bug"")]","On the mailinglist someone has a problem to decrypt from clipboard. Looks like he is using an older version of Android.
-> We should test this on older Versions
"
open-keychain/open-keychain,open,Decrypt example from Intent library crashes OpenKeychain,"[Label(name=""bug"")]","Decrypt example from Intent library crashes OpenKeychain
"
open-keychain/open-keychain,closed,Scanning with Barcode Scanner hangs at import,"[Label(name=""bug"")]","1. Scan with Barcode Scanner
2. Gets URI with fingerprint and Imports in OpenKeychain
3. Import hangs

Needs more investigation.
"
open-keychain/open-keychain,closed,Shifted proxy logic to ImportKeysListCloudLoader,[],"Should fix https://github.com/open-keychain/open-keychain/issues/1412. Tried making it similar to how CryptoOperationFragment handles it. Should we have something like that for loaders?
"
open-keychain/open-keychain,closed,Problem with Confirming Fingerprints and Decrypting Files,[],"Whenever I try to confirm someone's fingerprint, it just loads at 0/100 and never continues when ""building key."" 
Screenshot: https://mega.nz/#!WlcmxarZ!fO0wPTtONlo5qglYdzofWayPGsSwNGbIZ9fpw8duNh

Whenever I try to decrypt a .gpg file it crashes the app.
Video: https://mega.nz/#!qhdWiJRT!zftd-asCbRSrYrIAurpYQC1MG-BXeZQafbKnL0Dwjs

USING: GALAXY S6
"
open-keychain/open-keychain,closed,crash on subkey-add if primary key is divert-to-card,[],"```
java.lang.NullPointerException: Attempt to invoke virtual method 'char[] org.sufficientlysecure.keychain.util.Passphrase.getCharArray()' on a null object reference
at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.internal(PgpKeyOperation.java:1001)
at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.modifySecretKeyRing(PgpKeyOperation.java:482)
at org.sufficientlysecure.keychain.operations.EditKeyOperation.execute(EditKeyOperation.java:87)
at org.sufficientlysecure.keychain.operations.EditKeyOperation.execute(EditKeyOperation.java:54)
at org.sufficientlysecure.keychain.service.KeychainService$1.run(KeychainService.java:142)
at java.lang.Thread.run(Thread.java:818)
```

newly created subkeys use the same passphrase as the primary key. yubikeys don't have a passphrase, leading to a nullpointer crash. there are also a couple of other special scenarios regarding subkey editing which are icky for divert-to-card keys at the moment
"
open-keychain/open-keychain,closed,No way to decrypt text/plain using explicit Intent,"[Label(name=""bug"")]","From the Mailinglist:

```
Were there any changes made to the available intents recently?  I have been using an intent sent from Tasker to decrypt PGP message text received via SMS.  By sending this intent, it would start openkeychain, decrypt the passed ASCII armored text string and display the decrypted message on screen in OpenKeychain.  It recently stopped working, but I don't know if it's because I upgraded my phone to Lollipop, or because OpenKeychain updated/changed.

Here's the intent info that I was previously successfully sending:

Action:  android.intent.action.SEND
Package:  org.sufficientlysecure.keychain
Class:  org.sufficientlysecure.keychain.ui.DecryptTextActivity
Mime Type:  text/plain
Extra:  android.intent.extra.TEXT:[[ASCII_ARMORED_PGP_MESSAGE_GOES_HERE]]


I don't remember exactly where I came up with those intent values, as it was a combination of various sources I found online and plenty of trial & error to arrive at a working set of values.  BTW, I'm not a proper android developer, I'm just pretty good at using my google-fu to kludge together scripts/etc that do what I want 

Any help or advice would be greatly appreciated!


I'm running Android 5.1.1 (CM12) on Samsung GS3 (SCH-I535) with OpenKeychain v3.4
```

We removed the EXTRA here: https://github.com/open-keychain/openkeychain-intents/commit/9b5b0b9ca32e80f3dadebe57d27e1422889d8254

I think we should re-add a way to make it possible to send text to OpenKeychain by allowing `org.sufficientlysecure.keychain.action.EXTRA_TEXT` for our generic decrypt action `ENCRYPT_DATA`

BTW: https://github.com/open-keychain/openkeychain-intents/blob/master/README.md also needs an update!
"
open-keychain/open-keychain,closed,NullPointerException in uploadKey (Preferences.updateSharedPreferences),"[Label(name=""bug"")]","From G Play

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.util.Preferences.updateSharedPreferences(Preferences.java:73)
at org.sufficientlysecure.keychain.util.Preferences.getPreferences(Preferences.java:56)
at org.sufficientlysecure.keychain.util.Preferences.getPreferences(Preferences.java:48)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment.uploadKey(CreateKeyFinalFragment.java:363)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment.access$200(CreateKeyFinalFragment.java:56)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment$4.onCryptoOperationSuccess(CreateKeyFinalFragment.java:244)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment$4.onCryptoOperationSuccess(CreateKeyFinalFragment.java:228)
at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper.onHandleResult(CryptoOperationHelper.java:335)
at org.sufficientlysecure.keychain.ui.base.CryptoOperationHelper$1.handleMessage(CryptoOperationHelper.java:283)
at android.os.Handler.dispatchMessage(Handler.java:107)
at android.os.Looper.loop(Looper.java:194)
at android.app.ActivityThread.main(ActivityThread.java:5455)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:525)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:966)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:733)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Backup feature,"[Label(name=""enhancement"")]","Result of discussions:
- Remove ""export to file"" from public key view, add this option to extended information
- Rename ""export to file"" to ""backup to file"" in secret key view
- Remove ""select all"" from multi select
- Remove ""export to file"" from multi select
- Add new fragment in menu drawer: ""Backup""
- new fragment can: Backup all keys and Backup all keys (including yours) (with warning)
"
open-keychain/open-keychain,closed,"Handle PIN and ""no passphrase"" keys on delete key operation","[Label(name=""bug"")]","PIN is requested if a yubikey key is deleted, but PIN is not checked. I think the same could happen for ""no passphrase"" keys.
"
open-keychain/open-keychain,closed,Database error on export of keys,[],"1. Multi select some keys
2. export
   -> database error
"
open-keychain/open-keychain,closed,Linked normal proxy settings to normal proxy checkbox,[],"Solves https://github.com/open-keychain/open-keychain/issues/1406.
Sorry, I had forgotten to update the submodule.
"
open-keychain/open-keychain,closed,Deletion from multi select should require passphrase,"[Label(name=""bug"")]","see subject.
"
open-keychain/open-keychain,closed,"Linked other proxy settings to ""Enable other proxy""",[],"Solves https://github.com/open-keychain/open-keychain/issues/1406
"
open-keychain/open-keychain,closed,OpenPgpService - Signing Subkey Not Found,[],"#1402 is still a problem in version 3.4

---
### OpenPgpService

Signing within the OpenKeychain app works well.

Signing email via K-9 Mail fails with `OpenPGP error: signing subkey not found!`

The key looks like this: 

| Key | Public | Secret | Size |
| --- | --- | --- | --- |
| Master (stripped) | Yes | No | 4096 |
| Encrypt Subkey | Yes | Yes | 4096 |
| Sign Subkey | Yes | Yes | 4096 |

OpenKeychain finds the signing subkey when used standalone. It does _not_ find the subkey via OpenPgpService.
#### Logcat Exerpt

```
I/Timeline( 4158): Timeline: Activity_launch_request id:com.fsck.k9 time:1484941
I/ActivityManager( 3170): START u0 {act=com.fsck.k9.intent.action.COMPOSE cmp=com.fsck.k9/.activity.MessageCompose (has extras)} from pid 4158
I/LatinIME:LogUtils( 3411): Dictionary info: dictionary = contacts.en_GB.dict ; version = ? ; date = ?
I/ActivityManager( 3170): Displayed com.fsck.k9/.activity.MessageCompose: +255ms
I/Timeline( 4158): Timeline: Activity_idle id: android.os.BinderProxy@4221e640 time:1485357
I/Timeline( 3170): Timeline: Activity_windows_visible id: ActivityRecord{42333948 u0 com.fsck.k9/.activity.MessageCompose t8} time:1485549
W/Keychain( 4820): You are using a deprecated API call, please use ACTION_CLEARTEXT_SIGN instead of ACTION_SIGN!
E/k9      ( 4158): OpenPGP Error ID:0                                           
E/k9      ( 4158): OpenPGP Error Message:signing subkey not found!
```

@Valodim mentioned in #1402 that:

> the problem is that the (master) key id in the accounts database is zero.

Which, I assume, is this `E/k9      ( 4158): OpenPGP Error ID:0`

It also seems that K-9 Mail is using API calls which have been depreciated. Is this likely to be a factor?

---

Android 4.4.4
K-9 Mail 5.006
OpenKeychain 3.4
"
open-keychain/open-keychain,closed,NullPointerException: ParcelableProxy.getProxy(),[],"Attach YubiKey with existing key to import this key from a keyserver -> crash

```
  8072         AndroidRuntime  E  FATAL EXCEPTION: ModernAsyncTask #1
  8072         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 8072
  8072         AndroidRuntime  E  java.lang.RuntimeException: An error occured while executing doInBackground()
  8072         AndroidRuntime  E  at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
  8072         AndroidRuntime  E  at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
  8072         AndroidRuntime  E  at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
  8072         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:242)
  8072         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
  8072         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
  8072         AndroidRuntime  E  at java.lang.Thread.run(Thread.java:818)
  8072         AndroidRuntime  E  Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.net.Proxy org.sufficientlysecure.keychain.util.ParcelableProxy.getProxy()' on a null object reference
  8072         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListCloudLoader.queryServer(ImportKeysListCloudLoader.java:103)
  8072         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListCloudLoader.loadInBackground(ImportKeysListCloudLoader.java:67)
  8072         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListCloudLoader.loadInBackground(ImportKeysListCloudLoader.java:35)
  8072         AndroidRuntime  E  at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
  8072         AndroidRuntime  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
  8072         AndroidRuntime  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
  8072         AndroidRuntime  E  at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
  8072         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:237)
  8072         AndroidRuntime  E  ... 3 more
```
"
open-keychain/open-keychain,open,QR Code bug: IllegalArgumentException: width and height must be > 0,[],"```
java.lang.IllegalArgumentException: width and height must be > 0
at android.graphics.Bitmap.createBitmap(Bitmap.java:808)
at android.graphics.Bitmap.createBitmap(Bitmap.java:787)
at android.graphics.Bitmap.createBitmap(Bitmap.java:719)
at android.graphics.Bitmap.createScaledBitmap(Bitmap.java:595)
at org.sufficientlysecure.keychain.ui.ViewKeyAdvShareFragment$9.onPostExecute(ViewKeyAdvShareFragment.java:379)
at org.sufficientlysecure.keychain.ui.ViewKeyAdvShareFragment$9.onPostExecute(ViewKeyAdvShareFragment.java:363)
at android.os.AsyncTask.finish(AsyncTask.java:632)
at android.os.AsyncTask.access$600(AsyncTask.java:177)
at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5158)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)
at dalvik.system.NativeStart.main(Native Method)
```

```
java.lang.IllegalArgumentException: width and height must be > 0
at android.graphics.Bitmap.createBitmap(Bitmap.java:808)
at android.graphics.Bitmap.createBitmap(Bitmap.java:787)
at android.graphics.Bitmap.createBitmap(Bitmap.java:719)
at android.graphics.Bitmap.createScaledBitmap(Bitmap.java:595)
at org.sufficientlysecure.keychain.ui.ViewKeyActivity$14.onPostExecute(ViewKeyActivity.java:746)
at org.sufficientlysecure.keychain.ui.ViewKeyActivity$14.onPostExecute(ViewKeyActivity.java:732)
at android.os.AsyncTask.finish(AsyncTask.java:632)
at android.os.AsyncTask.access$600(AsyncTask.java:177)
at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:645)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5146)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)
at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,"Crash on initial setup, key generation",[],"App closes with no error (just vanishes) during initial setup when generating a new key.  When opening the app again, it allows you to go through the initial setup again, but with the same result.  This is on a Samsung Galaxy S6.
"
open-keychain/open-keychain,closed,GPG4win / GPG Keychain Import Fails,[],"User can not import key created with Gpg4Win.
He sent a test key by mail. The file with the test key looks suspicious as it contains empty lines (see below).

> Same error on test keys.
> 
> Algorithm: RSA
> Key Size: 3072
> Name: Test
> Email:test@gmail.com mailto:test@gmail.com
> Pass: Testing1
> 
> Created using Gpg4Win (GPA 0.9.7)Â [8ce9480] |Â (GnuPG 2.0.27)

Attached file secret-key-583AF0BE.asc

```
************************************************************************
* WARNING: This file is a backup of your secret key. Please keep it in *
* a safe place.                                                        *
************************************************************************

The key backed up in this file is:

pub   3072R/583AF0BE 2015-07-06

      Key fingerprint = 632A 298D FE9D 21A5 452E  4A4C 9F3D D37B 583A F0BE

uid       [ultimate] Testing <test@gmail.com>

sub   3072R/33AA9380 2015-07-06




-----BEGIN PGP PUBLIC KEY BLOCK-----

Version: GnuPG v2



mQGNBFWa71sBDACvH78y9sJVtr5aZFFKTU19UrzvgPjerUwdNQz3kQzMBI2Gn6rL

xXQCad1YD0Ai1vKCoeYKdD8q3pC4LFCGrg6qM10AfYDBU36yZWoV0L+X6QHHD+rE

y2GfsIRKJUHv3fgAb8An3aVB+j3c4PzKpNYMZjKYkadTucijU01XbN+1Whv+tktp

325ZjJ3MQb1DXpEtc6ddNTTL9IIkBctfswr4C1seaCnNMgPuNPpngKxSFsIarsE5

8Sqlp4tSsdmb9B6IFV+Jt2iaup+ORGrUp73wcj9GCFJrX0uot/8mAhUZ/D9umjNs

o9jgMFK5FKTU9UgN18ZvmPOV9FVyVyrD+8RGdiPnsR2QaZFcLQcBMIs0obK8nN4V

OSnRiOgXujkmtLpRAuPmY/7AgKYju5PyOA3SWrxS3qzQpdvFSIyXo8vs3vSziG8j

4uqwKgF+DXs5FhH0f7HWezAISbAFai/e9HlUYmi9jc5U42EAAOdFuj1sN+vW0lYg

nXBtUAtiohVJYXkAEQEAAbQYVGVzdGluZyA8dGVzdEBnbWFpbC5jb20+iQG5BBMB

CAAjBQJVmu9bAhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQnz3Te1g6

8L5zHwv/RFQavZP6WB8Jw1WMD9p3q8RmHHJrzVCF9BeIANnqjPlUPUXrQE1Bcs82

68uNMKj9vn+lR184vL6opeuxIN/8HozyRPkSA6nXIZCAv6+QnE13hMEbg6SC0QUd

wHzEMH5RdreEM7e4dXkiaECyAgYYnwZ2BWIG1MYyKYrjmehbcjVtVMaNgb08UK33

4xC+/kDQKuqzEYPcr0vfcha5RC8q9rYUIL/3ToxZLTTBG+EDXgbaqZ+6GVqisiyt

eES+jDjlpOck+kLoskg0nnjrW2aASXEbL7UGE4TpSYNsbk4wWkhTpPuOjUZXeKny

7fGqq78HPzMxQi9mEe7pD+eIm8C8clnZ1S05E5epkKFU1QDATGXMWHtVHtXv0nCE

gbXslmW82Gdf9NmeRCJ/xvZ1DR5OSlQO092ciRiVZwdYGN3PZdzJe6uMxqp59yjN

3pSZABpWAcEzrHiMmutV/sMUemG99rREYZdyR2qGmKyJzHIi/P69JncEnre7rvrR

jMbYRW8puQGNBFWa71sBDADePl81On2xx9bGWr3C7sPq9AOllYWsG1CO5y+lO5te

YvDcefhxRsGJcZtOM4xQPAi6jdxG2wKcrIy+71HhKb9sLzvo03wu3DqhgIQTWTnk

rgiwypqZ3e0PJX/mBQFfxIHbTtWh9vHk/zepaTDWO2GMR1/oBvKdT5NMuWK0Y0YF

tfEC9LrHiIbhWXVzzC2pJhZVkh4bQ39v1Vm/AnW8tnxFL3PGnjGl8uqd+eACeIJQ

JsdVRYU6pF15aQ5C7XYwpBctBEGbdra5yeAN3pigL/6Ys1n7Vyyr+ETDxpkkA6xx

lMFhe8KONJa1kWTulY9PE7h1hwmLw22y21mJLqn4Y2cl6M1y3uMO90RKynqDWQDQ

+jkpd3Tf/GtoIooT7dSkj+LoAV3Nq+nlqO7ftJiNvcFcS2gBI5cjRhOUAbCycJW4

I+dETLKx0mHv6WuPwnm4pW2WCfMMzCyqDXjjIWhCgTpZ6m/XFNVrGeVgSAh3X5kq

gA2xLs0nd7cep+WhtTlEtssAEQEAAYkBnwQYAQgACQUCVZrvWwIbDAAKCRCfPdN7

WDrwvrKFC/0ViE3mH+rL2kQWtPvFxLI+B1ol2cYj40QVZr88HXGusvXw3qPNSG0Q

irxHsUTXYxVUmq9kKeoIGfvU5W3ZhARZGCIqh6jSA4KzIOB23ZhGc1x85cx2i/GZ

0eJVBKl9Nuxji7ZggJQSNmVci1Ut23V4+oMAj2Vera/ta3F5ZKBClp4uaR/o2/RF

W0zQjuvpDyUvdcjKsjslPbUwyVoPgPYwClPTRSoVF3EyAsK9ZfjVJKt7Sw+tR3L4

9ci3mbihfxwTathX9hfm80nr0pyxgxpCudAJnL4bzHKZ5zhgjaQbAhgUBlEaMG3N

NZ9MziBD741GrT3UF53W/8JQjiC+PcZ7blsG9rwhY4n+031CeNmWqMlnLbhtmgN1

/+/VR3s7TiIc1h1j3cAXQLiDlm4kC8AfX7T43DwZoWNtau19CB2AfgPLyufCo17j

zS+1Pc2MFSa8MvPfEaA/Kln9CWwwA30/cg+XAxkDHsjm1itn2crhr4uYW7rbzYuH

vFI7Yt2f/ls=

=q+Cl

-----END PGP PUBLIC KEY BLOCK-----


-----BEGIN PGP PRIVATE KEY BLOCK-----

Version: GnuPG v2



lQV+BFWa71sBDACvH78y9sJVtr5aZFFKTU19UrzvgPjerUwdNQz3kQzMBI2Gn6rL

xXQCad1YD0Ai1vKCoeYKdD8q3pC4LFCGrg6qM10AfYDBU36yZWoV0L+X6QHHD+rE

y2GfsIRKJUHv3fgAb8An3aVB+j3c4PzKpNYMZjKYkadTucijU01XbN+1Whv+tktp

325ZjJ3MQb1DXpEtc6ddNTTL9IIkBctfswr4C1seaCnNMgPuNPpngKxSFsIarsE5

8Sqlp4tSsdmb9B6IFV+Jt2iaup+ORGrUp73wcj9GCFJrX0uot/8mAhUZ/D9umjNs

o9jgMFK5FKTU9UgN18ZvmPOV9FVyVyrD+8RGdiPnsR2QaZFcLQcBMIs0obK8nN4V

OSnRiOgXujkmtLpRAuPmY/7AgKYju5PyOA3SWrxS3qzQpdvFSIyXo8vs3vSziG8j

4uqwKgF+DXs5FhH0f7HWezAISbAFai/e9HlUYmi9jc5U42EAAOdFuj1sN+vW0lYg

nXBtUAtiohVJYXkAEQEAAf4DAwITeeAXZysJ0b79x95SduqARUaIGorYxZf4W0p2

Wl8Jow9euJRh0SqHGVVhjcK5nVuYS46oBvvfCN1XWRLNwK1vxRNwzg25l4KSHuFY

6b88JueROVrMBiLFNjpu99vqmrlZd0oum7GBx498sBFruFrr1BxwvPjLfrkVhhps

Hqo+/7VhjmW7OKnJRBUfUrnGquyxPb9glt/hMYjtp3Nt6YYIR6CaanR/1o6MpzE6

/lXM5GBx4m1NN9j9llO7y26OZSr6glcF7hAglaNvHV99+/V2f2OWwcjtfVrV8xrH

k2ms3g5+hfnl+F3MGhloSbg4h8WRt4HdAGWN1aHMwnDEaJkQiE3ZEpZUZq/6DEEw

Ujo70OI6fEW9Rkk7J3kEU/8r4+B7UVpUvCr55hhZpvSksksTnMejKAtdCM7T0pr+

CE/hQzWIyaPhi2v+acSWt/v7q7lNSYDIaIRKskvs7YeoENHpJ8VbH8dkthiNQEIo

nadajSZAnDb6ln5mJ/lkQ0tA4IN/KzblKbmZmphtONfyCIEAE2yqYVmxTMQY5sOE

GMMBTYOR6z6Wrk7goraPfUrQSX0b1r1XWXroQ5sLUu4zdv0/ctD54uRmAjuSdRSw

cEJyaD6NEtf4JNLuufQSX0geW67kh/KbWhBspRxiZ/jorNnxtPZqYP+bcxivKQGE

BegpZLV7CAbUCZ4/W5kXOUiWubhkd3MvpfxEqmN8rL8pjH+CylSyh1MVttzdWvHC

/XGdaoV73NhXwsEb/BwxzmG5mrc/RmPxb3wJ3ip/vKAwYCBW5ElTQVsy9OsKyAwk

/w3vE+xHUD8jCDwVYFeIiteMf8iD+oHzlOGgUNByrQfn0bVUlcUFtc7hJVEXzGYn

AKkDRhdlJVXEzpgYtM2qziRSgmAjibNfWr1CjoIu2KC0hHuLryq+O3f5g71yV+sR

37YZT8WcMozPyjjBh5ahqbE27+FpVSJS+Zi9OrD5bF7iMa/eUe81uSVugtN74Utm

papsZjcOYKik/ungkUSA04K2/kE9tZYg05eiHf04XD4Mn6EpH7cAQwomRTOIFmlq

AC6io4CfhymvPf/uaZpXdfG+UZY4pk8zzl979djeTTFxuNHW7MrYHI6EhrBWquht

5X1OX6IW7lg517iw2Ez+71TJugAKmCUG2/LjwkIpTiI0R1+U6/8Vc61NIsfRimiZ

Bd393n2wd8iXxIgLym+ZsH2QMPEDTgyGDtsHLswsZ3XTlPr31UKsbnIiJ6uoGLaK

6TMkfV7pgadyfIyHIPxBJKjxUzcOvOUR00nTlLIob3eQvy7K8YBtvKz/WQ2HGj6a

E3BL42rtC5y5HZRY2dhaLKi0GFRlc3RpbmcgPHRlc3RAZ21haWwuY29tPokBuQQT

AQgAIwUCVZrvWwIbAwcLCQgHAwIBBhUIAgkKCwQWAgMBAh4BAheAAAoJEJ8903tY

OvC+cx8L/0RUGr2T+lgfCcNVjA/ad6vEZhxya81QhfQXiADZ6oz5VD1F60BNQXLP

NuvLjTCo/b5/pUdfOLy+qKXrsSDf/B6M8kT5EgOp1yGQgL+vkJxNd4TBG4OkgtEF

HcB8xDB+UXa3hDO3uHV5ImhAsgIGGJ8GdgViBtTGMimK45noW3I1bVTGjYG9PFCt

9+MQvv5A0CrqsxGD3K9L33IWuUQvKva2FCC/906MWS00wRvhA14G2qmfuhlaorIs

rXhEvow45aTnJPpC6LJINJ5461tmgElxGy+1BhOE6UmDbG5OMFpIU6T7jo1GV3ip

8u3xqqu/Bz8zMUIvZhHu6Q/niJvAvHJZ2dUtOROXqZChVNUAwExlzFh7VR7V79Jw

hIG17JZlvNhnX/TZnkQif8b2dQ0eTkpUDtPdnIkYlWcHWBjdz2XcyXurjMaqefco

zd6UmQAaVgHBM6x4jJrrVf7DFHphvfa0RGGXckdqhpisicxyIvz+vSZ3BJ63u676

0YzG2EVvKZ0FfgRVmu9bAQwA3j5fNTp9scfWxlq9wu7D6vQDpZWFrBtQjucvpTub

XmLw3Hn4cUbBiXGbTjOMUDwIuo3cRtsCnKyMvu9R4Sm/bC876NN8Ltw6oYCEE1k5

5K4IsMqamd3tDyV/5gUBX8SB207Vofbx5P83qWkw1jthjEdf6AbynU+TTLlitGNG

BbXxAvS6x4iG4Vl1c8wtqSYWVZIeG0N/b9VZvwJ1vLZ8RS9zxp4xpfLqnfngAniC

UCbHVUWFOqRdeWkOQu12MKQXLQRBm3a2ucngDd6YoC/+mLNZ+1csq/hEw8aZJAOs

cZTBYXvCjjSWtZFk7pWPTxO4dYcJi8NtsttZiS6p+GNnJejNct7jDvdESsp6g1kA

0Po5KXd03/xraCKKE+3UpI/i6AFdzavp5aju37SYjb3BXEtoASOXI0YTlAGwsnCV

uCPnREyysdJh7+lrj8J5uKVtlgnzDMwsqg144yFoQoE6Wepv1xTVaxnlYEgId1+Z

KoANsS7NJ3e3HqflobU5RLbLABEBAAH+AwMCE3ngF2crCdG+Xktr7LvYCrQInBMV

SqUSU+eJQeZfWyEQYVxIoKXQpsh5Cy1zkTz72zcvJuK7rauhsgRLBuS4uQJeNVoE

JG9ZZ93Adp2mfsVXl8pM6oSInJ9luyhPCovEy0Q3Bfk76uls1KxDEtY24VvYRi0F

lTPh8vRUPVPzIS6RB/kD8GEbI0EbceaI0PnwMz6FKle6tm9ckk+4bQbbGX4TpMDU

PGqDmobMkVffisUkPsASYCFxxBE+S6lkgvxP43AyrK2ZDOCTchD4t6wamBXgu5YB

1Rn4WCFWR8ajr1MRrAkwQ2KGF/st4UUYsa2/JwyFgQbOD4ROfjzSC0d8R9ua4Qqy

dgwsjNnaFxOQAiUhuksnDPt+nugDJwYdayTuA6vb+JogLH2eRh5Oq7DZJnbin0Tl

p3srzMjogZ3XcdcOP8CWNg0++2wXpxCROuoY8PvfTlIpx8wyAK3PQUnhMlq5Kuln

vKy/itA5UTF8oYFWhQOTBGeLqkw2HV1Ud3kjbkMzkesO7CpWShrWKANSBy1fc7bT

mmF5exTCbIgY04HNGcbSAs44e1H1EBFTtpODyLLHtfJc2db+soyB5KxUHbkb9Sdi

WicuyI05BS/fxtD0SoBBuV1b/mbINAfRDSCBdI4vxixxBupM6HcQCqv5B0wsku9L

R5i2XX2IZ1N2TiTH24I3yNM64+O852vCX1UCxuEQAlA0XWAJ9nwa3rFR4Eg8K9Fz

BZ6ODuZ5883CgNTRbjuw4s8/GhMvzx7Lnwx8JXiJ+zQMRddeztx9LAzzd40aF+Pl

CTBo1cjrLX2A0Fl8zFAf1TF5x+ATLJl45CnKKSt/xctkoFVaf1gPuSlw2qvaipaV

UVm3GFUBUyC5ohu/+2jduzAsHdBYPNlg7hi4dbwnQlx4OzVV3dBPbhu3TBlmmiBM

B6yn4KJMb/Mi4lpUUwmbp67u9rAXycfzj4SAc8vgV2TbxmlnRpVtlZSFJC9r9Uor

qypD3A7qIrucVvUxeAurVpU0PMNQKvUiTfiN3EhHiID9ahhIgLkdMsif/z6a4ZpX

F0yOQpvfK4qGZF/h8oKQR1NSkx7Efa4IX5CEnoLr04xAJXgI//3gK6pKPtmuxD0y

4n+XtIEHgOfSU6Eu/LlG5r9W4hZK1YTwsRRRv+H5cjuYcA5VGk/xkN8ahf0HjhSp

aFU+IWjwZdTrb6xReejPx5gpN5iz8fnHbABbaKjTaFrUqZ/luA7+RgRG561wTwrY

xRup5YzcIlxxBGz5KPxC8sCbwRhxLMtp/cT8eCnRAIiILwbIEnWjrByPJsub8hfT

Bm96byaMK+fY70dEBrk26KXw+ZZqsJariQGfBBgBCAAJBQJVmu9bAhsMAAoJEJ89

03tYOvC+soUL/RWITeYf6svaRBa0+8XEsj4HWiXZxiPjRBVmvzwdca6y9fDeo81I

bRCKvEexRNdjFVSar2Qp6ggZ+9TlbdmEBFkYIiqHqNIDgrMg4HbdmEZzXHzlzHaL

8ZnR4lUEqX027GOLtmCAlBI2ZVyLVS3bdXj6gwCPZV6tr+1rcXlkoEKWni5pH+jb

9EVbTNCO6+kPJS91yMqyOyU9tTDJWg+A9jAKU9NFKhUXcTICwr1l+NUkq3tLD61H

cvj1yLeZuKF/HBNq2Ff2F+bzSevSnLGDGkK50AmcvhvMcpnnOGCNpBsCGBQGURow

bc01n0zOIEPvjUatPdQXndb/wlCOIL49xntuWwb2vCFjif7TfUJ42ZaoyWctuG2a

A3X/79VHeztOIhzWHWPdwBdAuIOWbiQLwB9ftPjcPBmhY21q7X0IHYB+A8vK58Kj

XuPNL7U9zYwVJrwy898RoD8qWf0JbDADfT9yD5cDGQMeyObWK2fZyuGvi5hbutvN

i4e8Ujti3Z/+Ww==

=AriW

-----END PGP PRIVATE KEY BLOCK-----

```
"
open-keychain/open-keychain,closed,PGP files not correctly linked from Total Commander to OpenKeychain?,[],"As part of a mail conversation:
A user was not able to decrypt *.pgp files opened from the file manager ""total commander"". As far as I understand only the key import is shown. From OpenKeychain decryption works.
"
open-keychain/open-keychain,closed,"progress dialog pops up for ""refresh key"" in key view","[Label(name=""bug"")]","see subject
"
open-keychain/open-keychain,closed,Proxy settings improvement,[],"Currently users can change Proxy Host, port and type even when ""Enable other proxy"" is disabled.
These 3 settings should depend on ""Enable other proxy"".
"
open-keychain/open-keychain,closed,Context.getPackageName() on a null object in uploadKey(CreateKeyFinalFragment.java:318),[],"```
java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String android.content.Context.getPackageName()' on a null object reference
at android.content.ComponentName.<init>(ComponentName.java:77)
at android.content.Intent.<init>(Intent.java:4286)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment.uploadKey(CreateKeyFinalFragment.java:318)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment.access$200(CreateKeyFinalFragment.java:57)
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment$4.handleMessage(CreateKeyFinalFragment.java:240)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:135)
at android.app.ActivityThread.main(ActivityThread.java:5289)
at java.lang.reflect.Method.invoke(Native Method)
at java.lang.reflect.Method.invoke(Method.java:372)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
```

the uploadKey method looks highly suspicious all around :hurtrealbad: 
"
open-keychain/open-keychain,closed,Allow any operation without any private key,[],"As discussed in #947 there is no reason why you should need a private key on your mobile to do things like encrypt and verify sigs. (Reasons, why you should't even import a key are discussed in #975). And there is no reason, why you should need a key which apts to your sender email address to sign the mail or receivers email address to decrypt a mail (K9 mail).

Please remove these false dependencies.
"
open-keychain/open-keychain,open,Add proxy functionaity to minidns library,[],"Part of https://github.com/open-keychain/open-keychain/issues/1289. We need to add proxy support to domain resolution (the `resolve`) function in `HkpKeyserver`. As of now, this would involve adding proxy support to the minidns library, which is in the works here: https://github.com/mar-v-in/minidns/tree/my-dev/, with the relevant code in `minidns-core/src/main/java/de/measite/minidns/source`.

P.S. The `resolve` function is only used in `EmailKeyHelper` which is currently unused.
"
open-keychain/open-keychain,closed,OpenPGP error: signing subkey not found!,[],"From https://plus.google.com/+EmmanuelBOUAZIZ/posts/SQPHBGhFyC8

```

Hello,

I try to use K-9 mail 5.006 and OpenKeyChain 3.3 on a KitKat Android device (custom ROM).

I created the private keys, imported the recipient public key, composed an email, checked sign and cipher, allowed K-9 to access the keys, and when I hit the send button, the following message is displayed at the bottom of the screen:
""OpenPGP error: signing subkey not found!""
I tested with all kinds and sizes of new keys, with keys generated on my laptop, I get the same result.

If I decide not to sign, I get another error:
""OpenPGP error: missing encryption key for %s"" (or something like that, the message is displayed in french on my device)

The strangest thing is that when I receive a message, the deciphering and signature verification work correcttly!

Any idea ?
Thanks :)﻿
```
"
open-keychain/open-keychain,closed,Caching symmetric encryption passwords does not work,[],"We actually have something implemented here: https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/service/PassphraseCacheService.java#L236
But the password is not retrieved correctly when decrypting.
Not sure if we actually want to fix this or get rid of this functionality.
"
open-keychain/open-keychain,closed,Fixe Keyserver Preference crash on empty list,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1398.
I've made it accept already existing empty keyserver preferences (in case someone updating has 0 keyservers), but it won't let you delete if you have only 1 keyserver. Having 0 keyservers was unchecked in all places where `getPreferredKeyserver` was being used. Since we were shifting to ""at least 1 keyserver"", I've left them that way, is that okay?
"
open-keychain/open-keychain,closed,Kill search threads that have not returned,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1161.
"
open-keychain/open-keychain,closed,Keyserver preference: Crashes on empty list,[],"1. Delete all keyservers
2. Go back and open keyserver preference again -> crash

Assigned to @adithyaphilip 
"
open-keychain/open-keychain,closed,NullPointerException in CryptoOperationFragment,[],"From G Play

""keeps crashing on decrypt""
Android 5, Galaxy S5 (kltespr) 

```
java.lang.NullPointerException: Attempt to invoke virtual method 'boolean org.sufficientlysecure.keychain.operations.results.OperationResult.success()' on a null object reference
at org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment.onCryptoOperationResult(CryptoOperationFragment.java:191)
at org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment.onHandleResult(CryptoOperationFragment.java:222)
at org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment$1.handleMessage(CryptoOperationFragment.java:163)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:145)
at android.app.ActivityThread.main(ActivityThread.java:5835)
at java.lang.reflect.Method.invoke(Native Method)
at java.lang.reflect.Method.invoke(Method.java:372)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
```
"
open-keychain/open-keychain,closed,Fix CryptoOperationFragment infinite recursion,[],"Infinite recursion. Terrible mistake. Should fix https://github.com/open-keychain/open-keychain/issues/1388.
"
open-keychain/open-keychain,closed,Reworked Keyserver Preferences,[],"Corresponds to https://github.com/open-keychain/open-keychain/issues/1288.
This is what it looks like now:
![screenshot_2015-07-02-01-16-44](https://cloud.githubusercontent.com/assets/5712241/8464284/9c81db32-205e-11e5-99db-7d8b31f7643b.png)
![screenshot_2015-07-02-00-25-43](https://cloud.githubusercontent.com/assets/5712241/8464285/9d2c1d90-205e-11e5-8950-7d06b73222af.png)
Notable difference from earlier implementation - there is no save button. It saves to preferences every time a change is made.
"
open-keychain/open-keychain,closed,OpenKeychain won't assign a key to K9 account,[],"I'm trying to set up encrypting in K9, but it doesn't seem to work.

Initially, after setting 'OpenPGP provider' option in K9 settings and trying to send my first mail encrypted with OK, it prompts OK to configure a new account for K9. After I set my key it returns to K9, but K9 pops 'OpenPGP Error: signing subkey not found!' toast immediately.
Then, when I try to assign my key manually in OK 'Apps' settings, it gives me 'Account has been saved', but again won't actually save.

BTW, didn't have such problem with APG.
Android 4.2.2, OpenKeychain 3.3 & K9 5.006
"
open-keychain/open-keychain,closed,yubikey pin/admin pin thoughts,"[Label(name=""discussion"")]","warning, wall of text incoming :hurtrealbad: 

so, one important part of yubikey workflows is how we handle pin and admin pin. dominik and I discussed this, but we'd like to hear more thoughts on this if anyone cares (ping @josecastillo and @jas4711)

so, a couple of general thoughts first:
- usability, usability, usability. this is the prime directive.
- we want to provide a truly complete solution for yubikeys at some point, the user should not have to do any part of the workflow with gpg
- use of default pins (123456 or 12345678 admin) is unacceptable
- 6 digits is the minimum length for pins, 8 for admin pins ([click](https://github.com/Yubico/ykneo-openpgp/blob/master/applet/src/openpgpcard/OpenPGPApplet.java#L78))
- no pin is required for setup if we do a factory reset
- (for the record) even though they are called ""pins"", technically any password can be used. we will stick to numeric pins though

following these thoughts, here's the workflow we came up with:
- in the yubikey creation wizard, the yubikey will first be factory reset. this follows a ""might as well"" logic, since we don't care about special scenarios like only changing specific subkeys
- we will then set the pin and admin pin to generated ones with 6 respectively 10 digits. (it makes no sense to ask the user to input their own here)
- the first 6 digits of the admin pin are the same as the regular pin(!!)
- the user will be asked to write down the admin pin, and in the next dialog asked to input both pins for verification

the idea here is that from a security point of view, the admin pin has strictly more privileges than the regular pin, and can be used to brute force the regular pin. if an attacker finds the written down admin pin he gains no useful information by also knowing the regular pin at that point. on the other hand, the user will have written down the regular pin implicitly, which helps remembering it later, and allows the user to look it up if they forget instead of being required to change it.

a thought along the way was that 4 digit pins would actually suffice since 6 digits are already hard to remember and three attempts rule out brute forcing, but this is not something we can do due to the required minimum of 6 digits.
"
open-keychain/open-keychain,closed,Crash when holding yubikey while in ViewKey,[],"Already in ViewKeyActivity after holding a YubiKey against OK.
If I hold it again -> crash

```
 11700         AndroidRuntime  E  java.lang.AssertionError: should not happen: NfcOperationActivity.onCreate is called instead of onNewIntent!
 11700         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.base.BaseNfcActivity.onCreate(BaseNfcActivity.java:84)
 11700         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.ViewKeyActivity.onCreate(ViewKeyActivity.java:146)
 11700         AndroidRuntime  E  at android.app.Activity.performCreate(Activity.java:5990)
 11700         AndroidRuntime  E  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1106)
 11700         AndroidRuntime  E  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2309)
 11700         AndroidRuntime  E  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2418)
 11700         AndroidRuntime  E  at android.app.ActivityThread.access$900(ActivityThread.java:154)
 11700         AndroidRuntime  E  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)
 11700         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 11700         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
 11700         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5293)
 11700         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
 11700         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
 11700         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 11700         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
```
"
open-keychain/open-keychain,closed,NullPointerException in DecryptActivity,[],"From G Play

```
java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.DecryptActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2198)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2257)
at android.app.ActivityThread.access$800(ActivityThread.java:139)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1210)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5097)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.DecryptActivity.handleActions(DecryptActivity.java:127)
at org.sufficientlysecure.keychain.ui.DecryptActivity.onCreate(DecryptActivity.java:61)
at android.app.Activity.performCreate(Activity.java:5248)
at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1110)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2162)
... 11 more
```
"
open-keychain/open-keychain,closed,Crash on non-pgp file for decryption,[],"This bug happens in current master but not in our current stable release 3.3.
I think this has been introduced by the operations pull request.

Reproduce:
Select non-pgp file for decryption

```
  8770         AndroidRuntime  E  FATAL EXCEPTION: Thread-12055
  8770         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug, PID: 8770
  8770         AndroidRuntime  E  java.lang.ArrayIndexOutOfBoundsException: length=128; index=227
  8770         AndroidRuntime  E  at org.spongycastle.bcpg.ArmoredInputStream.decode(ArmoredInputStream.java:86)
  8770         AndroidRuntime  E  at org.spongycastle.bcpg.ArmoredInputStream.read(ArmoredInputStream.java:451)
  8770         AndroidRuntime  E  at org.spongycastle.bcpg.BCPGInputStream.nextPacketTag(BCPGInputStream.java:114)
  8770         AndroidRuntime  E  at org.spongycastle.openpgp.PGPObjectFactory.nextObject(PGPObjectFactory.java:101)
  8770         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.decryptVerify(PgpDecryptVerify.java:318)
  8770         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.executeInternal(PgpDecryptVerify.java:153)
  8770         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.execute(PgpDecryptVerify.java:115)
  8770         AndroidRuntime  E  at org.sufficientlysecure.keychain.pgp.PgpDecryptVerify.execute(PgpDecryptVerify.java:77)
  8770         AndroidRuntime  E  at org.sufficientlysecure.keychain.service.KeychainNewService$1.run(KeychainNewService.java:111)
  8770         AndroidRuntime  E  at java.lang.Thread.run(Thread.java:818)
  741         ActivityManager  W  Force finishing activity 1 org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.DecryptActivity
```
"
open-keychain/open-keychain,closed,NullPointerException in DecryptListFragment,[],"Looks like this is the bug mentioned on the mailinglist.

Moto X (ghost)

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.os.AsyncTask$3.done(AsyncTask.java:300)
at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
at java.util.concurrent.FutureTask.run(FutureTask.java:242)
at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
at java.lang.Thread.run(Thread.java:818)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String android.net.Uri.getHost()' on a null object reference
at android.os.Parcel.readException(Parcel.java:1555)
at android.os.Parcel.readException(Parcel.java:1502)
at android.content.pm.IPackageManager$Stub$Proxy.queryIntentActivities(IPackageManager.java:2734)
at android.app.ApplicationPackageManager.queryIntentActivitiesAsUser(ApplicationPackageManager.java:565)
at android.app.ApplicationPackageManager.queryIntentActivities(ApplicationPackageManager.java:557)
at org.sufficientlysecure.keychain.ui.DecryptListFragment$1.doInBackground(DecryptListFragment.java:315)
at org.sufficientlysecure.keychain.ui.DecryptListFragment$1.doInBackground(DecryptListFragment.java:289)
at android.os.AsyncTask$2.call(AsyncTask.java:288)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
... 4 more
```
"
open-keychain/open-keychain,closed,Unable to confirm keys.,[],"Is there anybody can confirm a key by fpr? I can't since I upgrade to 3.3 from Play Store.
Neither yubikey nor normal key pair can make confirmation successfully, both stuck at ""building key…...""

Make confirmation by QR code didn't tried.
"
open-keychain/open-keychain,closed,Add visual element to verify the re-typed password. Refer #1357.,[],
open-keychain/open-keychain,closed,open-keychain hangs after imputting PIN for Yubikey and touching the phone with it (from #1286),[],"continuation of an ""open-keychain hangs after imputting PIN for Yubikey and touching the phone with it #1286""
reproduced on ver. 3.3

crash report sent from mezinster@gmail.com
"
open-keychain/open-keychain,closed,NullPointerException in PassphraseCacheService,[],"```
 20134         AndroidRuntime  E  FATAL EXCEPTION: main
 20134         AndroidRuntime  E  Process: org.sufficientlysecure.keychain.debug:passphrase_cache, PID: 20134
 20134         AndroidRuntime  E  java.lang.RuntimeException: Error receiving broadcast Intent { act=org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_BROADCAST flg=0x14 (has extras) } in org.sufficientlysecure.keychain.service.PassphraseCacheService$2@390e5242
 20134         AndroidRuntime  E  at android.app.LoadedApk$ReceiverDispatcher$Args.run(LoadedApk.java:877)
 20134         AndroidRuntime  E  at android.os.Handler.handleCallback(Handler.java:739)
 20134         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:95)
 20134         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
 20134         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5293)
 20134         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
 20134         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
 20134         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 20134         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 20134         AndroidRuntime  E  Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'org.sufficientlysecure.keychain.util.Passphrase org.sufficientlysecure.keychain.service.PassphraseCacheService$CachedPassphrase.getPassphrase()' on a null object reference
 20134         AndroidRuntime  E  at org.sufficientlysecure.keychain.service.PassphraseCacheService.timeout(PassphraseCacheService.java:464)
 20134         AndroidRuntime  E  at org.sufficientlysecure.keychain.service.PassphraseCacheService.access$000(PassphraseCacheService.java:83)
 20134         AndroidRuntime  E  at org.sufficientlysecure.keychain.service.PassphraseCacheService$2.onReceive(PassphraseCacheService.java:326)
 20134         AndroidRuntime  E  at android.app.LoadedApk$ReceiverDispatcher$Args.run(LoadedApk.java:867)
 20134         AndroidRuntime  E  ... 8 more

```
"
open-keychain/open-keychain,closed,Nullpointer in DecryptActivity,[],"```
 AndroidRuntime  E  java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain.debug/org.sufficientlysecure.keychain.ui.DecryptActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'int android.content.ClipData.getItemCount()' on a null object reference
  4476         AndroidRuntime  E  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2298)
  4476         AndroidRuntime  E  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2360)
  4476         AndroidRuntime  E  at android.app.ActivityThread.access$800(ActivityThread.java:144)
  4476         AndroidRuntime  E  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1278)
  4476         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
  4476         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
  4476         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5221)
  4476         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
  4476         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
  4476         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)
  4476         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)
  4476         AndroidRuntime  E  Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'int android.content.ClipData.getItemCount()' on a null object reference
  4476         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.DecryptActivity.handleActions(DecryptActivity.java:127)
  4476         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.DecryptActivity.onCreate(DecryptActivity.java:61)
  4476         AndroidRuntime  E  at android.app.Activity.performCreate(Activity.java:5933)
  4476         AndroidRuntime  E  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1105)
  4476         AndroidRuntime  E  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2251)
  4476         AndroidRuntime  E  ... 10 more
```
"
open-keychain/open-keychain,open,"People can't find ""paste key from clipboard""",[],"We had reviews on G Play and comments from people that could not find how to paste keys from clipboard. We should improve this situation somehow.
"
open-keychain/open-keychain,closed,YubiKey creation: PIN/Admin PIN,[],"Create a screen for the create key wizard that shows a random PIN + Admin PIN (first numbers of Admin PIN = PIN).
Next screen: User needs to type in these PINs to prove that she has remembered them.

Add PIN/Admin PIN back end functionality for SaveKeyringParcel to apply them after moving the keys to the card.

Assigned to myself.
"
open-keychain/open-keychain,open,Multi decrypt: Dialog on insecure input before ACTION_VIEW,[],"If a key is not valid anymore a big overlay is shown in decrypt text UI. This should also be implemented for a new file decryption UI. See 0d6d465
"
open-keychain/open-keychain,open,Multi decrypt: Detached file signatures,[],"Allow the verification of detached file signatures:
If the user selects a detached signature file like ""xxx.sig"" via ""Select input file"", OpenKeychain should ask for the original file afterwards.
Then verify the detached signature and show result in our new multi decrypt design.
"
open-keychain/open-keychain,closed,K-9 Mail: Sign emails,[],"PGP emails sent using K9 + OpenKeychain do not appear signed in other email clients.
"
open-keychain/open-keychain,closed,"add ""mouseover"" hints to buttons","[Label(name=""enhancement""), Label(name=""help wanted""), Label(name=""user interface"")]","for icons in the action bar, android has built-in support to show hints on ""mouseover"" (or ""longclick"" or ""hover"" or whatever you wanna call it). we have a bunch of actions which are displayed as an icon, like the icons in key view, or all the multi-buttons, which are sometimes non-obvious in their meaning, so it would be nice to have mouseover hints for these.

android does not have built-in support for this, but someone extracted the code used in the actionbar as a snippet, which can be applied as onLongClick listener and shows the contentDescription tag: https://gist.github.com/hastoukopsaro/7910233

this task is a nice low hanging fruit, it should be possible to do without spending hours of getting to know our codebase or android intrinsics, and produces immediate visible results. if you have been lurking around our issue tracker for a while and always wanted to contribute, here's your place to start! :+1:
"
open-keychain/open-keychain,closed,verify files and text,[],"I don't know if this is a duplicate or related to other issues...

I'm missing a functionality to verify files and text.
"
open-keychain/open-keychain,closed,Multi decrypt: Paste cleartext signature from clipboard not working,[],"It is displayed `<no filename>` and no action on touch. We would like to allow the DecryptTextActivity to handle this.
"
open-keychain/open-keychain,closed,Multi decrypt: File cannot be opened after certain actions,"[Label(name=""bug"")]","1. Encrypt 2 files and share with ""Decrypt with OpenKeychain""
2. Click on the overflow menu of one file and select ""Save file""
3. abort this by clicking back until you are back in OK
4. File cannot be opened anymore

While other files are being decrypting you also cannot already click on a finished file, maybe this is related. Haven't looked into the code yet.
"
open-keychain/open-keychain,closed,Add theme setting with light and dark theme,[],"This tries to refactor the theming a bit, moving away from fixed colours (except where it makes sense, such as key flags) and using attributes instead that the theme can override.

Relevant changes:
- a theme setting (light and dark, light is default)
- ~~while working on the settings I noticed that the Advanced preferences section was misnamed (it's not only ""password caching""), so renamed it to ""Advanced"", reflecting the internal naming of the respective fragment~~
- BaseActivity now will re-create the activity if it notices a theme change `onResume()`
- the light theme is almost identical to OpenKeychain theme, but for these adjustments:
  - the pure white toolbar in the Encrypt/Decrypt view is slightly darker, because the full white drowned out the system's notification bar, now it is still close to white but the bar is visible on top of it
  - removed the superfluous divider in the decrypt files view
  - reduced the large double-separator in the import keys view to be a normal thin divider, consistent with the rest of the GUI, also adjusted the divider at the bottom to match it
  - the background in the import keys view now also honours the light theme, previously it used white directly
"
open-keychain/open-keychain,closed,Add debug app name,[],"That way debug builds can be distinguished from the release version by name as well.

Also a minor refactoring, explicitly importing ""R"" an ""BuildConfig"" by FQN where that wasn't the case.
"
open-keychain/open-keychain,closed,Can't go back via toolbar from ImportKeysActivity,[],"The ""back"" arrow in the toolbar doesn't seem to do anything. The system ""back"" button works still.

I didn't see anything obvious in the code that would explain this behaviour.
"
open-keychain/open-keychain,closed,"When Yubikey responds with ""NFC Error: bad PIN"", OpenKeyChain offers no PIN Dialog.",[],"Tapping the Yubikey again will try the same wrong PIN, which will quickly lead to the key being locked.
"
open-keychain/open-keychain,closed,"Key menu: allow local signing, or locally assign trust value (confirm fingerprint locally)",[],"As an OKC user, when I imported a public key, I can manually (or with QR code) check the fingerprint of the imported key.

I wish to preserve (store) this ""yes, I have confirmed that the fingerprint of this key is correct"" information **locally**, i.e. without the step of signing the public key with my key and retransmitting/updating the public key on the key servers.
### Problem

The current OKC software does not allow to store a local trust (fp confirmation information).
### Proposal

Allow to add a ""local fingerprint confirmation"" or similar trust value information, without the need to resend to keyservers.
"
open-keychain/open-keychain,closed,Encrypting to all valid subkeys instead of encrypting to just one subkey,"[Label(name=""enhancement"")]","OKC mode: public key encryption to a user, which key has two subkeys for encryption.

I noticed a problem with a public key when **two subkeys for encryption exist**.
### Bug/Problem

OKC appears to use the first subkey-for-encryption, however, I want to encrypt with the second subkey. (remark only: the underlying problem is that the recipient has for some reason only the second private subkey available, because she uses an OpenPGP card, and only the second key-for-encryption/decryption is stored on that).
### Proposal

In the key maintenance submenu (extended key view, where OKC shows the subkeys):
- if more than one subkey for encryption exists, allow the OKC user to select one of the subkeys to be used for encryption
"
open-keychain/open-keychain,closed,OpenKeychain asks **twice** for key (password) when decrypting a file with symmetric encryption,[],"- OKC version 3.2.3 (323000)
- HUAWEI P8 LITE smartphone with Android 5.0

I wanted to decrypt a <file.txt> which I encrypted previously with `gpg -c <file.txt>` . Then I stored `file.txt.gpg` on the Smartphone

OKC behaviour was:
- I was prompted to enter the key.
- OKC showed the original filename `file.txt` and created it.
- filesize is 0 bytes
- **BUG: OKC now prompts a second time for the key.**
- Only now the file is correctly decrypted and stored as `file.txt` with the original data.
"
open-keychain/open-keychain,closed,Fixed fingerprint mismatch on web download of keys,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1365. Key query had fingerprint in caps but we use lower case internally.
"
open-keychain/open-keychain,closed,Revoked and expired keys can be selected in signed by spinner,[],"Regression bug: Revoked and expired keys can be selected in the ""signed by spinner"".
"
open-keychain/open-keychain,closed,Bug: Cannot add some PGP key from browser,"[Label(name=""bug"")]","- Using Firefox 38.0.5
- https://www.ibr.cs.tu-bs.de/users/schuerm/
- Long Press onto link to PGP signature
- Click ""Mit App 'Schlüssel importieren mit OpenKeychain' öffnen""
- App finds key correctly on server
- Press the download button in lower right corner
- Import fails
- Log says:
  Schlüssel wird importiert
    Schlüsselserver hkps.pool.sks-keyserver.net wird verwendet
       Von einem Schlüsselserver abrufen: 0x...
          Schlüsselabruf erfolgreich!
       Fingerabdruck des abgerufenen Schlüssels entspricht nicht dem Erwarteten!
    Importieren fehlgeschlagen!
"
open-keychain/open-keychain,closed,crashes on approve by fingerprint,[],"When I select ""approve key by comparing fingerprint"" (über fingerabdruckvergleich bestätigen), then ""fingerprints match"", uncheck ""sycn with cloud"", ""approve"", I get ""openkeychain crashed""
"
open-keychain/open-keychain,closed,K-9 Mail: Encrypt attachments,[],"Currently in K-9 attachments are not encrypted and a toast pops up warning the user of the situation if they try to attach something to an encrypted email. 

This should be fixed considering OpenKeychain already has the functionality to encrypt binary files.
"
open-keychain/open-keychain,closed,Migrated all operations to KeychainNewService,[],"All operations have been migrated to KeychainNewService (now renamed to KeychainService).
- Key import and export/upload tested - both from file and cloud.
- Key Certification by fingerprint fixed and tested.
- File encryption/decryption working.
- Key editing tested and working.
- Consolidation works great.
- Key deletion tested and working.

Couldn't test:
- `PromoteKeyOperation` since it required a YubiKey.
- `KeybaseVerificationOperation` because our Keybase search seems to be crashing as of now with https://github.com/open-keychain/open-keychain/issues/1361, for me anyway.
"
open-keychain/open-keychain,closed,Keybase Search Crashing,"[Label(name=""upstream bug"")]","Keybase search always fails with:

```
06-24 07:45:28.509  19491-20002/org.sufficientlysecure.keychain.debug E/Keychain D﹕ keybase result parsing error
    com.textuality.keybase.lib.KeybaseException: JSON error in Keybase query
            at com.textuality.keybase.lib.Match.getBitStrength(Match.java:85)
            at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.makeEntry(KeybaseKeyserver.java:79)
            at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.search(KeybaseKeyserver.java:53)
            at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.search(KeybaseKeyserver.java:32)
            at org.sufficientlysecure.keychain.keyimport.CloudSearch$1.run(CloudSearch.java:53)
            at java.lang.Thread.run(Thread.java:856)
     Caused by: org.json.JSONException: No value for nbits
            at org.json.JSONObject.get(JSONObject.java:354)
            at org.json.JSONObject.getInt(JSONObject.java:443)
            at com.textuality.keybase.lib.JWalk.getInt(JWalk.java:47)
            at com.textuality.keybase.lib.Match.getBitStrength(Match.java:83)
            at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.makeEntry(KeybaseKeyserver.java:79)
            at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.search(KeybaseKeyserver.java:53)
            at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.search(KeybaseKeyserver.java:32)
            at org.sufficientlysecure.keychain.keyimport.CloudSearch$1.run(CloudSearch.java:53)
            at java.lang.Thread.run(Thread.java:856)
```
"
open-keychain/open-keychain,closed,New all-white status bar icon to fix issue #1356,[],"This implements the fix proposed and used by mirakel, to solve issue #1356, I did take a function from mirakel, but both projects are GPLv3 so there are no problems at all.

I'm not an artist, so I took a creative commons icon from the noun project and gave the required credit in the readme, I of course couldn't care less what icon is actually used, as long as it doesn't cause a crash like the current icon does.  I converted the SVG using the inkscape commands from update-drawables.sh

Let me know what else if anything is required to get this merged.
"
open-keychain/open-keychain,closed,Crash on Confirming Match of Yubikey to Downloaded Key from Server,[],"I am trying to BIND my YubiKey to the Key in Openkeychain.
App Crashes while holding a key near NFC-enabled phone and the same time pressing the ""BIND KEY"" button.

Google Nexus 4
Cyanogenmod 10.2.1-mako
Android 4.3.1
Openkeychain 3.2.3 from F-Droid
"
open-keychain/open-keychain,closed,NullPointerException when trying to bind yubikey,[],"I added encryption and signing keys to my yubikey neo (on my PC) and now wanted to bind the yubikey to OpenKeychain.

I selected ""Use Yubikey Neo"", tapped it on the back of the phone, it showed the correct public key. I clicked ""import"". After clicking on ""Bind key"", OpenKeychain crashes. Logcat below:

```
V/Zygote  (14634): Switching descriptor 33 to /dev/null
V/Zygote  (14634): Switching descriptor 10 to /dev/null
I/ActivityManager(  589): Start proc org.sufficientlysecure.keychain:sync for service org.sufficientlysecure.keychain/.service.ContactSyncAdapterService: pid=14634 uid=10184 gids={50184, 3003, 1028, 1015, 1006}
I/Timeline(14541): Timeline: Activity_launch_request id:org.sufficientlysecure.keychain time:1104672
I/ActivityManager(  589): START u0 {dat=content://org.sufficientlysecure.keychain.provider/key_rings/-8506638095145428961 cmp=org.sufficientlysecure.keychain/.ui.ViewKeyActivity (has extras)} from pid 14541
D/NfcDispatcher( 1015): Set Foreground Dispatch
W/InputMethodManagerService(  589): Window already focused, ignoring focus gain of: com.android.internal.view.IInputMethodClient$Stub$Proxy@4291b6f8 attribute=null, token = android.os.BinderProxy@4240dcb0
I/dalvikvm(14541): Could not find method android.app.ActivityOptions.makeSceneTransitionAnimation, referenced from method org.sufficientlysecure.keychain.ui.ViewKeyActivity.showQrCodeDialog
W/dalvikvm(14541): VFY: unable to resolve static method 109: Landroid/app/ActivityOptions;.makeSceneTransitionAnimation (Landroid/app/Activity;Landroid/view/View;Ljava/lang/String;)Landroid/app/ActivityOptions;
D/dalvikvm(14541): VFY: replacing opcode 0x71 at 0x0012
D/ActivityThread(14634): handleBindApplication:org.sufficientlysecure.keychain:sync
D/ActivityThread(14634): setTargetHeapUtilization:0.75
D/ActivityThread(14634): setTargetHeapMinFree:2097152
I/ViewUtils(14541): app:theme is now deprecated. Please move to using android:theme instead.
I/ViewUtils(14541): app:theme is now deprecated. Please move to using android:theme instead.
I/dalvikvm(14541): Could not find method android.nfc.NfcAdapter.invokeBeam, referenced from method org.sufficientlysecure.keychain.util.NfcHelper.invokeNfcBeam
W/dalvikvm(14541): VFY: unable to resolve virtual method 1252: Landroid/nfc/NfcAdapter;.invokeBeam (Landroid/app/Activity;)Z
D/dalvikvm(14541): VFY: replacing opcode 0x6e at 0x006d
I/dalvikvm(14541): Could not find method android.view.View.getElevation, referenced from method com.nispok.snackbar.Snackbar.showInternal
W/dalvikvm(14541): VFY: unable to resolve virtual method 15151: Landroid/view/View;.getElevation ()F
D/dalvikvm(14541): VFY: replacing opcode 0x6e at 0x0014
D/NfcDispatcher( 1015): Set Foreground Dispatch
I/ActivityManager(  589): Displayed org.sufficientlysecure.keychain/.ui.ViewKeyActivity: +310ms
D/ALSADevice(  229): standby: handle 0xb8adeb10 h 0x0
D/alsa_ucm(  229): snd_use_case_set(): uc_mgr 0xb8aba3a0 identifier _verb value Inactive
D/alsa_ucm(  229): Set mixer controls for HiFi Lowlatency enable 0
D/alsa_ucm(  229): Setting mixer control: SLIMBUS_0_RX Audio Mixer MultiMedia5, value: 0
D/alsa_ucm(  229): snd_use_case_set(): uc_mgr 0xb8aba3a0 identifier _disdev value Speaker
D/alsa_ucm(  229): Set mixer controls for Speaker enable 0
D/alsa_ucm(  229): Setting mixer control: RX5 MIX1 INP1, value: ZERO
D/alsa_ucm(  229): Setting mixer control: RX5 MIX1 INP2, value: ZERO
D/alsa_ucm(  229): Setting mixer control: LINEOUT2 Volume, value: 0
D/alsa_ucm(  229): Setting mixer control: LINEOUT4 Volume, value: 0
D/alsa_ucm(  229): Setting mixer control: RX5 Digital Volume, value: 0
D/AudioUsbALSA(  229): exitPlaybackThread, mproxypfdPlayback: -1
D/AudioUsbALSA(  229): closeDevice handle 0x0
D/AudioUsbALSA(  229): closeDevice handle 0x0
I/Timeline(14541): Timeline: Activity_idle id: android.os.BinderProxy@41d4bf38 time:1105157
I/Timeline(  589): Timeline: Activity_windows_visible id: ActivityRecord{42992690 u0 org.sufficientlysecure.keychain/.ui.ViewKeyActivity t26} time:1105321
W/dalvikvm(14541): threadid=19: thread exiting with uncaught exception (group=0x41749ce0)
E/AndroidRuntime(14541): FATAL EXCEPTION: IntentService[KeychainIntentService]
E/AndroidRuntime(14541): Process: org.sufficientlysecure.keychain, PID: 14541
E/AndroidRuntime(14541): java.lang.NullPointerException
E/AndroidRuntime(14541):        at org.spongycastle.openpgp.PGPSecretKeyRing.insertSecretKey(PGPSecretKeyRing.java:337)
E/AndroidRuntime(14541):        at org.sufficientlysecure.keychain.pgp.CanonicalizedPublicKeyRing.createDivertSecretRing(CanonicalizedPublicKeyRing.java:117)
E/AndroidRuntime(14541):        at org.sufficientlysecure.keychain.operations.PromoteKeyOperation.execute(PromoteKeyOperation.java:87)
E/AndroidRuntime(14541):        at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:484)
E/AndroidRuntime(14541):        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
E/AndroidRuntime(14541):        at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(14541):        at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(14541):        at android.os.HandlerThread.run(HandlerThread.java:61)
W/ActivityManager(  589):   Force finishing activity org.sufficientlysecure.keychain/.ui.ViewKeyActivity
D/NfcDispatcher( 1015): Set Foreground Dispatch
I/Timeline( 1030): Timeline: Activity_idle id: android.os.BinderProxy@41ba9208 time:1107328
I/Timeline(  589): Timeline: Activity_windows_visible id: ActivityRecord{4200c3c8 u0 com.cyanogenmod.trebuchet/org.cyanogenmod.trebuchet.CustomHomeLauncher t1} time:1107746
```
"
open-keychain/open-keychain,closed,Visual element to verify if the rewritten password matches.,"[Label(name=""enhancement""), Label(name=""help wanted"")]","What are your thoughts on this?
"
open-keychain/open-keychain,closed,Fix crash when using icon theme with mask for unknown icons,[],"I've experienced crashes in openkeychain when using the icon theme provided by [TwelF](https://gitlab.com/xphnx/twelf_cm12_theme).

```
[snip]
W/StatusBarIconView(2244): Icon not found in 2130837623: 7f020077
W/StatusBarIconView(2244): No icon for slot org.sufficientlysecure.keychain/0x1
W/StatusBar(2244): removeNotification for unknown key: 0|org.sufficientlysecure.keychain|1|null|10101
D/NotificationService(954): onNotification error pkg=org.sufficientlysecure.keychain tag=null id=1; will crashApplication(uid=10101, pid=27442)
D/AndroidRuntime(27442): Shutting down VM
E/AndroidRuntime(27442): FATAL EXCEPTION: main
E/AndroidRuntime(27442): Process: org.sufficientlysecure.keychain:passphrase_cache, PID: 27442
E/AndroidRuntime(27442): android.app.RemoteServiceException: Bad notification posted from package org.sufficientlysecure.keychain: Couldn't create icon: StatusBarIcon(pkg=org.sufficientlysecure.keychainuser=0 id=0x7f020077 level=0 visible=true nu
m=0 )
E/AndroidRuntime(27442):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1484)
E/AndroidRuntime(27442):     at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(27442):     at android.os.Looper.loop(Looper.java:135)
E/AndroidRuntime(27442):     at android.app.ActivityThread.main(ActivityThread.java:5289)
E/AndroidRuntime(27442):     at java.lang.reflect.Method.invoke(Native Method)
E/AndroidRuntime(27442):     at java.lang.reflect.Method.invoke(Method.java:372)
E/AndroidRuntime(27442):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
E/AndroidRuntime(27442):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
E/AndroidRuntime(27442):     at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:117)
```

This seems to be a rather common issue on mostly - if not only - cyanogenmod devices:
- [CYAN-6506](https://jira.cyanogenmod.org/browse/CYAN-6506)
- [BACON-2897](https://jira.cyanogenmod.org/browse/BACON-2897) (more clues here)

Apparently this is a known issue which has been reported on the TwelF issue tracker and a workaround(?) has been [provided](https://gitlab.com/xphnx/twelf_cm12_theme/issues/66):

> So you only have to change in the most common situation/for example
> 
> ```
> .setSmallIcon(R.drawable.ic_launcher)
> ```
> 
> to
> 
> ```
> .setSmallIcon(R.drawable.ic_stat_notify)
> .setLargeIcon(Helpers.getBitmap(R.drawable.ic_launcher, getBaseContext()))
> ```
> 
> and add a simplified white icon as ""ic_stat_notify.png"".
"
open-keychain/open-keychain,open,better docs for decrypt_metadata,[],"we should point out unmistakenably that this method does not verify signatures or even modification detection, but returns immediately after finding the filename of the encrypted file.
"
open-keychain/open-keychain,open,Trusted Device locks keychain ,[],"It would be excellent if I could configure my smartwatch (or any Trusted Device) to keep my keychain unlocked.

This workflow would be AWESOME, I think. OpenKeyChain could be configured to cache password ""Until Trusted Device Unpairs"" or something (instead of Forever or 8 hours). Enter it once, then as long as the watch (or other device) is paired, keep the keychain unlocked. As soon as the device is gone, close it so if your phone is stolen or lost your keychain locks automatically.

Thoughts? This is something I would love to help with if it makes sense.
"
open-keychain/open-keychain,open,Weaker digest algorithms are used for signatures on generated ECC keys.,[],"When generating ECDSA/ECDH keys OpenKeyChain uses SHA256 as a digest algorithm for UserID/Subkey binding signatures. Instead, a hash algo matching the curve should be chosen (see https://tools.ietf.org/html/rfc6637#section-13) not to reduce the security strength of the whole key. That's a SHOULD in RFC6637.

For example, this is the key pair generated with OpenKeyChain 3.1.0 using P-521 curve that uses SHA256, instead of SHA512 for the signatures. Password for the private key: `q`

```
-----BEGIN PGP PUBLIC KEY BLOCK-----

mJMEVYGNcRMFK4EEACMEIwQBu5yuGF+FhJeOB6HjLUEwF8qgGKDxxhOjCdqoMnQ2
YgVe+xsjeSYUjUTpp4by2nwuSfcDjDfUHQrPTwk1j83nLwkAFOT9y8Ij+jHaX5Rq
YUXDLMU1ULYpzCWk+Drl4GdRxDCFBpy71iEFox/RFVu6lOXBFe/AmmLBh8aAEDeg
jDL9exy0IEVjZHNhIDUyMSA8ZWNkc2E1MjFAZXhhbXBsZS5jb20+iL0EExMIACIF
CwkIBwoHFQgKCQsCAwQWAQIDAhkBBYJVgY1xAp4BApsjAAoJEHJXz00rp3ith8YC
CQHZ0q426Eo8Y2qwxMzR8pffZg+jHBNd/UR7GTYYh0VLQzgJTxJXlUkWyWDOalEu
heGCj1txH+E4c9FskePayI+iIwIIp3db23oZ6R3i/Ll01axWVnrEqw4BxGixpeTX
nBgXm/bQpJKFj37IPM0Jbkytsbh+BVt91qduJ88F/Tf1LF/gCB+4lwRVgY1xEgUr
gQQAIwQjBABiF4MOcjNekpP98s90WBiTMAXC7Sjuo427p3io2kYMlW8MhxJnjI/y
7k5ZeUBwznUz+WP7Dd+r9VjjOAq0SB2GWwDgqcIzPws7eVs+QDU/VDjoVMEdg97p
TBnum01XuV+SXDM2AvBc5y3tLB6lr12X44C+2L9zwww/JJfGBFVSm/RKsgMBCAeI
pAQYEwgACQWCVYGNcQKbDAAKCRByV89NK6d4rSWlAgkBYvmu94R7+hxwQTy7Mbh5
Dj4BNaPHFbjXS90rYIGEZYYezvFFNHVLBDD/7pLPSScavub6vEEyOVAegmb1YE3w
ewUCAgO70gMgawX3tAQVt7oTmpoRj+cqTuP4hRNxs4uDz/faaCmPE64uKzwv/ftu
w7E9Y/YqHaZqrBHVbba53gP8Y0HW
=DXu0
-----END PGP PUBLIC KEY BLOCK-----
-----BEGIN PGP PRIVATE KEY BLOCK-----

lQEIBFWBjXETBSuBBAAjBCMEAbucrhhfhYSXjgeh4y1BMBfKoBig8cYTownaqDJ0
NmIFXvsbI3kmFI1E6aeG8tp8Lkn3A4w31B0Kz08JNY/N5y8JABTk/cvCI/ox2l+U
amFFwyzFNVC2KcwlpPg65eBnUcQwhQacu9YhBaMf0RVbupTlwRXvwJpiwYfGgBA3
oIwy/Xsc/gkDCE9j4lDBugiAkMka2zPwQ2TWd1kECUhaCi3rOyghN/4obgjYzveq
+snxlElikhuSk6RERS2WlbpvoKtQuw5vanXgOs+0WAvJfSpiMIr0WVvvXXroPsup
VEgKu4kWPGrXDXRdq9ZxmDf8u1wnu/FlVlpDtCBFY2RzYSA1MjEgPGVjZHNhNTIx
QGV4YW1wbGUuY29tPoi9BBMTCAAiBQsJCAcKBxUICgkLAgMEFgECAwIZAQWCVYGN
cQKeAQKbIwAKCRByV89NK6d4rYfGAgkB2dKuNuhKPGNqsMTM0fKX32YPoxwTXf1E
exk2GIdFS0M4CU8SV5VJFslgzmpRLoXhgo9bcR/hOHPRbJHj2siPoiMCCKd3W9t6
Gekd4vy5dNWsVlZ6xKsOAcRosaXk15wYF5v20KSShY9+yDzNCW5MrbG4fgVbfdan
bifPBf039Sxf4AgfnQELBFWBjXESBSuBBAAjBCMEAGIXgw5yM16Sk/3yz3RYGJMw
BcLtKO6jjbuneKjaRgyVbwyHEmeMj/LuTll5QHDOdTP5Y/sN36v1WOM4CrRIHYZb
AOCpwjM/Czt5Wz5ANT9UOOhUwR2D3ulMGe6bTVe5X5JcMzYC8FznLe0sHqWvXZfj
gL7Yv3PDDD8kl8YEVVKb9EqyAwEIB/4JAwhPY+JQwboIgJDWPNzkx/L6ZQrbIPYi
wZgilHvRTpzRMsv//8gHMfV1W/8cQ2AB9svKBLhNrdA3shhyHskADk0Ir0zK1Rex
evh4rXV0KZCkC4BhO3ZiUmr9/TxubrC9AE0XYMgWlo5U8a9s9m8d854ciKQEGBMI
AAkFglWBjXECmwwACgkQclfPTSuneK0lpQIJAWL5rveEe/occEE8uzG4eQ4+ATWj
xxW410vdK2CBhGWGHs7xRTR1SwQw/+6Sz0knGr7m+rxBMjlQHoJm9WBN8HsFAgID
u9IDIGsF97QEFbe6E5qaEY/nKk7j+IUTcbOLg8/32mgpjxOuLis8L/37bsOxPWP2
Kh2maqwR1W22ud4D/GNB1g==
=Q87O
-----END PGP PRIVATE KEY BLOCK-----
```
"
open-keychain/open-keychain,closed,instrumentation branch,[],"I cleaned this one up and removed all v/multi-decrypt commits. this should be ready to merge, but maybe someone wants to review it. no features added, but includes a bunch of patches for problems encountered during testing, and a ton of test coverage.
"
open-keychain/open-keychain,open,"NULL_DEREFERENCE issues from static code analyzer ""Infer""",[],"see http://fbinfer.com/
"
open-keychain/open-keychain,closed,Yubikey: No support for non-numeric pins,[],"I don't have a numeric pin on my Yubikey and found it a rude shock when I updated OpenKeychain, and couldn't find an easy way to make it present the proper keyboard rather than numeric-only.

EDIT: I won't take ""Change your Yubikey's pin to numbers"" as a solution.
"
open-keychain/open-keychain,closed,Support for Marvin's minidns branch,[],"They've changed the library structure and done a little refactoring, so it required a few changes to our OpenKeychain project too. Just a quick PR in case I've done something wrong.
"
open-keychain/open-keychain,closed,Passphrase alternatives / Create Key Wizard,[],"Current progress on passphrase alternatives.
Feedback is welcome :)
"
open-keychain/open-keychain,closed,Passphrase alternatives,[],"Current progress on Passphrase alternatives.
I'm not sure if I'm creating a proper pull request to push my changes to my own branch at OpenKeyChain. Tell me if i did it wrong.
"
open-keychain/open-keychain,closed,Cannot find/see files with unicode-filename,[],"If the filename has unicode characters then OpenKeychain won't see them. 
For example, I save an encrypted file ""Tài Liệu Đọc Trước.doc.pgp"" to download folder. If I try to decrypt this file with OpenKeyChain, it won't see this file in download folder at all. What I have to do is change the filename to non-Unicode, something like ""Tai Lieu Doc Truoc.doc.pgp"" (no accent marks), then OpenKeyChain can see this file.
Nathan Tran
"
open-keychain/open-keychain,closed,Unchanging Progress Dialog while Certifying key,[],"A progress dialog which stays at 0% is shown when we try to certify a key.
Steps to reproduce:
Create a key using OpenKeychain, try certifying any key.
![screenshot_2015-06-13-06-47-57](https://cloud.githubusercontent.com/assets/5712241/8142369/65c35cf8-1198-11e5-9995-f0be5444bb8e.png)
"
open-keychain/open-keychain,open,Get rid of Robolectric workaround class,[],"Looks like we can ditch the workaround (https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/test/java/org/sufficientlysecure/keychain/WorkaroundBuildConfig.java) after the next robolectric release, because https://github.com/robolectric/robolectric/pull/1875 has been merged.
"
open-keychain/open-keychain,closed,Update copyright info to 2015,[],"I took the liberty to update the copyright info to 2015. I left the MIT license (is that right? it's a new file) and any external copyrights untouched.

Commit contains the command used, perhaps useful next year.
"
open-keychain/open-keychain,closed,Upgrade MaterialDrawer,[],"Since MaterialDrawer also grabs `support-v4` and `appcompat-v7` the hashes differ. Everything seems to work fine, but since I don't know how strict you are about the hash verification, you best decide whether that's an issue. :)

Fixes #1335.
"
open-keychain/open-keychain,open,Extend coveralls support,[],"I activated coveralls support based on jacoco reports.
Currently jacoco reports are only created for local unit tests called ""test"", not android emulated tests called ""androidTest"". If we have more UI tests we should evaluate how to do jacoco on ""test"" **and** ""androidTest"".
"
open-keychain/open-keychain,closed,GSoC 2015: Key Revocation at time of Deletion,"[Label(name=""discussion"")]","When a user deletes a secret key, he should almost always revoke and upload the revoked key to a keyserver first.

To remind the user of this, when the user attempts to delete a key, we could pop up a dialog offering a ""Revoke and upload key"" checkbox, ticked by default, and explain that it's important to revoke the key if he no longer intends to use it. If key revocation is chosen and the sync after revocation fails, we cancel the delete operation and inform the user of the same.

Alternatively, the dialog box could consist of two radio buttons -

""Revoke and delete key""

""Delete only""

With ""Cancel"" and ""Delete"" buttons at the bottom. The aforementioned upload after revocation behaviour would apply here too.
"
open-keychain/open-keychain,closed,Re-enable jacoco support,[],"Jacoco support is gone due to this big change: https://github.com/open-keychain/open-keychain/commit/d16b09b2a6be41319b993c27e69b85067a7f1c46

@Valodim Do we need Jacoco? If it's not important for us, we can leave this out for now as it introduces much build file complexity.
"
open-keychain/open-keychain,closed,Improved smart card error handling,[],"This commit addresses #1303, adding descriptive error messages for the status codes returned by a Yubikey or smart card. A new `CardException` class extends `IOException` with a field to store the status word returned by the card. Some error conditions should be exposed to the user, like a missing key or a bad PIN; these are implemented with localizable strings that are shown in a notification. Other error conditions are only of interest to developers, like an invalid header byte or command chaining failure. These error conditions should not occur if the application is implemented correctly, and non-localized AssertionErrors are thrown in these cases.

This commit also takes a whack at something I mentioned in #1282: a safety check before the PUT KEY operation. If a user attempts to put a key into a slot that contains a key with a different fingerprint, an IOException is thrown so that the key already on the smart card will not be overwritten.
"
open-keychain/open-keychain,closed,Automatic sync over Tor,[],"@adithyaphilip 
I opened this issue for discussion of how sync over tor should work.

The design choices of parcimonie looks interesting (copied from their git):

```
Assumptions
===========

Let us consider an individual's public keyring as an unordered set of
public OpenPGP keys.

We assume there probably exists at least one subset of public keys in
this keyring that identifies it, i.e. no other individual's keyring
contain the same subset of public keys. This unproven assumption is
the basis for any subsequent design thought about parcimonie.

It is generally considered good practice to refresh such public keys
from public keyservers on a regular basis, notably since public
OpenPGP keys can be compromised and thus revoked.

The usual way to refresh a public keyring is to run the `gpg
--refresh-keys` command that queries the configured keyserver for
updates of every public key stored in the to-be-refreshed keyring.

Combined with the identifying subset assumption, this ""query all keys
at a time"" way of refreshing a keyring might disclose private
information to an adversary.

The adversary
=============

Network-wise we assume the same type of threat that Tor does: an
non-global adversary who has full control over the network traffic of
some fractions of the Internet.

OpenPGP keyservers administrators are in a privileged position to
observe public keys requests.

To put it short, the rest of this document will call ""the adversary""
anyone able to monitor a given individual's connections to her
configured OpenPGP keyserver(s) on a regular basis.

The adversary is able to establish the identifying subset <->
individual.
XXX: explain why/how the adversary may be able to do so.

Threats
=======

Using Tor
---------

(application-level leakage)

The adversary gains knowledge of the rest of the keyring.

Not using Tor
-------------

(IP-level + application-level leakage)

The adversary gains knowledge of the rest of the keyring + user location.

Possible workarounds
====================

Greatly increase the cost of correlating every key update.

parcimonie refreshes one key at a time, over Tor; between every key
update it sleeps a random amount of time, long enough for the
previously used Tor circuit to expire.

Refresh rate
============

parcimonie sleeps a random amount of time between every key fetch;

- the longest the delay is, the longest it takes for a published key
  update (e.g. revocation certificate) to become locally available
- the shortest the delay is, the cheaper a correlation attack is

this lapse time is computed in function of the number of public keys
in the keyring:

   if rand(2 * (seconds in a week / number of pubkeys)) >= MaxCircuitDirtiness:
       rand(2 * (seconds in a week / number of pubkeys))
   else:
       MaxCircuitDirtiness + rand(MaxCircuitDirtiness)

Note that the MaxCircuitDirtiness value is 10 minutes in current Tor.

Examples:
  - 50  public keys -> average lapse time =~ 200 min.
  - 500 public keys -> average lapse time =~ 20 min.
  - 5000 public keys -> lapse time = 10 min. + rand(10 min.)
  - 50000 public keys -> lapse time = 10 min. + rand(10 min.)

Feedback to the user
====================

The parcimonie daemon sends a D-Bus signal before and after every key
fetch attempt. The applet registers to this signal and displays status
information accordingly.
```

BTW: This is the 1337  issue ;)
"
open-keychain/open-keychain,closed,Fix test cases in pg.,[],"I run the following command bc-java/pg

```
gradle test
```

The following test cases are failed (I tested [stable version](https://github.com/bcgit/bc-java/commit/ef676b6f7bf6c66481f128732f7f376b1f369910) and [current version](https://github.com/bcgit/bc-java/commit/a6a4da6aff1ea007d73632cc8504a575f988733e))

These test cases are related to the algorithm of signature. 

```
org.bouncycastle.openpgp.examples.test.AllTests > testRSAKeyGeneration FAILED
    org.bouncycastle.openpgp.PGPException at AllTests.java:176
        Caused by: java.lang.SecurityException at AllTests.java:176
            Caused by: java.util.jar.JarException at AllTests.java:176

org.bouncycastle.openpgp.examples.test.AllTests > testClearSignedBogusInput FAILED
    java.lang.IllegalArgumentException at AllTests.java:260

org.bouncycastle.openpgp.examples.test.AllTests > testDSAElGamaleKeyGeneration FAILED
    org.bouncycastle.openpgp.PGPException at AllTests.java:195
        Caused by: java.lang.SecurityException at AllTests.java:195
            Caused by: java.util.jar.JarException at AllTests.java:176

org.bouncycastle.openpgp.examples.test.AllTests > testPBEEncryption FAILED
    org.bouncycastle.openpgp.PGPException at AllTests.java:218
        Caused by: java.lang.SecurityException at AllTests.java:218
            Caused by: java.util.jar.JarException at AllTests.java:176

org.bouncycastle.openpgp.examples.test.AllTests > testClearSigned FAILED
    org.bouncycastle.openpgp.PGPException at AllTests.java:247
        Caused by: java.lang.SecurityException at AllTests.java:247
            Caused by: java.util.jar.JarException at AllTests.java:176

org.bouncycastle.openpgp.test.AllTests > testPGP FAILED
    junit.framework.AssertionFailedError at AllTests.java:26

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.DSA2Test.testGenerateK2048H256 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.DSA2Test.testGenerateK2048H512 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.DSA2Test.testGenerateK1024H224 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.DSA2Test.testGenerateK1024H256 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.DSA2Test.testGenerateK1024H384 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.DSA2Test.testGenerateK1024H512 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.PGPUnicodeTest.test_CyrillicPassphrase FAILED
    junit.framework.AssertionFailedError at PGPUnicodeTest.java:144

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.PGPUnicodeTest.test_UmlautPassphrase FAILED
    junit.framework.AssertionFailedError at PGPUnicodeTest.java:94

org.bouncycastle.openpgp.test.AllTests > org.bouncycastle.openpgp.test.PGPUnicodeTest.test_ASCIIPassphrase FAILED
    junit.framework.AssertionFailedError at PGPUnicodeTest.java:115

org.bouncycastle.openpgp.test.DSA2Test > testGenerateK2048H256 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.DSA2Test > testGenerateK2048H512 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.DSA2Test > testGenerateK1024H224 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.DSA2Test > testGenerateK1024H256 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.DSA2Test > testGenerateK1024H384 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.DSA2Test > testGenerateK1024H512 FAILED
    org.bouncycastle.openpgp.PGPException at DSA2Test.java:151
        Caused by: java.lang.SecurityException at DSA2Test.java:151
            Caused by: java.util.jar.JarException

org.bouncycastle.openpgp.test.PGPUnicodeTest > test_CyrillicPassphrase FAILED
    junit.framework.AssertionFailedError at PGPUnicodeTest.java:144

org.bouncycastle.openpgp.test.PGPUnicodeTest > test_UmlautPassphrase FAILED
    junit.framework.AssertionFailedError at PGPUnicodeTest.java:94

org.bouncycastle.openpgp.test.PGPUnicodeTest > test_ASCIIPassphrase FAILED
    junit.framework.AssertionFailedError at PGPUnicodeTest.java:115

42 tests completed, 24 failed
:pg:test FAILED
```
"
open-keychain/open-keychain,closed,MaterialDrawer upgrade,[],"`com.mikepenz.materialdrawer:library:3.0.6@aar` is available and with it, apparently `com.mikepenz.iconics:library:0.9.1@aar` won't be needed anymore.

Changes in code are minimal and I'd happily upgrade it and possibly other libraries to the latest versions, unless there are policies about library upgrades in place.

Furthermore, `MaterialDrawerTheme.Light.ActionBar` can be used as parent for `KeychainTheme.Base`, as it itself extends `KeychainTheme.Base`'s current parent `Theme.AppCompat.Light`. This would allow tweaking of the color scheme of the Drawer by overriding `material_drawer_*` colors.
"
open-keychain/open-keychain,closed,Database migration potentially happening after key creation,[],"I noticed that the database migration + subsequent consolidation might happen at an awkward time, potentially resulting in data loss or an unrecoverable state.

Basically by having a version that didn't know about the `isFirstTime` preference, creating some keys in it, then upgrading to a current version, which shows the first time screen in MainActivity and allows the creation or import of a key or multiple keys, because there was no database access up to that point.

Creation or import of a key involves a progress dialog and when the app attempts to save the key the migration is triggered, which finally starts the consolidation, also trying to use the progress dialog.

This froze the app for me and the database wasn't in a usable state afterwards.

Putting this in MainActivity's `onCreate` works:

``` java
    // force DB migration
    new KeychainDatabase(this).getReadableDatabase();
```

Because it triggers the migration as the first thing. It doesn't seem to be the cleanest solution, however, and I'm not sure what the best way would be.
"
open-keychain/open-keychain,closed,Explicit mention of dependency on 3rd party tool,[],"I had the darnest time remembering my old APG days where something was said in passing about, unlike any other application I know, the need here for OI File Manager (or others, later on) to be able to select local files.  I'm sure I'm not the only person who could benefit from this reminder. :)
"
open-keychain/open-keychain,closed,GSoC 2015: Implementation Plan of iseki,[],"The plan:
1. Modify the code of spongycastle to handle ed25519 curve.
   I need to implement the code like [this](https://github.com/open-keychain/spongycastle/tree/spongy-master/core/src/main/java/org/spongycastle/math/ec/custom/djb)
   Curve25519 class uses Nat256. However Ed25519 cannot use this operation. So I implement only the operation using EdDSA.
2. Modify the code to handle EdDSA.
   ECDSA use many curves. On the other hand, EdDSA uses only Ed25519.
3. Write test case for ed25519 and EdDSA.
   Now, I use [this key](http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x1E0A4CCE87EA6776). I have to prepare test key.

If I have time, I will try following issue:
1. Implement Ed25519 operations.
   I will implement the code like [ref10](https://github.com/jedisct1/libsodium/tree/master/src/libsodium/crypto_sign/ed25519/ref10) around [it](https://github.com/open-keychain/spongycastle/blob/spongy-master/core/src/main/java/org/spongycastle/math/raw/Nat256.java).
"
open-keychain/open-keychain,closed,replace messenger hack with eventbus ,[],"So, I think we should move from our messenger hack service communication data flow to [eventbus](https://github.com/greenrobot/EventBus). reasons:
- simplifies code: fragments are longer involved in progress or pendinginput, but can hook into it if they want
- better performance, because it saves a lot of parcelling and message passing all around. 
- hopefully helps getting rid of IllegalStateException problems, which are notoriously difficult with the messenger hack

in order to not turn this into a ""someone ought to"" deal, I went ahead and implemented it for all compliant operations (certify, sign/encrypt, decrypt/verify, edit key)
"
open-keychain/open-keychain,closed,Remote sftp keys for double security ,[],"I use OpenKeychain to store my encrypted passwords on Android with [password-store](https://github.com/zeapo/Android-Password-Store). I think this is pretty secure but would my phone be stolen the only remaining wall between potential hacker and my passwords is my passphrase.

Maybe it would be possible not to import all gpg key localy. OpenKeychain could connect to my ssh server where gpg is stored, read the key from distance and give this to password-store. With this, if I lose my smartphone, the only thing I have to do is remove my phone's ssh public key from authorized_keys on my ssh server and I'm fine.

I can use ES File Explorer to browse to sftp and import keys. Then I guess it could do the same whenever I ask for the key !
"
open-keychain/open-keychain,closed,added proxy/tor preferences,[],"@dschuermann  thought I'd put up the preferences part of it for review while I finish up the rest. As of now:
- Clicking on 'Enable Tor' will check for Orbot being installed, and if it isn't, prompts the user to install it from Google Play. This is also grays out the 'Enable other proxy' option.
- Clicking on 'Enable other proxy' will similarly gray out 'Enable Tor'.
- Editing Proxy Host will check only for host being empty.
- Editing Proxy Port will check if its a number and 0 <= port <= 65535.
- To be added: Proxy type i.e SOCKS/HTTP

Screenshots:
![screenshot_2015-06-05-06-01-11](https://cloud.githubusercontent.com/assets/5712241/7997310/6c81637e-0b48-11e5-8061-db076417f224.png)
![screenshot_2015-06-05-06-06-19](https://cloud.githubusercontent.com/assets/5712241/7997408/3b07354c-0b4a-11e5-8898-197ac2787324.png)
![screenshot_2015-06-05-06-08-38](https://cloud.githubusercontent.com/assets/5712241/7997411/3cf2fd3c-0b4a-11e5-83b5-a9d721d3c8f5.png)
![screenshot_2015-06-05-06-13-16](https://cloud.githubusercontent.com/assets/5712241/7997413/3fb5b1e0-0b4a-11e5-8df9-a74ec45a61be.png)
"
open-keychain/open-keychain,closed,help_about.md - unnecessary HTML element,[],"Unnecessary HTML element &lt;/a&gt; in **PagerSlidingTabStrip** in **help_about.md** file
"
open-keychain/open-keychain,closed,Prevent NullPointerException due to Activity death,[],"If the activity is killed, and then resumed, `savedInstanceState` will not be null, but the fragment reference will be, causing a `NullPointerException` at `mListFragment.loadNew` on search.
"
open-keychain/open-keychain,closed,Crash when validating key with Yubikey,[],"When I wan't to verify a fingerprint (manually display and compare), I am unable to complete the process. After confirming the fingerprint matches and selecting my key (which is stored on the Yubikey), the application just crashes when hitting the button to complete the process.

My setup: non-default Yubikey-Pin (but it doesn't matter, happens with the default PIN as well), only one personal PGP-Key imported to Openkeychain.

In the Report (which unfortunatelly I cannot export), the top-most stacktrace entry says:
java.lang.AssertionError: Unhandled SecretKeyType (should not happen).
![screenshot_2015-06-03-13-35-58](https://cloud.githubusercontent.com/assets/8029370/7959027/904960b2-09f5-11e5-834a-9a285a49cbbd.png)
"
open-keychain/open-keychain,closed,Error when sharing fingerprint,[],"When press the share fingerprint button, I got a ""Error processing key!"" message. It happen to both my key and others' key.
In my memory, this button should call out the app list to share the fingerprint string.
"
open-keychain/open-keychain,closed,multi decrypt,[],"don't merge yet, work in progress. this is a follow-up to #1297.

this has become sort of a larger project than I expected, keeping this pull request around to track progress.
- [x] CachingDataDecryptorFactory, get rid of RuntimeException based control flow and allow caching of session keys
- [x] DecryptVerifyResult now includes a CryptoInputParcel which can be used to reproduce its results without further user input
- [x] split up decryptfilesfragment into input and listing
- [x] decrypted files are listed in the new fragment rather than just saved/shared
- [x] display encryption and signature status individually
- [x] icon displayed for mime-type
- [x] OpenPgpMetadata includes accurate filesize - this is not working completely for the metadata-only call yet! (not fixed, but no longer relevant because I don't use this call anymore)

todos:
- [x] backend: support using cached session keys for non-divert-to-card keys (obsolete)
- [x] cache decrypted data for send intent
- [ ] properly handle unknown signatures (requires re-decryption!)
- [x] options in file context menu (view log, save to file, delete encrypted file)

for later:
- multi-select
- uri read permission handling
"
open-keychain/open-keychain,closed,hide nfc invoke button in android before lollipop,"[Label(name=""google play crash-report"")]",
open-keychain/open-keychain,closed,Integrity check error,[],"Hey, I assume I get this OpenPGP Error: Integrity check, which blocks decrypting.

I'm using German language in K-9 Mail where it's called: ""OpenPGP Fehler: Fehlende Integritätsprüfung Dies kann pas...[text is off-screen]"" and I get this error since version 3.2.0-3.2.3.
Version 3.1 was working flawlessly, though. Error occurs when receiving emails in K-9 encrypted with Gpg4Win to just one recipient.
I think it's similar to Issue #1016 Can you please look into it again?
"
open-keychain/open-keychain,closed,Support Facebook public key download,[],"https://www.facebook.com/notes/protecting-the-graph/securing-email-communications-from-facebook/1611941762379302
https://news.ycombinator.com/item?id=9637649
## Simple support (maybe this already works)

Register intent filter to process asc returned from
https://www.facebook.com/*/publickey/download
, e.g., https://www.facebook.com/steve.weis/publickey/download
(only works when logged in)
## Extended support:
- Use API of Facebook to search for keys?
- Maybe in additon to HKP and keybase.io?
- Use linked identities (see branch) to link back to Facebook?
"
open-keychain/open-keychain,closed,Merged CloudImportService and KeychainIntentService into KeychainService,[],"Split into three commits:
- `merged services` - The meat of the merge, changes how the Service is accessed in other files too
- `renamed KeychainIntentService to KeychainService` - Just the result of renaming KeychainIntentService to KeychainService
- `corrected indentation` - Indentation for the`Runnable` created in `onStartCommand()` of `KeychainIntentService` in `merged services` was left out initially so the changes could be seen. It is added here.
"
open-keychain/open-keychain,closed,"use native Fragment class, move to v13 compat library",[],"what the title says. we've been minsdk 14 for a while now, if there is no good reason not to, we might as well move to native Fragment implementation.

this commit should be tested with an older version of android. it works fine on android 5, which is unfortunately the only thing I have available for testing atm.
"
open-keychain/open-keychain,closed,Prevent NaN Progress Dialog on import with no selected keys,[],"Prevents a non-cancelable  progress dialog from appearing if the ""Import selected keys"" button is pressed after either a cloud search or import from file is performed, but no key is selected.
"
open-keychain/open-keychain,closed,Merge key from Keyserver with that from Keybase instead of replacing,[],"Looked like the logic was in place but we were accidentally replacing the keyserver key with that from kaybase.io, before the merge. Hope I haven't misunderstood anything.

Should solve Issue https://github.com/open-keychain/open-keychain/issues/1310.
"
open-keychain/open-keychain,closed,sticky preferences,"[Label(name=""enhancement"")]","so one review in the play store complained that we changed the behavior of encrypt files to also ""encrypt filenames"". he obviously missed the option to change that behavior, but if it's his default use case it's still annoying to select it every time.

We got rid of all related preferences and I think we should avoid introducing them. the pattern I have in mind is when one such option is selected, we show a snackbar with text like

>  Filenames will not be encrypted.
>  Save as default?

with a SAVE button to the right, which does just that
"
open-keychain/open-keychain,closed,Force close when binding from a Yubikey Neo,[],"On the latest release (3.2.3), and after clearing application data, open-keychain will force close when binding to a newly imported key from a Yubikey Neo.

The key in question is 0x43D41658 (RSA, 4k master, 2k signing, 2k encryption).

I can consistently reproduce it and have submitted a crash report. Phone is running CM12.
"
open-keychain/open-keychain,closed,crash when restoring a passphrase,[],"Openkeychain version 3.2.2 crashes when setting a passphrase. Exemple:
1- generate a key.
2- delete the passphrase, then save
3- set a passphrase. OKC crashes on saving
"
open-keychain/open-keychain,closed,Notification design improvements,[],"Based on https://github.com/open-keychain/open-keychain/issues/1307

I just looked at other apps, like Android Wear which also has a long running notification.
Actually there are sort of two views: small and big. The big view, which contains the list of keys and the clear cache button is fine, but the small view is improvable. I looked at Android Wear which also uses a long running notification, and based on that I came up with this change for the small view:

Instead of:
OpenKeychain
OpenKeychain has cached 1 passwords

we could do:
OpenKeychain
1 password cached. Touch to clear cache.
"
open-keychain/open-keychain,open,Ability to set ultimate trust for other keys,"[Label(name=""discussion"")]","It would be great it if it was possible to set ultimate trust for keys for which the private keys are not present on the phone. E.g. I don't have my main private key on my phone.
"
open-keychain/open-keychain,closed,Crash on key deletion,[],"OpenKeychain crashes when deleting my own key, after entering the passphrase.
When the passphrase is cached it works.
"
open-keychain/open-keychain,closed,Search cloud downloads key from keybase if available not from keyserver,[],"I just downloaded 54265E8C and it shows in OpenKeychain as been expired. After clicking the refresh button it is again orange. I suspect this happened because keybase.io is used as the download source.
We should always prioritize keyserver download if the key is also available there!

Assigned to @adithyaphilip 
"
open-keychain/open-keychain,closed,Decrypting a file requests yubikey TWICE,[],"Once you select a file (ascii armored pgp) to decrypt, it asks for the pin and to touch yubikey. Then it lets you select the file to save, it asks you to touch yubikey _again_. Prior to 3.2.3, it also asked for the PIN second time, now it does not.
"
open-keychain/open-keychain,closed,additional privacy-respecting version of open-keychain,"[Label(name=""discussion"")]","Pls consider offering a second version of the app, that doesn't need (and consequently doesn't request) permissions to contacts and to internet communication (this additional version should always have the same codebase as the current version).
That way every user has the chance to choose between the full-blown full-featured version and a more privacy-respecting 'secure' version while resigning some comfort.
(The app QRDroid already offers such a version, for example.)
"
open-keychain/open-keychain,closed,setting to disable passphrase cache notification,"[Label(name=""enhancement"")]","just got a feature request via irc for a preference to disable the notification of cached passphrases, to keep the notification area for ""things to act upon"" only.

I remember something about services being required to display a notification or otherwise they are easily destroyed, but I don't know how much of a problem this really is. any thoughts @dschuermann? 
"
open-keychain/open-keychain,closed,Merged KeychainIntentService and CloudImportService into KeychainOperationService,[],"Also fixes Issue https://github.com/open-keychain/open-keychain/issues/1221, by allowing a multi-threaded import only if there are no two keys with the same fingerprint. If there are keys with the same fingerprint, or if the keys are being read from a file, then we go with a serial key import.
"
open-keychain/open-keychain,open,Prevent consolidate crashes,"[Label(name=""discussion"")]","Instead of crashing on consolidate, which renders OK useless, we could also catch the exception, remove the key, and ask if the user wants to report the error and then do this:
- http://stackoverflow.com/questions/10559267/how-to-use-intent-action-app-error-as-a-means-for-a-feedback-framework-in-andr
- http://blog.tomtasche.at/2012/10/use-built-in-feedback-mechanism-on.html
- https://gist.github.com/satyadeepk/7389938

Maybe we could even include the corresponding pub key as ascii inside the error report.
"
open-keychain/open-keychain,closed,Change keybase strings,"[Label(name=""help wanted"")]","Instead of post-pending the username the strings should use a variable. This is true for all ""keybase_narrative_*""
"
open-keychain/open-keychain,closed,descriptive nfc error messages,[],"this is a follow-up of issue #1301

nfc error messages are at this point just ""bad nfc response code NNNN"". IOException is an appropriate class, since it represents a failed or interrupted IO operation, but it should be parameterized with the error response code.

the exception's getMessage() can return the same message as displayed right now for compatibility, but an additional getMessage(Context context) method could be introduced to return localized and better descriptive error messages. the mapping can probably not be done much nicer than a large switch statement, but maybe I'm missing something.

error messages on p51 of the [openpgp card spec](http://g10code.com/docs/openpgp-card-2.0.pdf)
"
open-keychain/open-keychain,closed,Loop at key-confirmation with yubikey.,[],"When I try to confirm a key by fingerprint with yubikey neo, it repeat asking for yubikey's PIN and the key never truely certified. It occurred even when the option to use default PIN is checked, just become ask once rather than twice. I haven't tried to confirm keys by QR code but I guess the result will be the same.

I have another yubikey to play around, so if there are any question just let me know what to do.
"
open-keychain/open-keychain,closed,NFC Error: Bad NFC Response code: 6985,[],"Hi there!!!

  I had received my new Yubikey 1.0.10 in substitution of previous one 1.0.8.
  1.0.8 works fine, but it has a security issue and mustn't be used. With 1.0.10 I receive the error - NFC Error: Bad NFC Response code: 6985 as can be see below.

![screenshot_2015-05-25-16-53-14](https://cloud.githubusercontent.com/assets/12600491/7801896/a6eaed80-0302-11e5-90c2-933eb3e70890.png)

  Open-keychain version is 3.2.2 (32200)
  Thanks!!

Kind regards,

Nelson Campos, PMP
GPG id 67C63C6C
"
open-keychain/open-keychain,closed,Redesign Create Key UI,[],"The Create Key UI needs to be redesigned in order to accommodate the new ""Passphrase Alternatives"" unlocking methods.

Serveral layouts are already planned which can be consulted in the following link:
https://cld.pt/dl/download/f7b037a7-bc13-46a5-8fb4-4cfb15b62b7a/openkeychain_ui_sample.pdf

These layouts will be implemented by using the following components.
-ViewPager where the user can swipe between each unlocking method.
-Adapter to give support to the ViewPager.
-Fragments for each unlocking method with the corresponding layout seen in the pdf. Various techniques may be used to avoid duplicate the same fragment (one with a image and one where the user actually uses the unlocking method).

The needed functionality of each fragment will be described on different issues as also the re-factoring needed for CreateKey Activity and the communication between the Activity and its fragments.
I'm open to suggestions as always.
"
open-keychain/open-keychain,closed,Passphrase Alternatives,[],"Currently OpenKeyChain only supports one kind of key unlock method which is the Passphrase. By taking advantage of new security features currently present in many smartphones, OpenKeyChain will allow users to choose new security options which will be available by displaying a Key Unlocking Method Wizard to the user.

Security methods may range from the already known Passphrase method to NFC, Fingerprint, QRCode, LockPattern  or combinations of two security methods.

A complete redesign of the Create Key UI flow will be done to accommodate the new changes with a new UI design.
Implementation of Android UI components for each unlock method so they are reusable for all situations.
"
open-keychain/open-keychain,closed,tint linked contact picture in toolbar,[],"the linked contact picture as displayed in the toolbar should be tinted green. otherwise, buttons and text on it may be hidden if the picture doesn't by chance offer enough contrast
"
open-keychain/open-keychain,closed,File decryption UI,"[Label(name=""help wanted"")]","This was a GSoC 2015 task that has not been assigned. If someone wants to work on it, we are happy to guide them through the process of implementing this. It is also possible to do small subsets of this task, we are happy for every contribution!
- [x] **General decryption UI**
  Currently the file decryption screen in OpenKeychain only allows to decrypt one file at a time and only allows saving of decrypted files into the filesystem. While this is okay for simple scenarios. The decryption process could result in many files being decrypted. Either when multiple files are shared together using Android's [ACTION_SEND_MULTIPLE](http://developer.android.com/training/sharing/receive.html#handling-content) or when the OpenPGP data structure contains many parts. Thus, the screen should be extended for multiple files. A list of files should be displayed like done in the encryption screen that with the options save/open per file item. To get the right content type and decrypt the filename the new internal DECRYPT_METADATA functionality of OpenKeychain should be used. The real payload should be decrypted when save/open is clicked. Furthermore the recipient's key user id should be displayed inside the item.
- [ ] **Hidden receipients**
  A related problem are [hidden recipients](https://github.com/open-keychain/open-keychain/issues/626): The OpenPGP standard allows to prevent the disclosure for whom a file/message is encrypted for. This feature has already been implemented for encrypt but is currently commented out. It must be implemented for decryption (try decryption with all keys) to be done.
- [ ] **Detached signatures**
  Also ""detached signatures"" should be supported by the new decryption screens. An internal method has already been done during the work on PGP/MIME. This can be used, but needs a carefully designed UI. This method also needs a UI for the encrypt screen.
- [ ] **Full error overlay**
  If a key is not valid anymore a big overlay is shown in decrypt text UI. This should also be implemented for a new file decryption UI. See https://github.com/open-keychain/open-keychain/commit/0d6d4653b43fcf1389b470afd7364854505d96c2

Issues included in this task:
https://github.com/open-keychain/open-keychain/issues/731
https://github.com/open-keychain/open-keychain/issues/557
https://github.com/open-keychain/open-keychain/issues/950
https://github.com/open-keychain/open-keychain/issues/626
"
open-keychain/open-keychain,open,Allow linking/unlinking of 'System Contact',[],"OKC has linked to the wrong system contact and there is no way to manually unlink relink etc

(Guess that's 2 bugs, let me know if it needs splitting.)
"
open-keychain/open-keychain,closed,Can't sign files,[],"It is possible to sign a text by leaving the receiver field empty, but at the file encryption screen this results in a message which says that at least one key should be chosen for encryption.
"
open-keychain/open-keychain,closed,"""Manage my keys"" can only create keys",[],"menu/key_list.xml:

```
<item
    android:id=""@+id/menu_key_list_create""
    android:title=""@string/menu_manage_keys""
    app:showAsAction=""never"" />
```

This menu items got the title ""Manage my keys"" but it launchs (KeyListFragment.java):

```
private void createKey() {
    Intent intent = new Intent(getActivity(), CreateKeyActivity.class);
    startActivityForResult(intent, REQUEST_ACTION);
}
```

This Activity can only create keys. As a result, this menu item should be renamed to something like ""create a key"" and/ or should be moved to to FAB.
"
open-keychain/open-keychain,closed,highlight currently selected item in navigation drawer,[],
open-keychain/open-keychain,closed,Import keys from clipboard,[],"Allow importing keys from the clipboard via paste.
"
open-keychain/open-keychain,open,always show activity from app list,[],"at the moment, if an app isn't installed, a click from the list in our apps view goes to the play store. if it is installed but not yet allowed access, the app is called directly. only if the app is already allowed, a configuration dialogue is shown.

for consistency, there should always be a dialogue on our end.
"
open-keychain/open-keychain,open,First time wizard for email,[],"The most important use case is still email, so we need  a nice wizard to configure K-9 Mail with OpenKeychain. This is a proposal I'd like to implement in my spare time. It requires some changes in K-9 Mail, which I will also provide.
1. Show proposed apps for use with OpenKeychain: For now only K-9 Mail and Conversations
2. Check if K-9 Mail is installed, if not ask to install it via Google Play
3. Start K-9 Mail for configuration, detect if K-9 Mail already is configured for an account, if yes enable OpenKeychain as a crypto provider
4. Send new email to edward-en: https://emailselfdefense.fsf.org/en/ (edward only supports PGP/MIME currently)

ToDo:
- Intents for configuration in K-9 Mail
- New Intent extra specific for K-9 Mail to request encrypt, sign: If these extras are requested enable encrypt, sign (if no crypto provider is set, don't fall back to unencrypted)
"
open-keychain/open-keychain,closed,GSoC 2015: Tor/Proxy Support,[],"We'd like to introduce Tor(via Orbot)/Proxy support, for privacy while connecting to keyservers.
https://github.com/guardianproject/NetCipher looks like it can handle both.

NetCipher comes with OrbotHelper, a class which checks for the existence of Orbot, whether it's been enabled, etc.
We would use it to perform these checks when:
a) The user first selects the Tor proxying option - we check if Orbot is installed, and ask him to install it otherwise.
b) The user has enabled Tor suport, but Orbot is not installed/not enabled when we attempt a background/manual key sync/key import.

We would also require a new preference - Proxy Support, allowing the user to choose between Tor or another proxy server. The menu could have three radio buttons:
- None
- Use Tor
- Use other proxy (with EditText for entering proxy host with port)
"
open-keychain/open-keychain,closed,GSoC 2015: Reworked Preferences UI,[],"The current keyserver preferences UI needs a rework. We would have to rewrite the list using RecyclerView.

This is what it looks like right now:

![screenshot_2015-05-21-19-51-08](https://cloud.githubusercontent.com/assets/5712241/7750608/d6eb1676-fff2-11e4-896a-6703c3a8abd7.png)

We need to highlight that the keyserver at the top of the list is the preferred one. Also we'd have to replace the ""Rotate"" button with something like a drag-and-drop interface (like https://github.com/h6ah4i/android-advancedrecyclerview). 
Alternatively, a radio button might help with both highlighting and choosing the preferred keyserver.

EDIT:
Design guidelines: http://www.google.com/design/spec/components/lists-controls.html#lists-controls-types-of-list-controls
"
open-keychain/open-keychain,closed,Q: Is OpenKeychain PGP/SMIME ready?,[],"This is likely a question which is easy to answer for the devs, but I just want to be sure ;). I'm using K9 with OpenKeychain and received a PGP/SMIME mail, which doesn't work (it's not displayed, just 2 attachments I can't open). So is K9 limited in displaying PGP/SMIME mails or is OpenKeychain not ready for the PGP/SMIME standard (in comparison to Inline-PGP which is working of course)?
"
open-keychain/open-keychain,closed,open-keychain hangs after imputting PIN for Yubikey and touching the phone with it,[],"Looks like the YubiKey can't be read or some issue happens while reading it...

How can i help you to track that down ?

Cyanogenmod 10.2
Google Nexus 4
Openkeychain 3.2.1
"
open-keychain/open-keychain,closed,GSoC 2015: Implement EdDSA.,[],"It depends on #1284 .
There are many [implementations about EdDSA](http://ianix.com/pub/ed25519-deployment.html).
We can use these implementations as reference.
"
open-keychain/open-keychain,closed,GSoC 2015: Implement Ed25519 operations.,[],"There are no implementation about Ed25519 operations in [Bouncy Castle](https://www.bouncycastle.org/wiki/pages/viewpage.action?pageId=362269).

We need to implement it for support Ed25519/EdDSA.
"
open-keychain/open-keychain,closed,"GSoC 2015: Meta bug for ""Support Ed25519/EdDSA""",[],"@Valodim @dschuermann 

This issue is for my GSoC project.

Project Abstract: This project improve the security and performance of OpenKeychain due to two reasons. For security, the support of EdDSA is very important to enhance the security of OpenKeychain. There are no proof that ECDSA satisfy EUF-CMA which is a theoretical security model. EdDSA is based on Schnorr signature. Schnorr signature is EUF-CMA secure in the random oracle model. For performance, EdDSA is faster than ECDSA in some point(e.g. key generation, verification, etc...).
- [ ]  #1279 Import fails with eddsa signature packet.
- [ ]  #1284 Implement Ed25519 operations.
- [ ]  #1285 Implement EdDSA.
- [ ]  #1332 Implementation plan.
- [x]  #1336 Fix test cases in pg.
"
open-keychain/open-keychain,closed,yubikey workflows,"[Label(name=""discussion""), Label(name=""enhancement""), Label(name=""user interface"")]","Thanks to this great pull request #1278  by @josecastillo, there are now mechanisms to a) create yubikey-compatible keys, which is suggested in the manage keys dialog when an empty yubikey is held against the device and b) support in the edit key dialog for moving those keys to the yubikey.

what's missing is a connection between those two. most users should almost never use the edit key dialog, and after a user created a yubikey-compatible key we can assume he wants to move it to his yubikey, so we should offer that option.

this is a little tricky because there are many intermediate states a user might end up in which must be thought about. in particular, what happens if the user creates such a key then stops the procedure?
"
open-keychain/open-keychain,closed,data formats for openpgp4fpr: links,"[Label(name=""discussion"")]","When I scan a QR Code that has the link OPENPGP4FPR:9F0FE587374BBE81 on it, I get this crash every time:

```
        AndroidRuntime  E  FATAL EXCEPTION: IntentService[KeychainIntentService]
                        E  Process: org.sufficientlysecure.keychain, PID: 15731
                        E  java.lang.StringIndexOutOfBoundsException: length=16; index=24
                        E      at java.lang.String.indexAndLength(String.java:584)
                        E      at java.lang.String.substring(String.java:1449)
                        E      at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:219)
                        E      at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:136)
                        E      at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:525)
                        E      at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
                        E      at android.os.Handler.dispatchMessage(Handler.java:102)
                        E      at android.os.Looper.loop(Looper.java:136)
                        E      at android.os.HandlerThread.run(HandlerThread.java:61)

```
"
open-keychain/open-keychain,closed,subkeys stored on yubikey confuse ViewKeyActivity,"[Label(name=""bug"")]","reported in irc: if the fingerprints from the yubikey refer to a subkey rather than a master key, the import works fine but ViewKeyActivity gets confused and shows an empty screen.

http://i.imgur.com/04w4mgi.png
"
open-keychain/open-keychain,closed,import fails with eddsa signature packet,[],"## STEPS TO REPRODUCE

Attempt to add [key 0x1e0a4cce87ea6776](http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x1E0A4CCE87EA6776) from the cloud.
## EXPECTED RESULTS

Import succeeds.
## ACTUAL RESULTS

Log reports `[ERROR]Import operation failed!`
## AFFECTS
- OpenKeychain 3.2.1 (32100), supposedly on Beta
- Android 5.0
- Samsung Galaxy S5
"
open-keychain/open-keychain,closed,Support for moving RSA keys to Yubikey or NFC smart card,[],"This pull request implements an enhancement mentioned in #875: the ability to move a secret key from OpenKeychain to a Yubikey or NFC smart card. As discussed in #1256, on-card key generation is unacceptably slow, but the ability to generate keys in OpenKeychain and move them to a smart card is still desirable. 

Subkeys in the Edit Key activity now support a ""Move Subkey to Yubikey / Smart Card"" action, which will check that the key is smart card compatible, and launch the NFC Operation activity to move the key to the smart card. The command automatically determines the appropriate slot on the card based on the key flags: SIGN or CERTIFY will go in the signing slot; ENCRYPT will go in the decryption slot; and AUTHENTICATE will go in the authentication slot (unless the subkey also has flags for SIGN or CERTIFY, in which case it will go in the signing slot instead). 

Two new methods in the Base NFC Activity support the keytocard operation: `nfcPutData`, which is responsible for setting the fingerprints and key generation timestamps, and `nfcPutKey`, which is responsible for extracting the raw secret key parameters and sending them to the card in an appropriate format. These commands require verification of the Admin PIN, which I've hard-coded to the default ""12345678"" for now. This makes it simpler to put keys on a new card, but a future enhancement might involve prompting for the Admin PIN as well. I've also added a command, `nfcModifyPIN`, to change the PIN on a smart card; I didn't add UI for this, but it will probably be necessary for a user to fully customize their smart card or Yubikey with OpenKeychain. 

I also introduce one additional UI tweak in this pull request. In the key creation activity, if the user taps a completely blank smart card (one with no key fingerprints), a dialog is displayed asking the following: ""Would you like to generate a smart card compatible key?"" If the user says ""Yes"", a flag is set, and the key generation parameters are modified to generate the following: 
1. an RSA-2048 master key for signing and key certification, 
2. an RSA-2048 subkey for encryption, and
3. an RSA-2048 subkey for authentication. 

I welcome code review and any suggestions for changes or additions. There are a few areas that I have specific questions on, which I'll call out with comments on the pull request. 
"
open-keychain/open-keychain,closed,"Can't get beyond ""None of the allowed keys is able to decrypt the content"" message","[Label(name=""api bug"")]","When using k9 to decrypt an email a message saying ""None of the allowed keys is able to decrypt the content. Please select the allowed keys"" is shown. However, I can't get past this point, because pressing ""save"" doesn't do anything despite my key being shown below this message.

This only happens when I try to decrypt a message which was sent to someone else and is also encrypted to myself.

Worked before 3.2.x version. Seems to be a regression.
Is not solved by latest update  3.2.1 as proposed by Google PlayStore reply.

Logcat doesn't show anything interesting. I'll attach it anyhow.
"
open-keychain/open-keychain,closed,"remove ""export to file"" from public key context menu","[Label(name=""enhancement""), Label(name=""help wanted""), Label(name=""user interface"")]","This menu item has no reason to be there. It should be removed there, and instead added to the ""Key"" headline under the ""Share"" tab in extended view.

Note that this only applies to public keys, not secret ones, although we will probably rename ""export"" to ""backup"" there somewhere down the way
"
open-keychain/open-keychain,closed,Signing Mail with PGP on Yubikey Neo and K9-mail causes Open Keychain to crash,[],"Version of software used:
K-9 Mail: 5.005
Android: 5.1 (Nexus 5, 3.4.0-franco.Kernel, Pure White LMY47D 3-11-2015 ROM)
OpenKeychain: 3.2.1 (32100)

Problem:
Composing an email in K9-mail, attempting to ""Sign"" the email via a PGP key stored on a Yubikey Neo (which works absolutely fine for decrypting in K9-mail, and GNU Password Store). Ticking ""Sign"" works fine, typing email works fine, but as soon as you hit ""Send"" (which should then prompt for key details), the message ""Unfortunately, OpenKeychain has stopped"" appears.

I would be glad to fetch some logs for OpenKeychain - just let me know where to find them :)
"
open-keychain/open-keychain,closed,Feature Request: Decrypt to Text Viewer,[],"Request for option to decode to a built in text viewer. Lots of times I just need to copy text from an encrypted file to the clipboard without actually saving the decrypted file. Decrypting the file to a text buffer, and then discarding it from memory once I'm done viewing it would be very handy.

Maybe put pragmatic limits on the size (and possibly type) of a file to decrypt to a text viewer.
"
open-keychain/open-keychain,closed,Fix F-Droid description,[],"- Add explanation for camera permission like in play store
- fix link to changelog
"
open-keychain/open-keychain,closed,Yubikey NEO PIN is not cached,[],"Just updated to OpenKeychain 3.2 on an CM 12.1 Nightly Android using K9-Mail. Since then, the PIN for the Yubikey is not cached anymore (However, the notification claims that the password is cached). Happens when decrypting. The setting to save the PIN for subkeys individually does not alter this behavior. 

Happy to provide follow-up information, just let me know. And, BTW: Great app! Enables safe communication on the phone! Thanks!
"
open-keychain/open-keychain,closed,Keychain may cause k9 to hang if files are shared encryptedly,[],"Reproduce:
- From gallery app share photo to k9 and select encyption

What happens: 
- k9 activity on send disappears, phone goes back to gallery, k9 says it would send message but Keychain passphrase activity is not shown.
- (attachment is not encrypted, I assume this happens on purpose, i.e. is not implemented yet?!)

How to workaround: 
- kill k9 hard, and resend message from outbox
"
open-keychain/open-keychain,closed,"Fixed sync on key import, crash for 'me' linked contact",[],"Added:
- Contact sync on key import
- Crash prevention if raw contact for secret key does not exist in 'me' contact
- Delete raw contacts marked for deletion by user

Fixes Issue https://github.com/open-keychain/open-keychain/issues/1260
"
open-keychain/open-keychain,closed,"""Decryption of messages with Conversations fails""","[Label(name=""google play crash-report"")]","G Play review:
""Was god.. Now decryption of messages with Conversations fails... Please fix this!""

I have tested this and it worked for me. We should investigate.
"
open-keychain/open-keychain,closed,Re-activate encrypt to-self in API,"[Label(name=""google play crash-report"")]","We need to re-activate encrypt to-self in API.

G Play review:
""Fast perfekt Leider kann ich nach dem heutigen Update meine Mail, die ich selber geschrieben und verschlüsselt habe, nicht mehr öffnen. Sie wird wohl nur noch mit dem Empfängerschlüssel verschlüsselt.""
"
open-keychain/open-keychain,closed,NullPointerException in EncryptTextActivity.java:145,"[Label(name=""google play crash-report""), Label(name=""help wanted"")]","Should be pretty easy to fix. Thus the label ""help-wanted"".

From G Play

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.EncryptTextActivity.onSignatureKeyIdChanged(EncryptTextActivity.java:145)
at org.sufficientlysecure.keychain.ui.EncryptModeAsymmetricFragment$1.onKeyChanged(EncryptModeAsymmetricFragment.java:113)
at org.sufficientlysecure.keychain.ui.widget.KeySpinner$1.onItemSelected(KeySpinner.java:86)
at android.widget.AdapterView.fireOnSelected(AdapterView.java:893)
at android.widget.AdapterView.selectionChanged(AdapterView.java:880)
at android.widget.AdapterView.checkSelectionChanged(AdapterView.java:1043)
at android.widget.AdapterView.handleDataChanged(AdapterView.java:1023)
at android.widget.AbsSpinner.onMeasure(AbsSpinner.java:180)
at android.widget.Spinner.onMeasure(Spinner.java:486)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1404)
at android.widget.LinearLayout.measureHorizontal(LinearLayout.java:1052)
at android.widget.LinearLayout.onMeasure(LinearLayout.java:590)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1404)
at android.widget.LinearLayout.measureVertical(LinearLayout.java:695)
at android.widget.LinearLayout.onMeasure(LinearLayout.java:588)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1404)
at android.widget.LinearLayout.measureVertical(LinearLayout.java:695)
at android.widget.LinearLayout.onMeasure(LinearLayout.java:588)
at android.view.View.measure(View.java:16628)
at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:719)
at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:455)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)
at android.support.v7.internal.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:124)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1404)
at android.widget.LinearLayout.measureVertical(LinearLayout.java:695)
at android.widget.LinearLayout.onMeasure(LinearLayout.java:588)
at android.view.View.measure(View.java:16628)
at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)
at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)
at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2298)
at android.view.View.measure(View.java:16628)
at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:1916)
at android.view.ViewRootImpl.measureHierarchy(ViewRootImpl.java:1113)
at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1295)
at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1000)
at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5622)
at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)
at android.view.Choreographer.doCallbacks(Choreographer.java:574)
at android.view.Choreographer.doFrame(Choreographer.java:544)
at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:212)
at android.app.ActivityThread.main(ActivityThread.java:5135)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:877)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:693)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,NullPointerException in PassphraseDialogActivity.java:105,"[Label(name=""google play crash-report"")]","From G Play

""openkeychain stürzt nach update bei Aufruf durch k9 ab""

```
java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.PassphraseDialogActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2339)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2389)
at android.app.ActivityThread.access$600(ActivityThread.java:153)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1269)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:5289)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:525)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:739)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:555)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity.onCreate(PassphraseDialogActivity.java:105)
at android.app.Activity.performCreate(Activity.java:5133)
at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2293)
... 11 more
```
"
open-keychain/open-keychain,closed,ArrayIndexOutOfBoundsException in KeyFormattingUtils.convertFingerprintToHex,"[Label(name=""google play crash-report"")]","From G Play

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:352)
at java.util.concurrent.FutureTask.setException(FutureTask.java:219)
at java.util.concurrent.FutureTask.run(FutureTask.java:239)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)
at java.lang.Thread.run(Thread.java:841)
Caused by: org.spongycastle.util.encoders.EncoderException: exception encoding Hex string: length=16; index=16
at org.spongycastle.util.encoders.Hex.encode(Hex.java:60)
at org.spongycastle.util.encoders.Hex.toHexString(Hex.java:27)
at org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils.convertFingerprintToHex(KeyFormattingUtils.java:219)
at org.sufficientlysecure.keychain.keyimport.ImportKeysListEntry.<init>(ImportKeysListEntry.java:300)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.generateListOfKeyrings(ImportKeysListLoader.java:121)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:70)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:39)
at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
at java.util.concurrent.FutureTask.run(FutureTask.java:234)
... 3 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: length=16; index=16
at org.spongycastle.util.encoders.HexEncoder.encode(HexEncoder.java:62)
at org.spongycastle.util.encoders.Hex.encode(Hex.java:56)
... 14 more
```
"
open-keychain/open-keychain,closed,NullPointerException in CreateKeyEmailFragment,"[Label(name=""google play crash-report""), Label(name=""help wanted"")]","From G Play
""crashed during rsa 8192bit key""
""on rotate screen""

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.CreateKeyEmailFragment.getAdditionalEmails(CreateKeyEmailFragment.java:246)
at org.sufficientlysecure.keychain.ui.CreateKeyEmailFragment.onSaveInstanceState(CreateKeyEmailFragment.java:256)
at android.support.v4.app.Fragment.performSaveInstanceState(Fragment.java:1936)
at android.support.v4.app.FragmentManagerImpl.saveFragmentBasicState(FragmentManager.java:1654)
at android.support.v4.app.FragmentManagerImpl.saveAllState(FragmentManager.java:1722)
at android.support.v4.app.FragmentActivity.onSaveInstanceState(FragmentActivity.java:527)
at org.sufficientlysecure.keychain.ui.CreateKeyActivity.onSaveInstanceState(CreateKeyActivity.java:142)
at android.app.Activity.performSaveInstanceState(Activity.java:1153)
at android.app.Instrumentation.callActivityOnSaveInstanceState(Instrumentation.java:1223)
at android.app.ActivityThread.handleRelaunchActivity(ActivityThread.java:3802)
at android.app.ActivityThread.access$900(ActivityThread.java:144)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1252)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:212)
at android.app.ActivityThread.main(ActivityThread.java:5137)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:902)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:718)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,java.lang.NoClassDefFoundError: android.support.v7.internal.view.menu.MenuBuilder,"[Label(name=""google play crash-report""), Label(name=""help wanted"")]","Maybe this is a bug in the official support lib. Googling this stacktrace should lead to fixes. :)

From G Play
Android 4.2

```
java.lang.NoClassDefFoundError: android.support.v7.internal.view.menu.MenuBuilder
at android.support.v7.widget.ActionMenuView.getMenu(ActionMenuView.java:622)
at android.support.v7.widget.Toolbar.ensureMenu(Toolbar.java:828)
at android.support.v7.widget.Toolbar.getMenu(Toolbar.java:820)
at android.support.v7.internal.widget.ToolbarWidgetWrapper.getMenu(ToolbarWidgetWrapper.java:708)
at android.support.v7.internal.app.ToolbarActionBar.getMenu(ToolbarActionBar.java:569)
at android.support.v7.internal.app.ToolbarActionBar.populateOptionsMenu(ToolbarActionBar.java:442)
at android.support.v7.internal.app.ToolbarActionBar$1.run(ToolbarActionBar.java:66)
at android.os.Handler.handleCallback(Handler.java:800)
at android.os.Handler.dispatchMessage(Handler.java:100)
at android.os.Looper.loop(Looper.java:194)
at android.app.ActivityThread.main(ActivityThread.java:5391)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:525)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)
at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,java.lang.AssertionError: Unhandled SecretKeyType (should not happen),"[Label(name=""google play crash-report"")]","From G Play:
""I am using a custom-made private key (main key has capability C only, and each subkey has its own capability: S, E and A). I exported the private subkeys only (so that my private key with C capability, used for key-parties only, stays safe). I guess OpenKeychain crashes for this reason: my main private key (the C one) is non-existent on this device (it stays safe at home)!""

```
java.lang.AssertionError: Unhandled SecretKeyType (should not happen)
at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment.onCreateDialog(PassphraseDialogActivity.java:265)
at android.support.v4.app.DialogFragment.getLayoutInflater(DialogFragment.java:308)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:955)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:740)
at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1501)
at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:458)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:212)
at android.app.ActivityThread.main(ActivityThread.java:5137)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:902)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:718)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,java.lang.AssertionError: User ids MUST be self-certified at this point!!,"[Label(name=""google play crash-report"")]","From GPlay

""Crash during some kind of re-import?""
""Shuts down while consolidating every time it starts since the last update.""
""new version crashes on start, trying to re-import keys.""

```
java.lang.AssertionError: User ids MUST be self-certified at this point!!
at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedPublicKeyRing(ProviderHelper.java:653)
at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:929)
at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:299)
at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1280)
at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1205)
at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:271)
at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,"""Clicking on linked contact crashes the app every time""","[Label(name=""google play crash-report""), Label(name=""help wanted"")]","Also labled with ""help-wanted"". Should be feasible for a newcomer to fix this.

From G Play:
""keeps crashing when trying to link to linked in.
Chose ""linked system contact"" for my own contact card
As I clicked on the button linked contact it stopped the app.
Clicking on linked contact crashes the app every time""

```
android.content.ActivityNotFoundException: No Activity found to handle Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts/-1 }
at android.app.Instrumentation.checkStartActivityResult(Instrumentation.java:1765)
at android.app.Instrumentation.execStartActivity(Instrumentation.java:1485)
at android.app.Activity.startActivityForResult(Activity.java:3736)
at android.app.Activity.startActivityForResult(Activity.java:3697)
at android.support.v4.app.FragmentActivity.startActivityForResult(FragmentActivity.java:820)
at android.app.Activity.startActivity(Activity.java:4007)
at android.app.Activity.startActivity(Activity.java:3975)
at org.sufficientlysecure.keychain.ui.ViewKeyFragment.launchContactActivity(ViewKeyFragment.java:195)
at org.sufficientlysecure.keychain.ui.ViewKeyFragment.access$100(ViewKeyFragment.java:49)
at org.sufficientlysecure.keychain.ui.ViewKeyFragment$3.onClick(ViewKeyFragment.java:167)
at android.view.View.performClick(View.java:4756)
at android.view.View$PerformClick.run(View.java:19749)
at android.os.Handler.handleCallback(Handler.java:739)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:135)
at android.app.ActivityThread.main(ActivityThread.java:5221)
at java.lang.reflect.Method.invoke(Native Method)
at java.lang.reflect.Method.invoke(Method.java:372)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)
```
"
open-keychain/open-keychain,closed,Cannot modify keys (java.lang.AssertionError: Unhandled SecretKeyType (should not happen)),[],"Since the latest materials design release (3.2), the app crashes every single time I try to edit or update any of my keys.
"
open-keychain/open-keychain,closed,Use snackbar 2.10.8 from maven,[],"Use snackbar 2.10.8 as maven dependency.
They merged our changes
"
open-keychain/open-keychain,closed,hide scrollbar ,[],"Current the scrollbar is shown even if there are just a few elements displayed: ![tmp_18985-openkeychain-485389994](https://cloud.githubusercontent.com/assets/5296073/7512324/82d9319a-f4ac-11e4-8a36-b198c7f32ace.jpg)

I think it would be best to hide the scrollbar when it's not necessary. The standard Android scrollbar is also hidden some seconds after scrolling. 

Btw, congratulations for the new version! It looks really nice! 
"
open-keychain/open-keychain,closed,Enhancement: On-Card Key Generation,[],"Opening this issue because I want to implement this, but I'm unsure whether it's desired functionality. As it stands currently, users can generate an OpenPGP identity within OpenKeychain, but if they want to use a Yubikey or NFC smart card, they must first configure it on a PC. I would like to be able to support people generating their keys securely on a Yubikey or a smart card, using nothing but OpenKeychain. I've started a branch to implement the commands necessary to do this on the card, but have run into some challenges understanding how I can fit these changes into the broader application. 

https://github.com/open-keychain/open-keychain/compare/development...josecastillo:oncardkeygen

On-card key generation works by issuing a GENERATE ASYMMETRIC KEYPAIR command for the correct slot (sign/decrypt/auth). The card generates this key, and then returns TLV data with the public exponent and modulus. From there, OpenKeychain would craft a public key packet with this data, and go about making the certification and subkey binding signatures with the usual nfcCalculateSignature commands. Finally, OpenKeychain would need to set the fingerprint and key generation timestamps on the card, and optionally change the user's PINs from the default. So far I've added commands to handle all of these tasks. 

The challenge is in incorporating this into the broader architecture of identity generation in OpenKeychain. I had imagined adding a parameter to the SubkeyAdd constructor, indicating whether the key should be generated on the card, and then firing off the required NFC operations in PgpKeyOperation. But looking into it further, the PgpKeyOperation creates the key using JcaPGPKeyPair, which always seems to want a private key. With on-card key generation, we won't have that, because the card never discloses private key data. 

Anyway, apologies for the wall of text, but after looking into this for a while I'm wondering whether this is even an enhancement that you would like to see in OpenKeychain. Personally I think it would be a huge usability win — especially for NFC-only tokens that cannot be easily configured on a PC. 
"
open-keychain/open-keychain,closed,StrictMode policy violation on key creation,[],"On key creation with default config on Android 5.1.1 (cyanogenmod 12.1-20150423-NIGHTLY-z3)

```
 28655             StrictMode  D  StrictMode policy violation; ~duration=192 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.open(BlockGuardOs.java:182)
 28655             StrictMode  D  at libcore.io.IoUtils.canOpenReadOnly(IoUtils.java:165)
 28655             StrictMode  D  at dalvik.system.DexPathList.findLibrary(DexPathList.java:383)
 28655             StrictMode  D  at dalvik.system.BaseDexClassLoader.findLibrary(BaseDexClassLoader.java:77)
 28655             StrictMode  D  at java.lang.Runtime.loadLibrary(Runtime.java:360)
 28655             StrictMode  D  at java.lang.System.loadLibrary(System.java:988)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.util.jni.NativeHelper.initialize(PG:48)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.<clinit>(PG:86)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=148 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.access(BlockGuardOs.java:67)
 28655             StrictMode  D  at java.io.File.doAccess(File.java:283)
 28655             StrictMode  D  at java.io.File.exists(File.java:363)
 28655             StrictMode  D  at android.app.ContextImpl.createFilesDirLocked(ContextImpl.java:1035)
 28655             StrictMode  D  at android.app.ContextImpl.getFilesDir(ContextImpl.java:1058)
 28655             StrictMode  D  at android.app.ContextImpl.openFileInput(ContextImpl.java:1000)
 28655             StrictMode  D  at android.content.ContextWrapper.openFileInput(ContextWrapper.java:182)
 28655             StrictMode  D  at com.google.android.apps.gmm.shared.f.h.a(PG:150)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9675)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=148 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.open(BlockGuardOs.java:182)
 28655             StrictMode  D  at libcore.io.IoBridge.open(IoBridge.java:442)
 28655             StrictMode  D  at java.io.FileInputStream.<init>(FileInputStream.java:76)
 28655             StrictMode  D  at android.app.ContextImpl.openFileInput(ContextImpl.java:1001)
 28655             StrictMode  D  at android.content.ContextWrapper.openFileInput(ContextWrapper.java:182)
 28655             StrictMode  D  at com.google.android.apps.gmm.shared.f.h.a(PG:150)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9675)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=147 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.fstat(BlockGuardOs.java:132)
 28655             StrictMode  D  at libcore.io.IoBridge.open(IoBridge.java:445)
 28655             StrictMode  D  at java.io.FileInputStream.<init>(FileInputStream.java:76)
 28655             StrictMode  D  at android.app.ContextImpl.openFileInput(ContextImpl.java:1001)
 28655             StrictMode  D  at android.content.ContextWrapper.openFileInput(ContextWrapper.java:182)
 28655             StrictMode  D  at com.google.android.apps.gmm.shared.f.h.a(PG:150)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9675)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=139 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.read(BlockGuardOs.java:229)
 28655             StrictMode  D  at libcore.io.IoBridge.read(IoBridge.java:472)
 28655             StrictMode  D  at java.io.FileInputStream.read(FileInputStream.java:177)
 28655             StrictMode  D  at java.io.BufferedInputStream.read(BufferedInputStream.java:290)
 28655             StrictMode  D  at java.io.DataInputStream.read(DataInputStream.java:63)
 28655             StrictMode  D  at com.google.r.j.c(PG:1187)
 28655             StrictMode  D  at com.google.r.j.a(PG:2107)
 28655             StrictMode  D  at com.google.v.a.a.ds.<init>(PG:24)
 28655             StrictMode  D  at com.google.v.a.a.ds.a(PG:9409)
 28655             StrictMode  D  at com.google.r.t.a(PG:1196)
 28655             StrictMode  D  at com.google.r.w.a(PG:2223)
 28655             StrictMode  D  at com.google.r.e.b(PG:170)
 28655             StrictMode  D  at com.google.r.e.b(PG:10188)
 28655             StrictMode  D  at com.google.android.apps.gmm.shared.f.h.a(PG:151)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9675)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=137 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.read(BlockGuardOs.java:229)
 28655             StrictMode  D  at libcore.io.IoBridge.read(IoBridge.java:472)
 28655             StrictMode  D  at java.io.FileInputStream.read(FileInputStream.java:177)
 28655             StrictMode  D  at java.io.BufferedInputStream.read(BufferedInputStream.java:290)
 28655             StrictMode  D  at java.io.DataInputStream.read(DataInputStream.java:63)
 28655             StrictMode  D  at com.google.r.j.c(PG:1187)
 28655             StrictMode  D  at com.google.r.j.b(PG:9147)
 28655             StrictMode  D  at com.google.r.j.g(PG:583)
 28655             StrictMode  D  at com.google.v.a.a.ds.<init>(PG:43)
 28655             StrictMode  D  at com.google.v.a.a.ds.a(PG:9409)
 28655             StrictMode  D  at com.google.r.t.a(PG:1196)
 28655             StrictMode  D  at com.google.r.w.a(PG:2223)
 28655             StrictMode  D  at com.google.r.e.b(PG:170)
 28655             StrictMode  D  at com.google.r.e.b(PG:10188)
 28655             StrictMode  D  at com.google.android.apps.gmm.shared.f.h.a(PG:151)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9675)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=118 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.access(BlockGuardOs.java:67)
 28655             StrictMode  D  at java.io.File.doAccess(File.java:283)
 28655             StrictMode  D  at java.io.File.exists(File.java:363)
 28655             StrictMode  D  at android.app.ContextImpl.createFilesDirLocked(ContextImpl.java:1035)
 28655             StrictMode  D  at android.app.ContextImpl.getFilesDir(ContextImpl.java:1058)
 28655             StrictMode  D  at android.app.ContextImpl.getFileStreamPath(ContextImpl.java:1166)
 28655             StrictMode  D  at android.content.ContextWrapper.getFileStreamPath(ContextWrapper.java:198)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9683)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=117 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.access(BlockGuardOs.java:67)
 28655             StrictMode  D  at java.io.File.doAccess(File.java:283)
 28655             StrictMode  D  at java.io.File.exists(File.java:363)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9685)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
 28655             StrictMode  D  StrictMode policy violation; ~duration=117 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=31 violation=2
 28655             StrictMode  D  at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1137)
 28655             StrictMode  D  at libcore.io.BlockGuardOs.stat(BlockGuardOs.java:292)
 28655             StrictMode  D  at java.io.File.lastModified(File.java:571)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.s.a(PG:9686)
 28655             StrictMode  D  at com.google.b.a.cb.a(PG:125)
 28655             StrictMode  D  at com.google.android.apps.gmm.map.m.g.a(PG:1493)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.a(PG:1179)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.d.<init>(PG:624)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.a(PG:156)
 28655             StrictMode  D  at com.google.android.apps.gmm.base.app.GoogleMapsApplication.onCreate(PG:124)
 28655             StrictMode  D  at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
 28655             StrictMode  D  at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4588)
 28655             StrictMode  D  at android.app.ActivityThread.access$1600(ActivityThread.java:154)
 28655             StrictMode  D  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1382)
 28655             StrictMode  D  at android.os.Handler.dispatchMessage(Handler.java:102)
 28655             StrictMode  D  at android.os.Looper.loop(Looper.java:135)
 28655             StrictMode  D  at android.app.ActivityThread.main(ActivityThread.java:5293)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Native Method)
 28655             StrictMode  D  at java.lang.reflect.Method.invoke(Method.java:372)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)
 28655             StrictMode  D  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)
  1864            GLSActivity  I  [ab] getting account id
  741         ActivityManager  I  Killing 27320:com.android.keychain/1000 (adj 15): empty #17
```
"
open-keychain/open-keychain,closed,handling of unknown keys in decryptactivity,[],"also introduced in 96853a15ee535860fd789bc5be4979f2205e959c, the handling of unknown keys is bogus.

if a key is not known, we can't check if a signature is valid. in the ui, this shows up as ""signed by unknown key"". once a lookup is done this data is immediately refreshed, and shows ""signature ok"" but _without_ checking again if the signature is actually valid.
"
open-keychain/open-keychain,closed,Bad NFC response code:  6982,[],"Hi,

I receiving a replacement key from yubico because of that vulnerability: https://developers.yubico.com/ykneo-openpgp/SecurityAdvisory%202015-04-14.html running their OpenPGP applet v.1.0.10.
The new key can't be used to encrypt anymore, decrypting works though.
It says: ""bad nfc response code: 6982"" as soon as my key touches the back of the phone (Sony Z3C).

Same error happens on my Nexus 7, I already tried reimporting the keys.
Encrypting/decrypting via the Yubikey works on my computer flawlessly.

Thanks
"
open-keychain/open-keychain,closed,Always show YubiKey card view,[],"The YubiKey card view should be always visible for keys bound to YubiKeys
"
open-keychain/open-keychain,closed,Add OpenKeychain To Silent Store ,[],"Please add OpenKeychain to the silent store. https://silentstore.blackphone.ch/developer/#test-popup
"
open-keychain/open-keychain,closed,wrong key for decryption/signing verify,[],"It works fine for encrypting, but decryption / signing verify always fails because it looks in my keychain for a specific subkey and doesn't realise its a subkey!  So it always says that the key hasn't been found.

Android 4.4.2 with up-to-date open-keychain.

Checked against my thunderbird+enigmail to see if everything was ok, and it was.
"
open-keychain/open-keychain,open,Confirm activity design improvements,[],"- ""Scan _Bob's_ QR Code,"", also below qr code scanner: ""Scan Bob's QR Code""
- pre-select with primary user id?
- hide my key completely if only one is available
"
open-keychain/open-keychain,open,Rename 'keyserver'?,"[Label(name=""discussion"")]","Maybe better for your average Johnny:
key directory?
key addressbook?
"
open-keychain/open-keychain,open,Password meter design,[],"The password meter needs your love!
It is currently really small and can hardly be seen. Maybe it should be layered behind the whole TextView? Maybe there are more ideas to improve it visually.

It could also get some love from the algorithmic side: There are techniques such as https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/ which are also not perfect but better than what we currently do (which is a very naive algorithm).
"
open-keychain/open-keychain,closed,Select newest subkey instead of the first one we find,"[Label(name=""help wanted"")]","Instead of selecting the first found usable subkey for a operation we should use the **newest** subkey that is usable for a specific operation. (Proposed by Werner Koch on the summit)
This is a more deterministic way of selecting a subkey.
"
open-keychain/open-keychain,closed,Mark currently selected item in nav drawer,"[Label(name=""help wanted"")]","Mark a currently selected nav item with a grey background.
"
open-keychain/open-keychain,closed,error handling in decrypt fragment,"[Label(name=""bug"")]","After the recent change in decrypt ui (96853a15ee535860fd789bc5be4979f2205e959c), error handling is broken and needs to be redone. From a quick glance, the TextDecryptFragment shows a snackbar for success/error, the FileDecryptFragment doesn't.

The snackbar, and a case for !result.success(), should all be in loadVerifyResult in DecryptFragment
"
open-keychain/open-keychain,closed,bad NFC response code: 6982,[],"Hi

My old YubyKey was affected by this issue: https://developers.yubico.com/ykneo-openpgp/SecurityAdvisory%202015-04-14.html (version 1.0.8). 
Now i have a new YubyKey without this problem (version 1.0.10).
But the new key does not work with OpenKeyChain/NFC/Android?!?

The error message is: bad NFC response code: 6982

---

![bad_nfc_response_code-6982](https://cloud.githubusercontent.com/assets/7827495/7457932/65902b66-f290-11e4-80e9-ab79ee9be6e5.gif)
"
open-keychain/open-keychain,closed,Get passphrase from cache for certify operation,"[Label(name=""help wanted"")]","This was lost in refactorings: Get passphrase from cache for certify operations.
"
open-keychain/open-keychain,closed,Use FileProvider for TemporaryStorageProvider,"[Label(name=""help wanted"")]","We must use https://developer.android.com/reference/android/support/v4/content/FileProvider.html in newer version to prevent https://github.com/open-keychain/open-keychain/issues/1240
This allows us to grant temporary read permissions to other apps.
"
open-keychain/open-keychain,closed,Predictable IDs in TemporaryStorageProvider,[],"Currently the IDs in the TemporaryStorageProvider are completely predictable, i.e. increment by 1, starting from 1. 
Thus a malicious app is able to read/access temporary files by just _trying_  IDs starting from 1

It'd probably be better to have a random UUID as the key to access files in the temporary storage provider.

Sorry, no PR due to my offline setup, but here's a patch file:

```
Index: OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/TemporaryStorageProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/TemporaryStorageProvider.java   (revision 63ca81d8717bad8df9a9c159126612eb62867647)
+++ OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/TemporaryStorageProvider.java   (revision )
@@ -35,6 +35,7 @@
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
+import java.util.UUID;

 public class TemporaryStorageProvider extends ContentProvider {

@@ -66,7 +67,7 @@
         @Override
         public void onCreate(SQLiteDatabase db) {
             db.execSQL(""CREATE TABLE IF NOT EXISTS "" + TABLE_FILES + "" ("" +
-                    COLUMN_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, "" +
+                    COLUMN_ID + "" TEXT PRIMARY KEY, "" +
                     COLUMN_NAME + "" TEXT, "" +
                     COLUMN_TIME + "" INTEGER"" +
                     "");"");
@@ -82,13 +83,13 @@

     private File getFile(Uri uri) throws FileNotFoundException {
         try {
-            return getFile(Integer.parseInt(uri.getLastPathSegment()));
+            return getFile(uri.getLastPathSegment());
         } catch (NumberFormatException e) {
             throw new FileNotFoundException();
         }
     }

-    private File getFile(int id) {
+    private File getFile(String id) {
         return new File(getContext().getCacheDir(), ""temp/"" + id);
     }

@@ -133,13 +134,15 @@
         if (!values.containsKey(COLUMN_TIME)) {
             values.put(COLUMN_TIME, System.currentTimeMillis());
         }
+        String uuid = UUID.randomUUID().toString();
+        values.put(COLUMN_ID, uuid);
         int insert = (int) db.getWritableDatabase().insert(TABLE_FILES, null, values);
         try {
-            getFile(insert).createNewFile();
+            getFile(uuid).createNewFile();
         } catch (IOException e) {
             return null;
         }
-        return Uri.withAppendedPath(BASE_URI, Long.toString(insert));
+        return Uri.withAppendedPath(BASE_URI, uuid);
     }

     @Override
@@ -152,7 +155,7 @@
                 selectionArgs, null, null, null);
         if (files != null) {
             while (files.moveToNext()) {
-                getFile(files.getInt(0)).delete();
+                getFile(files.getString(0)).delete();
             }
             files.close();
             return db.getWritableDatabase().delete(TABLE_FILES, selection, selectionArgs);

```
"
open-keychain/open-keychain,closed,Automated tests failing,[],"The automated tests are failing both on my local system and in the Travis-CI system.
"
open-keychain/open-keychain,closed,updated robolectric to support new android support libs,[],"Fixes #1239 

Updated robolectric also requires explicit import of maven-ant-tasks, otherwise this error results:

```
java.lang.NoClassDefFoundError: org/apache/maven/artifact/ant/DependenciesTask
```
"
open-keychain/open-keychain,open,API: K-9 Mail - OpenKeychain pairing via signing key pinning?,"[Label(name=""api todo""), Label(name=""discussion"")]","From K-9's mailinglist:

> As far as I understand the pairing between K-9 and OpenKeychain, this is basically a Trust-On-First-Use (TOFU) model where the trust is established by looking at the app that is selected as the PGP provider.
> 
> I've been thinking that there can be a zero-config version of this based on pinning the signing key of the APK.  For example, K-9 would include the signing key of OpenKeychain, then when K-9 sees there is a PGP provider that is signed by that key, it would automatically set it up and use it.
> 
> For handling multiple matches, it can either stick with the first pinned app that was configured; or it could use the most recently installed app that matches K-9's signing key pins.  This would not override the user selected app, and the regular behavior would still be possible.

We could include the signing key in our client lib
"
open-keychain/open-keychain,closed,OpenKeyChain crashes while decrypting messages,[],"Hi!
I have a problem with openkeychain on my nexus 5. I use K9 with openkeychain, but when I try to decrypt a message, openkeychain crashes twice after entering the password.
It also crashes twice if I copy some encrypted text and use the function ""decrypt from clipboard"" (crashing twice means there are two popups saying openkeychain stopped working).
Also I found that openkeychain may not recognize encrypted messages when I copy the the first paragraph of an encrypted email. However it works if I start copying from the first ""-"". 
This wont work:
""
-----BEGIN...""
This will work:
""-----BEGIN...""

Im using openkeychain v3.1.2 from fdroid.
If I use APG to decrypt the same message, everything works.
How can I help you? Do you need more information? 
"
open-keychain/open-keychain,closed,Fix Bluetooth share without breaking others,[],"Implemented Bluetooth sharing via file while leaving all other sharing alone.

Fixes #1223 
"
open-keychain/open-keychain,closed,"Raw ""%s"" showing up in ""View Certificate Details""",[],"The actual string ""%s"" was showing up in the UI for ""View Certificate Details""
"
open-keychain/open-keychain,closed,Update README.md with new build info,[],"I found that the README was not entirely accurate with respect to the current development status and it took me a while to figure out what I needed to get and do to make it work.
"
open-keychain/open-keychain,closed,Tutorial for openkeychain.org,"[Label(name=""help wanted"")]","I would like to have a HowTo on our website openkeychain.org. It has also been requested by Guardianproject several times in the past (they will then link to us)

See for examples: https://guardianproject.info/howto

You can find the tutorial code here:
https://github.com/guardianproject/tutorial-orbot-orweb
https://github.com/guardianproject/Gibberbot-Tutorial
"
open-keychain/open-keychain,closed,Email validation icon not working,[],"Email validation icon on the right not updating properly.
Looks like introduced by the support lib update.
"
open-keychain/open-keychain,closed,Make Bluetooth sharing send plain text,[],"Fixes #1223 
"
open-keychain/open-keychain,closed,tokenautocomplete crashes,[],"```
 13381         AndroidRuntime  E  FATAL EXCEPTION: main
 13381         AndroidRuntime  E  Process: org.sufficientlysecure.keychain, PID: 13381
 13381         AndroidRuntime  E  java.lang.IllegalStateException: attempt to re-open an already-closed object: SQLiteQuery: SELECT keys.oid AS _id, keys.master_key_id, user_packets.user_id, keys.is_revoked, (keys.expiry IS NOT NULL AND keys.expiry < 1430156267) AS is_expired, verified, (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, (SELECT COUNT (*) FROM user_packets AS dups WHERE dups.master_key_id != keys.master_key_id AND dups.rank = 0 AND dups.user_id = user_packets.user_id) AS has_duplicate_user_id, kE.key_id AS has_encrypt, keys.fingerprint, keys.creation FROM keys INNER JOIN user_packets ON (keys.master_key_id = user_packets.master_key_id AND user_packets.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) LEFT JOIN keys AS kE ON (kE.master_key_id = keys.master_key_id AND kE.is_revoked = 0 AND kE.can_encrypt = 1 AND ( kE.expiry IS NULL OR kE.expiry >= 1430156267 )) WHERE (keys.rank = 0) AND (has_encrypt NOT NULL AND is_expired = 0 AND keys.is_revoked = 0 AND user_id LIKE ?) GROUP BY keys.master_key_id ORDER BY user_packets.user_id ASC
 13381         AndroidRuntime  E  at android.database.sqlite.SQLiteClosable.acquireReference(SQLiteClosable.java:55)
 13381         AndroidRuntime  E  at android.database.sqlite.SQLiteQuery.fillWindow(SQLiteQuery.java:58)
 13381         AndroidRuntime  E  at android.database.sqlite.SQLiteCursor.fillWindow(SQLiteCursor.java:152)
 13381         AndroidRuntime  E  at android.database.sqlite.SQLiteCursor.onMove(SQLiteCursor.java:124)
 13381         AndroidRuntime  E  at android.database.AbstractCursor.moveToPosition(AbstractCursor.java:214)
 13381         AndroidRuntime  E  at android.database.CursorWrapper.moveToPosition(CursorWrapper.java:162)
 13381         AndroidRuntime  E  at android.support.v4.widget.CursorAdapter.getView(CursorAdapter.java:247)
 13381         AndroidRuntime  E  at android.widget.AbsListView.obtainView(AbsListView.java:2347)
 13381         AndroidRuntime  E  at android.widget.ListPopupWindow$DropDownListView.obtainView(ListPopupWindow.java:1706)
 13381         AndroidRuntime  E  at android.widget.ListView.measureHeightOfChildren(ListView.java:1270)
 13381         AndroidRuntime  E  at android.widget.ListPopupWindow.buildDropDown(ListPopupWindow.java:1181)
 13381         AndroidRuntime  E  at android.widget.ListPopupWindow.show(ListPopupWindow.java:568)
 13381         AndroidRuntime  E  at android.widget.AutoCompleteTextView.showDropDown(AutoCompleteTextView.java:1105)
 13381         AndroidRuntime  E  at android.widget.AutoCompleteTextView.updateDropDownForFilter(AutoCompleteTextView.java:974)
 13381         AndroidRuntime  E  at android.widget.AutoCompleteTextView.onFilterComplete(AutoCompleteTextView.java:956)
 13381         AndroidRuntime  E  at android.widget.Filter$ResultsHandler.handleMessage(Filter.java:285)
 13381         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 13381         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
 13381         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5254)
 13381         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
 13381         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
 13381         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)
 13381         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)
```

it crashs regularly for me just typing random stuff in there.
"
open-keychain/open-keychain,closed,Link to search from AutoTextComplete on empty result set,"[Label(name=""enhancement""), Label(name=""help wanted""), Label(name=""user interface"")]",
open-keychain/open-keychain,closed,crash in tokenautocomplete,"[Label(name=""bug"")]","```
 10470         AndroidRuntime  E  FATAL EXCEPTION: main
 10470         AndroidRuntime  E  Process: org.sufficientlysecure.keychain, PID: 10470
 10470         AndroidRuntime  E  java.lang.RuntimeException: Unable to destroy activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.EncryptTextActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String java.lang.Object.toString()' on a null object reference
 10470         AndroidRuntime  E  at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3702)
 10470         AndroidRuntime  E  at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3720)
 10470         AndroidRuntime  E  at android.app.ActivityThread.access$1500(ActivityThread.java:147)
 10470         AndroidRuntime  E  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1350)
 10470         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 10470         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
 10470         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5256)
 10470         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
 10470         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
 10470         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:898)
 10470         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:693)
 10470         AndroidRuntime  E  Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String java.lang.Object.toString()' on a null object reference
 10470         AndroidRuntime  E  at com.tokenautocomplete.TokenCompleteTextView.replaceText(TokenCompleteTextView.java:729)
 10470         AndroidRuntime  E  at com.tokenautocomplete.TokenCompleteTextView.performCompletion(TokenCompleteTextView.java:420)
 10470         AndroidRuntime  E  at com.tokenautocomplete.TokenCompleteTextView.onFocusChanged(TokenCompleteTextView.java:683)
 10470         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.widget.EncryptKeyCompletionView.onFocusChanged(EncryptKeyCompletionView.java:159)
 10470         AndroidRuntime  E  at android.view.View.clearFocusInternal(View.java:5065)
 10470         AndroidRuntime  E  at android.view.View.unFocus(View.java:5098)
 10470         AndroidRuntime  E  at android.view.ViewGroup.unFocus(ViewGroup.java:962)
 10470         AndroidRuntime  E  at android.view.ViewGroup.removeViewInternal(ViewGroup.java:4148)
 10470         AndroidRuntime  E  at android.view.ViewGroup.removeViewInternal(ViewGroup.java:4136)
 10470         AndroidRuntime  E  at android.view.ViewGroup.removeView(ViewGroup.java:4068)
 10470         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1057)
 10470         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
 10470         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1120)
 10470         AndroidRuntime  E  at android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:1966)
 10470         AndroidRuntime  E  at android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:316)
 10470         AndroidRuntime  E  at android.support.v7.app.AppCompatActivity.onDestroy(AppCompatActivity.java:158)
 10470         AndroidRuntime  E  at android.app.Activity.performDestroy(Activity.java:6112)
 10470         AndroidRuntime  E  at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1140)
 10470         AndroidRuntime  E  at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3689)
```

happened at a click on the back button (top left) in the encrypt text dialog while the encrypt to field was focused
"
open-keychain/open-keychain,closed,Improvements to CreateKeyEmailFragment,[],
open-keychain/open-keychain,closed,update lib MaterialDrawer to latest(2.8.2),[],"Since the latest version of library MaterialDrawer depends on latest com.android.support:appcompat version 22.1.0 and we switched to new support lib version 22.1 now, we can update this library to the latest.
"
open-keychain/open-keychain,closed,Switch to AppCompatDialog,"[Label(name=""help wanted"")]","- Switch to newly introduced AppCompatDialog (see http://android-developers.blogspot.de/2015/04/android-support-library-221.html)
- Use it in all our dialog classes
- test on all Android versions we support.
"
open-keychain/open-keychain,closed,Key shared via bluetooth is encoded in HTML,[],"When I tried to copy my key to my Mac via Bluetooth, the Mac received a file named ""bluetooth_content_share.html"" with contents that looked like this:

```
<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/>
</head>
<body>
-----BEGIN PGP PUBLIC KEY BLOCK-----<br>
<br>
gVMEc6PwyOL63szYP1idG6G2k93azdbrczHK5xDNAxCjYRdZDfYsTEO7s<a href=""tel:118"">118</a>uEhA<br>
jzBKVNFQD/B00js83AG97sOHsboc39liyxG8PE4jgiuHIYYSmy2BAJoG8YDxvpuy<br>
F6E5dBlUCYMDQXF9TqluF1aXDpenYKVr6W4Rckvu1fhB6CM4LIjBuDdQju5EIfJT<br>
⋮
XgwNH97I58vNgTtwueVnM96w2AXGMrfQRMPluGm22GBeF1LxcAJAUiHjvE8VQomZ<br>
jI/BG0y5OQqsq+GzTNkqtg<br>
-----END PGP PUBLIC KEY BLOCK-----<br>
</body>
</html>
```

The data presented here is bogus, but the html structure is the same, except that the actual file had no newlines in it, not even a trailing one.  Note that any sequence of 3 or more decimal digits got converted to a ""tel"" url-scheme link.

I doubt that OpenKeychain is creating this HTML version; I'm guessing it probably needs to tell the Bluetooth sharing facility in Android not to mangle the file like this.
"
open-keychain/open-keychain,closed,passphrases are not retrieved from cache when signing,[],"passphrases are not retrieved from cache when signing
"
open-keychain/open-keychain,closed,Multi-threaded key import by CloudImportService Import fails for keyrings with pub+sec key with same key id,[],"If we use multi-threaded key import as implemented by CloudImportService the following will happen:

Import fails for keyring with pub+sec key with same key id
- Have a file with separated pub and sec key (as exported by Enigmail for example)
- Import into OpenKeychain

I thought we already fixed this issue at one point in the past, but looks like we somehow re-introduced this bug. So this is a typical case were we _must_ have a unit test.

```
 32096               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8181922323901784706/user_ids, values=is_revoked=false attribute_data=null is_primary=false master_key_id=8181922323901784706 rank=1 type=null user_id=Dominik Schürmann <d.schuermann@tu-bs.de>)
 32096              SQLiteLog  E  (787) abort at 24 in [INSERT INTO user_packets(is_revoked,attribute_data,is_primary,master_key_id,rank,type,user_id) VALUES (?,?,?,?,?,?,?)]: FOREIGN KEY constraint failed
 32096               Keychain  D  Constraint exception on insert! Entry already existing?
 32096               Keychain  D  android.database.sqlite.SQLiteConstraintException: FOREIGN KEY constraint failed (code 787)
 32096               Keychain  D  at android.database.sqlite.SQLiteConnection.nativeExecuteForLastInsertedRowId(Native Method)
 32096               Keychain  D  at android.database.sqlite.SQLiteConnection.executeForLastInsertedRowId(SQLiteConnection.java:784)
 32096               Keychain  D  at android.database.sqlite.SQLiteSession.executeForLastInsertedRowId(SQLiteSession.java:788)
 32096               Keychain  D  at android.database.sqlite.SQLiteStatement.executeInsert(SQLiteStatement.java:86)
 32096               Keychain  D  at android.database.sqlite.SQLiteDatabase.insertWithOnConflict(SQLiteDatabase.java:1471)
 32096               Keychain  D  at android.database.sqlite.SQLiteDatabase.insertOrThrow(SQLiteDatabase.java:1367)
 32096               Keychain  D  at org.sufficientlysecure.keychain.provider.KeychainProvider.insert(KeychainProvider.java:713)
 32096               Keychain  D  at android.content.ContentProviderOperation.apply(ContentProviderOperation.java:245)
 32096               Keychain  D  at android.content.ContentProvider.applyBatch(ContentProvider.java:1756)
 32096               Keychain  D  at android.content.ContentProvider$Transport.applyBatch(ContentProvider.java:297)
 32096               Keychain  D  at android.content.ContentProviderClient.applyBatch(ContentProviderClient.java:377)
 32096               Keychain  D  at android.content.ContentResolver.applyBatch(ContentResolver.java:1244)
 32096               Keychain  D  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedPublicKeyRing(ProviderHelper.java:701)
 32096               Keychain  D  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:1042)
 32096               Keychain  D  at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:296)
 32096               Keychain  D  at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:136)
 32096               Keychain  D  at org.sufficientlysecure.keychain.service.CloudImportService$2.run(CloudImportService.java:277)
 32096               Keychain  D  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 32096               Keychain  D  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 32096               Keychain  D  at java.lang.Thread.run(Thread.java:818)
 32096               Keychain  V  log: LogEntryParcel{mLevel=ERROR, mType=MSG_IP_ERROR_OP_EXC, mParameters=null, mIndent=1}
 32096               Keychain  V  log: LogEntryParcel{mLevel=DEBUG, mType=MSG_IP_DELETE_OLD_OK, mParameters=null, mIndent=1}
 32096               Keychain  V  log: LogEntryParcel{mLevel=DEBUG, mType=MSG_IP_APPLY_BATCH, mParameters=null, mIndent=1}
 32096               Keychain  E  OperationApplicationException during import
 32096               Keychain  E  android.content.OperationApplicationException: insert failed
 32096               Keychain  E  at android.content.ContentProviderOperation.apply(ContentProviderOperation.java:247)
 32096               Keychain  E  at android.content.ContentProvider.applyBatch(ContentProvider.java:1756)
 32096               Keychain  E  at android.content.ContentProvider$Transport.applyBatch(ContentProvider.java:297)
 32096               Keychain  E  at android.content.ContentProviderClient.applyBatch(ContentProviderClient.java:377)
 32096               Keychain  E  at android.content.ContentResolver.applyBatch(ContentResolver.java:1244)
 32096               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedPublicKeyRing(ProviderHelper.java:701)
 32096               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:1042)
 32096               Keychain  E  at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:296)
 32096               Keychain  E  at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:136)
 32096               Keychain  E  at org.sufficientlysecure.keychain.service.CloudImportService$2.run(CloudImportService.java:277)
 32096               Keychain  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 32096               Keychain  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 32096               Keychain  E  at java.lang.Thread.run(Thread.java:818)
 32096               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8181922323901784706/public, values=key_ring_data=[B@3416a257 master_key_id=8181922323901784706)
```
"
open-keychain/open-keychain,closed,Switch to MaterialDrawer library,[],"Fix issue#1197
"
open-keychain/open-keychain,closed,Espresso test for CreateKeyActivity,[],"This is my first time writing tests so if I've gone wrong somewhere or left anything important please let me know. Also fixed few minor bugs.
"
open-keychain/open-keychain,closed,Fixed Snackbar behind layout,[],"Also have a fixed an error message.

![screenshot_2015-04-22-18-36-56](https://cloud.githubusercontent.com/assets/1645107/7275060/59155282-e91f-11e4-86f6-925dbbf90347.png)
"
open-keychain/open-keychain,closed,Yubikey NFC operation,[],"When using the Yubikey Neo as a smartcard with OpenKeychain, I assume it works as a normal smartcard? I.e, OpenKeychain never gets access to the raw key material at any point, it just passes the data to decrypt/sign over NFC to the Yubikey, which performs the crypto operations on-board, and then sends the result back? Am I right? I assumed this is how it works, but somebody who seems to have a decent level of knowledge about how NFC works, recently suggested that might not be possible with the NFC hardware in the Yubikey...
"
open-keychain/open-keychain,closed,Can't encrypt text from key details screen,"[Label(name=""help wanted"")]","When I go to key details screen and I tap to icon ""encrypt text"" then empty screen is opened.

Revision: b0c87e2
"
open-keychain/open-keychain,closed,Can't import key with yubikey,[],"Can't import my own key with Yubikey (I have key with master key, so signature key isn't cert key).
It located key (by signature key) and during import I see 

```
Fingerprint of fetched key didn't match expected!
```

Revision: b0c87e2372681d4f2de547b73d41b98d86bd564e
"
open-keychain/open-keychain,closed,Verifying Newly Added Keyservers,[],"Fixes Issue https://github.com/open-keychain/open-keychain/issues/1202.

I've used the `TlsHelper.openConnection()` function to check for connectivity, mainly because sks-keyservers.net (and some other servers, as mentioned in TlsHelper) required it for their hkps/https connections to be verified.

![screenshot_2015-04-22-06-24-22](https://cloud.githubusercontent.com/assets/5712241/7265502/8e894656-e8b8-11e4-84b2-5602aaf9ca12.png)
![screenshot_2015-04-22-06-24-47](https://cloud.githubusercontent.com/assets/5712241/7265506/a0267730-e8b8-11e4-9e5d-41c1409c2ce4.png)
![screenshot_2015-04-22-06-24-30](https://cloud.githubusercontent.com/assets/5712241/7265508/a3dbe522-e8b8-11e4-91e2-0c4db85a4594.png)
"
open-keychain/open-keychain,closed,Support lib 22.1,"[Label(name=""help wanted"")]","Implement changes, see https://plus.google.com/+AndroidDevelopers/posts/LNyDnnBYJ8r
"
open-keychain/open-keychain,closed,Corrected possible null pointer with key import,[],"Should have been keyserver == null instead of keysever != null. Sorry.
Much thanks to @josecastillo for pointing that out.
"
open-keychain/open-keychain,closed,Better handling of devices without NFC,"[Label(name=""help wanted"")]","Currently just silently ignoring it in https://github.com/open-keychain/open-keychain/commit/555b0bf7573a9273bdd5e8c7870cabd8cd0e2186

Maybe throw an exception and handle this via a dialog that informs the user?
"
open-keychain/open-keychain,closed,Maintain client-side state for PIN verification operations,[],"This change adds three fields to BaseNfcActivity to track PIN verification. Two booleans track whether the PIN is verified for a given operation, and a third tracks whether the PIN must be resubmitted for every signature operation (page 32 of OpenPGP smart card spec). It also adds a method to query the PW status bytes for this information. 

This pull request also incorporates a separate commit with an unrelated fix when selecting the application. A successful SELECT FILE operation is indicated by the response ending with 9000, not being equal to 9000 (page 31 of OpenPGP smart card spec). The standard OpenPGP card includes file control information in the returned data field; this change is necessary to accommodate cards that implement this part of the spec. 
"
open-keychain/open-keychain,closed,Make Logs not Toasts - Fixes Issue #1198,[],"Fix for Issue https://github.com/open-keychain/open-keychain/issues/1198.
It seems that `returnResult` was used to imply two things:
1. Whether the fingerprint should just be scanned and returned (not imported).
2. Whether the activity was started from inside OpenKeychain or externally.

Due to 1., importing a key via QR Code meant `returnResult` was set to false. Due to 2., it incorrectly implied that this was an external request. Since external requests can't be expected to interpret our logs, we were showing a toast.

To separate the two, an extra `EXTRA_IS_INTERNAL` is passed to `ImportKeysProxyActivity` whenever it is started from within OpenKeychain and a log is to be returned.

I've also renamed `returnResult` to `onlyReturnFingerprint` to reflect the difference between the two.

From what I've seen, `returnResult` (now `onlyReturnFingerprint`) seems to be equivalent to `ACTION_SCAN_WITH_RESULT`. Should we do away with the variable completely and  just check for the action?
"
open-keychain/open-keychain,open,"Change name of App to something ""Contact"" related","[Label(name=""discussion"")]","I proposed this idea to @dschuermann and @Valodim at the OpenPGP Summit and both seemed warm and open to the idea.

A discussion in the [@modernpgp/terminology](https://github.com/ModernPGP/terminology) working group, there is the idea to change the word **""keychain""** to **""contacts""** as it is more human friendly and understandable. Here are a few ideas I have (and reasoning behind them).
- Key Contacts (sounds too simple)
- PGP Contacts (very specific)
- Open Contacts (does not hint at security)
- Crypto Contacts (specific + lends to supporting other crypto)
- Secure Contacts (has a descriptive but user friendly feel)

I realize this is a pretty major change for a project of your adoption + maturity to undergo, but I just wanted to file this issue to the keep the discussion / idea going :smile:
"
open-keychain/open-keychain,closed,"support for handling keyserver urls from browser, added documentation",[],"Takes care of Issue https://github.com/open-keychain/open-keychain/issues/1199.

It's been written to handle all keyserver URLs based on the presence of /pks/lookup in the path, as specified in http://tools.ietf.org/html/draft-shaw-openpgp-hkp-00#section-3, not just https://hkps.pool.sks-keyservers.net or the ones the user has added on Openkeychain.

I've enabled searching through keybase.io by default when we handle a keyserver search from a URL.

A possible addition would be:
When the user clicks on a URL and it's a keyserver he hasn't registered on Openkeychain yet, we offer the option to add it to his list of keyservers.
"
open-keychain/open-keychain,closed,Ask for passphrase on delete of secret keys from KeyListFragment,"[Label(name=""help wanted"")]","Asking for the passphrase for delete/export in KeyView and on multi-export in KeyListFragment has already been implemented. Only passphrase asking for secret key delete operation in KeyListFragment is missing.

see https://github.com/open-keychain/open-keychain/issues/1045 for existing work.
"
open-keychain/open-keychain,open,Check RFC conformity,[],"Check if we support all MUST items in RFC4880.
"
open-keychain/open-keychain,closed,"""database error"" on export",[],"""database error"" is shown on export:

```
 21181               Keychain  D  Bundle EXTRA_DATA:
 21181               Keychain  D  ------------------------------
 21181               Keychain  D  export_filename : /storage/emulated/0/OpenKeychain/exportbobbbbb.asc
 21181               Keychain  D  export_key_ring_id : [J@13f788c2
 21181               Keychain  D  export_secret : false
 21181               Keychain  D  ------------------------------
 21181               Keychain  V  log: LogEntryParcel{mLevel=START, mType=MSG_EXPORT, mParameters=[0], mIndent=0}
  587               BlurLayer  E  show: no Surface
 21181               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/unified, proj=[master_key_id, pubkey_data, privkey_data, has_any_secret])
 21181               Keychain  V  log: LogEntryParcel{mLevel=ERROR, mType=MSG_EXPORT_ERROR_DB, mParameters=null, mIndent=1}
```
"
open-keychain/open-keychain,closed,Multi-select on Android < 5 broken,[],"The actionbar shown on multi-select is blank, no menu items shown.
"
open-keychain/open-keychain,closed,Verify the keyserver URLs,[],"Check if keyserver urls work on add

from https://github.com/open-keychain/open-keychain/issues/1195#issuecomment-94056797:

> Tbh it is not really easy to verify the keyserver URLs. It would be much easier if the keyservers entered could instantly be verified by some kind of test routine.
"
open-keychain/open-keychain,closed,Signing crash with YubiKey,[],"When I try to sign or encrypt&sign message in K-9:

```
04-17 15:44:27.588: E/AndroidRuntime(9502): FATAL EXCEPTION: main
04-17 15:44:27.588: E/AndroidRuntime(9502): Process: org.sufficientlysecure.keychain, PID: 9502
04-17 15:44:27.588: E/AndroidRuntime(9502): java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.PassphraseDialogActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2298)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2360)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.ActivityThread.access$800(ActivityThread.java:144)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1278)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.os.Handler.dispatchMessage(Handler.java:102)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.os.Looper.loop(Looper.java:135)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.ActivityThread.main(ActivityThread.java:5221)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at java.lang.reflect.Method.invoke(Native Method)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at java.lang.reflect.Method.invoke(Method.java:372)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)
04-17 15:44:27.588: E/AndroidRuntime(9502): Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
04-17 15:44:27.588: E/AndroidRuntime(9502):     at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity.onCreate(PassphraseDialogActivity.java:105)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.Activity.performCreate(Activity.java:5933)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1105)
04-17 15:44:27.588: E/AndroidRuntime(9502):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2251)
04-17 15:44:27.588: E/AndroidRuntime(9502):     ... 10 more
```

Used revision b440456acc1e846f19f663a2987cb1bc292f14bd
"
open-keychain/open-keychain,closed,Fix for NFC signing operations: move PIN verify inside sign/decrypt operation and set correct mode.,[],"According to the OpenPGP spec, PW1 must be submitted with mode 81 for a signing operation, and mode 82 for everything else. OpenKeychain currently verifies the PW1 with mode 82 all the time. OpenPGP-compliant cards will not issue a signature when the PW1 is submitted with mode 82. 

The reason this hasn't been broken is that the only widespread OpenPGP device with NFC, the Yubikey NEO, had a bug that allowed signatures to be generated without a verified PIN. Yubico has fixed this bug as of today, and issued [a security advisory](https://github.com/Yubico/ykneo-openpgp/blob/master/doc/SecurityAdvisory%202015-04-14.txt). New Yubikeys NEO will throw an error when signing is attempted after VERIFY PW1 with mode 82. 

This patch moves the PIN verification from the `handleNdefDiscoveredIntent` into a new method called `nfcVerifyPIN`, which takes as a parameter the mode of operation. The new method is called from the sign and decrypt methods, so that the PIN can be submitted with the proper mode for the requested operation. If the PIN verification fails, an IOException is thrown, which is caught and passed to `handleNfcError`. 

I've tested this on a Nexus 7, which is the only NFC-equipped Android device I have on hand, but I would welcome additional testing.
"
open-keychain/open-keychain,closed,Register on keyserver URLs,"[Label(name=""help wanted"")]","We could handle keyserver urls such as: https://hkps.pool.sks-keyservers.net/pks/lookup?op=get&search=0x73EE2314F65FA92EC2390D3A718C070100012282

So when users click on a webpage link pointing to a keyserver OpenKeychain should handle the search/import because we are able to really verify downloaded keys by their fingerprint.

For now it should be enough to register on sks-keyservers.net only. A perfect implementation would register on all keyserver urls configured inside OpenKeychain.
"
open-keychain/open-keychain,closed,Import from QR Code: Fail gracefully if not on keyserver,"[Label(name=""help wanted"")]","Currently the import from QR Codes fails if the internet connection is unstable or the key is not on a keyserver. A simple Toast is shown with ""Import operation failed!"". This should be handled better!

```
Keychain  D  scanned: openpgp4fpr:54de5aff80f43e882c6355efb8843ba9d9add3f6
 23048               Keychain  D  Bundle EXTRA_DATA:
 23048               Keychain  D  ------------------------------
 23048               Keychain  D  import_key_list : [org.sufficientlysecure.keychain.keyimport.ParcelableKeyRing@38dafb5b]
 23048               Keychain  D  import_key_server : hkps://hkps.pool.sks-keyservers.net
 23048               Keychain  D  ------------------------------
 23048               Keychain  D  Send message by setProgress with progress=0, max=100
 23048               Keychain  V  log: LogEntryParcel{mLevel=START, mType=MSG_IMPORT, mParameters=[1], mIndent=0}
 23048               Keychain  V  log: LogEntryParcel{mLevel=DEBUG, mType=MSG_IMPORT_KEYSERVER, mParameters=[hkps://hkps.pool.sks-keyservers.net], mIndent=1}
 23048               Keychain  V  log: LogEntryParcel{mLevel=INFO, mType=MSG_IMPORT_FETCH_KEYSERVER, mParameters=[0xb8843ba9d9add3f6], mIndent=2}
 23048               Keychain  D  hkp keyserver get: /pks/lookup?op=get&options=mr&search=0x54de5aff80f43e882c6355efb8843ba9d9add3f6
 23048               Keychain  D  hkp keyserver query: https://hkps.pool.sks-keyservers.net:443/pks/lookup?op=get&options=mr&search=0x54de5aff80f43e882c6355efb8843ba9d9add3f6
 23048               Keychain  E  query failed
 23048               Keychain  E  org.sufficientlysecure.keychain.keyimport.Keyserver$QueryFailedException: not found
 23048               Keychain  E  at org.sufficientlysecure.keychain.keyimport.HkpKeyserver.get(HkpKeyserver.java:345)
 23048               Keychain  E  at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:220)
 23048               Keychain  E  at org.sufficientlysecure.keychain.operations.ImportExportOperation.importKeyRings(ImportExportOperation.java:136)
 23048               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:525)
 23048               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 23048               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 23048               Keychain  E  at android.os.Looper.loop(Looper.java:135)
 23048               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
 23048               Keychain  V  log: LogEntryParcel{mLevel=ERROR, mType=MSG_IMPORT_FETCH_KEYSERVER_ERROR, mParameters=[not found], mIndent=3}
 23048               Keychain  V  log: LogEntryParcel{mLevel=ERROR, mType=MSG_IMPORT_FETCH_ERROR, mParameters=null, mIndent=2}
 23048               Keychain  V  log: LogEntryParcel{mLevel=ERROR, mType=MSG_IMPORT_ERROR, mParameters=null, mIndent=1}
```
"
open-keychain/open-keychain,closed,Switch to MaterialDrawer library,[],"Better switch to https://github.com/mikepenz/MaterialDrawer
https://github.com/neokree/MaterialNavigationDrawer seems very buggy. 1.3.3 is not working.
"
open-keychain/open-keychain,closed,Snackbars again behind layout,"[Label(name=""help wanted"")]","Hey @manojkhannakm 
you did some great work with your pull request https://github.com/open-keychain/open-keychain/pull/1168
Unfortunatly, we did some big internal changes leading to have the issue again with snackbars behind the keyboard.
Do you have some spare time to look into it. Especially the encrypt/decrypt activities.
"
open-keychain/open-keychain,closed,Keyserver LDAP protocol support,[],"It seems that I cannot connect to ldap-keyservers. As far as I can tell e.g. keyserver.pgp.com does not offer a hkp connection, but I would like to add it to my keyservers.

Tbh it is not really easy to verify the keyserver URLs. It would be much easier if the keyservers entered could instantly be verified by some kind of test routine.
"
open-keychain/open-keychain,closed,Signing and decrypting with Yubikey doesn't works,[],"First: When I try to sign text with NEO, then screen ""touch your key to…"" is not displayed.

Second: during decrypt, the screen is displayed but when I put my NEO to phone application throws exceptions:

```
04-09 07:45:00.409: E/AndroidRuntime(13056): Process: org.sufficientlysecure.keychain, PID: 13056
04-09 07:45:00.409: E/AndroidRuntime(13056): java.lang.NullPointerException: Attempt to invoke virtual method 'int java.lang.String.length()' on a null object reference
04-09 07:45:00.409: E/AndroidRuntime(13056):    at org.sufficientlysecure.keychain.ui.NfcActivity.handleNdefDiscoveredIntent(NfcActivity.java:214)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at org.sufficientlysecure.keychain.ui.NfcActivity.onNewIntent(NfcActivity.java:160)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.Instrumentation.callActivityOnNewIntent(Instrumentation.java:1210)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.ActivityThread.deliverNewIntents(ActivityThread.java:2430)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.ActivityThread.performNewIntents(ActivityThread.java:2443)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.ActivityThread.handleNewIntent(ActivityThread.java:2452)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.ActivityThread.access$1600(ActivityThread.java:144)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1350)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.os.Handler.dispatchMessage(Handler.java:102)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.os.Looper.loop(Looper.java:135)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at android.app.ActivityThread.main(ActivityThread.java:5221)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at java.lang.reflect.Method.invoke(Native Method)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at java.lang.reflect.Method.invoke(Method.java:372)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)
04-09 07:45:00.409: E/AndroidRuntime(13056):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)
```

and:

```
04-09 07:45:07.623: W/InputMethodManagerService(592): Focus gain on non-focused client com.android.internal.view.IInputMethodClient$Stub$Proxy@1bdd2031 (uid=10089 pid=13319)
04-09 07:45:07.740: W/Bundle(13319): Key pin expected String but value was a org.sufficientlysecure.keychain.util.Passphrase.  The default value <null> was returned.
04-09 07:45:07.741: W/Bundle(13319): Attempt to cast generated internal exception:
04-09 07:45:07.741: W/Bundle(13319): java.lang.ClassCastException: org.sufficientlysecure.keychain.util.Passphrase cannot be cast to java.lang.String
04-09 07:45:07.741: W/Bundle(13319):    at android.os.BaseBundle.getString(BaseBundle.java:921)
04-09 07:45:07.741: W/Bundle(13319):    at org.sufficientlysecure.keychain.ui.NfcActivity.onCreate(NfcActivity.java:106)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.Activity.performCreate(Activity.java:5933)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1105)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2251)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2360)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.ActivityThread.access$800(ActivityThread.java:144)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1278)
04-09 07:45:07.741: W/Bundle(13319):    at android.os.Handler.dispatchMessage(Handler.java:102)
04-09 07:45:07.741: W/Bundle(13319):    at android.os.Looper.loop(Looper.java:135)
04-09 07:45:07.741: W/Bundle(13319):    at android.app.ActivityThread.main(ActivityThread.java:5221)
04-09 07:45:07.741: W/Bundle(13319):    at java.lang.reflect.Method.invoke(Native Method)
04-09 07:45:07.741: W/Bundle(13319):    at java.lang.reflect.Method.invoke(Method.java:372)
04-09 07:45:07.741: W/Bundle(13319):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)
04-09 07:45:07.741: W/Bundle(13319):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)
```
"
open-keychain/open-keychain,closed,"Immediate display of contact card, fixed contact picture display issue, hides card if no contact",[],"Changes:
1. Shows linked contact card immediately on key verification.
2. Fixed issue with contact picture not being displayed on older devices (due to lookupUri) (tested on API level 15, http://stackoverflow.com/a/21214524/3000919).
3. Provides a fix for Issue https://github.com/open-keychain/open-keychain/issues/1176 (hide linked system contact card), which is contained to `ViewKeyFragment` and does not require changes to the enclosing activity.
"
open-keychain/open-keychain,closed,API library preference bugs,"[Label(name=""api bug"")]","Some personal ToDos:
- Fix summary for selected key preference
- key pref: after granting access, select key again
"
open-keychain/open-keychain,closed,Added Buffer to ASCII Armor Encryption,[],"2^16 bytes buffer is in place, solved Issue https://github.com/open-keychain/open-keychain/issues/1177

Should I add a buffer to the signature writing too?
"
open-keychain/open-keychain,closed,YubiKey FAQ entry doesn't work due bug in GPG 2.1,[],"Hello,

this isn't a bug at your side but rather a bug in the latest version of GPG. I'm posting it in case somebody else runs into the same issue.

Yesterday I tried to setup OpenKeyChain with YubiKey NEO on my Android phone. I strictly followed the FAQ but I couldn't get OpenKeyChain to work with the key. The app didn't ask me for the NEO key at all and just complained about missing private keys. After about an hour of fiddling I figured out the culprit. In GPG 2.1.2  --export-secret-subkeys and  --export-secret-keys are broken for stub keys. Once I exported with GPG 2.0 everything worked as expected.

I opened a bug report: https://bugs.gnupg.org/gnupg/issue1937
"
open-keychain/open-keychain,closed,How to Improve Marketing?,[],"In the past months I have read several posts in forums about the topic (email-)encryption where K-9 Mail & APG were recommended. GIven the fantastic work going on here, I cannot imagine a single reason why someone would want to use APG instead of OpenKeychain. But it seems that OpenKeychain is still unknown to many people. One possible reason might be the Google search results: If you search for something like ""pgp android"", ""gpg android"" or ""openpgp android"" (I know that GnuPG has nothing to do with OpenKeychain, but you cannot expect anyone to know that.) chances are high, that you will completely miss the existence of OpenKeychain, even by looking at all hits on Google's first result page. (I don't know how ""personalized"" these results really are, but for me I found the word OpenKeychain only on one page, in a blog post by Tom Leister.)

I opened this issue to collect ideas what can be done to spread the word about OpenKeychain. I think it would be sad if people are not using good software like OpenKeychain only because they have never heard about it.
"
open-keychain/open-keychain,closed,"Corrected import error message, changed style to WARN",[],"If an import operation for multiple keys fails for all, we get an incorrect ""Import of %d keys failed!"" message. Just had to add a missing parameter.
For reference:
Old:
![screenshot_2015-03-28-19-56-42](https://cloud.githubusercontent.com/assets/5712241/6881739/55cb68dc-d592-11e4-851b-f4111500fca0.png)

New:
![screenshot_2015-03-28-21-33-35](https://cloud.githubusercontent.com/assets/5712241/6881738/53c6ff2e-d592-11e4-85fc-ccee23b3b17d.png)

A comment recommended switching to the warning style in case some keys succeed but others fail. Changed that too.
"
open-keychain/open-keychain,closed,-Fixed a situation where additional emails could be duplicated when crea...,[],"...ting a new key -If CreateKeyEmailFragment view is recreated, the array of additional emails won't be repopulated again if its not null, avoiding new reallocations. -if CreateKeyEmailFragment view is recreated, the email adapter wont be recreated if its not null, avoiding new reallocations.
"
open-keychain/open-keychain,closed,Designed icons for passphrase cache,[],"As ""one patch rule""
"
open-keychain/open-keychain,closed,Switched to SuperSLiM and Fixed issue #1051,[],"Fixed issues #1052 And #1051 and also made few improvements like showing total key count during searching etc. The only thing which is missing currently is the fast scroll feature which is not available for RecyclerView.

**KeyListFragment**
![screenshot_2015-03-28-00-50-46](https://cloud.githubusercontent.com/assets/1645107/6875450/a036c208-d4e4-11e4-9657-83375f7a4fe3.png)
![screenshot_2015-03-27-20-58-24](https://cloud.githubusercontent.com/assets/1645107/6875056/3145bcac-d4e2-11e4-8c28-d27b3db37598.png)

**ViewKeyAdvCertsFragment**
![screenshot_2015-03-28-13-55-13](https://cloud.githubusercontent.com/assets/1645107/6880354/86f72814-d552-11e4-862f-129b1d55b0d8.png)
"
open-keychain/open-keychain,closed,Find alternative for gradle-android-test-plugin,"[Label(name=""help wanted"")]","com.novoda:gradle-android-test-plugin is now deprecated:

> Runs your Robolectric Android unit tests. DEPRECATED in favor of http://tools.android.com/tech-docs/unit-testing-support , our use of Robolectric was always as a unit testing device, never as some type of integration test Android system test monster. Robolectric is dead, long live the JVM.
> 
> If we find time we will merge simple pull requests and make releases, otherwise we recommend moving to Android unit testing ... or if you really have to carry on with Robolectric then fork us.
> https://github.com/novoda/gradle-android-test-plugin#gradle-android-test-plugin--

We need to find an alternative!

Since Gradle Plugin 1.1.0 local unit tests are supported:

> Unit testing support. Unit testing code is run on the local JVM, against a special version of android.jar that is compatible with popular mocking frameworks (e.g. Mockito).
> http://tools.android.com/tech-docs/new-build-system

Can we use Mockito and this new feature of the Gradle Plugin instead of our current setup?
"
open-keychain/open-keychain,closed,-Fixed a situation where additional emails could be duplicated when crea...,[],"...ting a new key

-If CreateKeyEmailFragment view is recreated, the array of additional emails won't be repopulated again if its not null, avoiding new reallocations.
-if CreateKeyEmailFragment view is recreated, the email adapter wont be recreated if its not null, avoiding new reallocations.
"
open-keychain/open-keychain,closed,#1045: Add a loop for multiple key export.,[],"Please take a look.
"
open-keychain/open-keychain,closed,Switch to gradle plugin 1.1.x,[],"Currently blocked by `com.novoda:gradle-android-test-plugin`, which breaks.
Should be fixed in upcoming 0.10.4, see https://github.com/novoda/gradle-android-test-plugin/issues/34
https://github.com/novoda/gradle-android-test-plugin/pull/43
"
open-keychain/open-keychain,closed,"Rename ""passphrase"" to ""password""","[Label(name=""discussion"")]","I think many people don't know what a passphrase is. So why not switch to password? In many other places we already use different terminology.
"
open-keychain/open-keychain,closed,#1176: Hide linked system contact card for keys not confirmed,[],"A quick fix for this issue.
"
open-keychain/open-keychain,closed,Kleopatra can't decrypt non-ascii armored file?,"[Label(name=""help wanted"")]","from ml:

> but I find the encrypted file can't be decrypted by 
> Kleopatra/gpg4win (the armored version of the same files do work fine).
> But that shouldn't be a problem for my applications since I'll be using the 
> BC provider directly on the server-side -- I think it's a bug (or just lack 
> of binary file support) with the Kleopatra program. 

Needs testing.
"
open-keychain/open-keychain,closed,ASCII armor encryption very slow,[],"From ml:

> If I set EXTRA_REQUEST_ASCII_ARMOR true, it take *significantly *longer to 
> to return from the async encryption service call -- maybe too long for me 
> to use that feature.

I also noticed it when encrypting a file. Choosing ascii armor slows it extremly down.

Maybe a buffer is missing somewhere.
"
open-keychain/open-keychain,closed,Hide linked system contact card for keys not confirmed,"[Label(name=""help wanted"")]","Don't show the ""linked system contact"" card for keys that are not confirmed.
"
open-keychain/open-keychain,closed,All my contacts disappeared,"[Label(name=""help wanted"")]","I installed OpenKeychain from F-Droid on my Nexus 5, which has the latest Cyanogen Mod 11 snapshot installed. No Google apps, no other forms og contact sync.

I opened the app and the Create key wizard. I got an SMS and switched to the Conversations app, and noticed that all my SMSes were listed by phone number, not by contact name. Switching to the People app, all my contacts except four had disappeared. 

I think, but cannot confirm, that those four contacts are the ones that have been added manually to this phone, the others were imported from vCards when I got it.
"
open-keychain/open-keychain,closed,Fixed symmetric encryption crash,[],"This is a fix for #1173.

During comparison of the two passphrase fields, the activity passphrase is set to null, if the two fields do not match. This causes an issue when entering the second character, at which point the `removeFromMemory()` method is called on the null passphrase. 

An empty passphrase would have been an elegant solution, but the input validation logic expects the passphrase to be null if the inputted passphrases do not match. So a simple null check in the setter will have to do.
"
open-keychain/open-keychain,closed,Input of passphrase for symmetric encryption causes crash,[],"When trying to encrypt a message using symmetric encryption (passphrase), the application crashes while entering the first passphrase. 

Someone may want to verify this on a physical device, as I only have access to an emulator at the moment.

As I am looking into this project for GSoC, I will take a stab at a patch myself.
"
open-keychain/open-keychain,closed,Transifex: help-changelog,[],"Don't be serious with that, because of formatting, you force translators to repeat their job? You should be able to script something, that allows reuse of the old translations... IMHO changelog tramslations are a pain and at least for the german translation was a lot of work! Sorry, I refuse to do that again :-/.

Edit: The same is true for all other HTML files you removed...
"
open-keychain/open-keychain,closed,Clear passphrase cache ,[],"Fixes #1169 
"
open-keychain/open-keychain,closed,Updated openpgp-api-lib,[],"I'm sorry, it looks like my `openpgp-api-lib` was not up-to-date during my last commit. There have been two commits on `openpgp-api-lib`(`70a17dcbeb5d8de095f09a7ce756543deff0165a` and `9abb91d3a69964a547f26aa1d56de233e75c4410`) and I somehow missed the last one.
"
open-keychain/open-keychain,closed,Passphrase cache not clearing,"[Label(name=""help wanted"")]","Cached pass at 15:30
Still cached at 21:15

Setting: 3 min cache time

Maybe we are using imprecise alarm settings. This needs more investigation. At most times, it is working.
"
open-keychain/open-keychain,closed,Updated fix for Snackbar behind Keyboard.,[],"@dschuermann 

The workaround that I made yesterday doesn't seem to work at some places like `ImportKeysActivity`. So I've completely reworked the `Notify` class to keep everything clean and to properly handle the snackbar problem even in the future.

Changes:
- Notifications are created using **Notify.create().show();**
- Overloadings for create()
  - create(Activity activity, String text, int duration, Style style, ActionListener actionListener, int actionResId)
  - create(Activity activity, String text, int duration, Style style)
  - create(Activity activity, String text, Style style)
  - create(Activity activity, int textResId, int duration, Style style, ActionListener actionListener, int actionResId)
  - create(Activity activity, int textResId, int duration, Style style)
  - create(Activity activity, int textResId, Style style)
- Overloadings of show()
  - show() - To show it on the bottom of the Activity
  - show(Fragment fragment) - To show it on the bottom of the Fragment
  - show(ViewGroup viewGroup) - To show it on any Relative of Frame layout
"
open-keychain/open-keychain,closed,Design icon for passphrase cache,"[Label(name=""help wanted"")]","We should design two icons for the passphrase cache service notification:
- one for Android < 5
- one for Android > 5
  based on the design guidelines for the versions and based on our new app icon.
"
open-keychain/open-keychain,closed,"Multi-threaded key import, update all feature",[],"Added:
1. Support for multi-threaded key import when importing from the cloud.
2. An ""Update all keys"" option in the overflow menu of KeyListFragment.

This was just a quick patch I tried it to see how many threads we could run at a time while importing keys from the cloud. I've used a CachedThreadPool limited to 200 threads as of now, and there seemed to be no issues refreshing 174 keys.

I've introduced the multi-threading in KeychainIntentService currently - which I guess isn't a good idea since IntentServices are not really meant to spawn more threads, as the service dies as soon as it has no more work to do. The spawned threads talk back to the activity via the callbacks, but allowing the ""Cancel"" intent from the activity to reach the spawned threads required making the AtomicBoolean variable holding the ""canceled"" state static. This is because the worker thread belonging to the service dies as soon as it finishes spawning the key import threads, and only the static variable can be shared.

The only reason I tried it out in the IntentService was so that we could immediately observe the change on importing keys from the cloud (extremely fast: 173 keys in around 30 seconds).

Should I shift the entire multi-threaded key import to a separate thread/service or leave it here for now? Is there anything else I should be doing to get it right?
"
open-keychain/open-keychain,closed,Fixed #1152: NullPointerException when signing with YubiKey,[],"This is due to `input.getSignatureSubKeyId()` (which is a `Long`) can be `null`. 

`result.setNfcData` tries to cast the `null` into a primitive `long` and thus this error appears: `Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference`.

Fix: If the value is `null`, return `PgpSignEncryptResult` with `PgpSignEncryptResult.RESULT_ERROR` as the `result`.
"
open-keychain/open-keychain,closed,Implemented #1071: Invoke NFC in Advanced View,[],"For Issue #1071:
- Extracted NFC code from `ViewKeyActivity` to `NfcHelper` to share code between classes
- Changed the private anonymous `Handler` for NFC into a static private subclass, that uses `WeakReference` to avoid memory leaks
- Added resources needed (retrieved from Graphics) for the NFC button inside `ViewKeyAdvShareFragment`.
- Fixed the ripple boundary of the `Share With..`. button to prevent it from bleeding to other buttons on the right (UX improvement)

![image](https://cloud.githubusercontent.com/assets/7024160/6742477/0425001a-cecb-11e4-8462-1ed031388a30.png)

However I'm wondering if both key types (owned and not owned) can be shared via NFC, why not just keep the `Share via NFC` button in the ActionBar of `ViewKeyActivity`. Currently its `Visibility` is set to `GONE` if a key doesn't belong to the user.
"
open-keychain/open-keychain,closed,Added a blank footer view to the list of keys,[],"When the list of key is long, the Floating Action Button blocks the content of the last few rows. A blank footer (with height `72dp`) is added to the bottom to prevent this (and to follow the [Material Design's Guidelines](http://www.google.com/design/spec/components/buttons.html#buttons-floating-action-button): _the content should have enough padding at the bottom so the button does not block content in last row._)

Before & After: 

![Screenshot](http://i.imgur.com/qMgvvAi.png) ![Screenshot](http://i.imgur.com/f7osPDI.png)
"
open-keychain/open-keychain,closed,Added a blank footer view to the list of key & implemented NFC in Advanced View,[],"When the list of key is long, the Floating Action Button blocks the content of the last few rows. A blank footer (with height `72dp`) is added to the bottom to prevent this (and to follow the [Material Design's Guidelines](http://www.google.com/design/spec/components/buttons.html#buttons-floating-action-button): _the content should have enough padding at the bottom so the button does not block content in last row._)

![Screenshot](http://i.imgur.com/f7osPDI.png)

I've also fixed Issue #1152 by checking if `input.getSignatureSubKeyId()` is not `null` before proceeding.

Moreover, I have implemented feature #1071 as well.

![Screenshot](http://i.imgur.com/PzzyHPh.png)

Okay I should start branching my work.
"
open-keychain/open-keychain,closed,Clean up keyserver request threads in keyimport/CloudSearch.java,[],"When searching for keys in the cloud, in `keyimport/CloudSearch.java` threads are created (usually 2, [see here](https://github.com/open-keychain/open-keychain/blob/development/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/keyimport/CloudSearch.java#L60)) to send requests to HKP and Keybase keyservers. After a maximum duration of 10 seconds, the request results are collected.
The created threads are not cleaned up, instead they are expected to terminate themselves. However if the request to a keyserver needs a long time (>10s, e.g. due to slow network connection), the threads remain, even if a new search is started, although the threads should be cleaned up by `Thread.interrupt()`.
"
open-keychain/open-keychain,closed,Show HKP server results first in key cloud search. Fixes #1066,[],"Previously, the cloud key search showed either a keyserver email or a keybase ID as the user's main email, depending on which server request was answered faster.
Now results returned from HKP keyservers will be sorted in front of keybase IDs to show the correct email address in the dialog.
"
open-keychain/open-keychain,closed,Switch to SuperSLiM,[],"This is first step switch to SuperSLiM.
I looked around the whole project. There will be many thing to improve during this switching.
TODO:
- [ ] Multiple Selection
- [ ] issue: transparent of header.
- [ ] more optimization.
- [ ] deploy to ViewKeyAdvCertsFragment

@dschuermann I just want to make sure whether this switch does work and whether this switching would be what you want.

![output](https://cloud.githubusercontent.com/assets/3419881/6712094/03a13e26-cd48-11e4-9ea4-39197f759e48.gif)
"
open-keychain/open-keychain,closed,Fixed a crash on ViewKeyActivity and Issue #1114,[],"Regarding first commit.

This crash occurs when deleting a key with a stripped master key from the
ViewKeyActivity.
"
open-keychain/open-keychain,closed,API EXTRA_PASSPHRASE parameter does not work,"[Label(name=""api bug"")]","Setting the EXTRA_PASSPHRASE parameter does not effect the process as the open-keychain app always prompts for the pass-phrase (with or without the EXTRA_PASSPHRASE parameter).
It does not even fail with a bad pass-phrase (when it should fail).  

Simple test case:
    public void cleartextSignClickHandler()
    {
        Intent data = new Intent();
        data.setAction(OpenPgpApi.ACTION_CLEARTEXT_SIGN);

```
    data.putExtra(OpenPgpApi.EXTRA_SIGN_KEY_ID, signKeyIdLong);
    data.putExtra(OpenPgpApi.EXTRA_PASSPHRASE, passCode);

    String inputString = cleartextEditText.getText().toString();
    InputStream is = getByteArrayInputStreamFromString(inputString);

    ByteArrayOutputStream os = new ByteArrayOutputStream();

    OpenPgpApi openPgpApi = getOpenPgpApi();
    openPgpApi.executeApiAsync(data, is, os, new OpenkeychainCallback(openPgpCameraActivity, REQUEST_CODE_CLEARTEXT_SIGN, os, ciphertextEditText, null));
}
```

Log:
03-17 13:42:30.421: D/dalvikvm(555): Debugger has detached; object registry had 1 entries
03-17 13:42:30.441: D/dalvikvm(575): Debugger has detached; object registry had 1 entries
03-17 13:42:30.441: D/dalvikvm(32276): Debugger has detached; object registry had 1 entries
03-17 13:44:59.239: W/InputEventReceiver(575): Attempted to finish an input event but the input event receiver has already been disposed.
03-17 13:44:59.450: E/ViewRootImpl(575): sendUserActionEvent() mView == null
03-17 13:44:59.590: W/IInputConnectionWrapper(575): getTextBeforeCursor on inactive InputConnection
03-17 13:44:59.590: W/IInputConnectionWrapper(575): getCursorCapsMode on inactive InputConnection
03-17 13:44:59.680: W/IInputConnectionWrapper(575): getCursorCapsMode on inactive InputConnection
03-17 13:44:59.680: W/IInputConnectionWrapper(575): getSelectedText on inactive InputConnection
03-17 13:44:59.680: W/IInputConnectionWrapper(575): getTextBeforeCursor on inactive InputConnection
03-17 13:44:59.690: W/IInputConnectionWrapper(575): getTextAfterCursor on inactive InputConnection
03-17 13:44:59.700: W/IInputConnectionWrapper(575): showStatusIcon on inactive InputConnection
03-17 13:45:00.261: D/dalvikvm(555): Debugger has detached; object registry had 1 entries
03-17 13:45:00.271: D/dalvikvm(575): Debugger has detached; object registry had 1 entries
03-17 13:45:00.471: D/dalvikvm(32276): Debugger has detached; object registry had 1 entries
03-17 13:45:04.775: D/Keychain(555): isPackageAllowed packageName: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:04.775: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/api_apps, proj=null)
03-17 13:45:04.785: D/Keychain(555): allowed: [org.sufficientlysecure.keychain.demo, com.sawaya.openpgpapi.openpgpcamera]
03-17 13:45:04.785: D/Keychain(555): Package is allowed! packageName: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:04.795: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/api_apps/com.sawaya.openpgpapi.openpgpcamera, proj=[package_signature])
03-17 13:45:04.805: D/Keychain(555): Package signature is correct! (equals signature from database)
03-17 13:45:04.805: D/Keychain(555): currentPkg: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:04.905: D/Keychain(575): uri: content://org.sufficientlysecure.keychain.provider/api_apps/com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:04.926: D/AbsListView(575): Get MotionRecognitionManager
03-17 13:45:04.946: D/AbsListView(575): Get MotionRecognitionManager
03-17 13:45:04.946: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/unified, proj=[_id, master_key_id, user_id, is_expired, is_revoked, has_encrypt, verified, has_any_secret, has_duplicate_user_id, creation])
03-17 13:45:05.006: D/ProgressBar(575): updateDrawableBounds: left = 0
03-17 13:45:05.006: D/ProgressBar(575): updateDrawableBounds: top = 0
03-17 13:45:05.006: D/ProgressBar(575): updateDrawableBounds: right = 152
03-17 13:45:05.006: D/ProgressBar(575): updateDrawableBounds: bottom = 152
03-17 13:45:07.138: D/Keychain(575): allowedKeysUri: content://org.sufficientlysecure.keychain.provider/api_apps/com.sawaya.openpgpapi.openpgpcamera/allowed_keys
03-17 13:45:07.138: D/Keychain(575): insert(uri=content://org.sufficientlysecure.keychain.provider/api_apps/com.sawaya.openpgpapi.openpgpcamera/allowed_keys, values=key_id=3391992614177110942)
03-17 13:45:07.138: D/Keychain(575): Constraint exception on insert! Entry already existing?
03-17 13:45:07.138: D/Keychain(575): android.database.sqlite.SQLiteConstraintException: columns key_id, package_name are not unique (code 19)
03-17 13:45:07.138: D/Keychain(575):    at android.database.sqlite.SQLiteConnection.nativeExecuteForLastInsertedRowId(Native Method)
03-17 13:45:07.138: D/Keychain(575):    at android.database.sqlite.SQLiteConnection.executeForLastInsertedRowId(SQLiteConnection.java:972)
03-17 13:45:07.138: D/Keychain(575):    at android.database.sqlite.SQLiteSession.executeForLastInsertedRowId(SQLiteSession.java:788)
03-17 13:45:07.138: D/Keychain(575):    at android.database.sqlite.SQLiteStatement.executeInsert(SQLiteStatement.java:86)
03-17 13:45:07.138: D/Keychain(575):    at android.database.sqlite.SQLiteDatabase.insertWithOnConflict(SQLiteDatabase.java:1603)
03-17 13:45:07.138: D/Keychain(575):    at android.database.sqlite.SQLiteDatabase.insertOrThrow(SQLiteDatabase.java:1499)
03-17 13:45:07.138: D/Keychain(575):    at org.sufficientlysecure.keychain.provider.KeychainProvider.insert(KeychainProvider.java:743)
03-17 13:45:07.138: D/Keychain(575):    at android.content.ContentProvider$Transport.insert(ContentProvider.java:220)
03-17 13:45:07.138: D/Keychain(575):    at android.content.ContentResolver.insert(ContentResolver.java:1195)
03-17 13:45:07.138: D/Keychain(575):    at org.sufficientlysecure.keychain.provider.ProviderHelper.addAllowedKeyIdForApp(ProviderHelper.java:1554)
03-17 13:45:07.138: D/Keychain(575):    at org.sufficientlysecure.keychain.remote.ui.SelectSignKeyIdListFragment$1.onItemClick(SelectSignKeyIdListFragment.java:118)
03-17 13:45:07.138: D/Keychain(575):    at android.widget.AdapterView.performItemClick(AdapterView.java:308)
03-17 13:45:07.138: D/Keychain(575):    at android.widget.AbsListView.performItemClick(AbsListView.java:1495)
03-17 13:45:07.138: D/Keychain(575):    at android.widget.AbsListView$PerformClick.run(AbsListView.java:3453)
03-17 13:45:07.138: D/Keychain(575):    at android.widget.AbsListView$3.run(AbsListView.java:4816)
03-17 13:45:07.138: D/Keychain(575):    at android.os.Handler.handleCallback(Handler.java:733)
03-17 13:45:07.138: D/Keychain(575):    at android.os.Handler.dispatchMessage(Handler.java:95)
03-17 13:45:07.138: D/Keychain(575):    at android.os.Looper.loop(Looper.java:146)
03-17 13:45:07.138: D/Keychain(575):    at android.app.ActivityThread.main(ActivityThread.java:5487)
03-17 13:45:07.138: D/Keychain(575):    at java.lang.reflect.Method.invokeNative(Native Method)
03-17 13:45:07.138: D/Keychain(575):    at java.lang.reflect.Method.invoke(Method.java:515)
03-17 13:45:07.138: D/Keychain(575):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1283)
03-17 13:45:07.138: D/Keychain(575):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1099)
03-17 13:45:07.138: D/Keychain(575):    at dalvik.system.NativeStart.main(Native Method)
03-17 13:45:07.598: D/AbsListView(575): onDetachedFromWindow
03-17 13:45:08.830: D/Keychain(555): isPackageAllowed packageName: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:08.830: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/api_apps, proj=null)
03-17 13:45:08.840: D/Keychain(555): allowed: [org.sufficientlysecure.keychain.demo, com.sawaya.openpgpapi.openpgpcamera]
03-17 13:45:08.840: D/Keychain(555): Package is allowed! packageName: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:08.850: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/api_apps/com.sawaya.openpgpapi.openpgpcamera, proj=[package_signature])
03-17 13:45:08.860: D/Keychain(555): Package signature is correct! (equals signature from database)
03-17 13:45:08.950: D/AbsListView(575): Get MotionRecognitionManager
03-17 13:45:08.960: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/unified, proj=[_id, master_key_id, user_id, is_expired, is_revoked, has_encrypt, verified, has_duplicate_user_id, creation])
03-17 13:45:09.000: D/ProgressBar(575): updateDrawableBounds: left = 0
03-17 13:45:09.000: D/ProgressBar(575): updateDrawableBounds: top = 0
03-17 13:45:09.000: D/ProgressBar(575): updateDrawableBounds: right = 152
03-17 13:45:09.000: D/ProgressBar(575): updateDrawableBounds: bottom = 152
03-17 13:45:12.323: D/AbsListView(575): onDetachedFromWindow
03-17 13:45:59.294: D/Keychain(555): isPackageAllowed packageName: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:59.304: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/api_apps, proj=null)
03-17 13:45:59.314: D/Keychain(555): allowed: [org.sufficientlysecure.keychain.demo, com.sawaya.openpgpapi.openpgpcamera]
03-17 13:45:59.314: D/Keychain(555): Package is allowed! packageName: com.sawaya.openpgpapi.openpgpcamera
03-17 13:45:59.324: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/api_apps/com.sawaya.openpgpapi.openpgpcamera, proj=[package_signature])
03-17 13:45:59.334: D/Keychain(555): Package signature is correct! (equals signature from database)
03-17 13:45:59.334: D/Keychain(555): nfcSignedHash: null
03-17 13:45:59.334: D/Keychain(555): nfcCreationTimestamp: -1
03-17 13:45:59.344: V/Keychain(555): log: LogEntryParcel{mLevel=DEBUG, mType=MSG_PSE, mParameters=null, mIndent=0}
03-17 13:45:59.344: D/Keychain(555): enableSignature:true
03-17 13:45:59.344: D/Keychain(555): enableEncryption:false
03-17 13:45:59.344: D/Keychain(555): enableCompression:false
03-17 13:45:59.344: D/Keychain(555): enableAsciiArmorOutput:true
03-17 13:45:59.344: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/3391992614177110942/unified, proj=[has_any_secret, verified, privkey_data])
03-17 13:46:01.686: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/find/subkey/3391992614177110942, proj=[master_key_id])
03-17 13:46:01.706: D/Keychain(555): PassphraseCacheService.getCachedPassphrase() for masterKeyId 3391992614177110942, subKeyId 3391992614177110942
03-17 13:46:01.706: D/Keychain(32276): PassphraseCacheService.onStartCommand()
03-17 13:46:01.706: D/Keychain(32276): PassphraseCacheService.getCachedPassphraseImpl() for masterKeyId 3391992614177110942, subKeyId 3391992614177110942
03-17 13:46:01.726: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/3391992614177110942/keys, proj=[has_secret])
03-17 13:46:01.736: D/Keychain(32276): PassphraseCacheService: masterkey passphrase not (yet) cached, returning null
03-17 13:46:01.736: V/Keychain(555): log: LogEntryParcel{mLevel=INFO, mType=MSG_PSE_PENDING_PASSPHRASE, mParameters=null, mIndent=2}
03-17 13:46:02.107: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/find/subkey/3391992614177110942, proj=[has_any_secret, verified, privkey_data])
03-17 13:46:02.117: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/find/subkey/3391992614177110942, proj=[master_key_id])
03-17 13:46:02.127: V/Keychain(575): query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/3391992614177110942/keys, proj=[has_secret])
03-17 13:46:02.217: D/ProgressBar(575): updateDrawableBounds: left = 0
03-17 13:46:02.217: D/ProgressBar(575): updateDrawableBounds: top = 0
03-17 13:46:02.217: D/ProgressBar(575): updateDrawableBounds: right = 96
03-17 13:46:02.217: D/ProgressBar(575): updateDrawableBounds: bottom = 96

The open-keychain UI prompts for passphrase - even though it was passed as parameter.
"
open-keychain/open-keychain,closed,Test and fix RESULT TYPE API,[],
open-keychain/open-keychain,closed,Removed JellyBean restriction on Contact Sync,[],"Contact Sync should work on all supported API levels now ^^
"
open-keychain/open-keychain,closed,Removed unnecessary @TargetApi annotation in ContactHelper,[],"Removed unnecessary @TargetApi(Build.VERSION_CODES.JELLY_BEAN) by calling the query() function which does not accept a cancellation signal (API level 1), since we don't use it anyway.
"
open-keychain/open-keychain,closed,Add enums to int constants in AppsListFragment and ContactHelper classes,[],"use enums instead of int constants to AppsListFragment.java and ContactHelper.java classes
"
open-keychain/open-keychain,closed,NullPointerException when signing with YubiKey,[],"Sign via API and Yubikey key: 

```
21053               Keychain  D  signImpl
 21053               Keychain  D  java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
 21053               Keychain  D  at org.sufficientlysecure.keychain.pgp.PgpSignEncryptOperation.execute(PgpSignEncryptOperation.java:492)
 21053               Keychain  D  at org.sufficientlysecure.keychain.remote.OpenPgpService.signImpl(OpenPgpService.java:290)
 21053               Keychain  D  at org.sufficientlysecure.keychain.remote.OpenPgpService.access$100(OpenPgpService.java:65)
 21053               Keychain  D  at org.sufficientlysecure.keychain.remote.OpenPgpService$1.execute(OpenPgpService.java:795)
 21053               Keychain  D  at org.openintents.openpgp.IOpenPgpService$Stub.onTransact(IOpenPgpService.java:69)
 21053               Keychain  D  at android.os.Binder.execTransact(Binder.java:446)
 20022               Keychain  E  onError getErrorId:0
 20022               Keychain  E  onError getMessage:Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
```
"
open-keychain/open-keychain,open,API: ACTION_GET_KEY_IDS with empty string in EXTRA_USER_IDS results in error,"[Label(name=""api bug"")]","Implement better handling of empty strings in EXTRA_USER_IDS when using ACTION_GET_KEY_IDS
"
open-keychain/open-keychain,closed,Please add a feature: exporting/sharing private and public key using another public key,[],"thx for all your great work on open-keychain.
Today I was asking how to export my private key from my mobile device. In the FAQ/Help it is recommended to save the keys on the SD-Card with a strong passphrase. 

But I would be really happy if you could add the feature to share/send the private and public key (*.asc) directly to open-keychain itself to encrypt the key with another public key to send it via e-mail without saving and deleting it on the file system.

With this alternative I would not have to store the private key on my file system which I would like to avoid.

I would like to donate for this feature or for a nice recommendation for an easier way.

best regards
"
open-keychain/open-keychain,closed,Cannot import secret key because of a Curve25519 subkey,[],"Hello !

First, thank you for building OK, it's a really nice app !

I tried to import my secret keys which contains a Curve25519 subkey. It's not standard yet, and even the format may change... but I still have other subkeys that are completely functional and that I would like to use. I assume the import fails because one of the subkeys has an unknown format. Is it possible to ignore unknown formats when importing ?

(I'm using OpenKeyChain 3.1.2 from F-Droid)

For reference, here's such a key, generated with gpg 2.1.2:
- Identity: ""blahblah""
- master passphrase: ""a""
- subkey passphrase: ""a""

```
-----BEGIN PGP PRIVATE KEY BLOCK-----
Version: GnuPG v2

lQPGBFUFgKsBCADR3pWGS30+sB+p30M4/W2oJBIoDRCatpnbRZQ7BolPm+yOQlDx
HYSccdiTZH3Xy/HnsBcWfDktA6C1BlHEW18DaswKR2uBPCSauBvVXfiJ2s7CR3Ct
7g8SQcGSI0u99Nnx8BeM9IqvC+aNNqGeL6kAVV3gikTf+Suki6X4OjuhReo20Wts
a99nwlyQnGTUsfUkx9BMDKsk/09ilRRtP2dBsrzYgSV+/g8Cj6kMn4yUijbt5RXd
TFpPtnCN6fGc7fqVnrXHI+zVUQJmQssgy+COzNqBe1UCviiy0I8iaxrilq18fbit
4CqGSrqoBgUusxKMNxjHryIcHOUZUDYipi1vABEBAAH+BwMCyK9hKQGO3kLnfhq9
VkLKSGsTD1mMznIWdftmRWXBhrg+y9FkhJKvODnTfLhHHXTPQLF9NpI1kby47U//
0VvwPc2BnCtQUNPL+xnYr3eFVcHesk7+HeHn5c/OLruQdLD92cfXX3owkkX8xRSY
WiiFtJAplKFV32z6xJPjpSdYauwqekJh5nH2BOtSK2Xn/LkGd1QboophtgiBG8Cf
DvizosdDuqLOk0XJLG44N5b1kmOmeiy55kXHOXBoL1EDd8PkWOP3MKWNFrAAFiFQ
WxMKYIGwjNvsrznZmTmYrZj5adHJaWNWVcIgCQZXsxSR2CFpKEOsJ2s5QeiuWxFF
/hdWbYWiMl97eJQTb3uuwzpH1V05iOPxOsac8MFSIjNtGP5jYQanNtck5m1z/8ua
770XWBBMKdGCPJaINEcqLqO1XZN0ODs5DXDrFqD95aa99ORKyRzfU01Q9Ak+R04z
kX3uj2Ih+mTDlsIth7/WrTqjyY8Ocx6as9a9BoR/xNDSDlecEegGqYKSxCNmwUMR
kKSeJmtCHqlRGTvowKMDe4jtUPtczbK4Yog7+nl/w8PsPpfpkfaRpfO4Wsd2NRzV
AAAPBTyHHfaXAHRsq24ZKIzYfPnf217pcVO4UBPTilYjDqzQX9FKTzSnz7cnoBTp
8Pv3t3bmJPD3pHXFP9QDN34u4FQD9LC1NXgkndqA+/1rv7xW7cg5jXJNakVz8c3A
ahoh6HeflTsVHQzk9/EY3yfYRhiPErgBwUJJkSOdOrhx5wgf2vsrxQXE+5KeX9qV
/t19m8K2V7Zqn9Srkpv0mc+OrYyx6+/v6DYD/IK6BaPy/yFTUeA5xFEKwlHOuz+S
2JFbUCA/6+JErRZhrNgBn2UaHRUcTv9DoYbpYutSMxZd8zmid+Q3BwNHljr4y4PK
OuRbeBWouGdXtAhibGFoYmxhaIkBNwQTAQgAIQUCVQWAqwIbAwULCQgHAgYVCAkK
CwIEFgIDAQIeAQIXgAAKCRBufVFtAmEot1QmB/4xa2erJB7WA50AEv/4z68xys+k
d4H6qM0KiSxKnvXDCg1fUXRXNYU+BoUeOFdAInFSwktzgn2aH2FdnAY0K92qbbHC
VFlHRjAP4pdDBvi/Pw92BONeidBxNi65CqxLxKVpKqFEZMBpm2g1cGV7wZt2CifU
Fjfx1kNcNUvNp9eitoxSBNk61/wqHJGcEQPqoxthP8IPRhkh4roJOnWPP2VltX6u
7EGsj+kNHepHCuhalV8q0h3EelqQjZ9suZw0WbPXV+8lBMa11UV7472Nh6KxbtjP
Ndyayl9sDL8dYAdyMEkBYhwyrR7QaCoMMARh/7c7tATOKPXnI9uZfoBTaxDDnQPG
BFUFgKsBCACfSISBusilq/yUPQlp1QFynfGjgmdeSlT1RncawqrTAKRejnvSJvA9
KkCZW7jIRWfbIoDcbqQ81s5MyRsTr6mrLxtg2gLATiDbGXpzWcRZWq+t42gdGb3h
bnIXiRId/lJ4GzOm8redJh+EeZQI4e1MH3dNe0RFKSvAvKiApcgoslG5vc89QBUI
0d9OTRvra9AFPgTu/eQSJCOHFZ1eLd5bKs4Os4d4IjACKN8j7RoKqWmtVDylgZrm
yB2l9tKH8booBOD+WXuB5edKy0sH5qCjg8zGqMbBBZQRcJN2IL8ZYLj+7VDp/qdT
ODX+yTmXmrZaV7NryyjXpp7FtLzUaRO7ABEBAAH+BwMC2FoSrvt0lMDnGQPNhAgB
YYw+x6/RiovNZR+qs/5ME0dYkbnaxR3EDNjXG/mHE+m2sOezYyulP4YpVk9Pvx9f
6U7unyqitMpLFytPscKCHTtc4Yzgrd7fIoPAr+xdij3SYTpnQOFnlaPMKdCkOH3E
20PP+SfdvlMrswZFG03H5vCciSpKu+3ouxMqymolO53dOaFjQpFngmlcWI4iEvHJ
LIX43KQ8CGlpeBylwrHzgWlBgl37x6O4+9Q4+0qQs68VwjZ+ydkbImnXGU3uawja
gLKCIBRecqoDcfhlWWbdugnofUwNfN37WnFRb1h98f90aMQTMzDVXxlUo00oqL2h
VuSW8hEoMyJtHyAasFv24jepx4AVROdA0Ex1vKYJ7Yw9Oq9FC6hErrZFmCY14oXW
i8xCN9uU1axqoOmzsN2cxTeRPAYZbRfyNVQdIlooIVyMdFe6FbToFAqT5KezN3J1
Dacx4cB0ryry2iOYdk8pLJrADTXTXLcvIww1A2Rg+O+72XJDjPkOv6uLipVo0oXR
TXDGDpgUzaMzY9XPtUjhwCjNpwr5VC5CwJvt8ZYxmhkPySNJOZq4vEbCdexKtMDH
czPoDZYp7julRhuvh6zip7WfmojHSCNOUYXUTON2Epf14HLwj4rMOxuRGurUaz66
QgHo+WM7sCU+Vg2DjtCS60Ie4pFom+jDckgWhI9K9A12DlHtrTHyZAReF01utg2F
KnYeoYwP3akVIXvlSo/5iRyyll5MNyIgIXt4kPocPzmC8cHqasok76BVGjxV9x47
V7gXsSeb5iiWxDhDpdSV1FQ4n1o1cCa2LnnXRh7f6IDb7O/DTRnDsbxvurdq/UIT
wHti/51bjirRy5IdFn9J3NCgkGxPpMloGKtZrCrCnK//q4nSwn3DyOxrfFuJEMpy
642GR6+TiQEeBBgBCAAJBQJVBYCrAhsMAAoJEG59UW0CYSi3H7IH9jw740wanX/N
1oLFmRKfX5sH0V0VfeSfaix8cWfN1cjb3zPftTepu5GYEt2tPZVgbaKYBsOtVZxq
ZDJlr0QynkaMIgGeEGJM5qVtsBLnJJ7bDfU1DkalpSQNSjMTvN7/06RUGGaLup56
y0uM9ylqfJlgdB4fZsvUK2KujM3NxZ0Mstnpd9erY/MLkogqol8iQT7xekVAdY8P
pOIL+UcaY6aP2C697Wj3l9wEO4d0l4mDa7nsJcIl8aoAWOojSugzM+TPg5FStQEY
wkpCzjcZVxOll8K9MeekwKhj3mipQkwu87cTqBPI1XXV9xmc72mVblQKb3iHs9kW
WGoz/OjoRZyGBFUFgXcWCSsGAQQB2kcPAQEHQONOe8JYvZZYv6lzOSmF8bcM2vtP
/BRCfIAxAtC7W1zB/gcDAtD+kovc5k+j58gC/POYF3rXpOTqB4Bvs/87bEIGhHyM
ZhOixTBVmpcMG0W8/8hiw+eFeXu9/doxD6ubYwHVfkfD3LrzqRva4AeOncHxfaOJ
AX8EGAEIAAkFAlUFgXcCGwIAagkQbn1RbQJhKLdfIAQZFggABgUCVQWBdwAKCRCg
hfSFNwVgXjIxAQCTdevQROpVVZcftXk34vzJSpdVTiEq/gB24VMdMEkxIQEAseT3
cnlXWZj3hWd+SK8ePWJFVpT0UFmgk3vn2+B3xgx7ogf8C2CrpdrJKWrznmulDISI
gMZb1C8dyRw+0QM/d4Q+ILlZUg8QIrHgTIHDEwlmCSXx1UG7DJdJtNrlj4RFEtX0
2g+aIxP6ROY9eltDLMIEUftViEMB5NtIdhXSBDl3I6B7r38dJbZSoaBNtFFTaGjr
rXeKI900cTFFTc/x9ga7GZ27YWqJ2rxg1x30M5FsJ4yB0ZrgW/bw6kvHPq1X3V5d
Zm3+YSAgLqH2YosKHIEX1m3FhOXOJ0yC8W83iHufcno4OGX0hOhIISxjT7plGZRG
WmcSjX/2feXOp7Zugk/c5aZ41w5hy2WGn2dyZ+kI6YZ6S4yLZIaOpto1otmQ3kIa
Cg==
=aIbs
-----END PGP PRIVATE KEY BLOCK-----
```
"
open-keychain/open-keychain,closed,Fixed a ClassCastException,[],"While trying to fix issue #1123 I came across this one.
"
open-keychain/open-keychain,closed,-fixed out of bounds crash when retrieving the main profile name with se...,[],"...cret keys

-fixed a possible crash when retrieving the main profile contactid
"
open-keychain/open-keychain,closed,Implemented #1051,[],"![screenshot_2015-03-14-03-59-22](https://cloud.githubusercontent.com/assets/10199354/6648409/49350856-c9ff-11e4-8344-a8c2177ba952.png)
If any changes regarding the aesthetics please let me know.
"
open-keychain/open-keychain,closed,#1501 Shows my keys even when no secret key is in our databas...,[],"...e
"
open-keychain/open-keychain,closed,"Own keys linked to ""me"" contact",[],"Refers to https://github.com/open-keychain/open-keychain/issues/958

Own keys have been linked to the ""me"" contact and the linked system contact code has been updated to handle this. Tested it and seems to be working :)

Some functions added like insertMainProfileRawContact, getMainProfileMasterKeyIds and deleteMainProfileRawContactById have resulted in a certain amount of code duplication since they only differ from their normal RawContact counterparts by the Uri being queried. Should we create a base function which these functions call by passing different Uris?
"
open-keychain/open-keychain,closed,Fix for Issue #1115,[],"Please use files of size 1mb+ while testing so that the progress can be viewed clearly.

This fixes enables the change of progress for both Encryption of Files(with and without ASCII armor) and Text.

![screenshot_2015-03-13-01-02-00](https://cloud.githubusercontent.com/assets/1645107/6626485/e4a49f10-c91c-11e4-890d-21fff8ac9f50.png)
"
open-keychain/open-keychain,closed,Preselected Suitable Key,[],"Preselected Suitable Key
"
open-keychain/open-keychain,closed,Application ignore expiration date of master key,[],"I found a problem with expiration date. It seems application ignore expiration date of master key (it displays only expiration dates of subkeys). Application also shows expired key as valid.

Check it on key:

```
gpg -k 0x0664A76954265E8C
pub   3744R/0x0664A76954265E8C 2014-06-22 [expires: 2015-08-19]
uid                 [ unknown] Simon Josefsson <simon@josefsson.org>
uid                 [ unknown] Simon Josefsson <simon@yubico.com>
sub   2048R/0x860B7FBB32F8119D 2014-06-22 [expires: 2015-08-19]
sub   2048R/0x9535162A78ECD86B 2014-06-22 [expires: 2015-08-19]
sub   2048R/0xAF6608D736BA8F9B 2014-06-22 [expires: 2015-08-19]
```
"
open-keychain/open-keychain,closed,Feature: Search keys for each contact,[],"A function to automatically search avaylable keys on keyserver for each contact person.
"
open-keychain/open-keychain,closed,Feature: Update all keys from keyserver,[],"I think this would be very usefull.
"
open-keychain/open-keychain,closed,"Delete after encryption feature, fixes #1116",[],"I think I got it. Hope it is what you want. 
"
open-keychain/open-keychain,closed,Updated fix for Issue #1116,[],"Please have a look at the updates. I've fixed the handling of adding duplicate files too.

![screenshot_2015-03-11-19-30-59](https://cloud.githubusercontent.com/assets/1645107/6599683/30c2422c-c831-11e4-882c-673f800bf88e.png)

![screenshot_2015-03-11-19-36-38](https://cloud.githubusercontent.com/assets/1645107/6599691/362ee62a-c831-11e4-9427-63fc6dc27f75.png)

![screenshot_2015-03-11-19-29-29](https://cloud.githubusercontent.com/assets/1645107/6599696/3ad61342-c831-11e4-9a11-0fbee1ef43b1.png)
"
open-keychain/open-keychain,closed,Updated fix for Issue #1116,[],"![screenshot_2015-03-11-19-30-59](https://cloud.githubusercontent.com/assets/1645107/6598680/50159030-c82b-11e4-881b-e29ec56ea659.png)

![screenshot_2015-03-11-19-36-38](https://cloud.githubusercontent.com/assets/1645107/6598687/563c7884-c82b-11e4-8aa9-f07792f68a19.png)

Also have fixed the restriction of adding duplicate files.

![screenshot_2015-03-11-19-29-29](https://cloud.githubusercontent.com/assets/1645107/6598673/4a100530-c82b-11e4-8be4-45b4b002175b.png)
"
open-keychain/open-keychain,closed,Better handling of insecure keys,[],"Insecure keys:
- RSA, DSA, and ElGamal with bit length <= 1024
  (see https://gist.github.com/coruus/68a8c65571e2b4225a69)

Either don't import keys with the following crypto primitives or flag them as deprecated and show warning on signature verification.

Current practice:
- We don't import v3 keys
"
open-keychain/open-keychain,closed,Sync only confirmed keys and change ,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1125 and https://github.com/open-keychain/open-keychain/issues/1126. 

TODO: cause displayed system contact to be updated on confirmation of a key from KeyViewFragment, possibly by introducing a cursor returned by loader methods for system contact information, which would allow automatic updating on change in the contacts table?
"
open-keychain/open-keychain,closed,Check if NFC is available on device,[],"Possible Fix for Issue #997 
(May revise to hide NFC button instead)
"
open-keychain/open-keychain,closed,Fix #1129,[],"Fetch FAQ page from open-keychain.github.io
"
open-keychain/open-keychain,closed,Dont display key ids,[],"Dont display key Ids anymore. If two keys exist with the same Name show creation date for differentiation?
"
open-keychain/open-keychain,closed,Use contact name instead of user id Issue #1126,[],"Fixes https://github.com/open-keychain/open-keychain/issues/1126, apologies for the oversight
"
open-keychain/open-keychain,closed,Add link to FAQ page to in APP help,[],
open-keychain/open-keychain,closed,Transifex client:  'ascii' codec can't encode characters,"[Label(name=""help wanted"")]","transifex client stops with ""Error compiling the translation file: 'ascii' codec can't encode characters in position 33-37: ordinal not in range(128)""

I can skip with `tx pull -af --skip`: Then compiling works.

```
Pulling translations for resource open-keychain.strings (source: OpenKeychain/src/main/res/values/strings.xml)
 -> fr: OpenKeychain/src/main/res/values-fr/strings.xml
 -> bg: OpenKeychain/src/main/res/values-bg/strings.xml
 -> zh: OpenKeychain/src/main/res/values-zh/strings.xml
 -> is: OpenKeychain/src/main/res/values-is/strings.xml
 -> de: OpenKeychain/src/main/res/values-de/strings.xml
 -> it: OpenKeychain/src/main/res/values-it/strings.xml
 -> cs: OpenKeychain/src/main/res/values-cs/strings.xml
 -> et: OpenKeychain/src/main/res/values-et/strings.xml
 -> eu: OpenKeychain/src/main/res/values-eu/strings.xml
 -> fi: OpenKeychain/src/main/res/values-fi/strings.xml
 -> ja: OpenKeychain/src/main/res/values-ja/strings.xml
 -> es: OpenKeychain/src/main/res/values-es/strings.xml
 -> ru: OpenKeychain/src/main/res/values-ru/strings.xml
 -> nl: OpenKeychain/src/main/res/values-nl/strings.xml
 -> pt: OpenKeychain/src/main/res/values-pt/strings.xml
 -> sr: OpenKeychain/src/main/res/values-sr/strings.xml
Error compiling the translation file: 'ascii' codec can't encode characters in position 33-37: ordinal not in range(128)
 -> tr: OpenKeychain/src/main/res/values-tr/strings.xml
 -> sv: OpenKeychain/src/main/res/values-sv/strings.xml
 -> uk: OpenKeychain/src/main/res/values-uk/strings.xml
 -> sl: OpenKeychain/src/main/res/values-sl/strings.xml
 -> zh_TW: OpenKeychain/src/main/res/values-zh-rTW/strings.xml
 -> ro: OpenKeychain/src/main/res/values-ro/strings.xml
 -> pl: OpenKeychain/src/main/res/values-pl/strings.xml

```
"
open-keychain/open-keychain,closed,Global preference to enable/disable keyserver upload,[],"Global preference to enable/disable keyserver upload
"
open-keychain/open-keychain,closed,Use contact name instead of user id on linked system contact card,"[Label(name=""help wanted"")]","see title. right now, the primary user id is shown as contact name, when it should be the merged contact's name
"
open-keychain/open-keychain,closed,Only sync confirmed keys to contacts,"[Label(name=""help wanted"")]","Showing key ids of non-confirmed keys in contacts provides a false sense of security. Just like contact pictures are only shown for confirmed keys, raw contacts should only be made for confirmed keys.

this implicitly solves #1122 iinm
"
open-keychain/open-keychain,closed,"Fix for ""Delete after encryption"" Issue #1116",[],
open-keychain/open-keychain,closed,Create key crashes after finish when executed from SelectSignKeyIdActivity,"[Label(name=""help wanted"")]","Create key crashes after finish when executed from SelectSignKeyIdActivity
"
open-keychain/open-keychain,closed,Show only those contacts as linked system contacts which have been merged,"[Label(name=""help wanted"")]","Follow up on #1084
- The ""Linked system contact"" card should show ""none"" if the corresponding raw contact of OpenKeychain has not been merged with a ""real contact"".
- This would be coherent with the behavior of the contact app, which only merges the raw contacts of OpenKeychain into existing ones, as we don't want to pollute the contacts with OpenKeychain keys.

@adithyaphilip You did great prior work on this, if you would like to take this issue, that would be awesome!
"
open-keychain/open-keychain,closed,Fixed contact deletion Issue #1120,[],"Refers to https://github.com/open-keychain/open-keychain/issues/1120
Added CALLER_IS_SYNCADAPTER query parameter, with value ""true"", to all deletion queries. This causes the RawContact to be actually wiped when deleted instead of just the ""delete"" flag being set. Solves the aforementioned issue of re-imported keys not being linked to system contacts.
"
open-keychain/open-keychain,closed,System contact not updated on re-importing a key after deleting it,[],"Tested on Android 5.0.2 (Moto G 2nd Gen)
Importing a public key for the first time will introduce a new system contact linked to user who owns the public key. Deleting the key from the app removes the system contact. Importing the key again will not create a new system contact.

I looked into it and it seems to be due to the fact that the RawContact rows we add are read-only and hence can only be ""hidden"" when deleted normally. This means the row is simply marked with the ""deleted"" flag and left so, hiding it from the user's view, but not actually removed from the RawContacts table. When we import the public key again, we don't create a new RawContact row since we find a pre-existing one in writeKeysToContacts in ContactHelper, just marked with the ""deleted"" flag.

Deleting it completely from the user's device requires the CALLER_IS_SYNC_ADAPTER query parameter to be passed to the deletion operation (http://developer.android.com/reference/android/provider/ContactsContract.html#CALLER_IS_SYNCADAPTER). Would this work for us? I've tried it out and it seems to do the job, thought I'm not sure if we depend on the contact not being deleted immediately elsewhere.
"
open-keychain/open-keychain,closed,Preselected key for certification.,[],"Preselected key for certification.
"
open-keychain/open-keychain,closed,Adds Linked System Contact to ViewKeyFragment Issue #1084,[],"Adds a Linked System Contact card as mentioned in https://github.com/open-keychain/open-keychain/issues/1084

Screenshots:
![screenshot_2015-03-10-01-42-42](https://cloud.githubusercontent.com/assets/5712241/6563468/5d0472ee-c6c7-11e4-8a24-a4533ad06fe0.png)
![screenshot_2015-03-10-01-42-15](https://cloud.githubusercontent.com/assets/5712241/6563471/5e645da2-c6c7-11e4-91b3-d087a5f02574.png)
![screenshot_2015-03-10-01-43-21](https://cloud.githubusercontent.com/assets/5712241/6563467/5b3f1996-c6c7-11e4-91b7-92eaaf337189.png)

I thought we could replace the gray box for when either no linked system contact is found, or there's no picture for the linked system contact, with this: http://pixabay.com/p-42914/?no_redirect
It's free for commercial use with no attribution required. Should I go ahead with it?
"
open-keychain/open-keychain,closed,#1042: Replaced ints with enums ,[],"Created enums IOType in KeychainIntentService and MessageStatus in KeychainIntentServiceHandler. Fixed  three typos in the aforementioned classes, too.
"
open-keychain/open-keychain,closed,"Rework ""Delete after encryption"" feature","[Label(name=""help wanted"")]","Delete after encryption/decryption is currently implemented very badly.
- If the user chooses to encrypt a file and share it, the dialog is shown behind the share menu of Android, thus the file will never be deleted.
- If multiple files are encrypted the dialog is shown for every file separately, also the files are deleted separately.
- The deletion code is inside the DialogFragment.

Should be:
- Show dialog before sharing the encrypted temporary file and only proceed to sharing if ""Delete"" is clicked
- Execute deletion after encryption process succeeded
- Allow deletion of multiple files, i.e. show a list of files in the DeleteFileDialogFragment dialog. Also show a list of files in the Toasts, collect files that failed to delete.
"
open-keychain/open-keychain,closed,No progress shown when encrypting a file with ascii armor,"[Label(name=""help wanted"")]","Hangs at 0% when encrypting a file and enabling ascii armor in the overflow menu, but after some time succeeds.
"
open-keychain/open-keychain,closed,Snackbar cannot be seen in encrypt activies when keyboard is open,"[Label(name=""help wanted"")]","Snackbar cannot be seen in encrypt activies when keyboard is open, e.g., when no key is selected.
"
open-keychain/open-keychain,closed,Added in two overflow menus,[],"Added Import in KeyListFragement and ViewKeyFragment overflow menus #1053 
"
open-keychain/open-keychain,closed,"Improved EmailEditText, Added NameEditText, Removed PasswordEditText #1106",[],"#1106 ToDos
"
open-keychain/open-keychain,closed,Passphrase strength indicator,[],"The standalone PassphraseEditText mentioned in PR https://github.com/open-keychain/open-keychain/pull/1075, and now in Issue https://github.com/open-keychain/open-keychain/issues/1106 and PR https://github.com/open-keychain/open-keychain/pull/1107.

The PassphraseEditText has been added to the CreateKeyInputFragment and SetPassphraseDialogFragment.

Screenshots:
![screenshot_2015-03-06-22-20-02](https://cloud.githubusercontent.com/assets/5712241/6529714/a364fef8-c450-11e4-8e8d-3b1ff9fcc7b4.png)
![screenshot_2015-03-06-22-28-42](https://cloud.githubusercontent.com/assets/5712241/6529718/a75371e8-c450-11e4-9f6f-f4dfccb4a39c.png)
"
open-keychain/open-keychain,closed,Menu item: Import my key,[],"Added `Import from file` and `Import all keys` option in `ViewKeyActivity` and `KeyListFragment` respectively. #1053 

Check for `null`, add `m` prefix for non static, non public objects in the new `EditText` classes. #1107 

This pull request consists of some commits from #1109 because it is yet to to merged/closed.
"
open-keychain/open-keychain,closed,"Added NameEditText, improved EmailEditText",[],"As requested in #1106 , improvement in EmailEditText (created in #1107) and creation of NameEditText.
"
open-keychain/open-keychain,closed,Asks Passphrase for key delete/export in ViewKeyActivity.,[],"Asks Passphrase for key delete/export in ViewKeyActivity.
"
open-keychain/open-keychain,closed,"EmailEditText, PasswordEditText issue #1106",[],"Created EmailEditText extending AutoCompleteTextView with TextWatcher to validate email.
Created PasswordEditeText extending EditText with TextWatcher & Wrapper for PasswordStrengthView.
Implemented them in CreateKeyInputFragment, AddUserIdDialogFragment, SetPassphraseDialogFragment along with required XML changes.
All done in accordance with issue #1106 

![EmaiEditText with Suggestions](https://cloud.githubusercontent.com/assets/6591617/6520836/2a300ee0-c3f3-11e4-9b99-158f0f0d65b7.png)
![PasswordEditText with passphrase strength indicator](https://cloud.githubusercontent.com/assets/6591617/6520838/2f5d99d2-c3f3-11e4-8133-4b7f4d52a3cd.png)
![PasswordEditText with passphrase strength indicator in SetPassphraseDialogFragment](https://cloud.githubusercontent.com/assets/6591617/6520851/504af964-c3f3-11e4-805c-ac522fea3ad3.png)
![EmaiEditText with Suggestions in AddUserIdDialogFragment](https://cloud.githubusercontent.com/assets/6591617/6520852/504b66c4-c3f3-11e4-9a99-99ac1353c541.png)
"
open-keychain/open-keychain,closed,EmailEditText ToDos,"[Label(name=""help wanted"")]","Currently the code to verify emails and show an indicator and the code to check the password strength is in CreateKeyInputFragment. The email field is also used in AddUserIdDialogFragment and the password strength indicator should also be used in SetPassphraseDialogFragment (is currently not used there).
We have some code duplication here.
It would be nice to have all code and xml related to the fields in their own classes named PasswordEditText and EmailEditText.
"
open-keychain/open-keychain,closed,Changed int constants to enum in some files,[],"Issue #1042 
"
open-keychain/open-keychain,closed,"Select hash algo, encryption algo, and compression algo based on preferred lists",[],"Currently the lists which hash, encryption, and compression algo should be used are hardcoded in PgpConstants.
We should the select the algos with caution based on the preferred ones inside the keys.

Hash algo: based on singing key: make intersection between our list and list of preferred ones
Encryption algo: based on all recipients keys, select the best one (but nothing that is not in our list, like MD5)
compression: similar
"
open-keychain/open-keychain,closed,Bouncy Castle 1.52,[],"- Waiting for Spongy Castle until upgrade: https://github.com/rtyley/spongycastle

https://github.com/rtyley/spongycastle/issues/13
"
open-keychain/open-keychain,closed,Fixed issues with preferred Hash and Encryption Algorithms,[],"Issue #1094 
"
open-keychain/open-keychain,closed,#1042 replaced some int constants with enums,[],"Created enum FragAction in CreateKeyActivity.java and enum State in
KeyFormattingUtils.java and replaced int constants with them
"
open-keychain/open-keychain,closed,Changed SHA512 to SHA256(preferred),[],"Issue #1094 
"
open-keychain/open-keychain,closed,erratic/wrong behaviour when using key with some subkeys on SmartCard,[],"I tried to build a new key, which I can use on my main PC and also on my Android phone:
- create a new key
- add 4 subkeys (2 for PC - sign and encrypt / 2 for Android - sign and encrypt)
- remove private part for the main key from keyring
- move the private part from 2 of the subkeys to an OpenPGP SmartCard (no Yubikey)
- export these 4 private subkeys and transfer to Android
- import them with OpenKeyChain (current version 3.1.2 from F-Droid)
- the new key is correctly recognized, it:
  - doesn't contain the master keys private part (this is shown)
  - shows that 2 of the subkeys are moved to a SmartCard/NFC (the later 2 ones)
  - shows that 2 of the subkeys are available (have the private part with them)

All seems good until I try to use these key with K9-Mail. I can select the correct key, but when first signing (or encrypting for self) with them, the app OpenKeyChain wants me to hold the Yubikey at the back of my Android. That sucks, I want to use the 2 subkeys, for which I HAVE the private part available and I DON'T want to use the ones on a SmartCard (because that's just used on the PC). It also doesn't matter in which order the keys are transferred to the SmartCard (key 1/2 or key 3/4). As long as there are subkeys which are flagged to be on SmartCard/NFC, OpenKeyChain tries to use these.
"
open-keychain/open-keychain,closed,Avoid doing bad things to adb (now with rebase),[],"Dumping the cursor to the debug log over and over is a real resource hog
and tends to have the negative side effect of your logs being 2-3 minutes
out of sync with reality.
"
open-keychain/open-keychain,closed,Orange toolbar for certify and fingerprint activity added,[],"Done as per your suggestion. 

Created a new layout xml and added it in the corresponding files.
"
open-keychain/open-keychain,closed,Show only one consolidate activity,[],"I'll let the commit message for 9142cdc5ba819a0cd12fdc95fb707cb2f6957f1d speak for itself: This fixes the second half of the bug described in #1077 enough that it looks right.

(now with rebase!)
"
open-keychain/open-keychain,closed,Don't dump the cursor to the log all the time,[],"We should avoid logging repeatedly like this.

This actually solves a horrible debugging problem where my logs were 2-3 _minutes_ out of sync with reality. 
"
open-keychain/open-keychain,closed,SHA512 is used instead of SHA256,"[Label(name=""help wanted"")]","Not sure why but somehow SHA512 is used (I just saw it when testing https://github.com/open-keychain/open-keychain/issues/1093 ) but SHA256 is preferred in my settings (OpenKeychain's default).
"
open-keychain/open-keychain,closed,"Message not verified correctly, key is shown as expired",[],"Following message is not verified correctly. It's shown that the key is expired, but I extended it.
Related to other problems we had lately, assigned to @Valodim 

```
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Test
-----BEGIN PGP SIGNATURE-----

iQFPBAEBCgA5MhxEb21pbmlrIFNjaMO8cm1hbm4gPGRvbWluaWtAZG9taW5pa3Nj
aHVlcm1hbm4uZGU+BQJU9j+xAAoJEHGMBwEAASKCejgH/R1Ro6xCvCkRa56lMfJc
BcQMkc8wZGnv5GbTj86WF/isEs5A82KWse1irEMbRFdgaPX0BDdI2W4KgcIOy9vz
Xl0CRypRaJrtYWZ9CeTPiO5fRM7WZcw/9VwDQpSPIMdHjf4FEEFES2Ln+i+ozDbX
Xg2MIxAc+yT0SNWBImXb/XhA8i4BqmK4PXp1MaqbQILssXJHceO+1XA4MdxhC/zC
l/KArsPF1qCREL8hEDSJKRgUdBzzH98KFUbv+5SizJyX/a7bxXgPvAASgHa/Wcff
2KfcaQq9G6kT/FzcTpZIQy2Fe0O7ckrQC9fpb9/D2lFj6ELCfmurpDGiAo8bi6BH
RC0=
=XBQn
-----END PGP SIGNATURE-----
```
"
open-keychain/open-keychain,closed,Orange toolbar for certify and fingerprint activity added,[],
open-keychain/open-keychain,closed,Issue1088,[],"This adds Orange color toolbar for certify and fingerprint activity
"
open-keychain/open-keychain,closed,Fix issue #1048 Material Design Icon,[],"Change name in layout file and UI java file according to name of icon file downloaded by script in Graphics directory.

Replace all old holo icons with material design icons
Remove old icons from project
Use download script to download some icons
![device-2015-03-03-114314](https://cloud.githubusercontent.com/assets/3419881/6471724/57c31058-c1a2-11e4-8ea3-e712b9391f4d.png)
"
open-keychain/open-keychain,closed,Submodulesfix,[],"...in git

Submodules fix in a separate pull request as suggested by @dschuermann 

Please review. Thanks
"
open-keychain/open-keychain,closed,Orange toolbar for certify and fingerprint activtiy ,"[Label(name=""help wanted"")]","Use orange for certify and fingerprint acrtivity
"
open-keychain/open-keychain,closed,Fixed expiry change crash(for Android L as well),[],"@dschuermann  Hopefully I have fixed this issue #1059  this time. If an invalid date is selected then the expiry date is set to the previous expiry date.
![case1](https://cloud.githubusercontent.com/assets/5908368/6465350/8c69017a-c1e6-11e4-9e91-4749f26bf02b.png)
//invalid date
![case2](https://cloud.githubusercontent.com/assets/5908368/6465351/8c6e72a4-c1e6-11e4-87d1-237471e0b5b0.png)
If an invalid date is selected then last expiry date is set.
![case1](https://cloud.githubusercontent.com/assets/5908368/6465360/9c28d072-c1e6-11e4-888b-a9ced6fbd569.png)
"
open-keychain/open-keychain,closed,Changed drawable resources to Material - issue #1048,[],"Replaced some of the holo drawables with Material Design icons taken from https://google.github.io/material-design-icons/ as mentioned in issue #1048 

I was not able to use the provided scripts, but I managed to get most of the icons with correct sizes.
"
open-keychain/open-keychain,closed,Edit passphrase of stripped keys,[],"Allow passphrase edit of keyrings where the master key has been stripped.
Reference: https://github.com/open-keychain/open-keychain/issues/975#issuecomment-76859607
"
open-keychain/open-keychain,closed,show linked system contact in key view,"[Label(name=""help wanted""), Label(name=""user interface"")]","keys are already synced to system contacts. if available, we should show a card below the identitis in key view with a link to the system contact ([similar to threema](https://lh4.ggpht.com/x6rpvePsJhzev3hjkrrcDTTQQWqOuTIsxhxdZWRsXDkKyC40Lrgy7sAKYgiYogDGuA=h900))
"
open-keychain/open-keychain,closed,Fixed expiry change crash,[],"Issue #1059  has been successfully resolved. 
"
open-keychain/open-keychain,closed,Fixes Issue #1081,[],"The App crashed because the Adapter was trying to call a method on a
null object.

Where was the null object?
CheckBox was null because in the Layout file
view_key_adv_user_id_item.xml

There is no such widget with id = user_id_item_check_box

Fix :
I removed the two lines which were causing the bug, and now the screen
loads perfectly.
"
open-keychain/open-keychain,closed,App Crashes when trying to change key configuration,[],"Version - 3.2beta1

Steps to reproduce
- Open Menu action ""Create Key""
- Enter form details
- Click next
- Click on Change key configuration
"
open-keychain/open-keychain,closed,Fix root cause of #1077,[],"When importing lots of keys, lots of messages about the status of keys
are generated, including some debug slime and general fluff that
isn't really needed a lot of the time. As a result, a serious bug can come
along after key imports or certain operations which cause a log to become
parceled: It gets too big (over the absurd 1Mbit size limit).

This commit implements a pool to ""dehydrate"" logs into: they are placed
into the pool (a ConcurrentHashMap) and a UUID assigned to them, which
is parceled along. When the OperationResult is un-parceled, it reads in
the appropriate UUID bits and rehydrates the appropriate log.

This avoids the 1Mbit size limit, reducing the parcel down to ~10 bytes,
well under that limit.

In order to avoid any memory leaks, the log pool removes a reference to
the log itself, allowing the log to die a natural death at the hands
of the GC.

(As a matter of note: This UUID is _only_ used within OperationResult! It is
**NOT** made available outside!)
"
open-keychain/open-keychain,closed,Using ButterKnife for view injection.,[],"This can significantly reduce the amount of code we write,
and also will improve our code readability.

.gitmodules : Edit
This removes the untracked content warning in git

build.gradle : Edit
added new library and also verified the checksum with gradle-witness plugin as mentioned in the Readme.

CreateKeyFinalFragment.java : Edit
implemented butter knife in a fragment to show how neat our code would become with this library.

@dschuermann Could you please review this, I'd be keen to hear your thoughts and remarks on this.

Thanks
"
open-keychain/open-keychain,closed,Send entire keys via QR codes,[],"For increased security and compatibility, it would be great to transfer entire private and public keys (or even documents) via successive QR codes.

Why?

Exchange via Internet: An internet connection is not always available.  Android is commonly hacked.  Keeping your private key on a phone with an internet connection means the phone may be compromised over that internet connection and your private key stolen.  Instead you could keep a phone in airplane mode, or if paranoid even remove the internal radio.  Additionally, some phones are old and no longer have an active plan.  These phones could now be useful secure devices.

Exchange via SD Card: Not all devices have SD slots.  An SD card from a compromised device may be able to compromise the phone and cache data to break the air-gap.  Additionally SD cards contain a controller chip which can be reprogrammed.

Exchange via NFC: Not all devices support NFC.  NFC radios may have vulnerabilities that could be exploited remotely.  SafeSlinger requires an internet connection.

An alternative to QR codes might be a software modem using the radio and speaker.
"
open-keychain/open-keychain,open,Import progress sometimes reset to 0%,[],"1. import large file with many keys

Somehow the dialog showed 0% for re-importing and no progress half way through a previously successful import.
And the whole app crashes with:

```
ActivityManager  W  Exception when starting activity org.sufficientlysecure.keychain/.ui.FirstTimeActivity
  856         ActivityManager  W  android.os.TransactionTooLargeException
  856         ActivityManager  W  at android.os.BinderProxy.transactNative(Native Method)
  856         ActivityManager  W  at android.os.BinderProxy.transact(Binder.java:496)
  856         ActivityManager  W  at android.app.ApplicationThreadProxy.scheduleLaunchActivity(ApplicationThreadNative.java:793)
  856         ActivityManager  W  at com.android.server.am.ActivityStackSupervisor.realStartActivityLocked(ActivityStackSupervisor.java:1180)
  856         ActivityManager  W  at com.android.server.am.ActivityStackSupervisor.startSpecificActivityLocked(ActivityStackSupervisor.java:1280)
  856         ActivityManager  W  at com.android.server.am.ActivityStack.resumeTopActivityInnerLocked(ActivityStack.java:1906)
  856         ActivityManager  W  at com.android.server.am.ActivityStack.resumeTopActivityLocked(ActivityStack.java:1489)
  856         ActivityManager  W  at com.android.server.am.ActivityStackSupervisor.resumeTopActivitiesLocked(ActivityStackSupervisor.java:2453)
  856         ActivityManager  W  at com.android.server.am.ActivityStack.completePauseLocked(ActivityStack.java:1029)
  856         ActivityManager  W  at com.android.server.am.ActivityStack.activityPausedLocked(ActivityStack.java:927)
  856         ActivityManager  W  at com.android.server.am.ActivityManagerService.activityPaused(ActivityManagerService.java:6554)
  856         ActivityManager  W  at android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:515)
  856         ActivityManager  W  at com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:2476)
  856         ActivityManager  W  at android.os.Binder.execTransact(Binder.java:446)
  856           WindowManager  W  view not successfully added to wm, removing view

```
"
open-keychain/open-keychain,closed,Dialog shakes when importing many keys,[],"OS: Android 5

When importing many keys from a file, the dialog shakes. This maybe due to the way we update the progress.
"
open-keychain/open-keychain,closed,Passphrase strength indicator,[],"Refers to Issue https://github.com/open-keychain/open-keychain/issues/1050

Passphrase Strength Indicator added in CreateKeyInputFragemnt, below the passphrase EditText and above the passphrase verify EditText.

Looks like:
![screenshot_2015-03-03-01-23-30](https://cloud.githubusercontent.com/assets/5712241/6449048/18aabb0e-c144-11e4-8746-d206927f0ae6.png)
"
open-keychain/open-keychain,closed,Issue #1004 - Adding Log Export Feature,[],"With reference to: https://github.com/open-keychain/open-keychain/issues/1004

The Export Log feature has been added to LogDisplayFragment.
"
open-keychain/open-keychain,open,mail addresses and names in user ids,"[Label(name=""discussion"")]","A while ago we decided to group user ids by name in the certification screen. The idea was that at the point of signing, all correctly self-signed mail addresses can be assumed to be correct, and even if they weren't there would be no way for the user to discern invalid email addresses.

This is fine, but what about email addresses which get added at a later point in time? We can not assume all user ids of a key are trustworthy because just any of its user ids are signed, otherwise Alice could just add Bob to their user ids and she could then signed and verified mails from that address.

The big problem here is that validation of names of a person and their email addresses are fundamentally different problems. But because names and email addresses are clumped together in the way user ids are used right now, we can't treat them independently.

Some tools like [caff](https://wiki.debian.org/caff) send the certificates to the mail address, requiring the user to prove their control over both the address and the keyring. this is cryptographically sound, but a disaster in usability: the user does not get any direct feedback that they signed the key, and some of the certificates might even get lost.

leaving this here for discussion for now
"
open-keychain/open-keychain,open,allow certification for keys where a user id is already certified,[],
open-keychain/open-keychain,closed,invoke nfc in advanced key,"[Label(name=""help wanted""), Label(name=""user interface"")]",
open-keychain/open-keychain,closed,Dynamic selection of build-tool & sdk,[],"Hoping that issue #1046 has been resolved ! I have slightly modified the android {} blocks in most of the gradle files in the extern directory to allow the dynamic selection of compileSdkVersion and buildToolsVersion.I replaced the default compileSdkVersion and buildToolsVersion in the all the gradle files that used these two android attributes with

compileSdkVersion rootProject.ext.compileSdkVersion
buildToolsVersion rootProject.ext.buildToolsVersion
The project was successfully built and executed! 
"
open-keychain/open-keychain,closed,"Dynamic selection of build-tool,compileSdk & expiry crash fix ",[],"Hoping that issue #1046 has been resolved !  I have slightly modified the android {} block in most of the gradle files in the extern directory to allow the dynamic selection of compileSdkVersion and buildToolsVersion.I replaced the default compileSdkVersion and buildToolsVersion in the all the gradle files that used these two android attributes with 

 compileSdkVersion rootProject.ext.compileSdkVersion
 buildToolsVersion rootProject.ext.buildToolsVersion
The project was successfully built and executed! 

I have resolved issue #1059  with the patch 'Fixed expiry change crash'
"
open-keychain/open-keychain,closed,Update libs in about html,[],
open-keychain/open-keychain,closed,qr code view is cut off in landscape mode,[],
open-keychain/open-keychain,closed,Main email in search changes randomly from keybase and keyserver result,"[Label(name=""help wanted"")]","1. Do many searches for one fingerprint
2. email address randomly changes from keybase.io/dschuermann and the real email
"
open-keychain/open-keychain,closed,Deactivate keybase.io leads to error,[],"Deactivate keybase.io preference leads to error on search
"
open-keychain/open-keychain,closed,Not syncing to contacts on Android 5,[],"Not syncing to contacts
"
open-keychain/open-keychain,closed,Update transifex for 3.2,[],"Update from transifex
"
open-keychain/open-keychain,closed,API for 3.2,[],"- get key ids with empty string results in error
"
open-keychain/open-keychain,closed,Update MaterialNavigationDrawer when version 1.3.3 is out,[],"due to https://github.com/neokree/MaterialNavigationDrawer/issues/193

Also enable multipane, seems to be fixed in 1.3.3

https://github.com/neokree/MaterialNavigationDrawer
"
open-keychain/open-keychain,closed,Crash on expiry change 2,"[Label(name=""help wanted"")]","1. have key without expiry
2. change expiry to today-1
3. snackbar will be shown with error
4. click on details

could also be related: my language is german and the snackbar string looks wrong.

```
AndroidRuntime  E  java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Long.longValue()' on a null object reference
  9609         AndroidRuntime  E  at org.sufficientlysecure.keychain.operations.results.EditKeyResult.writeToParcel(EditKeyResult.java:40)
  9609         AndroidRuntime  E  at android.os.Parcel.writeParcelable(Parcel.java:1357)
  9609         AndroidRuntime  E  at android.os.Parcel.writeValue(Parcel.java:1262)
  9609         AndroidRuntime  E  at android.os.Parcel.writeArrayMapInternal(Parcel.java:638)
  9609         AndroidRuntime  E  at android.os.BaseBundle.writeToParcelInner(BaseBundle.java:1313)
  9609         AndroidRuntime  E  at android.os.Bundle.writeToParcel(Bundle.java:1096)
  9609         AndroidRuntime  E  at android.os.Parcel.writeBundle(Parcel.java:663)
  9609         AndroidRuntime  E  at android.content.Intent.writeToParcel(Intent.java:7295)
  9609         AndroidRuntime  E  at android.app.ActivityManagerProxy.startActivity(ActivityManagerNative.java:2395)
  9609         AndroidRuntime  E  at android.app.Instrumentation.execStartActivity(Instrumentation.java:1480)
  9609         AndroidRuntime  E  at android.app.Activity.startActivityForResult(Activity.java:3736)
  9609         AndroidRuntime  E  at android.app.Activity.startActivityForResult(Activity.java:3697)
  9609         AndroidRuntime  E  at android.support.v4.app.FragmentActivity.startActivityForResult(FragmentActivity.java:817)
  9609         AndroidRuntime  E  at android.app.Activity.startActivity(Activity.java:4007)
  9609         AndroidRuntime  E  at android.app.Activity.startActivity(Activity.java:3975)
  9609         AndroidRuntime  E  at org.sufficientlysecure.keychain.operations.results.OperationResult$1.onAction(OperationResult.java:231)
  9609         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.util.Notify$2.onActionClicked(Notify.java:110)
  9609         AndroidRuntime  E  at com.nispok.snackbar.Snackbar$4.onClick(Snackbar.java:382)
  9609         AndroidRuntime  E  at android.view.View.performClick(View.java:4756)
  9609         AndroidRuntime  E  at android.view.View$PerformClick.run(View.java:19749)
  9609         AndroidRuntime  E  at android.os.Handler.handleCallback(Handler.java:739)
  9609         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:95)
  9609         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
  9609         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5256)
  9609         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
  9609         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
  9609         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:898)
  9609         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:693)
  722         ActivityManager  W  Force finishing activity org.sufficientlysecure.keychain/.ui.EditKeyActivity
```
"
open-keychain/open-keychain,closed,Crash on expiry change,"[Label(name=""help wanted"")]","1. have key with expiry of today
2. change expiry to yesterday

```
AndroidRuntime  D  Shutting down VM
  8748         AndroidRuntime  E  FATAL EXCEPTION: main
  8748         AndroidRuntime  E  Process: org.sufficientlysecure.keychain, PID: 8748
  8748         AndroidRuntime  E  java.lang.RuntimeException
  8748         AndroidRuntime  E  at org.sufficientlysecure.keychain.ui.dialog.EditSubkeyExpiryDialogFragment$2.onClick(EditSubkeyExpiryDialogFragment.java:177)
  8748         AndroidRuntime  E  at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:160)
  8748         AndroidRuntime  E  at android.os.Handler.dispatchMessage(Handler.java:102)
  8748         AndroidRuntime  E  at android.os.Looper.loop(Looper.java:135)
  8748         AndroidRuntime  E  at android.app.ActivityThread.main(ActivityThread.java:5256)
  8748         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Native Method)
  8748         AndroidRuntime  E  at java.lang.reflect.Method.invoke(Method.java:372)
  8748         AndroidRuntime  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:898)
  8748         AndroidRuntime  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:693)
```
"
open-keychain/open-keychain,closed,preselect key for certification if only one is available with certify flag,"[Label(name=""help wanted"")]","right now in the 'certify' view, a key for certification is only preselected if the user only has a single secret key. if the user has more than one key but only one is actually suitable for certifying, that one should be selected.

this is slightly complex in the class structure because it involves the CertifyKeyFragment, CertifyKeySpinner and KeySpinner. The check for certification suitability should be in CertifyKeySpinner (it's a certification thing after all), but the mechanism for pre-selection should probably be in KeySpinner.
"
open-keychain/open-keychain,closed,Close FAB in key list after action,"[Label(name=""help wanted"")]","Close FAB in key list after action
"
open-keychain/open-keychain,closed,Scan QR Code from key view: check fingerprint,"[Label(name=""help wanted"")]","When scanning a QR Code from the key view: The scanned key should be the key you have opened in the key view.
Give mDataUri to the scan QrCodeScanActivity and check the fingerprint against the one in the uri. If it does not fit, abort with an error in our snackbar.
"
open-keychain/open-keychain,closed,Support key stubs via K-9 mail for use with YubiKey NEO,[],"On a YubiKey NEO, I added a new encryption subkey to a standard 1024D GPG key. Then I exported a private key stub to my phone. The stub does not contain secret keys, but enables file decryption via NFC and the YubiKeyNEO in the OpenKeychain app, which is working fine.

I would like to use this decryption method for e-mails in K-9 mail. However, in the key selection dialog displayed by OpenKeychain's interface to K-9 mail, my GPG key is grayed out (with an ""X"" next to it) and I cannot select it. 

The key should be selectable, since the main OpenKeychain app can use it for decryption (provided I swipe the YubiKey, of course).
"
open-keychain/open-keychain,closed,Back to SuperToasts?,[],"- v2.0 can do snackbar style
- color line on top: https://plus.google.com/u/0/s/snackbar ?
"
open-keychain/open-keychain,closed,Menu item: Import my key,[],"Re-add menu item in key list: ""Import my key""
"
open-keychain/open-keychain,closed,Switch from StickyListHeaders to SuperSLiM,"[Label(name=""help wanted"")]","https://github.com/TonicArtos/SuperSLiM
"
open-keychain/open-keychain,closed,"Show ""my keys"" even when no secret key is in our database","[Label(name=""help wanted"")]","Show ""my keys"" even when no secret key is in our database. Instead of items show a button to import your key from a file.
"
open-keychain/open-keychain,closed,Passphrase strength indicator,"[Label(name=""help wanted"")]","see https://github.com/matt-allen/android-password-strength-indicator
- copy this code over to OpenKeychain
- Integrate into first time wizard
"
open-keychain/open-keychain,closed,Key creation: make scrollable,"[Label(name=""help wanted"")]","On Android 5, the key creation wizard's content is not scrollable. This is especially problematic when entering the passphrase in step 1. Make the content scrollable and pinn the two wizard butons to the bottom.
"
open-keychain/open-keychain,closed,Replace Holo icons with Material Design icons,"[Label(name=""help wanted"")]","- Replace all old holo icons with material design icons
- Remove old icons from project
- Use our download script in ""Graphics"" folder (see https://google.github.io/material-design-icons/ for icon list)
- Special icons on http://materialdesignicons.com/
"
open-keychain/open-keychain,closed,Some Polish translated strings and some tiny cleanups,[],
open-keychain/open-keychain,closed,openkey-chain fails to build without android-19 platform,"[Label(name=""help wanted"")]","I have prepared my build environment according to the instructions in the README.md. After a few failed builds I had to install
- android-19 platform (required by html-textview)
- Build Tools revision 19.1.0 (required by html-textview)
- Build Tools revision 21.1.1 (required by android-lockpattern)

It appears not only html-textview needs it:

```
find -name build.gradle | xargs grep targetSdkVer 
./OpenKeychain/build.gradle:        targetSdkVersion 21
./extern/TokenAutoComplete/library/build.gradle:        targetSdkVersion 19
./extern/TokenAutoComplete/example/build.gradle:        targetSdkVersion 19
./extern/KeybaseLib/Lib/build.gradle:        targetSdkVersion 19
./extern/html-textview/build.gradle:        targetSdkVersion 19
./extern/SuperToasts/supertoasts/build.gradle:          targetSdkVersion 19
./extern/SuperToasts/demo/build.gradle:         targetSdkVersion 19
```

Please either
- enumerate in the README.md all the versions of platform (API)  and Build Tools that open-keychain and the submodules require for a successful build or
- make everything work with the same (newest) available version.

After installing the older platform and Build Tools packages I managed to build the package.
"
open-keychain/open-keychain,closed,ask for passphrase on secret key export/deletion,"[Label(name=""help wanted"")]","Although these operations do not require a passphrase cryptographically, it still makes sense to make sure the user is authorized if they want to use those operations. See #194 for discussion.
"
open-keychain/open-keychain,closed,for some reasons I was able to edit the GSOC 2014 Idea page.,[],"I don't whether is intended or not  but I was able to edit the Idea Page of GSOC of open-keychain . 
I click on idea page link from melange website than i was prompted to Edit this page . I think I shouldn't have the right to do it .
"
open-keychain/open-keychain,closed,Offer decrypt action for e.g. .asc files,"[Label(name=""bug"")]","Besides the ""Import Key with OpenKeychain"" Action, it would be nice to have a ""Decrypt with OpenKeychain"" Action. (or even better just ""Open with OpenKeychain"" and let OpenKeychain decide or offer a selection what to do with it, based on the content that file)

This would be EXTREMELY helpful to mitigate shortcomings in Mailers that do not support PGP/MIME (as K9 does for over a year - https://code.google.com/p/k9mail/issues/detail?id=5864). One would be able to at least decrypt the message more easily (without storing it first, opening OpenKeychain, select decrypting and search for the file, ...)
"
open-keychain/open-keychain,closed,use enums instead of int constants,"[Label(name=""help wanted"")]","so, not using enums is [out of date](http://stackoverflow.com/questions/4822877/why-doesnt-android-use-more-enums) at this point. we should totally get rid of int-constants wherever possible
"
open-keychain/open-keychain,closed,API new Actions,"[Label(name=""api todo"")]","I have some suggestions for new actions for the API...

I have a backup app which I would like to modify to encrypt the backups using the API. Encryption will be done without interaction, so for this to be one neatly, the app will have to be authorised with OKC beforehand. I'm not sure if a 'do nothing' action would be useful in order to force it to register, or if it would be simplest just to ask the API to do some other action and ignore the result. ('do nothing' rather than 'register', as other providers might not require registering in the same way, and OKC could require it for a 'do nothing' action).

I also need to select recipients non-interactively too - doing it once and saving the result before doing backups. An action to select keys and return their IDs/a string of emails would be useful, rather than relying on the selection screen to come up when an invalid ID is sent to it. This could be wrapped in a (Dialog)Preference in the API. This preference would require registering with OKC, so maybe it makes the 'do nothing' action above slightly redundant. If keys to encrypt to disappeared, apps would then be able to send a notification and have the user select new keys.

Finally, a method to determine if decryption is available for a given selected key would be useful, without trying to decrypt something and checking the result. Apps could then warn (for example) that they can do a backup with a key, but that the corresponding private key needs to imported before restoration is possible. NB restoration would be interactive, asking for a passphrase ;)
"
open-keychain/open-keychain,closed,wrong [back] when [advanced] selected from 'no key' dialog,[],"From siacs 'Conversations', in a conversation,  select PGP encryption

OpenKeychain opens with 'select key' dialogue 

Select [create key] then [back] returns you to same dialogue as I expected
however
Select [advanced], then [create key] then [back] puts you in main keys list 
"
open-keychain/open-keychain,closed,Stuck after entering incorrect Yubikey PIN,[],"If one enters the wrong Yubikey PIN when prompted, after placing the Yubikey NEO against the device, Open Keychain flashes the toast ""Incorrect PIN!"" but doesn't offer a chance to retype it. If you keep trying to use the NEO, it will eventually exceed the tries limit and block the card.

Request: Instead of just showing ""Incorrect PIN"" toast, invalidate the pin and bring up the pin entry screen to let the user try again. 
"
open-keychain/open-keychain,closed,Development branch: After canonicalize: pub keys gone,[],"After canonicalize: pub keys gone
"
open-keychain/open-keychain,closed,Add ability to compile with java8,[],"otherwise we get:

```
:OpenKeychain:compileDebugJava
/home/ligi/git/3rd/open-keychain/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/provider/KeychainProvider.java:686: error: incomparable types: Object and int
                    if (values.get(UserPacketsColumns.RANK) == 0 && values.get(UserPacketsColumns.USER_ID) == null) {
                                                            ^
Note: Some input files use or override a deprecated API.
```
"
open-keychain/open-keychain,closed,merge openpgp api lib,[],"for later: https://github.com/k9mail/k-9/pull/536
"
open-keychain/open-keychain,closed,Crash after key import from file,[],"Every time after I successfully imported an gnupg key via file, OpenKeychain crashes.

**Logcat:**

```
E/AndroidRuntime(10476): FATAL EXCEPTION: main
E/AndroidRuntime(10476): Process: org.sufficientlysecure.keychain, PID: 10476
E/AndroidRuntime(10476): java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=0, result=-1, data=Intent { (has extras) }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.KeyListActivity}: java.lang.IllegalArgumentException: SuperCardToast - You must have a LinearLayout with the id of card_container in your layout!
E/AndroidRuntime(10476):        at android.app.ActivityThread.deliverResults(ActivityThread.java:3351)
E/AndroidRuntime(10476):        at android.app.ActivityThread.handleSendResult(ActivityThread.java:3394)
E/AndroidRuntime(10476):        at android.app.ActivityThread.access$1300(ActivityThread.java:135)
E/AndroidRuntime(10476):        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1244)
E/AndroidRuntime(10476):        at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime(10476):        at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime(10476):        at android.app.ActivityThread.main(ActivityThread.java:5001)
E/AndroidRuntime(10476):        at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(10476):        at java.lang.reflect.Method.invoke(Method.java:515)
E/AndroidRuntime(10476):        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
E/AndroidRuntime(10476):        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
E/AndroidRuntime(10476):        at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)
E/AndroidRuntime(10476):        at dalvik.system.NativeStart.main(Native Method)
E/AndroidRuntime(10476): Caused by: java.lang.IllegalArgumentException: SuperCardToast - You must have a LinearLayout with the id of card_container in your layout!
E/AndroidRuntime(10476):        at com.github.johnpersano.supertoasts.SuperCardToast.<init>(SuperCardToast.java:284)
E/AndroidRuntime(10476):        at org.sufficientlysecure.keychain.operations.results.ImportKeyResult.createNotify(ImportKeyResult.java:186)
E/AndroidRuntime(10476):        at org.sufficientlysecure.keychain.ui.KeyListActivity.onActivityResult(KeyListActivity.java:231)
E/AndroidRuntime(10476):        at android.app.Activity.dispatchActivityResult(Activity.java:5423)
E/AndroidRuntime(10476):        at android.app.ActivityThread.deliverResults(ActivityThread.java:3347)
E/AndroidRuntime(10476):        ... 12 more
```

**Versions:**
AOSP 4.4.4 on Nexus 5 (hammerhead)
OpenKeychain, commit 6c6201f1292951fdc25b355c1693045d94186ff2
XPrivacy 3.6, not restricting OpenKeychain
"
open-keychain/open-keychain,closed,"Crash when opening ""Search cloud"" activity",[],"As soon as I open the ""Search cloud"" activity using the button in the action bar, OpenKeychain crashes. The logcat indicates a `NullPointerException`.

**Logcat:**

```
I/ActivityManager( 1816): START u0 {cmp=org.sufficientlysecure.keychain/.ui.ImportKeysActivity (has extras)} from pid 1485                                                                                                                                                                                                                                                                                                                                                                           
W/dalvikvm( 1485): threadid=1: thread exiting with uncaught exception (group=0x41606ba8)                                                                                                                                                                                       
E/AndroidRuntime( 1485): FATAL EXCEPTION: main                                                                                                                                                                                                                                 
E/AndroidRuntime( 1485): Process: org.sufficientlysecure.keychain, PID: 1485                                                                                                                                                                                                   
E/AndroidRuntime( 1485): java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException                                                             
E/AndroidRuntime( 1485):        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2184)                                                                                                                                                                  
E/AndroidRuntime( 1485):        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2233)                                                                                                                                                                   
E/AndroidRuntime( 1485):        at android.app.ActivityThread.access$800(ActivityThread.java:135)                                                                                                                                                                              
E/AndroidRuntime( 1485):        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)                                                                                                                                                                        
E/AndroidRuntime( 1485):        at android.os.Handler.dispatchMessage(Handler.java:102)                                                                                                                                                                                        
E/AndroidRuntime( 1485):        at android.os.Looper.loop(Looper.java:136)                                                                                                                                                                                                     
E/AndroidRuntime( 1485):        at android.app.ActivityThread.main(ActivityThread.java:5001)                                                                                                                                                                                   
E/AndroidRuntime( 1485):        at java.lang.reflect.Method.invokeNative(Native Method)                                                                                                                                                                                        
E/AndroidRuntime( 1485):        at java.lang.reflect.Method.invoke(Method.java:515)                                                                                                                                                                                            
E/AndroidRuntime( 1485):        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)                                                                                                                                                             
E/AndroidRuntime( 1485):        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)                                                                                                                                                                                
E/AndroidRuntime( 1485):        at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)                                                                                                                                                                             
E/AndroidRuntime( 1485):        at dalvik.system.NativeStart.main(Native Method)                                                                                                                                                                                               
E/AndroidRuntime( 1485): Caused by: java.lang.NullPointerException                                                                                                                                                                                                             
E/AndroidRuntime( 1485):        at org.sufficientlysecure.keychain.ui.ImportKeysActivity.handleActions(ImportKeysActivity.java:124)                                                                                                                                            
E/AndroidRuntime( 1485):        at org.sufficientlysecure.keychain.ui.ImportKeysActivity.onCreate(ImportKeysActivity.java:100)                                                                                                                                                 
E/AndroidRuntime( 1485):        at android.app.Activity.performCreate(Activity.java:5231)                                                                                                                                                                                      
E/AndroidRuntime( 1485):        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)                                                                                                                                                                 
E/AndroidRuntime( 1485):        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2148)
E/AndroidRuntime( 1485):        ... 12 more
W/ActivityManager( 1816):   Force finishing activity org.sufficientlysecure.keychain/.ui.ImportKeysActivity
W/ActivityManager( 1816):   Force finishing activity org.sufficientlysecure.keychain/.ui.KeyListActivity
```

**Versions:**
- AOSP 4.4.4 on Nexus 5 (hammerhead)
- OpenKeychain, commit `d11d3933bc2ee88169f33a5c5592eeacbb4ed9a0`
- XPrivacy 3.6, not restricting OpenKeychain
"
open-keychain/open-keychain,closed,Misleading warning on import,[],"When someone’s got a key at keybase.io but not on the hkpk servers, you get a warning with a misleading text “could not import key from keybase!” even though the import works fine.
"
open-keychain/open-keychain,closed,Rewrite input for PgpSignEncrypt,[],"I just looked over KeychainIntentService and how the sign encrypt action is handled, and I really don't like it. Getting rid of all program logic from KeychainIntentService has been a long-term goal, and this is the last part that remains, but it's a big one.

Right now, the frontends using PgpSignEncrypt keep state around in a ton of member variables, which are usually put into a bundle of 8 extras in a specific createEncryptBundle function for the service call. Inside the service, those extras are read and fed into a builder. If there are multiple URIs, this happens multiple times, with no properly defined result. Inside PgpSignEncrypt, the builder implicitly assigns a ton of member variables again.

What I would like to do is get rid of the variables->bundle->builder->variables part, but have a SignEncryptParcel which contains all this state, similarly to the EditKeyOperation with its SaveKeyringParcel. This can be used in frontend code, passed to the service, which passes it to the operation untouched, which takes care of the rest.

Just leaving this here for discussion and as a todo for myself
"
open-keychain/open-keychain,closed,decode clip board with text in iso-2022-JP ,"[Label(name=""api todo""), Label(name=""enhancement"")]","I received encrypted text in Japanese. Copy-Paste via clip board and decode results in wrong charset display, ASCII?

I am using v2.7 at a SGS2+ with Android 4.2.2

This is the begin of the message:

-----BEGIN PGP MESSAGE-----
Charset: iso-2022-jp
...
-----END PGP MESSAGE-----
"
open-keychain/open-keychain,closed,Intent blacklisting not good on Lollipop,[],"Rework code that excludes the encrypt Intent when sharing encrypted text/files. The new lollipop sorting by usage does not work when the extra is passed.
"
open-keychain/open-keychain,closed,Show import result from first time wizard,[],"Follow-up from #1026, the result from an import seems to get lost along the way during first time import
"
open-keychain/open-keychain,closed,Feature request: Discover OpenPGP key from YubiKey NEO and download from keyservers,"[Label(name=""enhancement"")]","For people using a NEO, the step to import a file with your OpenPGP stub shouldn't be strictly necessary.  If you have your OpenPGP key on a keyserver, holding your NEO in front of the app should be sufficient for it to discover what private keys are on it, and download the public key from the keyservers, and you are ready.

Compare with a fresh GnuPG installation: if you do 'gpg --recv-keys 54265e8c' followed by 'gpg --card-status' you end up with a working GnuPG configuration for that NEO.  No need to transfer any secret stubs from an earlier machine.
"
open-keychain/open-keychain,closed,poor error message on online key lookup fail,[],"App version: 3.1.2 (31200)

After making several searches on online keyservers I received a red band error message at the top of my screen. (Repeated for several searches) 
I tapped on it & the unhelpful message was ""an error occurred"". 
No references, no suggestion where the error was in the app or infrastructure, nothing. 

I then 'rotated keyservers' twice & the message didn't come back.
"
open-keychain/open-keychain,closed,"YubiKey NEO: ""NFC Tag has wrong signing id""",[],"I get this error whenever I try to use my YubiKey NEO to sign/decrypt anything.  I imported my private key using ""gpg -a --output gpg-secret-key.asc --export-secret-keys"", and had to update it from a keyserver because it had expired (not sure why this happend, probably unrelated).  I suspect the reason is that I have an offline master key, so my YubiKey NEO only has subkeys on it.  OpenPGP keychain won't find 54265e8c on my YubiKey NEO, only the three subkeys.

Here is some GnuPG output that may shred some light on the issue.  Notice how my NEO only has the three subkeys on it.  Does OpenPGP keychain support selecting the proper subkey to use?

Thanks,
/Simon

```
jas@latte:~$ gpg --list-secret-keys
/home/jas/.gnupg/secring.gpg
----------------------------
sec#  3744R/54265E8C 2014-06-22 [expires: 2014-09-30]
uid                  Simon Josefsson <simon@josefsson.org>
uid                  Simon Josefsson <simon@yubico.com>
ssb>  2048R/32F8119D 2014-06-22
ssb>  2048R/78ECD86B 2014-06-22
ssb>  2048R/36BA8F9B 2014-06-22

jas@latte:~$ gpg --card-status
Application ID ...: D2760001240102000060000000420000
Version ..........: 2.0
Manufacturer .....: unknown
Serial number ....: 00000042
Name of cardholder: Simon Josefsson
Language prefs ...: sv
Sex ..............: male
URL of public key : https://josefsson.org/54265e8c.txt
Login data .......: jas
Signature PIN ....: not forced
Key attributes ...: 2048R 2048R 2048R
Max. PIN lengths .: 127 127 127
PIN retry counter : 3 3 3
Signature counter : 2283
Signature key ....: 9941 5CE1 905D 0E55 A9F8  8026 860B 7FBB 32F8 119D
      created ....: 2014-06-22 19:19:04
Encryption key....: DC9F 9B7D 8831 692A A852  D95B 9535 162A 78EC D86B
      created ....: 2014-06-22 19:19:20
Authentication key: 2E08 856F 4B22 2148 A40A  3E45 AF66 08D7 36BA 8F9B
      created ....: 2014-06-22 19:19:41
General key info..: pub  2048R/32F8119D 2014-06-22 Simon Josefsson <simon@josefsson.org>
sec#  3744R/54265E8C  created: 2014-06-22  expires: 2015-01-23
ssb>  2048R/32F8119D  created: 2014-06-22  expires: 2015-01-23
                      card-no: 0060 00000042
ssb>  2048R/78ECD86B  created: 2014-06-22  expires: 2015-01-23
                      card-no: 0060 00000042
ssb>  2048R/36BA8F9B  created: 2014-06-22  expires: 2015-01-23
                      card-no: 0060 00000042
jas@latte:~$ 
```
"
open-keychain/open-keychain,closed,Use NetCipher for proxy and Tor support,[],"We could use NetCipher library for proxy support and Tor support (for shadowing the keyserver requests?):
https://github.com/guardianproject/NetCipher/

Could also be something for GSoC 2015, https://github.com/open-keychain/open-keychain/wiki/Google-Summer-of-Code-2015
"
open-keychain/open-keychain,closed,Signature check not OK is a warning?,[],"This seems wrong, but not sure if this is expected behavior in some places? DecryptVerifyResult.success() returns true even if signature verification failed
"
open-keychain/open-keychain,closed,"Issue #954 - fixed crash when file scheme is passed, broadened deletion scope",[],"Refers to https://github.com/open-keychain/open-keychain/issues/954

Fixed crash due to ""file"" scheme in Uri instead of expected ""content"" scheme by adding a java.io.File delete method using the path of the Uri, inside the ""file"" part of the deletion.

Broadened the scope of files we can delete by adding the aforementioned java.io.File delete method to the ""content"" part of the deletion also, which is called in case the ContentResolver fails. This was found to be necessary to delete the file while testing with ES File Explorer. Probably because the ContentProvider on the application we obtain the Uri from did not/refused to handle the delete operation?
"
open-keychain/open-keychain,closed,Material Design,[],"Just started collecting some useful libraries here:
https://github.com/klinker41/android-chips
https://github.com/baoyongzhang/android-PullRefreshLayout
https://github.com/mikepenz/LollipopShowcase
https://github.com/wasabeef/awesome-android-ui
"
open-keychain/open-keychain,open,Functionality to export a revocation certificate,"[Label(name=""discussion""), Label(name=""enhancement"")]","This should be easy enough to implement, and it's really useful if I don't want to save the private key on other devices, but the ability to revoke the key if I lose the phone.

(Also, how can I export a private key?)
"
open-keychain/open-keychain,closed,Polish keybase proof UI,"[Label(name=""discussion"")]","(been procrastinating this for a while, sorry)

I looked at the keybase proofs, and they are fine technically for the most part. I'm not sure if the perks of having them in a library are worth the slightly less great integration (especially in regards to logging), but that's fine. my main point of concern however is the lack of polish in the ui. missing stuff, in descending order of importance:
- better feedback while a proof is being fetched, like an indeterminate progress bar. right now the ui just freezes completely if connectivity is bad
- change [verify] buttons to right-aligned ones as we have everywhere else
- errors (""proof could not be fetched"" and the like) should be reported with a supertoast
- checking of the proof should be a cancelable operation (minor)

I also don't like that evaluation of proofs doesn't really _go_ anywhere. The user is shown ""ok I verified this"" but what does that mean for the key? should the user know himself? in the case where they are able conclude they have some trust for the key, are they supposed to remember this themselves? the mechanism is completely orthogonal to the regular ""certify -> green icon"" we have everywhere else.

As it is now, I don't think I would include the branch in a release currently (if we even do one)
"
open-keychain/open-keychain,closed,OpenKeychain should be usable without private keys.,[],"I just installed OpenKeychain on my phone which runs Cyanogenmod and has a Qualcomm SoC.
Obviously, such a system can't be trusted in multiple ways, so I don't want my private keys on it.

That means I can't send signed mails, and can't decrypt mails, but I still should be able to send encrypted mail and check signatures on mail I receive.

So, I imported my public keys. Now I'd like to set their trust level to ""Ultimate"", so OpenKeychain trusts any key signed by them. But it seems this is not possible in the current version (the one I got from f-droid). Please make it possible to use OpenKeychain without a private key.

Philipp
"
open-keychain/open-keychain,closed,NullPointerException in ImportKeysActivity,"[Label(name=""bug"")]","""while importing key from file""

```
java.lang.RuntimeException: Unable to resume activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=159747, result=-1, data=Intent { dat=file:///storage/emulated/0/airdroid/upload/secret.key }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2812)
at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:2841)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2276)
at android.app.ActivityThread.access$800(ActivityThread.java:144)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1205)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5146)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=159747, result=-1, data=Intent { dat=file:///storage/emulated/0/airdroid/upload/secret.key }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.deliverResults(ActivityThread.java:3389)
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2799)
... 12 more
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadCallback(ImportKeysActivity.java:438)
at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment.onActivityResult(ImportKeysFileFragment.java:110)
at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:166)
at android.app.Activity.dispatchActivityResult(Activity.java:5423)
at android.app.ActivityThread.deliverResults(ActivityThread.java:3385)
... 13 more
```
"
open-keychain/open-keychain,closed,Add export keys functionality to Remote OpenPGP API,"[Label(name=""api todo"")]","It would be awesome if it might be possible to export the keys (public keys) and probably with special permissions also the private keys via the Remote API. 

(I want to build a sync client to sync the public keys between multiple devices. For initial sync the private keys should be synced as well. (Sure, it has to be secure)).
"
open-keychain/open-keychain,closed,manual self-certification overwrites preferences in certificates,[],"Using Gpg4Win 2.2.3 (based on GnuPG 2.0.26) and OpenKeyChain 3.1.2.

Enrcypt an ASCII armored text with Gpg4Win and enter more than one recipient. OpenKeyChain will fail to decrypt this with an integrity check error. Using only one recipient will work without errors.
"
open-keychain/open-keychain,closed,Inconvenient future timestamp detection,[],"org.sufficientlysecure.keychain.pgp.UncachedKeyRing.java:279 uses default Date() constructor resulting in UTC+0 timestamp and ignoring local time. This prohibits using external keys that are freshly generated on PC using local time in UTC+n until time passes.
"
open-keychain/open-keychain,closed,"Allow Decrypting to Temporary ""Buffer""",[],"Currently when decrypting files the only output option is to another file.  It would be nice if the result of the decryption could be displayed in a text area inside the app so that it is less likely to hit the disk.  This is also a lot easier to use if I just want to copy a piece of the text.  Similarly having an option to put the result in the clipboard would also be nice.
"
open-keychain/open-keychain,closed,Password Required to access app? ,[],"Love the app! It's better than GnuPG own app. 
The only thing missing is requiring a pass code to open the app. Is there a way to implement this? 

Thanks. 
"
open-keychain/open-keychain,open,SignaturePacket: unsupported version: 192,"[Label(name=""bug"")]","from G Play

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
at java.util.concurrent.FutureTask.run(FutureTask.java:242)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
at java.lang.Thread.run(Thread.java:841)
Caused by: java.lang.RuntimeException: unsupported version: 192
at org.spongycastle.bcpg.SignaturePacket.<init>(SignaturePacket.java:123)
at org.spongycastle.bcpg.BCPGInputStream.readPacket(BCPGInputStream.java:232)
at org.spongycastle.openpgp.PGPSignature.<init>(PGPSignature.java:57)
at org.spongycastle.openpgp.PGPObjectFactory.nextObject(PGPObjectFactory.java:112)
at org.sufficientlysecure.keychain.pgp.UncachedKeyRing$2.cacheNext(UncachedKeyRing.java:177)
at org.sufficientlysecure.keychain.pgp.UncachedKeyRing$2.hasNext(UncachedKeyRing.java:200)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.generateListOfKeyrings(ImportKeysListLoader.java:131)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:82)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:39)
at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
... 3 more
```
"
open-keychain/open-keychain,closed,Fix spelling of 'K-9 Mail' in FAQ,[],"Replace occurrences of ""K9-Mail"" with the correct spelling ""K-9 Mail"".
"
open-keychain/open-keychain,closed,keybase.io validation problem,[],"OpenKeychain can't validate keybase proofs when proofs are not signed by 'master key' (SC) but by one of subkeys (S). Examples: keys 0x49766002 and 0x54265E8C.
"
open-keychain/open-keychain,closed,Key usage flags confusion,[],"No time currently to investigate, but I saw something suspicious for key EBC4 A367 32D6 CB2C DF92 F38E C4CB FEE8 9B6D 8A3A

Enigmail displays the master key with all key flags, but it has been generated with OpenKeychain and indeed we show only ""certify"" for the master key
"
open-keychain/open-keychain,closed,Double results from keybase,"[Label(name=""bug"")]","1. click two times on ""start search"", fast in a row
2. results are doubled
"
open-keychain/open-keychain,closed,null on fetching keybase proof,"[Label(name=""bug"")]","Could be due to slow internet connection

```
Keychain  D  KeychainIntentService Exception:
  4992               Keychain  D  java.lang.NullPointerException
  4992               Keychain  D  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:333)
  4992               Keychain  D  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
  4992               Keychain  D  at android.os.Handler.dispatchMessage(Handler.java:102)
  4992               Keychain  D  at android.os.Looper.loop(Looper.java:212)
  4992               Keychain  D  at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,Google's End-to-End not importing our ECDSA keys,[],"Just found this: https://code.google.com/p/end-to-end/issues/detail?id=156

Could also be on our side...
"
open-keychain/open-keychain,closed,ClassCastException in CreateKeyFinalFragment.java:190,"[Label(name=""bug"")]","from G Play

```
java.lang.ClassCastException: org.sufficientlysecure.keychain.operations.results.EditKeyResult cannot be cast to org.sufficientlysecure.keychain.operations.results.SaveKeyringResult
at org.sufficientlysecure.keychain.ui.CreateKeyFinalFragment$4.handleMessage(CreateKeyFinalFragment.java:190)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5105)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:792)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:608)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,"Add ""export"" feature to Log activity","[Label(name=""enhancement""), Label(name=""help wanted""), Label(name=""user interface"")]","Sort of an obvious feature, not sure why we didn't think of it before. Should be easy to do
"
open-keychain/open-keychain,closed,"Importing private key fails after all ""bad self certificates"" removed",[],"Hi there,

I recently tried to import my desktop gpg keys into openkeychain.  The error log is quite useful, but unfortunately does not give me much to go on (and nor does the source code).  I exported my key from gpg2 using 'gpg2 --export-secret-key -a ""name"" > file.asc'.  After transfering the asc file over, I attempted to import it.  The failure message gave me the following:

[Purple] Importing secret key 0xfffffffffffff
[Purple] Canonicalizing secret key 0xffffffffffffff
Processing master key
[Yellow] Removing bad self certificate for user ID 'First user'
Removing invalid user ID 'First user'
[Yellow] Removing bad self certificate for user ID 'Second user'
Removing invalid user ID 'Second user'
[Red] Keyring has no valid user IDs!
Merging in self-certificates data from public keyring
[Green] Nothing to merge
[Purple] Canonicalizing secret key 0xfffffffffffff
A which point it repeats down to the red again...

I've tried it without the public keys installed before hand, with the public keys installed, with the public keys installed and certified by another cert on the phone, with the public keys imported at the same time, all of which gave me the same pattern of the user IDs being removed and then none being left.  The key works fine in GPG/seahorse, so I'm really not sure how best to diagnose this.  Any help would be much appreciated!!!

[Public key is available on most PGP servers, 0xbbbad6a26c20157a]
"
open-keychain/open-keychain,closed,Subkeys import issue?,[],"I just tried openkeychain and I think I found an issue, or maybe I'm doing something wrong :
1. I imported my private subkeys in OpenKeychain (my master key is somewhere offline)
2. I Encrypted a file on my computer and sent it to my Android device.
3. I used the OpenKeychain's decrypt feature, entered the passphrase
4. Error message: ""No ecrypted data with a known secret key has been found in the stream"" (translated)
5. When I check the logs I see a message like ""an encrypted data block has been found for the key <my subkey id>"" -- ""No ecrypted data with a known secret key has been found in the stream""
6. When I look at my keys (advanced tab), I can't find my encryption subkey
7. I deleted my key and tried to import it again, and I looked a the logs, I found messages like that (translated) :
- Processing subkey <my encryption subkey id>
  -- Deleting the subkey invalid linking certificate
  --- No valid certificate for <subkey id> that has been now removed from the keyring
  [...]

1 -> 2 -> 3 works with APG

EDIT: I'm using OpenKeychain 3.1.2 (F-droid)
"
open-keychain/open-keychain,closed,"Hash functions selected in ""settings"" isn't used by k-9",[],"I selected SHA512 as a hash function in ""settings"" dialogue. But k-9 is still using SHA256 for signing messages. 
Is this intentional or hard-coded?

(Crypto provider is Openkeychain.)
"
open-keychain/open-keychain,closed,"“Trust key?” tab, prover framework, no WebView, many proofs filled in",[],
open-keychain/open-keychain,closed,Issues from transifex,"[Label(name=""bug"")]","Should end with ! for consistency
String: msg_import_fetch_keyserver_ok

Should read &quot;... names and email addresses...&quot;
String: certify_text

Resource: help_changelog.html

Maybe &quot;New certification screen&quot;

String: New certify screen

&quot;Exchange&quot; doesn&#39;t need to be capitalized

String: Secure Exchange directly from key list (SafeSlinger library)
"
open-keychain/open-keychain,closed,ArrayIndexOutOfBoundsException in PreferencesKeyServerActivity,"[Label(name=""bug"")]","From G Play.
3.1.1
Optimus L5 (m4)
""hacker om mijn heen""

```
java.lang.ArrayIndexOutOfBoundsException: length=0; index=0
at java.util.Vector.arrayIndexOutOfBoundsException(Vector.java:907)
at java.util.Vector.elementAt(Vector.java:328)
at java.util.Vector.get(Vector.java:442)
at org.sufficientlysecure.keychain.ui.PreferencesKeyServerActivity$3.onClick(PreferencesKeyServerActivity.java:90)
at android.view.View.performClick(View.java:3524)
at android.view.View$PerformClick.run(View.java:14194)
at android.os.Handler.handleCallback(Handler.java:605)
at android.os.Handler.dispatchMessage(Handler.java:92)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:4476)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:816)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:583)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Crash when clicking NFC button,"[Label(name=""bug"")]","Reported by mail:
SGS2 crashes when clicking on NFC button (SGS2 does not have NFC)
"
open-keychain/open-keychain,closed,Extended private subkey cannot be exported (or imported),[],"It seems that private subkeys are not imported or exported, when their expire date was extended.

I had some trouble understanding what was going on, but now I can reproduce parts of it:
I created a new key using gpg (3 keypairs (SC,S,E), 4096bit RSA each).
When I import this key into OK and export it again, it works just fine. But when I change the expire date on one of the subkeys and do the same thing, the private part of the subkey is missing.
Here is what I did: https://gist.github.com/eBrute/b814b8a19d88ead010d4

There is no error message thrown by OK at any point.

It seems that always only one subkey is affected.

Note that I either the import or the export could cause the problem. This is where the confusion starts. My real key is not recognized by K9 mail, which would hint towards the import, but then the test key is and can sign and encrypt, which would mean the export ist broken.
"
open-keychain/open-keychain,closed,RuntimeException in EditSubkeyExpiryDialogFragment,"[Label(name=""bug"")]","Android 4.4
OK v3.0.1

```
java.lang.RuntimeException
at org.sufficientlysecure.keychain.ui.dialog.EditSubkeyExpiryDialogFragment$2.onClick(EditSubkeyExpiryDialogFragment.java:177)
at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:174)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:157)
at android.app.ActivityThread.main(ActivityThread.java:5872)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:858)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:674)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,NoSuchElementException in UncachedPublicKey.getPrimaryUserIdWithFallback,"[Label(name=""bug"")]","Android 4.4
OK v3.1.1

""tried to import from a USB drive.""

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
at java.util.concurrent.FutureTask.run(FutureTask.java:242)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
at java.lang.Thread.run(Thread.java:841)
Caused by: java.util.NoSuchElementException
at java.util.ArrayList$ArrayListIterator.next(ArrayList.java:576)
at org.sufficientlysecure.keychain.pgp.UncachedPublicKey.getPrimaryUserIdWithFallback(UncachedPublicKey.java:194)
at org.sufficientlysecure.keychain.keyimport.ImportKeysListEntry.<init>(ImportKeysListEntry.java:284)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.generateListOfKeyrings(ImportKeysListLoader.java:133)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:82)
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysListLoader.loadInBackground(ImportKeysListLoader.java:39)
at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
... 3 more
```
"
open-keychain/open-keychain,closed,Support proxy for keyserver requests,"[Label(name=""enhancement"")]","from Google Play:
""No proxy support Good app, but it does not support a proxy if one is configured in your WLAN settings. (You won't be able to look up unknown keys.)""
"
open-keychain/open-keychain,closed,Exported secret key is not valid,[],"I export both public&private keys and the private key can not be imported by gpg2...
It reports:
$ gpg2 --allow-secret-key-import --import export.asc
gpg: [don't know]: invalid packet (ctb=43)
gpg: read_block: read error: Invalid packet
gpg: no valid OpenPGP data found.
gpg: import from `export.asc' failed: Invalid keyring
gpg: Total number processed: 0
"
open-keychain/open-keychain,closed,Add Trust-this-key tab and keybase report,[],"There are no proof verifications working here (so they’re not offered) just the “Trust this key?” tab, checks on revoked/expired, and the report of keybase claims with links.  The verifications is going to be quite a bit of code so I’m posting this now in hopes someone looks at it and heads me off if I’m going in a not-useful direction.
"
open-keychain/open-keychain,closed,"HTC One with YubiKey NEO: Freezes or ""Connection error: transceive failed""","[Label(name=""upstream bug"")]","Hi there,

I'm running OpenKeychain on a HTC One M7 (bought in July of 2013) on Android 4.4.2, and attempting to use it with a Yubikey NEO.  TagInfo shows the NEO as supporting OpenPGP, but when I try and decrypt data, OpenKeychain shows that error message.  I'm not super-experienced with Android development or NFC tags, so let me know if there's any other information I can provide that would help.
"
open-keychain/open-keychain,closed,Installing open-keychain wiped all phone contacts!,[],"Hello,
Today, I installed version 3.1 from F-Droid.
I imported my PGP identity, as well as a friend's one.
The whole operation wiped all my contacts, and replaced them with the two PGP contacts of openkeychain.
The software looks really cool, but this is _really_ bad.

OS: Cyanogenmod 11 snapshot M11 (android 4.4.4)
phone: jfltexx (Samsung Galaxy S4)

PS: I had a rather fresh backup, so i'm fine.
"
open-keychain/open-keychain,closed,"Creating a new key shouldn't have ""never"" as expiry",[],"When creating a new key, it's maybe more sensible to have the default expiry date 4 years in the future, or at least give the user the option to set it.
"
open-keychain/open-keychain,closed,K-9 Mail: Saving drafts,[],"Saving drafts should be possible
"
open-keychain/open-keychain,closed,private key cannot be exported to file,[],"Export to file with the checkbox for exporting the private part checked, does not export the private key.
Instead, there are two possible outcomes:

a) only the public key is exported
b) the public key + part of the private key is exported, but the ""---END PGP PRIVATE KEY BLOCK---"" line is missing (and I suspect parts of the private key too) 

I have a hard time seeing the pattern that determines if a) or b) will occur.

| keylength | # of keypairs | result | output filesize |
| --- | --- | --- | --- |
| 2048 | 2 (SC,E) | a | 1676 |
| 2048 | 3 (S,C,E) | a | 2826 |
| 4096 | 2 (SC,E) | a | 3061 |
| 4096 | 3 (S,C,E) | b | 13443 |
| 8192 | 2 (SC,E) | b | 14024 |
| 8192 | 3 (S,C,E) | b | 26486 |

Results do not differ when exporting from key details page or from key overview page, as long as only one key is selected. Export of multiple keys gives different results (i.e. exporting the first two keys from the table gives b for the first and a for the second).
All keypairs tested were created using OpenKeychain 3.1 (31000) using RSA without expiration date. In particular the 4096bit key with 3 keypairs was created by using the default settings and another time by manually setting the key configuration, both with the same result. Keys generated elsewhere with gpg and imported to OK seem to show the same behaviour.
I did not test for mixed keylengths, custom keylengths, expiration dates, no passwords, authentication keys, non-RSA keys.

I hope someone can reproduce that. If not I will give some more details on the steps involved.
"
open-keychain/open-keychain,closed,NullPointerException in PassphraseCacheService,"[Label(name=""bug"")]","From G Play
Android 4.3
Xperia T (LT30p)

```
java.lang.RuntimeException: Unable to start service org.sufficientlysecure.keychain.service.PassphraseCacheService@4209e988 with Intent { act=org.sufficientlysecure.keychain.action.PASSPHRASE_CACHE_GET cmp=org.sufficientlysecure.keychain/.service.PassphraseCacheService (has extras) }: java.lang.NullPointerException
at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2785)
at android.app.ActivityThread.access$1900(ActivityThread.java:150)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1395)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:213)
at android.app.ActivityThread.main(ActivityThread.java:5225)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:525)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:741)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:557)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.provider.CachedPublicKeyRing.getSecretKeyType(CachedPublicKeyRing.java:203)
at org.sufficientlysecure.keychain.service.PassphraseCacheService.getCachedPassphraseImpl(PassphraseCacheService.java:230)
at org.sufficientlysecure.keychain.service.PassphraseCacheService.onStartCommand(PassphraseCacheService.java:377)
at android.app.ActivityThread.handleServiceArgs(ActivityThread.java:2768)
... 10 more
```
"
open-keychain/open-keychain,closed,crash after exchange before certification screen,"[Label(name=""bug"")]","Android 2.3, just filed 2 gplay reports with @mwfarb in the comments.
"
open-keychain/open-keychain,closed,Cancelling of consolidate not working,[],"Don't show cancel button
"
open-keychain/open-keychain,closed,notify missing after certify,[],"where is the notify inside the key list
"
open-keychain/open-keychain,closed,Certify screen: Preselect key if only one certify key is present,[],
open-keychain/open-keychain,open,Cloud search: show warning on too much entries / pagination?,[],"1. Search for ""dominik""
2. Shows all keybase entries, but no warning that traditional keyservers havent returned.
"
open-keychain/open-keychain,closed,NFC exchange: Import and show certify screen,[],"do it like qr codes
"
open-keychain/open-keychain,closed,crash on certify with yubikey key,[],
open-keychain/open-keychain,closed,implement upload key in new certify activity,[],
open-keychain/open-keychain,open,"Implement ""never"" TTL for passphrases",[],"This needs changes for passing passphrases on operations without using the passphrase cache service.

Changes needed in:
- CertifyOperation
- …
"
open-keychain/open-keychain,closed,Best Practices for Importing Private Keys from Desktop GPG clients.,"[Label(name=""discussion"")]","I've run into a challenge of what to recommend to new users as methodology of importing an existing private key from desktops to their mobile for use on OpenKeychain. 

We can all agree that sending a private key over a cloud service is a poor operational practice.

My current practice is to use a subkey on my mobile device and my intention to rotate those subkeys once per year. I transferred that subkey over ssh to my mobile device. My eventual goal is to move to a Yubikey type device to managing my mobile subkey.

Proposed recommendation to new users:
- Export your private key to a fille.
  Mailvelope: Export all keys -> keys.asc 
  gpg: gpg --export-secret-key ####### --armor > keys.asc
- Connect your android device via USB
  Transfers keys.asc to Android device
- Install a file navigator. 
  Perhaps using https://play.google.com/store/apps/details?id=org.openintents.filemanager&hl=en
- Import key into OpenKeychain
"
open-keychain/open-keychain,closed,Invalid user id on import from Symantec PGP Desktop,[],"Reported by Jabber:
Invalid user id when importing key from Symantec PGP Desktop.

Key to reproduce:
passphrase: ""test""

```
-----BEGIN PGP PRIVATE KEY BLOCK-----
Version: Encryption Desktop 10.3.1 (Build 13100)

lQPGBFRHpJ8BCADIzN2EB8emV3l1wZ+GyKiC3roHEUnWcIj2ZksEJ1ZBfUC/En4/
wjNSAsJCcECRUDRaoMH1NI2w6BOrODt+7EsBqndGtKi0LzcDvHj9WNe9XfwXWRAH
tnaTtzqLyPsqkKWJQzzyqpys8sy58qIb3gqpRSXL8UST3OtIGesYmeFSI8swL/0l
vabQ7JJjImFyuwiel5TE5A5sRr/Tqd26jW1Y1cInqtSQqeSwzUwi0uNMCZrNJNs6
fk902U8xanLk4TkIJT6nPVzoGOcczPES4U8p27m82IuqKeua+Yzwmeitllhm98mw
k9u3jSM36FwHRomdBmWBPn6supMbrPR+wrYXABEBAAH+CQMCgd+uT2AR0iSohaM1
J4VJkc9XImdR0sOx38MaTA/wQYUMEgU4SHlHcRGb7cUluYNysSTTRnYZxE1SU1t7
0wN13ce3DELMEahBnEsRKE9a1COUnpkBsfw/1qWWyeX4iJPKiMBKABiLiZ8PxkI2
Rhi2c0epWb2xsw4KZtB+c4UcCIkvRgrgJrEPIwL0DBCgtBd1jqKHa58pyPo28Y8Q
Wf9hxRGyRz6QErcfZE7JiAsBE9kHZufo/NzrYEps4gtuZkmwYojT0NuzWIS64P1D
AQe/ay3av406xQsoVmamYNklgDUVf+YrTw6Rv/0G2ocaqTbCKqoaDi1bpdYDQpzw
2QdMlzZ9HpBSbY9DQJSmJRTq98jOOo6qNGzv2W34YF5RE1xZL/GsQ9a7fx+SwGCF
hIQRC43q3tKMqfhacUf6UxNB3EaPt5SPo35Khbp/BLNXAMjXyZJuZd50fEA+mivX
f5Q/GdZ8NCcnOtwK/fhepShaNkQYtJIYqr5LqYZqNdyDcV7y/4L0TIxwdVKc5skN
dRtM+Q/6rN/Ewxgxa/WI2fgUG2Hgez/jVWJoCZzatP+zUgtsGS6cr3jmhFHimuJu
RCsoTl5vJciVH8sTb+6/oUvWAbE11Ks8KptZoO8xv+pYvpcCZkfaPVF2E1NVd1kW
cwqijc0bwudKq40A7y82lfcBzKnKR51eOf3xCzfk67pOhaVqkQBMdNJQGztmuYC9
JBfHSZqoTQEfZr1gWl0hhPGC+LldzfwjwBQTLbfUh4V5Zboj1SY9JAu1WxwIieGw
Z/3tq4KAriramkEXiFAdslnqvxu9iXErsxzln2fFjSW+rm3USFaz8ZHQQ1iCz4V0
6uPGG2TWqpsEYluuepVSdnqpBtzE5I2fjmgdcey4MoITGB66qEAp0o7c/yYuCSlz
WZpb0sJuNQAOtBdUZXN0IDx0ZXN0QGJsYWhibGFoLmRlPp0DxgRUR6SfAQgAyOwG
hDRxB93kFGTjjYwUbxR+dQ7lDZA5pmmLQ62wMLsqI5J0SPQ9DEjjRpO0E4s7ASzs
ySjnJQ5yvjQCVAdIER1rTIwPwAz9U7vhdxXUfypirO5OBO0dbAJCnCEGNZ15uaZw
ClKep7G0e/tqh3nMdr0YY0LG1kIKfozUZYPv3QyjcrPHe9kCtYveiuh78hcGixUV
a9LUfQreVbicx+bombY6j5BuPjoYbvStaILpN/EyVtzpsBj8NqXci6llO9RzmctS
gOE3SplTLeJdnsfFR/XWzI55/aZlFczU275odDyhTEXsuH5aVBx8sGqtVScQYEw/
vghIXjkXXni5gqC42QARAQAB/gkDAjh+yK9prL3PqHOsnl83foztKdNlyBq0WF4g
pYN0K4ldqMAdOh0ffs7Syi+48GHx9E+e79QwHfgSvszxIirGVXw8wlju2hCh544U
0qj1CHfeZ02Qww+gViQikn0PAONeqdKBztDKUgys/dyarC4ROhB16qfyYUJgSy5M
lENBSLrKf1AZoWTARw6wl0a20pDI1qk/SAh8Dyi+kNk7yX9wzYnaCKGE6pnydSJF
HvK3tUHbMmYroucbRSWW7AdeoznBt1801kvuPIKEP0CexSZeW72GgpF3ZDSXmyeS
gXpE7rgYD/yttPkzMRM/f2VwHov78jVPDnA1Z5hzi0I2vBbFLpdli1o4Wqazffvm
4dR7Bfd6sfbTNi3hB5rwEcCKvKQZ4HdUe7+8f7VzzqCEuRaVcpsAn5sejn0dcvdg
ON0sWUvGSS/hcl92aKhrYRqSfycZiT5snzYQ79II3Mv9e/juB5LdFOOEK1XMo0+L
WvV5TfgwnLTYNQBUkhRioJl5YM4xFTCgzP2e0kLDMuSfQa8BiRB7ip27YxonTWQW
+nwD+3WmO5DKChAp0reljQSsCfxr7QVmNNf2oCmlO9TQHEDjJx3CkC/lb07igbel
SABIRkfAm8ylMINalatd5TO8Pk1+spCKJav1wbYjyttyy97IFV/DhVUp5lxdUPxS
7QEi8BGPbAPQNrLwckktK4EcCwgjIS4KuFe7awQfM8VUSkpRx7g/6YpC7aN0AkBA
ao9YTXGsf9TOegzXOChwCrcnskWfkydIyYzG4enxeR7c3hiyyh4NiHzZ0hLCr/Pt
wImpcHWRyWoIU7R7oNnOaWfpH5P2mv83ZvffGfVZQdjoj6gUinHqtU+tlEwkhbua
lyhs+g99VJbxJchFM1JADgokcc31enYM41J239Y9ScoPjQh+Kz9UJzQjmg==
=jUby
-----END PGP PRIVATE KEY BLOCK-----
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: Encryption Desktop 10.3.1 (Build 13100)

mQENBFRHpJ8BCADIzN2EB8emV3l1wZ+GyKiC3roHEUnWcIj2ZksEJ1ZBfUC/En4/
wjNSAsJCcECRUDRaoMH1NI2w6BOrODt+7EsBqndGtKi0LzcDvHj9WNe9XfwXWRAH
tnaTtzqLyPsqkKWJQzzyqpys8sy58qIb3gqpRSXL8UST3OtIGesYmeFSI8swL/0l
vabQ7JJjImFyuwiel5TE5A5sRr/Tqd26jW1Y1cInqtSQqeSwzUwi0uNMCZrNJNs6
fk902U8xanLk4TkIJT6nPVzoGOcczPES4U8p27m82IuqKeua+Yzwmeitllhm98mw
k9u3jSM36FwHRomdBmWBPn6supMbrPR+wrYXABEBAAG0F1Rlc3QgPHRlc3RAYmxh
aGJsYWguZGU+iQFyBBABAgBcBQJUR6SfMBSAAAAAACAAB3ByZWZlcnJlZC1lbWFp
bC1lbmNvZGluZ0BwZ3AuY29tcGdwbWltZQgLCQgHAwIBCgIZAQUbAwAAAAUWAAMC
AQUeAQAAAAYVCAkKAwIACgkQuR01xc4cnZxtTwf/QJ0G4ME/XhdPxfHIHzG9H1uo
dtFPjf2Bpt1TKZNrf+Cf+7P+M1HvgRhhR4pp04lFCBYhaworaX0bqyGCqKmON11M
cCAUC63ygrKmuGTmU1vnLcct/j7+k3cpX0Q4JZjQNzQ5ebSQP3PQyTfcd1SuZL8f
XA1xBjPXMNhgqkLC1qzyVaJMmlBouXeW/fICWDz6Cwl2kw/9BgxaWZVAJvIxuspN
1i3mTQvZ5Ztyhc1++GES+BxcxSzjcd43OaPJVWJW68MqcjwQTUBT3s5tz+QqYN3s
zVT9piZ72E9xflkBvQYq/ez9eloXiMiguiix3FvYJWcZivKRph76IWhgPoPW+LkB
DQRUR6SfAQgAyOwGhDRxB93kFGTjjYwUbxR+dQ7lDZA5pmmLQ62wMLsqI5J0SPQ9
DEjjRpO0E4s7ASzsySjnJQ5yvjQCVAdIER1rTIwPwAz9U7vhdxXUfypirO5OBO0d
bAJCnCEGNZ15uaZwClKep7G0e/tqh3nMdr0YY0LG1kIKfozUZYPv3QyjcrPHe9kC
tYveiuh78hcGixUVa9LUfQreVbicx+bombY6j5BuPjoYbvStaILpN/EyVtzpsBj8
NqXci6llO9RzmctSgOE3SplTLeJdnsfFR/XWzI55/aZlFczU275odDyhTEXsuH5a
VBx8sGqtVScQYEw/vghIXjkXXni5gqC42QARAQABiQJBBBgBAgErBQJUR6SgBRsM
AAAAwF0gBBkBCAAGBQJUR6SfAAoJELXmxUk/pkE59bkIAMCAMoNijiQfmOPv1Wya
K5q/whZXzbWkVEuhTLYj2pyOpUeFZgQgnXe4niZG06lTDSbJGwH4LJXKOyssWicZ
XRJwmtwWEnlo5+XBSiW9u8XiQTJExe6Go3zY3OJpAmLj2DMoGYT/Zyccld+C9VN3
qgJ+DSQvv/zV2R5h94cZefaGh5PoXw5usz9hHMz2+VUR7iy1rY53Fv0qwSYib6cQ
SqrhoIoFEYUhFJZ4zc9LQzPVlwND0hpN5e7clr5A3HNbUb1GC1J9X1P+mQaLdysx
Iv2MZnRtcgyn8ci5I9xm2mB09qaMLU05iZK/hkWlAH5LMrn/e4xtcGMsYm26SAK4
g6wACgkQuR01xc4cnZzC2Qf/dtJRT0S1PGIl8uGTF2tBukCZBOXqtCxfWR/EHlK4
AwOpwAJ8dgIV9qDkw36lC6bdxeu/qm4EXcczxxYc2TVGHaj3QH2sjU0MUmsXj2Ri
ybdS62pXl/0cI2dBNGnWmcydm6NHNidymJ9LeL5+NQv5lPh1k12UDpj8PCz7TNqw
0XwWww11fizmW6I5bIkkdaPzXg14jBQkY5YIt63sDyMCFJectYHNyobgWxzEy/Kj
NxkZjNhL2olwk8HctIWzAEFNSOzJZ+Y6hNePN5ARmjaJeve7cNU1cxgeY4SSmZsm
uNTAvlX6Lqi4l3p/Uroz3T4UltFIDUbzhqQbNQ902Hz6ag==
=c8vd
-----END PGP PUBLIC KEY BLOCK-----

```
"
open-keychain/open-keychain,closed,Make the Certify screen a little more self-explanatory,[],"Hm, Studio’s indentation on XML seems to disagree with what’s there in some cases.

See bug https://github.com/open-keychain/open-keychain/issues/971
"
open-keychain/open-keychain,closed,Lock pattern passphrases,"[Label(name=""discussion"")]","Related to #740.

We have been throwing around the idea of lock pattern passphrases for a while now. The major problem we'd be facing is exported keys, lock patterns have low entropy (compared to passphrases) so an attacker who can get a hold of the secret key (#194 related) could easily brute-force the passphrase.

A neat solution to sidestep these problems would be introducing a local custom packet which encrypts the passphrase (or even the private key itself) with the lock pattern. As long as our export logic takes care never to export this packet, that would enable OpenKeychain to access the private key using the lock pattern, but an exported key would still be protected by the regular passphrase just like before.

This is not trivial to implement, but most connecting pieces to the puzzle are already there: Passphrase type flags in the database, passphrase changing happens in a single place, the only part missing would be a definite place of ""prepare key for export"", but even that should be relatively simple since ImportExportOperation is already nicely encapsulated.

This is not an important feature or anything, and it's not even decided if we want it. Leaving this here for discussion.
"
open-keychain/open-keychain,closed,Certify screen: Wording discussion,"[Label(name=""discussion"")]","I’m running a week-or-so old build and the new certify is an improvement, but it still isn’t very civilian-friendly.  I sketched in code (just XML fiddling) to try to make what’s going on a little more useful to non-geeks.  Useful direction?

![screenshot_2014-10-20-11-34-14](https://cloud.githubusercontent.com/assets/17555/4706840/5bfdc664-5888-11e4-8a8d-2d7e4a21ad41.png)
"
open-keychain/open-keychain,closed,Deleting a Key does not prompt to create revocation certificate,"[Label(name=""enhancement"")]","Sooo... I generated keys with openkeychain and it crashed. twice. When I finally managed to make a key, I found the other two keys living there. However, not thinking they were valid or that they had been uploaded to a keyserver, I just deleted them. So now i have in the wild two dead keys that will never be able to get rid of. 
"
open-keychain/open-keychain,closed,Android 5.0 crash when trying to open the app,[],"Attempting to open the app yields an automatic crash with the following logcat output:'

10-18 08:28:45.154: I/ActivityManager(749): Start proc org.sufficientlysecure.keychain for activity org.sufficientlysecure.keychain/.ui.KeyListActivity: pid=23932 uid=10084 gids={50084, 9997, 3003, 1028, 1015} abi=armeabi-v7a
10-18 08:28:45.394: W/ResourceType(23932): No package identifier when getting value for resource number 0x00000000
10-18 08:28:45.394: D/AndroidRuntime(23932): Shutting down VM
10-18 08:28:45.395: E/AndroidRuntime(23932): FATAL EXCEPTION: main
10-18 08:28:45.395: E/AndroidRuntime(23932): Process: org.sufficientlysecure.keychain, PID: 23932
10-18 08:28:45.395: E/AndroidRuntime(23932): java.lang.RuntimeException: Unable to create application org.sufficientlysecure.keychain.KeychainApplication: android.content.res.Resources$NotFoundException: Resource ID #0x0
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4521)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.app.ActivityThread.access$1500(ActivityThread.java:144)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1339)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.os.Handler.dispatchMessage(Handler.java:102)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.os.Looper.loop(Looper.java:135)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.app.ActivityThread.main(ActivityThread.java:5221)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at java.lang.reflect.Method.invoke(Native Method)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at java.lang.reflect.Method.invoke(Method.java:372)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)
10-18 08:28:45.395: E/AndroidRuntime(23932): Caused by: android.content.res.Resources$NotFoundException: Resource ID #0x0
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.content.res.Resources.getValue(Resources.java:1233)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.content.res.Resources.getDrawable(Resources.java:756)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.content.res.Resources.getDrawable(Resources.java:724)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at org.sufficientlysecure.keychain.KeychainApplication.brandGlowEffect(KeychainApplication.java:147)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at org.sufficientlysecure.keychain.KeychainApplication.onCreate(KeychainApplication.java:87)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1011)
10-18 08:28:45.395: E/AndroidRuntime(23932):    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4518)
10-18 08:28:45.395: E/AndroidRuntime(23932):    ... 9 more
10-18 08:28:45.397: W/ActivityManager(749):   Force finishing activity org.sufficientlysecure.keychain/.ui.KeyListActivity

Phone: Nexus 5 (hammerhead)
Android: 5.0 (hammerhead-lpx13d-preview-f7596f51.tgz)
Carrier: T-Mobile (USA)
"
open-keychain/open-keychain,closed,NFC tag has wrong signing key id!,[],"I prepared keys on NEO as described in article [Offline GnuPG Master Key and Subkeys on YubiKey NEO Smartcard](http://blog.josefsson.org/2014/06/23/offline-gnupg-master-key-and-subkeys-on-yubikey-neo-smartcard/). It works fine when I sign/encrypt/decrypt in console on my laptop. When I try to sign message with OpenKeychain then it displays ""NFC tag has wrong signing key id!"".
"
open-keychain/open-keychain,closed,Crash on import non-uploaded key,[],"If I import a key via QR from another device, and that key hasn’t been uploaded to key servers, OK crashes.

Reason is that it reports the error at line 409 in KeychainIntentService but goes on working, starts again with ACTION_IMPORT_KEYRING, import list is empty, eventually something breaks and it sends an empty message over to the KeychainIntentServiceHandler which eventually blows up.  Should DOWNLOAD_IMPORT_KEYS code proceed with ACTION_IMPORT even if there are no keys to import?  Or is that OK and it’s just a matter of making sure the message is never empty?  Or making empty message survivable in the handler?
"
open-keychain/open-keychain,closed,Comments from transifex,[],"Copied from transifex issues and email:

Should read &quot;...you cannot...&quot;

String: decrypt_invalid_text

Should read &quot;...Exporting one key&quot;

String: msg_export

Should end with ! for consistency

String: msg_import_success

&quot;...File...&quot; should not be capitalized

String: msg_export_error_fopen

&quot;...File/Clipboard...&quot; shouldn&#39;t be capitalized

String: msg_download_no_valid_keys

Some more:
- Strings decrypt_result_encrypted &amp; decrypt_result_not_encrypted, what is encrypted/not encrypted (gender agreement)?
- String delete_ok_but_fail_2, I do nt understand the variable key%2$s, even since it&#39;s used differently like for string delete_fail
- String user_id_info_certified_title &amp; user_id_info_uncertified_title, what is Certified? (gender agreement)

Throughout the app, the abbreviation ID is sometimes capitalized, sometimes not.
"
open-keychain/open-keychain,closed,A problem occurred configuring project ':OpenKeychain'.,[],"When I use ""  ./gradlew build"" there is something wrong, says "" Configuration with name 'default' not found.""
I don't know how to fix it ,thanks
"
open-keychain/open-keychain,closed,from transifex suggestions,[],"Instead of ""recovering consolidation"" -> ""resume consolidation process""
"
open-keychain/open-keychain,closed,Added option for num keypad for YubiKey,[],
open-keychain/open-keychain,closed,application/pgp-encrypted?,[],"I notice in AndroidManifest.xml that the decrypt activity doesn’t have an intent filter for application/pgp-encrypted.

Also RFC 3156 defines application/pgp-signature and application/pgp-keys; we have handlers for -keys but not -signature.

Am I missing something obvious?  If this is something that should be there I don’t mind doing it.

Back story: I want to try to convince the Android people I know to recognize OpenPGP messages and not show them literally, but as some sort of encoded-message glyph, and when you click on it, it fires an intent with media-type application/pgp-encrypted.
"
open-keychain/open-keychain,closed,get rid of DELETE_FILE_SECURELY action?,[],"is this still needed? android studio says there aren't any uses...
"
open-keychain/open-keychain,closed,better export icon in multi select,"[Label(name=""user interface"")]",
open-keychain/open-keychain,open,BC: ArrayIndexOutOfBoundsException on ArmoredInputStream (GnuPG key export),"[Label(name=""upstream bug"")]","keys are expoerted from my GnuPG  with : gpg --export --armor --output pubkeys.sec

Attempt to import keys ends with
Error: Attempt to read from field 'org.spongycastle.bcpg.PublickeyPacket org.spongycastle.bcpg.openpgp.PGPPublicKey.publicPK' on a null object reference.
"
open-keychain/open-keychain,closed,"Link all ""my keys"" to the PROFILE contact in Android","[Label(name=""help wanted"")]","Own key isn't linked to ""myself"" in Contact app like is ""myself"" Google+ account on AOSP contact app. 

The ""myself"" contact entry do have the same mail address and name than the Open-keychain key have.
"
open-keychain/open-keychain,closed,Add support for PQC algorithms?,[],"Bouncy/spongycastle already includes the BCPQ provider for post-quantum cryptographic algorithms.  It would be great for open-keychain to allow creating and using such private keys.
"
open-keychain/open-keychain,closed,Still verifying v3 signatures? return different STATE?,[],"I think we are still verifying v3 sigs, maybe we should add a testcase and gracefully inform the user that this is potentially insecure and not trustable.
"
open-keychain/open-keychain,closed,new certify screen: advanced option to select individual UIDs,[],"add advanced option in menu to certify based on individual non-grouped uids.
"
open-keychain/open-keychain,closed,IllegalArgumentException: Unknown URL in DeleteFileDialogFragment,"[Label(name=""bug"")]","3.0.1
Android 4.4 and Android 4.1

```
java.lang.IllegalArgumentException: Unknown URL file:///storage/emulated/0/Download/encrypted.asc
at android.content.ContentResolver.delete(ContentResolver.java:1278)
at org.sufficientlysecure.keychain.ui.dialog.DeleteFileDialogFragment$1.onClick(DeleteFileDialogFragment.java:81)
at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5097)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,SecurityException in DeleteFileDialogFragment,"[Label(name=""bug"")]","Galaxy Note II (t03g)
3.0.1
Android 4.4

```
java.lang.SecurityException: Permission Denial: writing com.google.android.gm.provider.MailProvider uri content://gmail-ls/felipe.lessa@gmail.com/messages/1026/attachments/0.1/BEST/false from pid=14689, uid=10196 requires com.google.android.gm.permission.WRITE_GMAIL, or grantUriPermission()
at android.os.Parcel.readException(Parcel.java:1465)
at android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:185)
at android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:137)
at android.content.ContentProviderProxy.delete(ContentProviderNative.java:536)
at android.content.ContentResolver.delete(ContentResolver.java:1282)
at org.sufficientlysecure.keychain.ui.dialog.DeleteFileDialogFragment$1.onClick(DeleteFileDialogFragment.java:81)
at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5097)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,OutOfMemoryError in QrCodeUtils.getQRCodeBitmap,"[Label(name=""bug"")]","""viewing Jeff Schiller's key""
Droid 4 (cdma_maserati)
3.0.1
Android 4.1

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.os.AsyncTask$3.done(AsyncTask.java:299)
at java.util.concurrent.FutureTask$Sync.innerSetException(FutureTask.java:273)
at java.util.concurrent.FutureTask.setException(FutureTask.java:124)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:307)
at java.util.concurrent.FutureTask.run(FutureTask.java:137)
at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:230)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)
at java.lang.Thread.run(Thread.java:856)
Caused by: java.lang.OutOfMemoryError
at org.sufficientlysecure.keychain.ui.util.QrCodeUtils.getQRCodeBitmap(QrCodeUtils.java:58)
at org.sufficientlysecure.keychain.ui.ViewKeyShareFragment$10.doInBackground(ViewKeyShareFragment.java:407)
at org.sufficientlysecure.keychain.ui.ViewKeyShareFragment$10.doInBackground(ViewKeyShareFragment.java:404)
at android.os.AsyncTask$2.call(AsyncTask.java:287)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)
... 5 more
```
"
open-keychain/open-keychain,closed,Confusing decrypt error,[],"Consider this: 

-----BEGIN PGP MESSAGE-----
Version: GnuPG/MacGPG2 v2.0.22 (Darwin)
Comment: GPGTools - https://gpgtools.org

owF1kn9oVWUYx+8yFw4Ka45EJoxTWeLl+v5+zzvKaC7aFQ0NcXolb++vc3ecu+d6
ztnWZVyjVVAYNNFIGKQS5gjFipFQltBP0MhZokQ/lBsqIiXuj5j5h50zJlnQ+9f7
4/N8n+f7PO/I3bMyTQ1zOtcuf2zrJz82nLisMmudK2bIUYGpOu1Djt7i23Kc7sqy
zzrtTq+tKhnZnB+0lQNjc5ujthkm6wzYMPKDckKBHM9Bp5ZN8TTY88slG1ZCP9Vy
qJZYAGGIItjzlAVASk6sBYIQSgjGhkOljEgke4Io/ldWZ1qz6Js0yy2+k8OOjs6U
759+EAgZ4VHPM4IpTJSAGBMXAwE5diUAKRjZcMZS7PepUFbTcvts2LvFFsMgmPas
k6eEgARCyglDMClIRj1paqiJRyFgLvU4TQ7GUARcSYn0iOZWuBwYpS3WrsLM5RAg
AaUmSFCBrFUUUM2JYkwpwCHUgnBKOaBMKC4IgwBgaTFiSHCPAepiZJBLXRciYL3E
QuIgslvLgdPOAAS0lh7DAV/b20YVD/pxbMP/NRtXK+nNoFXFmeCi2u+XTTKr24cJ
E/S/jXCzjn2+4oe26KcE5cwFyco6ldAOJJqup12NCJFUSdcjSTeodT3GPGGAh5Gw
DFPIAOdIE2K5ZMRqSiBimlhgpfnHHqZJobKUaEZ+qSzj/tA6tdcaWu/MNDRlGmff
kX7XTNOcubf+8Imxu26uLx1qvNnctWn/4Lb6sonvHli/Yvk53XL+vrHRqb3NohA3
vrewsBP8hLpGvhnP18M2bdreffr08fqCet+qgdd/ya/4eu+lcSfz1Oqp4UeP1d/a
kz3z6pfbhy9svPT56pZ1J//Cvxfv2QlWbhgq/JB/+OD9z+gdL+V3XJ2IVOfb865N
Lrox2brnq/xm+evH73/7znXV8en3sy4f6D730dKDQ82jL37wysiu8IntDx596Ozh
G2f+DH5eebrw7Kl7z3bXjjkXP3vkj1ETZN+gC2vjv7XvXgC6Co+3Nh04v+rQFx++
uWtxy/Hgye4rL+d60boXxuYeXdRT3fbc8PzdU6VC/2Rl3qaJ+UuW7Zu95vqRvwE=
=fMF1
-----END PGP MESSAGE-----

(also in https://gist.github.com/timbray/2079256dcdc00b46d1f8)

gpg --decrypt can handle this fine. OKC reports “Encountered IO Exception during operation” - what’s actually happening is that spongycastle PGPObjectFactory.nextObject() is blowing up because it’s seeing a packet tagged 53, which is bogus.

(Yes, this is related to my work on replicating keybase proofs).  Even if this is the kind of thing that OKC isn’t going to do, the error message should be something a little more polite.
"
open-keychain/open-keychain,closed,Implement error screen for DecryptFilesFragment like in DecryptTextFragment,"[Label(name=""enhancement"")]",
open-keychain/open-keychain,closed,Error while signing with subkey,[],"When trying to sign a message, it displays an error message: ![screenshot_2014-10-08-12-24-34](https://cloud.githubusercontent.com/assets/1894746/4558069/0c0ed546-4edb-11e4-90a9-5ee42273c763.png)
My public key is available at http://keyserver.kolosowscy.pl/pks/lookup?search=0x53ED17780BF9312C&op=vindex 
Only subkeys are stored on the YubiKey.
"
open-keychain/open-keychain,closed,Website tutorials,[],"We should add some tutorials to our website for average/advanced and paranoid users how to use OK, this could include using stripped keys/yubikeys etc...
"
open-keychain/open-keychain,closed,K9: verify signature without private key,[],"Hi, I want to use OpenKeychain to verify signatures of emails in k9 mail (and maybe encrypting unsigned mails) without saving my private key on my smartphone, because I don't want to decrypt or sign emails on the phone. Why do I have to select a private key for my k9 mail accounts to use  OpenKeychain? APG supports this but  OpenKeychain doesn't...
"
open-keychain/open-keychain,closed,"""neutral"" and ""secret"" icons","[Label(name=""user interface"")]","Consider a new user, who has one secret keys and four uncertified key. There are no icons next to the keys, so they all look ""regular"" rather than ""not certified""

I was also asked ""wait, why aren't my own keys certified?"" which is a valid question - in ViewKey, the user ids have the green icon. I'm not sure we should give them that same icon, but some kind of indication that they are special might be nice (used to have an edit button there)
"
open-keychain/open-keychain,closed,update safeslinger lib,[],"to get new behaviour of back button
"
open-keychain/open-keychain,closed,OKC for Fire OS?,[],"Looks like K-9 Mail is getting some good use on the Amazon App Store:
http://www.amazon.com/K-9-Dog-Walkers-Mail/dp/B004JK61K0/ref=sr_1_1?s=mobile-apps&ie=UTF8&qid=1412609009&sr=1-1

I think the submission method is pretty easy for apps that don't need any special hooks like push messaging. Unfortunately SafeSlinger Messenger will eventually need some extra code before we can publish there due to this.

Fire Assessment Guide:
https://developer.amazon.com/appsandservices/support/submitting-your-app/tech-docs/03-pre-submission-assessment-guide
"
open-keychain/open-keychain,closed,certify activity: move key spinner,[],"move key spinner down under the actions section
"
open-keychain/open-keychain,closed,decrypt with empty clipboard,[],"-> show error
"
open-keychain/open-keychain,closed,key view refactorings,[],"- safeslinger grey, execute AddKeysActivity directly with key
"
open-keychain/open-keychain,closed,"""Change primary uid to null""",[],"- create new key, see log: ""Change primary uid to null""
- fix null
- uid -> user id
"
open-keychain/open-keychain,closed,certify branch: rework importkeysactivity,[],"- remove viewpager and replace with fragment replacement concept
"
open-keychain/open-keychain,closed,certify branch: finish get result parcels and pass them through,[],
open-keychain/open-keychain,closed,certify branch: qr code crashes if internet is not available,[],
open-keychain/open-keychain,closed,NullPointerException in ImportKeysAdapter,"[Label(name=""bug"")]","Android 4.4
3.0.1

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysAdapter.getSelectedEntries(ImportKeysAdapter.java:94)
at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.getSelectedEntries(ImportKeysListFragment.java:114)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.importKeys(ImportKeysActivity.java:526)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity$1.onClick(ImportKeysActivity.java:122)
at android.view.View.performClick(View.java:4438)
at android.view.View$PerformClick.run(View.java:18422)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5001)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Update all keys,[],"Please add a button to update all keys of a keyring. Enigmail also has that option.
"
open-keychain/open-keychain,closed,NullPointerException  in ImportKeysAdapter,"[Label(name=""bug"")]","```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.adapter.ImportKeysAdapter.getSelectedEntries(ImportKeysAdapter.java:94)
at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.getSelectedEntries(ImportKeysListFragment.java:114)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.importKeys(ImportKeysActivity.java:526)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity$1.onClick(ImportKeysActivity.java:122)
at android.view.View.performClick(View.java:4438)
at android.view.View$PerformClick.run(View.java:18422)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5001)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,OutOfMemoryError in ParcelableKeyRing,"[Label(name=""bug"")]","From Google Play
device: Droid 4 (cdma_maserati)
android 4.1
OK 3.0

```
java.lang.OutOfMemoryError
at android.os.Parcel.nativeCreateByteArray(Native Method)
at android.os.Parcel.createByteArray(Parcel.java:1584)
at org.sufficientlysecure.keychain.keyimport.ParcelableKeyRing$1.createFromParcel(ParcelableKeyRing.java:48)
at org.sufficientlysecure.keychain.keyimport.ParcelableKeyRing$1.createFromParcel(ParcelableKeyRing.java:46)
at android.os.Parcel.readParcelable(Parcel.java:2103)
at org.sufficientlysecure.keychain.util.ParcelableFileCache$1.readNext(ParcelableFileCache.java:138)
at org.sufficientlysecure.keychain.util.ParcelableFileCache$1.hasNext(ParcelableFileCache.java:151)
at org.sufficientlysecure.keychain.util.ParcelableFileCache.readCacheIntoList(ParcelableFileCache.java:89)
at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:522)
at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.os.HandlerThread.run(HandlerThread.java:60)
```
"
open-keychain/open-keychain,closed,Make it possible to localize name,"[Label(name=""enhancement"")]","It would be nice if the app name (string ""app_name"") could be localized, too.
"
open-keychain/open-keychain,closed,NullPointerException in DecryptActivity,"[Label(name=""bug"")]","from Google Play, version 3.0

""Force Close beim tippen auf ""Entschlüsseln""""
""click auf decrypt -> Crash""

```
java.lang.RuntimeException: Unable to resume activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.DecryptActivity}: java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String java.lang.CharSequence.toString()' on a null object reference
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2859)
at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:2889)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2322)
at android.app.ActivityThread.access$800(ActivityThread.java:143)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1258)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:135)
at android.app.ActivityThread.main(ActivityThread.java:5070)
at java.lang.reflect.Method.invoke(Native Method)
at java.lang.reflect.Method.invoke(Method.java:372)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:836)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:631)
Caused by: java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String java.lang.CharSequence.toString()' on a null object reference
at org.sufficientlysecure.keychain.ui.DecryptActivity.onResume(DecryptActivity.java:79)
at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1238)
at android.app.Activity.performResume(Activity.java:5806)
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2848)
... 11 more
```
"
open-keychain/open-keychain,closed,NullPointerException in PassphraseDialogFragment,"[Label(name=""bug"")]","maybe the keyboard hiding bug?

from Google Play (3.0):

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.PassphraseDialogActivity$PassphraseDialogFragment.onDismiss(PassphraseDialogActivity.java:357)
at android.app.Dialog$ListenersHandler.handleMessage(Dialog.java:1238)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5140)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:795)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:611)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,OutOfMemoryError with 525 keys :D,"[Label(name=""bug"")]","from Google Play:
""Beim Importieren von ca. 525 Schlüsseln ist die App bei 75% abgestürzt.""
(respect, I don't have so many keys in my keychain :P )

```
java.lang.OutOfMemoryError
at java.io.ByteArrayOutputStream.expand(ByteArrayOutputStream.java:91)
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:201)
at org.spongycastle.bcpg.BCPGOutputStream.write(BCPGOutputStream.java:304)
at java.io.OutputStream.write(OutputStream.java:82)
at org.spongycastle.bcpg.BCPGOutputStream.writePacket(BCPGOutputStream.java:322)
at org.spongycastle.bcpg.SignaturePacket.encode(SignaturePacket.java:509)
at org.spongycastle.bcpg.BCPGOutputStream.writePacket(BCPGOutputStream.java:312)
at org.spongycastle.openpgp.PGPSignature.encode(PGPSignature.java:535)
at org.spongycastle.openpgp.PGPPublicKey.encode(PGPPublicKey.java:633)
at org.spongycastle.openpgp.PGPPublicKeyRing.encode(PGPPublicKeyRing.java:152)
at org.spongycastle.openpgp.PGPPublicKeyRing.getEncoded(PGPPublicKeyRing.java:139)
at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.getEncoded(UncachedKeyRing.java:120)
at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:753)
at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:164)
at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:121)
at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:528)
at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,Cloud search keys not being merged,[],"When building from master, keybase.io and keyserver keys are not being merged. 

Investigating…  Just checked, and my build from last week is OK.  Haven’t checked 3.0 release :)
"
open-keychain/open-keychain,open,Certify flag must be set for first added subkey during key creation,"[Label(name=""help wanted"")]","See title. Also, deleting the first subkey makes the second key the new master key, not regarding its flags.
"
open-keychain/open-keychain,closed,Add authenticate flag to default key?,"[Label(name=""discussion"")]","Currently we have:
master RSA 4048, certify
subkey RSA 4048, sign
subkey RSA 4048, encrypt storage/communication

What about adding authenticate flag to the sign subkey?
We should do research if it makes sense to combine authenticate with sign...
"
open-keychain/open-keychain,open,"Encrypt UI: Add ""+"" button besides TokenAutoComplete","[Label(name=""enhancement"")]",
open-keychain/open-keychain,closed,NullPointerException in KeychainIntentServiceHandler,"[Label(name=""bug"")]","2.9.2, Android 4.4 

```
java.lang.NullPointerException
at android.support.v4.app.DialogFragment.dismissInternal(DialogFragment.java:184)
at android.support.v4.app.DialogFragment.dismissAllowingStateLoss(DialogFragment.java:165)
at org.sufficientlysecure.keychain.service.KeychainIntentServiceHandler.handleMessage(KeychainIntentServiceHandler.java:93)
at org.sufficientlysecure.keychain.ui.UploadKeyActivity$2.handleMessage(UploadKeyActivity.java:112)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5139)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Allow to set multiple keys by account,[],"Hello!

I love openkeychain integration with k9. Really.
I just stumbled on a bad behavior/limitation though: I have one mail account with a lot of aliases. And about 10 gpg keys (all independent).
When registering k9 to OK, it detects mail account, and propose to selection one key. Meaning future encryptions or decryptions are forced through this unique key…
In my case, this isn't good at all :( .

Would be really great of we could select multiple keys for one account. Or have a way to tell OK ""find if you have a key matching email/id""

Thanks a lot for this nice app - ui is just amazingly smooth and easy.

Cheers,

C.
"
open-keychain/open-keychain,closed,rare safeslinger persistant dialog,[],"This issue, https://github.com/SafeSlingerProject/SafeSlinger-Android/issues/57, effects Android 2.3 devices randomly when the device is NOT the first to accept the matching phrase to finish the protocol. Likely rare, but should have the fix committed after more testing in a few hours.
"
open-keychain/open-keychain,closed,K-9 Mail: Use modern PGP icons,[],"After https://github.com/open-keychain/open-keychain/issues/741
also use the new icons in K-9
"
open-keychain/open-keychain,closed,K-9 Mail: auto-sign/ auto-encrypt,[],"Implement Auto-sign/ auto-encrypt in k9 using the GET_KEY API method
"
open-keychain/open-keychain,closed,K-9 Mail: Propose usage of OpenKeychain with dialog/toast,[],"https://code.google.com/p/k9mail/issues/detail?id=6405
"
open-keychain/open-keychain,closed,NullPointerException in ImportKeysActivity.loadCallback,"[Label(name=""bug"")]","from g play:
""While key import from export filet""
""importing secret key""

looks like this happens when importing secret key from a file.

```
java.lang.RuntimeException: Unable to resume activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=159747, result=-1, data=Intent { dat=file:///storage/emulated/0/airdroid/upload/secret.key }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2812)
at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:2841)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2276)
at android.app.ActivityThread.access$800(ActivityThread.java:144)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1205)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5146)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=159747, result=-1, data=Intent { dat=file:///storage/emulated/0/airdroid/upload/secret.key }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.deliverResults(ActivityThread.java:3389)
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2799)
... 12 more
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadCallback(ImportKeysActivity.java:438)
at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment.onActivityResult(ImportKeysFileFragment.java:110)
at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:166)
at android.app.Activity.dispatchActivityResult(Activity.java:5423)
at android.app.ActivityThread.deliverResults(ActivityThread.java:3385)
... 13 more
```
"
open-keychain/open-keychain,closed,Move advanced key tabs into their own activity,[],"The ""Show advanced info"" menu item is now working like a preference because it is permanent. Thus, we should remove it from the menu and place it in our preference screen.
"
open-keychain/open-keychain,closed,Replace last usages of PassphraseDialog with PassphraseDialogActivity,[],"No code duplication!
I think it is still used for edit key/certify
"
open-keychain/open-keychain,open,Cancelling file encryption/decryption,"[Label(name=""enhancement"")]","from google play comments:

> After decripting a file it should be possible to cancel the decripted file by zeroing it and making it unrecoverable with forensic tools.

He is right we should rework file encryption/decryption canceling.
At least the files should be removed when cancel is pressed. I think this does not work currently.
"
open-keychain/open-keychain,closed,IllegalStateException in ViewKeyShareFragment,"[Label(name=""bug"")]","from g play:

```
java.lang.IllegalStateException: Fragment ViewKeyShareFragment{41c0d100} not attached to Activity
at android.support.v4.app.Fragment.getResources(Fragment.java:601)
at org.sufficientlysecure.keychain.ui.ViewKeyShareFragment$10.onPostExecute(ViewKeyShareFragment.java:415)
at org.sufficientlysecure.keychain.ui.ViewKeyShareFragment$10.onPostExecute(ViewKeyShareFragment.java:405)
at android.os.AsyncTask.finish(AsyncTask.java:631)
at android.os.AsyncTask.access$600(AsyncTask.java:177)
at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:644)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:5059)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:792)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:555)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,NullPointerException in ViewKeyActivity,"[Label(name=""bug"")]","from gplay:

2.9.2

Nexus 4 (mako)

clicked show key in contacts app

```
java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ViewKeyActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2212)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2271)
at android.app.ActivityThread.access$800(ActivityThread.java:144)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1205)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5146)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ViewKeyActivity.onCreate(ViewKeyActivity.java:156)
at android.app.Activity.performCreate(Activity.java:5231)
at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2169)
... 11 more
```
"
open-keychain/open-keychain,closed,NullPointerException in android.support.v7.app,"[Label(name=""bug"")]","from g play:

```
java.lang.NullPointerException
at android.support.v7.app.ActionBarImplICS.getThemedContext(ActionBarImplICS.java:302)
at android.support.v7.app.ActionBarImplJB.getThemedContext(ActionBarImplJB.java:20)
at android.support.v7.app.ActionBarActivityDelegate.getActionBarThemedContext(ActionBarActivityDelegate.java:208)
at android.support.v7.app.ActionBarActivityDelegate.getMenuInflater(ActionBarActivityDelegate.java:98)
at android.support.v7.app.ActionBarActivity.getMenuInflater(ActionBarActivity.java:71)
at android.app.Activity.onCreatePanelMenu(Activity.java:2551)
at android.support.v4.app.FragmentActivity.onCreatePanelMenu(FragmentActivity.java:224)
at android.support.v7.app.ActionBarActivity.superOnCreatePanelMenu(ActionBarActivity.java:232)
at android.support.v7.app.ActionBarActivityDelegateICS.onCreatePanelMenu(ActionBarActivityDelegateICS.java:146)
at android.support.v7.app.ActionBarActivity.onCreatePanelMenu(ActionBarActivity.java:199)
at android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper.onCreatePanelMenu(ActionBarActivityDelegateICS.java:293)
at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:464)
at com.android.internal.policy.impl.PhoneWindow.onKeyDownPanel(PhoneWindow.java:880)
at com.android.internal.policy.impl.PhoneWindow.onKeyDown(PhoneWindow.java:1574)
at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchKeyEvent(PhoneWindow.java:2087)
at android.view.ViewRootImpl.deliverKeyEventPostIme(ViewRootImpl.java:4194)
at android.view.ViewRootImpl.handleImeFinishedEvent(ViewRootImpl.java:4123)
at android.view.ViewRootImpl$ViewRootHandler.handleMessage(ViewRootImpl.java:3167)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:5293)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1102)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:869)
at dalvik.system.NativeStart.main(Native Method)
```

see workaround is here: https://code.google.com/p/android/issues/detail?id=61394
"
open-keychain/open-keychain,closed,"add support for keys, which have no passphrase",[],"I have keys with low time to live, which have no password. It is for easy to use encriptions. In open-keychain I can not create such keys. If I import such keys from PC - I can not select it in open-keychain for signing email. It show as 'unsupported'. And I can not edit this key - open-keychain ask password for editing key, but not understand empty password.
"
open-keychain/open-keychain,closed,Prevent tabjacking,[],"https://blog.lookout.com/blog/2010/12/09/android-touch-event-hijacking/

Set xml property on actionbar buttons in general
"
open-keychain/open-keychain,closed,Yubikey: check key ids when used from api,"[Label(name=""bug"")]",
open-keychain/open-keychain,closed,Authentication API,"[Label(name=""api todo""), Label(name=""enhancement"")]","As a long term goal, I think it would be interesting to see if the API can be extended to allow public key authentication (eg ssh) using appropriate subkeys in a keyring. I've been using ES's sftp capabilities and had to import my private key to the app specifically, so I think it would be cool if apps like this could use the API to handle public key authentication without having to implement key handling themselves.

I think this should be possible, but I've not investigated the ssh protocol in depth to discover exactly what is required. I think it would increase the usefulness of OK though, as I suspect there are many apps which could potentially use this.
"
open-keychain/open-keychain,closed,Respect charset header?,"[Label(name=""enhancement"")]","See http://tools.ietf.org/html/rfc4880#page-56
- We could implement a method to convert from any given charset to UTF8 thus handling this internally
- Or inform the app about the encoding and let the app handle it
"
open-keychain/open-keychain,open,Test: Import all keys from a keyserver dump,[],"To harden our import methods we could create a test that imorts all keys from http://keyserver.borgnet.us/dump
"
open-keychain/open-keychain,closed,Fix ByteBuffer.get arguments,[],"2nd arg is dest offset not source offset
"
open-keychain/open-keychain,closed,"""Fehler: null"" while signing","[Label(name=""bug"")]","After installing 3.0beta1 I can import my keys without error (#868) but now I get the same error while signing, no problem with encryption.
"
open-keychain/open-keychain,closed,Verify Yubikey signatures,[],"Currently, we trust that the signed hash we get from a yubikey is correct and deliver it without further checks. I'd much rather throw an error than give an invalid signature here.

Validating is an expensive operation and we'd have to go through the data a THIRD time to do that - we however already have the data digest hash! Unless I get my crypto wrong here, we should be able to do ""signature^d mod n"" and if the signature is correct receive the hashed digest. I'm not sure if there is a way to coerce PGPSignature to just verify() without init() and update(), should look into that.

This is ""nice to have"" priority at best, just leaving this here for maybelater.
"
open-keychain/open-keychain,closed,NPE stops openkeychain while not in use,[],"E/AndroidRuntime( 8288): FATAL EXCEPTION: IntentService[KeychainIntentService]
E/AndroidRuntime( 8288): Process: org.sufficientlysecure.keychain, PID: 8288
E/AndroidRuntime( 8288): java.lang.NullPointerException
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey.getSecretKeyType(CanonicalizedSecretKey.java:120)
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedSecretKeyRing(ProviderHelper.java:625)
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:855)
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:161)
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1054)
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1004)
E/AndroidRuntime( 8288):    at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:752)
E/AndroidRuntime( 8288):    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
E/AndroidRuntime( 8288):    at android.os.Handler.dispatchMessage(Handler.java:102)
E/AndroidRuntime( 8288):    at android.os.Looper.loop(Looper.java:136)
E/AndroidRuntime( 8288):    at android.os.HandlerThread.run(HandlerThread.java:61)
W/ActivityManager(  858):   Force finishing activity org.sufficientlysecure.keychain/.ui.ConsolidateDialogActivity
"
open-keychain/open-keychain,closed,"""importing..."" progress bar does not show progress?",[],"When I import keys from a file and select a long list of keys to import, the modal progress bar ""importing..."" shows up and displays ""0%"" for several seconds until the entire process has finished and 30-some keys have been imported. The bar never fills up, the percentage never changes.

This also means that I can't quite tell if the other issue I'm having -- where importing apparently never finishes -- is a separate bug or if it's in progress and just going slowly. (Is there a certain number of keys where OpenKeychain regularly hangs?)
"
open-keychain/open-keychain,closed,implement hierarchical log,"[Label(name=""enhancement"")]","Right now, the OperationLog class is a flat collection of LogEntrys. For some operations, especially consolidation e.g. as part of secret key import, this bloats the log WAY too much, so at some point I want a hierarchical structure for this.

This isn't too important, but it's actually fairly easy to implement and will help with secret key import log readability, which is a disaster right now
"
open-keychain/open-keychain,closed,Reject subkeys with no keyflags if they have no primary key binding,[],"Since #270, we regard keys with no flags as if they had all capabilities. This leads to a special case where a subkey can sign data, but has no primary key binding certificate. Primary key binding certificates are not optional in 4880, we should thus either treat those subkeys as if they weren't allowed to sign, or reject them entirely.
"
open-keychain/open-keychain,closed,Tablet UI: encrypt files dialog not working,"[Label(name=""bug"")]","The ""Encrypt to:"", ""Signed by:"", and ""Add file(s)"" fields aren't responding to touch input.  Wiping the app data and re-installing the app produced no effect.  This works on my phone and I know previous versions worked on my tablet.  Both are running 4.4.4.  The Encrypt text dialog works as expected.  The workaround is to encryp a file from the main info tab of a key, which crashes the app but manages to encrypt properly.
"
open-keychain/open-keychain,closed,hide keybord after successfull search,[],"I thought that this has work on an android version...
somehow all this keyboard show/hiding APIs are crap and broken on some Android versions...
"
open-keychain/open-keychain,closed,k9mail quotes ASCII-armored encrypted block in reply,[],"When replying to an encrypted message, including from the screen where it is already correctly decrypted and readable, k9mail quotes the ASCII-armored encrypted message. This is never useful, as the addition of leading "">"" indicators makes the quoted block unable to be automatically decrypted.

If this is a misguided security feature, it would be better to entirely disable quoting in reply to an encryted message, but this would lead to a great deal of inconvenience and confusion in dealing with e-mail. The desired behavior is what APG does, which is to quote the decrypted message text.
"
open-keychain/open-keychain,closed,OpenKeychain acting as k9mail crypto-provider does not support imported keys,[],"Today I've upgraded k9mail to version 5 that now officially supports OpenKeychain. I also grabbed OpenKeychain v2.8.2 from the Play store and imported my GPG key (SEC+PUB parts) from an ascii armored key file. The imported key is now shown under ""MY KEYS"" - I think this means that the import was successful.

Unfortunately when OpenKeychain is acting as crypto-provider for k9mail I cannot use my imported key, i.e. the imported key does not appear in the ""SETTINGS > Account key:"" selection box. At this point OpenKeychain wants to create a new key: ""The app requests the creation of a new account. Please select one of your existing keys or create a new one"".

Any idea why this is not working?﻿

(first posted on Google+ and created as issue here upon Dominik's request)
"
open-keychain/open-keychain,closed,Passphrase Cache: CacheWord library / reuse code?,"[Label(name=""discussion"")]","@eighthave proposed [CacheWord](https://github.com/guardianproject/cacheword) as an replacement for our PassphraseCacheService on our mailinglist.

Advantages:
- better protection against various attacks like cold boot attacks?
- cacheword uses char[] to store passwords vs. Strings, since a char[] can be
  zeroed out in code, while a String is immutable.

> cacheword provides a layer of key indirection which is not probably relevant
> to OpenKeychain, but maybe could be.  It means that your password actually
> unlocks an encrypted, randomly generated 256-bit password, and that is what is
> used as the actual password for the thing that needs to be unlocked (in our
> case SQLCipher and IOCipher, i.e. AES-256).

We should definitely look into this and either use the library or adopt good practices.
"
open-keychain/open-keychain,closed,Better Google Play/F-Droid description,"[Label(name=""discussion"")]","Current description:

```
OpenKeychain is an OpenPGP implementation for Android. It serves as a key management tool for encryption, decryption, signature generation, and signature verification.

OpenKeychain is compatible with K-9 Mail and Conversations (Instant Messaging).

Features:
• OpenKeychain is Open Source and Free Software (GPLv3+) (-> verifiable cryptography)
• All basic OpenPGP operations: encrypt/decrypt/sign/verify
• NFC/QR code key exchange
• Key management (import/export/sign/upload)
• Import/export of GPG key rings and exported keys from/to the SD card
• Basic keyserver support
• Easy API

Translations:
Help translating OpenKeychain! Everybody can participate at http://www.transifex.com/projects/p/open-keychain/

License:
GPLv3+

Permissions:
• Full network access: Internet access is ONLY used for key server queries
• Control Near Field Communication: To exchange keys via NFC
• Modify or delete the contents of your USB storage: To export keys to the sd card
• Read the contents of your USB storage: To import keys from the sd card

Keywords:
openkeychain, open keychain, openpgp keychain, openpgp, gpg, pgp, keychain
```

I don't like it because it assumes that the reader already knows OpenPGP, free software, signatures... etc and includes several unimportant things. Also the permissions list needs an update.

I already created a new ""function"" header for G Play that reflects our style much more:
https://github.com/open-keychain/open-keychain/blob/master/Resources/graphics/function.png
"
open-keychain/open-keychain,closed,Please add tag for 2.9.2 release,[],"Please add tag for 2.9.2 release. This helps F-Droid project to autodetect new releases of your software.
Thanks...
"
open-keychain/open-keychain,closed,Share to decrypt not working in my tests,"[Label(name=""bug"")]","Share encrypted message from nononsense notes to decrypt in OK not working here...
"
open-keychain/open-keychain,closed,Yubikey: NfcActivity UI should be more usable,[],"- When the Yubikey is attached correctly and the Intent is received in `onNewIntent` the user should be informed to not release the Yubikey while the operation is executed. Maybe some kind of progress bar would help.
- Replace ""Yubikey"" with more generic ""NFC-enabled OpenPGP-card""? Actually I think we can leave ""Yubikey"" as long as no one shows me an alternative to the Yubikey NEO (I haven't found any other product with the same features)
- Better image to show how to hold the Yubikey against the device or a heat map like in https://play.google.com/store/apps/details?id=co.mclear.nfcringpro ?
"
open-keychain/open-keychain,closed,Fix bug where Keybase extraData gets lost when SKS wins the search race.,[],
open-keychain/open-keychain,closed,Yubikey: Check based on fingerprint if the right yubikey is used,[],"Currently there is no check if you hold the right Yubikey against OK. It will simply assume you have only one. We need to check the fingerprint of the secret key in OK against the fingerprint of the key in the Yubikey inside NfcActivtiy before proceeding.
"
open-keychain/open-keychain,closed,NullPointerException in ImportKeysListFragment,"[Label(name=""bug"")]","from google play:
2.9.2

Galaxy S5 (klte)

crashed while trying to import my public keyring

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ImportKeysListFragment.getSelectedData(ImportKeysListFragment.java:83)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.importKeys(ImportKeysActivity.java:500)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity$1.onClick(ImportKeysActivity.java:124)
at android.view.View.performClick(View.java:4637)
at android.view.View$PerformClick.run(View.java:19422)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5586)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1268)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1084)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Yubikey: Signing & Decrypt do not work if using PIN of 10 characters or longer.,[],"Openkeychain 3.0 beta 1.

I'm using a Yubikey NEO, and a Nexus 4 running Android 4.4.4 build KTU84P.

I have exported my key from my computer using the command `gpg --armor --export-secret-key abcdef > file.asc` and imported it into OKC. It is a stripped master key (certify only) with seperate signing, encryption, and authentication subkeys, which have been added to the Yubikey.

I have changed the PIN on my Yubikey from the factory-default PIN of '123456'. I have unchecked the 'Use default PIN' selection in options.

When I attempt to sign or decrypt anything, I am prompted with the passphrase dialogue, I enter my PIN here, and am then prompted with the 'hold up your Yubikey' dialogue. I hold up my Yubikey, which is successfully read, but then find myself back at the encrypt/decrypt screen with an 'Invalid PIN' error.

If I change the PIN on my Yubikey back to the default of '123456', I can successfully sign and decrypt. Specifically:

PIN of 123456, 'Default PIN' option unchecked. I am prompted for a passphrase, I enter 123456, hold up my Yubikey and the operation completes successfully.

PIN of 123456, 'Default PIN' option checked. I am not prompted for a passphrase, straight to the 'Hold up your Yubikey' screen, operation completes successfully.

~~I have tried changing the PIN on my Yubikey to several different combinations, none of them work apart from 123456.~~ EDIT: See my comment below regarding PIN sizes
"
open-keychain/open-keychain,closed,Yubikey: NfcActivity singleTop not working correctly,"[Label(name=""bug"")]","I have a chunk of gmail I’m trying to decrypt and I’m repeatedly hitting this: 

```
    } else if (NfcAdapter.ACTION_TAG_DISCOVERED.equals(action)) {
        Log.e(Constants.TAG, ""This should not happen, but there is a bug in Android!"");

        toast(""This should not happen, but there is a bug in Android! Clear all app tasks and start app from launcher again!"");
```

Any suggestions on how to work around?
"
open-keychain/open-keychain,closed,Import broken,[],"Search for Tim Bray, find the version in Keybase, try to import it, BOOM.

D/Keychain(15456): Query: SELECT (EXISTS (SELECT \* FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, verified, keyrings_public.key_ring_data AS pubkey_data FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) INNER JOIN keyrings_public ON (keys.master_key_id = keyrings_public.master_key_id) WHERE (keys.rank = 0 AND keys.master_key_id = '667751292528081881') ORDER BY user_ids.user_id ASC
E/AndroidRuntime(15456): FATAL EXCEPTION: main
E/AndroidRuntime(15456): Process: org.sufficientlysecure.keychain, PID: 15456
E/AndroidRuntime(15456): java.lang.NullPointerException
E/AndroidRuntime(15456):    at org.sufficientlysecure.keychain.ui.dialog.ProgressDialogFragment.setProgress(ProgressDialogFragment.java:83)
E/AndroidRuntime(15456):    at org.sufficientlysecure.keychain.service.KeychainIntentServiceHandler.handleMessage(KeychainIntentServiceHandler.java:114)

I’m having a look at it but I’m jetlagged…
"
open-keychain/open-keychain,closed,pin with length != 6 will fail in openpgp-card-nfc-lib,[],"The Lc field of the VERIFY command is set to 06 statically, while it should be the number of bytes sent in the Data field, ie, the passphrase.
"
open-keychain/open-keychain,closed,Upgraded DH Prime Available in SafeSlinger,[],"We've upgraded the prime used in the DH part of the SafeSlinger exchange from 512-bit to 1536-bit, more inline with IEEE recommendations in https://github.com/SafeSlingerProject/exchange-android/commit/d584614921600fabe2043d16acfefd55d4c00c8a. Feel free to pull in anytime.

No server changes are needed to handle this change. The exchange library maintains an internal version number which we've updated now from 1.7 to 1.8. During the beginning of the exchange each client collects the library version of the other clients, and checks against its own minimum required version. So, when clients use a mix of the 1.7 library with the 1.8 library, the 1.8 library clients report: ""Some members are using an older version; all members must upgrade to the newest version"", while the 1.7 clients will time out.

Updating only one platform is easy, since all users of the new version have the ability to upgrade. Our Demo and Messenger apps have a more complicated publishing process. Essentially we need to wait for Apple to finish reviewing a new version of our iOS apps, before we can publish the equivalent Android version, so both platforms have the ability to upgrade.

More details in https://github.com/SafeSlingerProject/SafeSlinger-iOS/issues/39 and https://github.com/SafeSlingerProject/SafeSlinger-Android/issues/56.
"
open-keychain/open-keychain,closed,Pull to refresh todos,[],"Most apps which have pull to refresh have little to no feedback about the process other than the indeterminate progress bar, and so do we in the current implementation. This approach will not work though, because refreshing many keys takes us much longer than for example a contact list refresh in Threema would, and we have linear rather than constant complexity.

We can assume even an average user has 30 or more keys in his list, if one key request and import takes 3 seconds the user would have to stay in the KeyListActivity for 90 seconds with no feedback other than an indeterminate progress bar for the process to finish. We need some kind of feedback mechanism here - maybe make the progress bar determinate, or show progress indicators inline next to the keys, or something like that.

As it is now, the pull to refresh feature is not fit for release. Since we aim to release at least a beta by the end of the week(-ish), and we have [more pressing matters](https://github.com/open-keychain/open-keychain/issues?q=is%3Aopen+is%3Aissue+yubikey) to work on, the feature probably won't make it. I'd love to see a working implementation at some point though :+1: 
"
open-keychain/open-keychain,closed,Flattr for OpenKeyChain,[],"Hi all,

I really like it to spend a monthly amount for ""the internet"" and espacially for free and open software. That's why I work with subscriptions on flattr.com, that way I monthly spend some euros for every project on my list. Every Repo I star on github gets on the list, but unfortunately openkeychain has no flattr afaik. Would that be a way for you to raise some money for the great work? I'd love it!
"
open-keychain/open-keychain,closed,Not seeing my pub keys,[],"I have created my keys using GPG suite for OSX. Using their GPGTools GPG Keychain Access. It creates both private and public keys all in one file. So when I import the file into open-keychain it only shows the private key and only sees it not the public one. How do I fix this?

Android 4.4.4 Rooted with CyanogenMod 11.  Nightly on Nexus 7. My nexus 5 is rooted but is using Googles factory rom.
"
open-keychain/open-keychain,closed,authentication flag is not properly set,[],"happens from my yubikey divert-to-card key
"
open-keychain/open-keychain,closed,Decrypt fixes,[],"Fix everything related to decrypt activites
"
open-keychain/open-keychain,closed,Yubikey: Implement certify,"[Label(name=""enhancement"")]","- result parcels for certify
- needs changes in KeychainIntentService
"
open-keychain/open-keychain,closed,Yubikey:  key generation (on or off key),"[Label(name=""enhancement"")]",
open-keychain/open-keychain,closed,Yubikey: Working inside OK,[],"Currently Yubikeys only work via the API not from OK's encrypt, decrypt activities (We need a better flow with ParcelResults for KeychainIntentService to handle Yubikeys inside OK.
"
open-keychain/open-keychain,closed,pull to refresh RuntimeException,"[Label(name=""bug"")]","pull to refresh:

```
 11616         AndroidRuntime  E  FATAL EXCEPTION: AsyncTask #2
 11616         AndroidRuntime  E  Process: org.sufficientlysecure.keychain, PID: 11616
 11616         AndroidRuntime  E  java.lang.RuntimeException: An error occured while executing doInBackground()
 11616         AndroidRuntime  E  at android.os.AsyncTask$3.done(AsyncTask.java:300)
 11616         AndroidRuntime  E  at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
 11616         AndroidRuntime  E  at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
 11616         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:242)
 11616         AndroidRuntime  E  at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
 11616         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 11616         AndroidRuntime  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 11616         AndroidRuntime  E  at java.lang.Thread.run(Thread.java:841)
 11616         AndroidRuntime  E  Caused by: java.lang.NullPointerException
 11616         AndroidRuntime  E  at org.sufficientlysecure.keychain.keyimport.ImportKeysListEntry.writeToParcel(ImportKeysListEntry.java:70)
 11616         AndroidRuntime  E  at android.os.Parcel.writeParcelable(Parcel.java:1285)
 11616         AndroidRuntime  E  at android.os.Parcel.writeValue(Parcel.java:1204)
 11616         AndroidRuntime  E  at android.os.Parcel.writeList(Parcel.java:653)
 11616         AndroidRuntime  E  at android.os.Parcel.writeValue(Parcel.java:1226)
 11616         AndroidRuntime  E  at android.os.Parcel.writeArrayMapInternal(Parcel.java:618)
 11616         AndroidRuntime  E  at android.os.Bundle.writeToParcel(Bundle.java:1692)
 11616         AndroidRuntime  E  at android.os.Parcel.writeBundle(Parcel.java:636)
 11616         AndroidRuntime  E  at android.os.Parcel.writeValue(Parcel.java:1201)
 11616         AndroidRuntime  E  at android.os.Parcel.writeArrayMapInternal(Parcel.java:618)
 11616         AndroidRuntime  E  at android.os.Bundle.writeToParcel(Bundle.java:1692)
 11616         AndroidRuntime  E  at android.os.Parcel.writeBundle(Parcel.java:636)
 11616         AndroidRuntime  E  at android.content.Intent.writeToParcel(Intent.java:7078)
 11616         AndroidRuntime  E  at android.app.ActivityManagerProxy.startService(ActivityManagerNative.java:3009)
 11616         AndroidRuntime  E  at android.app.ContextImpl.startServiceCommon(ContextImpl.java:1562)
 11616         AndroidRuntime  E  at android.app.ContextImpl.startService(ContextImpl.java:1544)
 11616         AndroidRuntime  E  at android.content.ContextWrapper.startService(ContextWrapper.java:494)
 11616         AndroidRuntime  E  at org.sufficientlysecure.keychain.util.KeyUpdateHelper$UpdateTask.doInBackground(KeyUpdateHelper.java:78)
 11616         AndroidRuntime  E  at org.sufficientlysecure.keychain.util.KeyUpdateHelper$UpdateTask.doInBackground(KeyUpdateHelper.java:42)
 11616         AndroidRuntime  E  at android.os.AsyncTask$2.call(AsyncTask.java:288)
 11616         AndroidRuntime  E  at java.util.concurrent.FutureTask.run(FutureTask.java:237)
 11616         AndroidRuntime  E  ... 4 more
  633         ActivityManager  W  Force finishing activity org.sufficientlysecure.keychain/.ui.KeyListActivity
```
"
open-keychain/open-keychain,closed,Custom key configuration: Fail when changing primary user id,"[Label(name=""bug"")]","Crashes when changing the primary user id
"
open-keychain/open-keychain,closed,Handle absence of personal information in Keybase search result,[],"I’m pretty sure that if anything is missing in the keybase result, it's actually a bug.
"
open-keychain/open-keychain,closed,"Reproducible with key: ""Encountered trailing data after keyring""","[Label(name=""bug"")]","get this key: https://www.sparkasse-holstein.de/firmenkunden/electronic_banking/secure-e-mail/pdf/Spk_Holstein_PGP_Domain-Zertifikat.asc
- First import works fine
- import it a second time -> ""Encountered trailing data after keyring""

```
 21338               Keychain  E  KeychainIntentService Exception:
 21338               Keychain  E  java.lang.RuntimeException: Encountered trailing data after keyring, should never happen!
 21338               Keychain  E  at org.sufficientlysecure.keychain.pgp.CanonicalizedPublicKeyRing.<init>(CanonicalizedPublicKeyRing.java:52)
 21338               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getCanonicalizedKeyRing(ProviderHelper.java:283)
 21338               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getCanonicalizedPublicKeyRing(ProviderHelper.java:250)
 21338               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:734)
 21338               Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:164)
 21338               Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:121)
 21338               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:545)
 21338               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 21338               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 21338               Keychain  E  at android.os.Looper.loop(Looper.java:136)
 21338               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,NullPointerException in CanonicalizedSecretKey,[],"from g play with 2.9.2

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.pgp.CanonicalizedSecretKey.getSecretKeyType(CanonicalizedSecretKey.java:120)
at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedSecretKeyRing(ProviderHelper.java:625)
at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:855)
at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:161)
at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1054)
at org.sufficientlysecure.keychain.provider.ProviderHelper.consolidateDatabaseStep2(ProviderHelper.java:1004)
at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:752)
at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,"""Fehler: null"" if import key",[],"If I try to import my AGP key I get the error message ""Fehler: null"" the first time. Second attemp does work but the keyring seams to be broken and is not usable. The key should be valid since AGP and Thunderbird can work with.
"
open-keychain/open-keychain,closed,Deal with missing personal information from keybase,[],"For this to work, you're going to have to refresh your fork of KeybaseLib from mine; there may be a way to create a pull request that binds in the subproject change, but I'm not smart enough to figure it out.
"
open-keychain/open-keychain,closed,"Cloud search for ""alice"" fails","[Label(name=""bug"")]","Searching for ""alice"" fails:

```
Keychain  D  hkp keyserver query: https://hkps.pool.sks-keyservers.net:443/pks/lookup?op=index&options=mr&search=alice
  5220             System.out  I  URL: https://keybase.io/_/api/1.0/user/autocomplete.json?q=alice
  5220            KEYBASE-LIB  D  match count=5
  5220               Keychain  E  keybase result parsing error
  5220               Keychain  E  com.textuality.keybase.lib.KeybaseException: JSON error in Keybase query
  5220               Keychain  E  at com.textuality.keybase.lib.Match.getFullName(Match.java:46)
  5220               Keychain  E  at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.makeEntry(KeybaseKeyserver.java:71)
  5220               Keychain  E  at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.search(KeybaseKeyserver.java:53)
  5220               Keychain  E  at org.sufficientlysecure.keychain.keyimport.KeybaseKeyserver.search(KeybaseKeyserver.java:32)
  5220               Keychain  E  at org.sufficientlysecure.keychain.keyimport.CloudSearch$1.run(CloudSearch.java:53)
  5220               Keychain  E  at java.lang.Thread.run(Thread.java:841)
  5220               Keychain  E  Caused by: org.json.JSONException: JWalk error at step 0 of full_name.val
  5220               Keychain  E  at com.textuality.keybase.lib.JWalk.walk(JWalk.java:113)
  5220               Keychain  E  at com.textuality.keybase.lib.JWalk.getString(JWalk.java:55)
  5220               Keychain  E  at com.textuality.keybase.lib.Match.getFullName(Match.java:44)
  5220               Keychain  E  ... 5 more
  5220               Keychain  D  returned error data: <?xml version=""1.0"" encoding=""utf-8""?>
  5220               Keychain  D  <!doctype html public ""-//w3c//dtd xhtml 1.0 strict//en"" ""http://www.w3.org/tr/xhtml1/dtd/xhtml1-strict.dtd"" >
  5220               Keychain  D  <html xmlns=""http://www.w3.org/1999/xhtml"">
  5220               Keychain  D  <head>
  5220               Keychain  D  <title>error handling request</title>
  5220               Keychain  D  <meta http-equiv=""content-type"" content=""text/html;charset=utf-8"" />
  5220               Keychain  D  <style type=""text/css"">
  5220               Keychain  D  /*<![cdata[*/
  5220               Keychain  D  .uid { color: green; text-decoration: underline; }
  5220               Keychain  D  .warn { color: red; font-weight: bold; }
  5220               Keychain  D  /*]]>*/
  5220               Keychain  D  </style></head><body><h1>error handling request</h1>error handling request. exception raised: invalid_argument(""too many responses"")</body></html>
  5220               Keychain  D  Cloud search exception: Unexpected structure in keybase search result: JSON error in Keybase query
  5220               Keychain  D  Cloud search exception: null
  5220               Keychain  D  data: []
  5220               Keychain  D  Unrecoverable keyserver query error: Unexpected structure in keybase search result: JSON error in Keybase query
```
"
open-keychain/open-keychain,closed,fingerprints cut off if font size is set to large,"[Label(name=""bug"")]",
open-keychain/open-keychain,closed,Merging of public keys into secret keyring fails if the secret key is expired,[],"When I import a new secret subkey, the key is marked expired. This puzzled me at first because I already renewed the expiration date but apparently this is not exported by gnupg if you do a --export-secret-subkeys.

So, open-keychain shows two sukeys after the import: The master key which is marked expired+stripped and the subkey which is not expired.

I therefore tried to update the key with the public key data from the keyserver. Unfortunately, this is where the merge fails with the following output:

> New public subkey found, but secret subkey dummy generation is not supported!
"
open-keychain/open-keychain,closed,Re-evaluate certificate view/handling,[],"Currenty `ViewKeyCertsFragment` has this switch:

```
switch (cursor.getInt(mIndexType)) {
                case WrappedSignature.DEFAULT_CERTIFICATION: // 0x10
                    wSignStatus.setText(R.string.cert_default);
                    break;
                case WrappedSignature.NO_CERTIFICATION: // 0x11
                    wSignStatus.setText(R.string.cert_none);
                    break;
                case WrappedSignature.CASUAL_CERTIFICATION: // 0x12
                    wSignStatus.setText(R.string.cert_casual);
                    break;
                case WrappedSignature.POSITIVE_CERTIFICATION: // 0x13
                    wSignStatus.setText(R.string.cert_positive);
                    break;
                case WrappedSignature.CERTIFICATION_REVOCATION: // 0x30
                    wSignStatus.setText(R.string.cert_revoke);
                    break;
            }
```

Are there really all these types of certs displayed?

What certs are actually handled inside our import methods? Is `CERTIFICATION_REVOCATION` necessary to display?
"
open-keychain/open-keychain,closed,IllegalArgumentException in DeleteFileDialogFragment,"[Label(name=""bug"")]","from g play

```
java.lang.IllegalArgumentException: Unknown URL file:///storage/emulated/0/msg.asc
at android.content.ContentResolver.delete(ContentResolver.java:1278)
at org.sufficientlysecure.keychain.ui.dialog.DeleteFileDialogFragment$1.onClick(DeleteFileDialogFragment.java:81)
at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:166)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5146)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)
```
"
open-keychain/open-keychain,closed,broken handling of stripped keys,[],"Hi,

I am no longer able to use stripped keys with openkeychain. This worked until one of the last versions.
What happens:

I try to publish my PGP pubkey with Conversations (xmpp client) and the key-choosing dialog opens. I choose the right key now and after a click on ""save"" the dialog just opens again. The adb log shows:

<pre>
-> % adb -d logcat -v time -s Keychain

09-17 17:21:28.795 E/Keychain(13371): PassphraseCacheService: Passphrase for unknown key was requested!
</pre>


I tried that with the same key in it's non-stripped version and that works fine.
Tested with OpenKeyChain 2.9.1.

Best,
Til
"
open-keychain/open-keychain,closed,Use beautified form of Key ID,[],"The only problem is that for a couple of these, I couldn’t figure out how to get to that screen to visually check the effect, but it was OK on all the ones I could try.  The beautified key looks a little better in a proportional rather than monospace font, and I couldn’t find the xml styling for the key ids in a couple places, most notably the encryption drop-down keyspinner.  But it still looks better than before.
"
open-keychain/open-keychain,closed,Fix construction of algorithmID in Keybase result lists,[],
open-keychain/open-keychain,closed,disable pull to refresh on right hand side of the screen,[],"when at the top of the list, dragging the scroll handle triggers a pull-to-refresh instead, effectively rendering the handle useless
"
open-keychain/open-keychain,closed,disable pull to refresh in search mode,[],
open-keychain/open-keychain,closed,SafeSlinger usage patterns,"[Label(name=""discussion"")]","Should users be able to share a public key that does not belong to them via SafeSlinger (i.e they do not own the private key)? I ask because the execution of the protocol results in an authentic, confidential exchange, where the user is assured that what is received was intentionally sent by other members of the protocol. Should I be able to only send public keys that represent me? We use this pattern in the SafeSlinger Messenger app. Is it easy for a user A to select a friend's public key C instead of their own to share not realizing until the end of protocol if A or B notices the wrong name C?
"
open-keychain/open-keychain,closed,NullPointerException in EncryptFileActivity.copyToClipboard,"[Label(name=""bug"")]","from g play

```
java.lang.NullPointerException
at java.lang.String.<init>(String.java:141)
at org.sufficientlysecure.keychain.ui.EncryptFileActivity.copyToClipboard(EncryptFileActivity.java:262)
at org.sufficientlysecure.keychain.ui.EncryptFileActivity.access$400(EncryptFileActivity.java:51)
at org.sufficientlysecure.keychain.ui.EncryptFileActivity$1.handleMessage(EncryptFileActivity.java:213)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:4817)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:816)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:583)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Dark theme,"[Label(name=""enhancement"")]","I love this PGP app. It's faster and has more features than APG. I only have 2 issues with it:
1. The theme scalds my eyes. I hate white themes, they hurt the eye late at night.
2. The other issue is more of a mild annoyance that I can get used to: the encrypt buttons are backwards to me. It makes more sense to me to have ""Encrypt & Save""/""Encrypt & Copy"" then ""Encrypt & Share"" and I find it confusing the way it is now. I would have put ""Encrypt"" separate from the ""Copy"" and ""Share"" on plain text and have ""Encrypt & Save"" then ""Encrypt & Share"" on files. 
"
open-keychain/open-keychain,closed,Random purple on search results,[],"Do a search. The primary ID on a key is rendered in purple and that’s a nice touch, but then little bits & pieces of email addresses & so are are also purpled by what looks like a fuzzy string-matching heuristic that produces a cluttered-looking result.  Is there a principled reason for this?
"
open-keychain/open-keychain,closed,“0x” considered harmful,[],"In the import-keys screens, the fingerprints are prefixed with “0x” which every programmer in the world knows means “this is hex” and is just visual static to civilians.  The notion that keys have a “fingerprint” which is just a string of numbers and letters is OK, ordinary people can understand that.

![ss2](https://cloud.githubusercontent.com/assets/17555/4266879/6f451de4-3c8b-11e4-96fc-e68d2f7ef250.png)
"
open-keychain/open-keychain,closed,pull safeslinger fixes,[],"pull down safeslinger fixes and remove now-unneeded permission
"
open-keychain/open-keychain,closed,Fixed pull2refresh bugs,[],"So that d5c9021b892185ce9e23a11515bffa1662fed6dd 's hack is not needed
Also, temporary 'fix' for the problem described in #848 
"
open-keychain/open-keychain,closed,Exception in SignKeySpinner,[],"```
SQLiteCursor  E  requesting column name with table name -- keys.is_revoked
 31442           SQLiteCursor  E  java.lang.Exception
 31442           SQLiteCursor  E  at android.database.sqlite.SQLiteCursor.getColumnIndex(SQLiteCursor.java:180)
 31442           SQLiteCursor  E  at android.database.CursorWrapper.getColumnIndex(CursorWrapper.java:73)
 31442           SQLiteCursor  E  at org.sufficientlysecure.keychain.ui.widget.SignKeySpinner.onLoadFinished(SignKeySpinner.java:75)
 31442           SQLiteCursor  E  at org.sufficientlysecure.keychain.ui.widget.SignKeySpinner.onLoadFinished(SignKeySpinner.java:31)
 31442           SQLiteCursor  E  at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:427)
 31442           SQLiteCursor  E  at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:395)
 31442           SQLiteCursor  E  at android.support.v4.content.Loader.deliverResult(Loader.java:104)
 31442           SQLiteCursor  E  at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:73)
 31442           SQLiteCursor  E  at android.support.v4.content.CursorLoader.deliverResult(CursorLoader.java:35)
 31442           SQLiteCursor  E  at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:223)
 31442           SQLiteCursor  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:61)
 31442           SQLiteCursor  E  at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:461)
 31442           SQLiteCursor  E  at android.support.v4.content.ModernAsyncTask.access$500(ModernAsyncTask.java:47)
 31442           SQLiteCursor  E  at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:474)
 31442           SQLiteCursor  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 31442           SQLiteCursor  E  at android.os.Looper.loop(Looper.java:136)
 31442           SQLiteCursor  E  at android.app.ActivityThread.main(ActivityThread.java:5139)
 31442           SQLiteCursor  E  at java.lang.reflect.Method.invokeNative(Native Method)
 31442           SQLiteCursor  E  at java.lang.reflect.Method.invoke(Method.java:515)
 31442           SQLiteCursor  E  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
 31442           SQLiteCursor  E  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
 31442           SQLiteCursor  E  at dalvik.system.NativeStart.main(Native Method)

```
"
open-keychain/open-keychain,closed,Implement result parcels for ACTION_DOWNLOAD_AND_IMPORT_KEYS,"[Label(name=""enhancement"")]","When only one key can not be found the whole operation cancels and does not download the other keys.
Especially important for ""update all keys"" with the new swipe refresh layout
"
open-keychain/open-keychain,closed,Certificates of keys with user id that have bad encodings are not displayed as OK in ViewKeyCertsFragment,"[Label(name=""discussion"")]","Because we do not save the raw user id in database, we cannot verify them later.
options:
1) store raw bytes of user id for later verification besides String
2) Get UncachedPublicKey for verification and go through all user ids until we find the one we want to verify. Now verify with the raw user id
"
open-keychain/open-keychain,closed,If a key can not be imported show that in notify,[],"Currently the main notify message does not say how much keys were _not_ imported, we should display this.
"
open-keychain/open-keychain,closed,Importing public keys from a single file creates error,[],"When importing some public keys from a single file the import breaks and I only see three keys on the preview screen. Also a red box where I get asked to file a report.

I can send a screenshot and the key file (only public keys) in private to the maintainer for further investigation, will not append it here for sure. ;-) Please tell me where to send it.
"
open-keychain/open-keychain,closed,"Add cloud search tab, lose Keybase/Keyserver tabs, re-organize prefs",[],"I’m reasonably happy with how this came out, except for I don’t seem to be able to branch straight from the config button to a particular prefs screen, only to the top level; see the comment in ImportKeysServerFragment marked by GRR
"
open-keychain/open-keychain,closed,Implemented Pull2Refresh,[],"#579
"
open-keychain/open-keychain,closed,Added the pull-to-refresh feature in the key list,[],"Thus implemented #579
"
open-keychain/open-keychain,open,Prevent activityjacking,[],"I already thought about this several times before: What if a malicious app mimics OpenKeychain's activity, especially the passphrase dialog that pops up via the Remote API. The user would think that this is actually OK and enter her passphrase -> bam!

Lets think of an attacker that prepares an app without special permissions that has one activity that looks exactly like OK's passphrase dialog. The attacker can prepare the activity to a point it can not be differentiated from OK's. This is especially easy because OK is open source (copy paste the passphrase dialog, remove actual functionality and you are done).
The proposed solution from http://commonsware.com/blog/2014/08/25/defending-against-activityjack-attacks.html is that the user chooses a picture that is displayed everytime the passphrase dialog pops up. This picture can not be known by the attacker (we are not talking about apps with root access!). Now the user can differentiate benign and malicious activities manually.

What do you think? UI hell or actually a good solution?
"
open-keychain/open-keychain,closed,Share url from firefox to Ok encrypt not working?,[],
open-keychain/open-keychain,closed,Use spannable in subkeysadapter,[],
open-keychain/open-keychain,closed,[Feature request] Block screenshots,[],"By default, block any attempt to screenshots.
"
open-keychain/open-keychain,closed,"""gpg: BAD signature from"" when I use NEO",[],"This is message generated by K9 Mail and signed with key on YK NEO. 

```
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

1,2,3 great
- --
Sent from K-9 Mail.
-----BEGIN PGP SIGNATURE-----
Version: OpenKeychain v2.9.2

iQFOBAEBCAA4MRxCYXJ0b3N6IE1hbGtvd3NraSAoWUtORU8pIDxibWFsa293c2tp
QHRpZ2FzZS5wbD4FAlQRZcAACgkQuWl2qS0xmEtVgggAgX0N9bDKx6U9gGCGVjmX
r3Lo7JloTbT37rLojcGC1fTfAZaqXBRRad9mtkfmF0gYi+xn/PV3uVQvXz+nUucI
ayR+BP3AnYlaSfCr5mUyIPvSzehVm2OyHjBsfc/GRs5yQyemhiwqJqKP23ynMUcb
+ERPLWMoVrV33Rfv92xuE+qxGPD11TVPySc52zMkPPaHZRnWOARAGJT7IxDb9B8Z
0T5IbbWetoIhAF4Nm9WeQkDy5vJYdN2SwemKe4QtKEgnRPuwDP7m00nSOZoiCupV
Pq17DCZ4CLBoD6cPC2EhlHui9CZlmPiGjuyzDZg5wRSVj2njiIWIKLTFI7L0m1Mz
iw==
=q+zs
-----END PGP SIGNATURE-----
```

When I try to validate it gpg shows:

```
gpg: Signature made czw 11 wrz 11:05:04 2014 CEST using RSA key ID 2D31984B
gpg: BAD signature from …
```
"
open-keychain/open-keychain,closed,Keys with revoked certificates are still displayed as trusted.,[],"Try to sign a key and then revoke the signature, eg. on your desktop and update the key. It is still displayed as being trusted / signed by your private key.
"
open-keychain/open-keychain,closed,keys broken in 2.9.2 ?,[],"from google play comments.

1)
The latest update seems to have broken my main key I had to generate a brand new key after it updated to 2.9.2, for some reason, my main key was no longer mine and I don't have any backups of the key for some reason (thought I had but must've deleted accidentally..). Other than this, it's a great frontend for using OpenPGP/GPG Keys on Android.

2)
The last update Broke my key, now it says no suitable key found when I try to decrypt something. Was a good app beforehand.

(he also wrote to the mailinglist)
"
open-keychain/open-keychain,closed,Signature produces with yubikey is invalid,"[Label(name=""bug"")]",
open-keychain/open-keychain,closed,Passphrase is getting cached twice,[],"Hi

I have users reporting that the passphrase is getting cached twice for different API calls (ACTION_SIGN and ACTION_DECRYPT_VERIFY) the code can be found here: https://github.com/siacs/Conversations/blob/0.7/src/eu/siacs/conversations/crypto/PgpEngine.java#L41 and here https://github.com/siacs/Conversations/blob/0.7/src/eu/siacs/conversations/crypto/PgpEngine.java#L285
"
open-keychain/open-keychain,closed,NullPointerException in PassphraseDialogFragment,"[Label(name=""bug"")]","from g play:

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.dialog.PassphraseDialogFragment.hideKeyboard(PassphraseDialogFragment.java:298)
at org.sufficientlysecure.keychain.ui.dialog.PassphraseDialogFragment.onDismiss(PassphraseDialogFragment.java:294)
at android.app.Dialog$ListenersHandler.handleMessage(Dialog.java:1245)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:158)
at android.app.ActivityThread.main(ActivityThread.java:5751)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1083)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:850)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Key certification not uploaded?,"[Label(name=""bug"")]","1. certify key
2. upload to keyserver
3. key on keyserver not certified? (I waited one day for federation, will check again later)
"
open-keychain/open-keychain,closed,Consolidate on next version,[],"Already forgot it for v2.9.1
"
open-keychain/open-keychain,closed,NullPointerException in ImportKeysActivity,[],"from G Play.

```
java.lang.RuntimeException: Unable to resume activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=290819, result=-1, data=Intent { dat=content://media/external/video/media/2 }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2120)
at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:2135)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1668)
at android.app.ActivityThread.access$1500(ActivityThread.java:117)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:931)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:130)
at android.app.ActivityThread.main(ActivityThread.java:3683)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:507)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:875)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:633)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=290819, result=-1, data=Intent { dat=content://media/external/video/media/2 }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.deliverResults(ActivityThread.java:2532)
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2107)
... 12 more
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadCallback(ImportKeysActivity.java:441)
at org.sufficientlysecure.keychain.ui.ImportKeysFileFragment.onActivityResult(ImportKeysFileFragment.java:110)
at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:166)
at android.app.Activity.dispatchActivityResult(Activity.java:3952)
at android.app.ActivityThread.deliverResults(ActivityThread.java:2528)
... 13 more
```
"
open-keychain/open-keychain,closed,NFC Yubikey ToDos,[],"- [x] Use given PIN
- [x] implement decrypt
- [ ]  fix certification via Yubikeys (needs changes in KeychainIntentService)
- [ ]  key generation and pub key retrival
- [ ] Currently Yubikeys only work via the API not from OK's encrypt, decrypt activities (We need a better flow with ParcelResults for KeychainIntentService to handle Yubikeys inside OK.)
- [x] prevent edit (like stripped keys)
"
open-keychain/open-keychain,closed,Prevent opening of edit key if passphrase is wrong,[],"Prevent opening of edit key if passphrase is wrong
"
open-keychain/open-keychain,closed,Implement MultiCertifyActivity,"[Label(name=""discussion"")]","Right now, our CertifyKeyActivity works for exactly one key. However, for ""key signing party"" style key signing, a way to sign multiple keys all in one go would be helpful. There are several different ways to go about this, opening this issue for discussion.

The minimum functionality we need is display of a given list of keys and subsequent certification. A more general dataflow of the activity is to create a list of keys, provide the user with enough info to decide on which to actually certify, and ultimately certify them all - the granularities of each of these steps are not trivial decisions.

The keys can be acquired by different means, the most important of which I would think being a previous safeslinger exchange (ping #638), or to a lesser degree manual accumulation by a number of nfc or qr actions.
"
open-keychain/open-keychain,closed,Dropbox doesn’t show on Decrypt,[],"I want to decrypt a file in DropBox, which I can see in the DropBox app.  When I select the File tab in the Decrypt screen, it shows G Drive options as well as the usual Images/Videos/etc, but not DropBox.  What's weird is that when I want to import keys, DropBox is an option; in a tab along with Gallery and Photos.
"
open-keychain/open-keychain,closed,Can’t decrypt from gmail,[],"(I’m sure this used to work).  

I emailed the gpg-encrypted file to myself.  In the gmail app on Android, I select the text (with the blue sliders) and paste it into OKC’s decrypt window.  It pastes in sort of a weird way, with double-spaced lines. I hit the Decrypt and Verify button and I get Error: Unknown Object in stream: 21

Um, is there a better way to decrypt messages received in gmail?

-----BEGIN PGP MESSAGE-----
Version: GnuPG/MacGPG2 v2.0.22 (Darwin)
Comment: GPGTools - https://gpgtools.org

hQIMAwkuBalYH40qARAAjHdrGtojwF/gmWmVZuls89CyD7P1uPanwDZfctqKrGt1
a23ViGo1EoFteXeVyiFzwWkQOSzO87EHTM3sWV7vO6qK65pH3qLP1IP/UZNgramV
SHkw0PH+qsOCailClsBGrF9b1XbYdufoqqZc9KfasmnTqv+031h8DvRkrW7/antD
HHTMhXrNZmDWez7/eQbXSIny+A/tueKM5Q8gZdzOCduV9p3sXFx+amXCJ7t3mVKg
n5s8WGZBNaCybsjNRF30gpZs/vaGrLlE4MSieaNpX6ohzlKVtVn24tWTCSdgzWYj
19DtdYbOjds8AbuFi6RKk3uRnECI0CcwNTQWHJS2AF+9+5L/5IkgRC2YrED+Tr2L
Z4mFetlIYkaxhakBz/9wXRLzPenWZRZDAiSK7lqL6XQmqmJr40JZAZb0abLUpndm
3+IVXjd2grAe2DxrAQ92VZ4SLZ/JAcHvCwSDimTyzNqK0SnRaJiNerYtslEWkXi0
37S3sGZs1EFPHRqm8iPTYYJelj80FP2ZFP42rSwTa7rkWsKI3mQikGbdaHcDtEIP
6gjadGB29uqd03pC738MeWOoQ9OQDIDcshl5pjwkRJrmgyNHx4V/C5n4mVxf9F8e
NHW6phYHwSwIZvWPjILYZ7BULfjS+WZNBd90KrN3qbyP4TrHFmQI12idHOOMXxTS
wL4BZU56rHnEvLVfH+DZZvJClwERLDm5Cu80FQroOVux08Sd9+hQ0UtDAa7Zv/o1
9YB6YCHwuZ+Vfj46+TdiWSOmKmsXwyz7H0g7QFlcnbA5ajDJhi+EPxm/O1V1ZyT8
X0ty++qAcLQJWtr6S91MHdU3Nd486/+6z0GYWoxzGsBqXktyCJKA5YuHQhAq4yAR
k1DziWutT7KqxY4tuRKx392kIEIzdHVFwpcnFBg+ZzPxX1rC5sU5rCvkv/9RrBjm
3rZNXZmx+qlZLlqdLmYDZeWmKcjYE3PxIGVIjSggDwXrAeeCXu+4eM+b5LzYsFJh
/c6plbxRAuVtRKmc/V26CSW7Wef1UxH5eunyZQ8pVeR97xuk/QdGShEd849ISjQJ
DP57n1AbGQxDiObhZVocjxp5HiwX8Vt0P9deNtmYIAOqI5ulP8dqT5aTqUgQ+fVJ
mm4FhjgH0xuG36nLWO4tX74kDOzH1mJ+a8C9KxQ97SVPkgvN9jbz3wfEmgufuENy
=dycc
-----END PGP MESSAGE-----
"
open-keychain/open-keychain,closed,Add safeslinger info to about screen,[],
open-keychain/open-keychain,closed,Safeslinger icon,[],"We need a safeslinger icon instead of the encrypt icon.
"
open-keychain/open-keychain,closed,Nfc support bug,"[Label(name=""bug"")]","OK.
I changed PIN.
I can't see any dialog that I should hold YK near antenna. There is only standard password prompt.
 In log I found:
09-03 11:47:26.110: E/Keychain(30879): org.sufficientlysecure.keychain.pgp.PgpSignEncrypt$NeedNfcDataException
09-03 11:47:26.110: E/Keychain(30879):  at org.sufficientlysecure.keychain.pgp.PgpSignEncrypt.execute(PgpSignEncrypt.java:526)
09-03 11:47:26.110: E/Keychain(30879):  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:306)﻿
"
open-keychain/open-keychain,closed,Preference: Use default Yubikey PIN,[],"default: on
Summary: Use default Yubikey PIN (123456)
"
open-keychain/open-keychain,closed,Test Intent API with new encrypt activity,[],
open-keychain/open-keychain,closed,Don’t offer revoked keys for import,[],"Currently, the keyimport search result list includes keys that are revoked (and are marked as such in the result list).  Probably, the option of importing these should not be offered.
"
open-keychain/open-keychain,closed,Encrypting with keyId stopped working in 2.9,[],"Hi,

i'm using the API and encrypting text for key ids. In recent versions (not sure if 2.9 or 2.8) this has stopped working. The encrypted text is only being encrypted for my own key.
The keys with the requested ids are definitly in my keychain.

Furthermore I think that the api should throw an error if it hasn't all the keys that were being requested. Because if it returns success we as a sender have to way of knowing if the recipient will be able to decrypt it
"
open-keychain/open-keychain,closed,SHA256 more compatible than SHA512?,[],"research this question regarding OpenPGP implementations.
"
open-keychain/open-keychain,closed,Bouncy Castle key flags behaviour,[],"Returns 0 even when no subpacket is available.
Shouldn't this return something different?

see https://github.com/open-keychain/open-keychain/commit/e2d51b86f5c1d1c23b744e5c32539a739bfa4c8c
and https://github.com/open-keychain/open-keychain/issues/270

```
    public int getKeyFlags()
    {
        SignatureSubpacket    p = this.getSubpacket(SignatureSubpacketTags.KEY_FLAGS);

        if (p == null)
        {
            return 0;
        }

        return ((KeyFlags)p).getFlags();
    }
```
"
open-keychain/open-keychain,closed,IllegalStateException in PassphraseDialogFragment,"[Label(name=""bug"")]","from G Play
Galaxy S4 Active (jactivelte) Android 4.4 

```
java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1354)
at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1372)
at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:595)
at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:574)
at android.support.v4.app.DialogFragment.show(DialogFragment.java:127)
at org.sufficientlysecure.keychain.ui.dialog.PassphraseDialogFragment$1.run(PassphraseDialogFragment.java:81)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:157)
at android.app.ActivityThread.main(ActivityThread.java:5356)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1265)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1081)
at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,Test for divert-to-card keys,[],"Make test for import with key in https://github.com/open-keychain/open-keychain/commit/b547258df6a66a0e4d0830f5c10662a3a7095b0c
"
open-keychain/open-keychain,closed,split EncryptActivity into File and Text varieties,[],"As the title says. This is mostly done in 2ead78a1e51c71911d1205b4fe946c38924db145, but I feel like there might be problems with the intent structure left as it is now. Leaving this ticket here for @dschuermann, please review if both activities work as intended (no pun intended (heheh))
"
open-keychain/open-keychain,closed,Fix signing with stripped master key + add tests,"[Label(name=""bug"")]","Hi,

i'm trying to use openkeychain with the xmpp-client Conversations. and unfortunately, after trying for a couple of hours and reading all issues on the topic i found, i couldnt get it to work.

When i try to open the signing key (not only from Conversations, but also when i try to sign inside the openkeychain app), I get prompted for the password, but after entering it, I only get a message ""Private key could not be extracted"". As I wrote in the title, I don't want to use the master Key for signing, but a dedicated signing key, because my key is split the debian way, i.e. one only for certifying, one for encrypting and one for signing. The master key is correctly marked as not available, but somehow the app seems to try to use it for signing purposes. The same key is working in APG with k9-mail.

This issue might be related to #570, #624 and #588, which all are marked as fixed. Strangely, the issue persists for me.

If you need further information, i'll be happy to provide what i can to clear things up.

Thanks in advance
- Philipp
"
open-keychain/open-keychain,closed,empty drawer in encrypt from view key,[],"To reproduce: View Key -> Encrypt with this key -> Draw out drawer

There should be no drawer in encrypt as a spawned activity
"
open-keychain/open-keychain,closed,OK caching passphrase forever?,[],"Hi,

I'm experiencing a strange issue with latest OK (also happened with 0.7) and K9 on my Samsung Tab4 (SM-T530) with stock ROM (4.4.2)
Basically, even though I tell OK not to cache my passphrase, whenever I open an encrypted email in K9 it gets automatically decrypted without prompting for my passphrase.

The same software versions (OK and K9) on my S3 with custom ROM (Liquidsmooth 3.0 with 4.4.4) works as expected, so I assume that my Tab4 is somehow caching the passphrase. The passphrase continues to stay cached even after a full reboot, so I'm not sure where I can look to see what's happening.

Anyone else experiencing this? Obviously this is a major security issue since anyone with physical access to the Tab4 can read all emails without entering the passphrase for the private key.

Thanks
"
open-keychain/open-keychain,closed,Avatars,[],"Show avatars from contacts app (or gravatar?)
Only show when certified (incentive to certify others!)
"
open-keychain/open-keychain,closed,securityexception,"[Label(name=""bug"")]","try catch security exception:

```
java.lang.RuntimeException: Unable to create application org.sufficientlysecure.keychain.KeychainApplication: java.lang.SecurityException: caller uid 10179 is different than the authenticator's uid
at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5059)
at android.app.ActivityThread.access$1300(ActivityThread.java:162)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1432)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:158)
at android.app.ActivityThread.main(ActivityThread.java:5751)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1083)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:850)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.SecurityException: caller uid 10179 is different than the authenticator's uid
at android.os.Parcel.readException(Parcel.java:1434)
at android.os.Parcel.readException(Parcel.java:1388)
at android.accounts.IAccountManager$Stub$Proxy.addAccount(IAccountManager.java:613)
at android.accounts.AccountManager.addAccountExplicitly(AccountManager.java:571)
at org.sufficientlysecure.keychain.KeychainApplication.setupAccountAsNeeded(KeychainApplication.java:121)
at org.sufficientlysecure.keychain.KeychainApplication.onCreate(KeychainApplication.java:89)
at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5056)
... 10 more
```

and show toast: Reinstall OK!
"
open-keychain/open-keychain,closed,EncryptActivity: IndexOutOfBoundsException,"[Label(name=""bug"")]","from google play.

I was able to reproduce:
1. add key with long comment in main user id
2. go to encrypt, select key in ""To""
3. click on text field, swip to right
4. crash

```
java.lang.RuntimeException: Unable to destroy activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.EncryptActivity}: java.lang.IndexOutOfBoundsException: replace (8 ... 8) ends beyond length 7
at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3620)
at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3638)
at android.app.ActivityThread.access$1400(ActivityThread.java:157)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1300)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:157)
at android.app.ActivityThread.main(ActivityThread.java:5293)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1265)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1081)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.IndexOutOfBoundsException: replace (8 ... 8) ends beyond length 7
at android.text.SpannableStringBuilder.checkRange(SpannableStringBuilder.java:1016)
at android.text.SpannableStringBuilder.replace(SpannableStringBuilder.java:441)
at android.text.SpannableStringBuilder.insert(SpannableStringBuilder.java:207)
at android.text.SpannableStringBuilder.insert(SpannableStringBuilder.java:30)
at com.tokenautocomplete.TokenCompleteTextView.handleFocus(TokenCompleteTextView.java:495)
at com.tokenautocomplete.TokenCompleteTextView.onFocusChanged(TokenCompleteTextView.java:548)
at org.sufficientlysecure.keychain.ui.widget.EncryptKeyCompletionView.onFocusChanged(EncryptKeyCompletionView.java:153)
at android.view.View.clearFocusInternal(View.java:4933)
at android.view.View.unFocus(View.java:4967)
at android.view.ViewGroup.unFocus(ViewGroup.java:832)
at android.view.ViewGroup.unFocus(ViewGroup.java:832)
at android.view.ViewGroup.removeViewInternal(ViewGroup.java:4028)
at android.view.ViewGroup.removeViewInternal(ViewGroup.java:4016)
at android.view.ViewGroup.removeView(ViewGroup.java:3948)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1036)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1115)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1097)
at android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:1932)
at android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:335)
at android.app.Activity.performDestroy(Activity.java:5561)
at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1135)
at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3607)
... 11 more
```
"
open-keychain/open-keychain,closed,"create key: inputType=""textPersonName"" on name field?",[],"reported by Hans Christoph via Guardianproject mailinglist:
- when creating a key, the ""name"" text field does not seem to be set to handle
  names (i.e. android:inputType=""textPersonName"")
"
open-keychain/open-keychain,closed,Encrypted message is not being spellchecked anymore,[],"Fixes #803
"
open-keychain/open-keychain,closed,Android tries to spell-check copied keys,[],"They get underlined
"
open-keychain/open-keychain,closed,bit sizes not displayed anymore in keyserver search,"[Label(name=""bug"")]","maybe related to https://github.com/open-keychain/open-keychain/commit/677d9e6023e309982352574f173435c29e7ad551 and ecc changes
"
open-keychain/open-keychain,closed,imported GPG-generated ECC keys not working,"[Label(name=""bug"")]","by @Valodim from https://github.com/open-keychain/open-keychain/issues/717 :
I added experimental ECC support in 873010e, and tested key generation, encryption and signing against gnupg git master. Everything worked fine for me except importing gpg-generated ecc keys; first because of the s2k count (see #776), but even when I increased the timeout so it would work (with a lot of delay) I get ""Wrong passphrase"" even with the right one.
"
open-keychain/open-keychain,closed,NullPointerException ImportKeysActivity,"[Label(name=""bug"")]","G Play, Android 4.2 , Galaxy S4 

```
java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2246)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2296)
at android.app.ActivityThread.access$700(ActivityThread.java:151)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1281)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:5293)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1102)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:869)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ImportKeysActivity$2.onPageSelected(ImportKeysActivity.java:291)
at org.sufficientlysecure.keychain.ui.widget.SlidingTabLayout$InternalViewPagerListener.onPageSelected(SlidingTabLayout.java:300)
at android.support.v4.view.ViewPager.setCurrentItemInternal(ViewPager.java:543)
at android.support.v4.view.ViewPager.setCurrentItemInternal(ViewPager.java:509)
at android.support.v4.view.ViewPager.onRestoreInstanceState(ViewPager.java:1282)
at android.view.View.dispatchRestoreInstanceState(View.java:12561)
at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2678)
at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2684)
at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2684)
at android.view.View.restoreHierarchyState(View.java:12539)
at com.android.internal.policy.impl.PhoneWindow.restoreHierarchyState(PhoneWindow.java:1849)
at android.app.Activity.onRestoreInstanceState(Activity.java:972)
at android.app.Activity.performRestoreInstanceState(Activity.java:944)
at android.app.Instrumentation.callActivityOnRestoreInstanceState(Instrumentation.java:1148)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2224)
... 11 more
```
"
open-keychain/open-keychain,closed,RuntimeException in KeyListActivity,"[Label(name=""bug"")]","reported by Google Play

```
java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=0, result=-1, data=Intent { (has extras) }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.KeyListActivity}: java.lang.IllegalArgumentException: SuperCardToast - You must have a LinearLayout with the id of card_container in your layout!
at android.app.ActivityThread.deliverResults(ActivityThread.java:3382)
at android.app.ActivityThread.handleSendResult(ActivityThread.java:3425)
at android.app.ActivityThread.access$1300(ActivityThread.java:144)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1253)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5139)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.IllegalArgumentException: SuperCardToast - You must have a LinearLayout with the id of card_container in your layout!
at com.github.johnpersano.supertoasts.SuperCardToast.<init>(SuperCardToast.java:284)
at org.sufficientlysecure.keychain.service.OperationResultParcel.createNotify(OperationResultParcel.java:177)
at org.sufficientlysecure.keychain.ui.KeyListActivity.onActivityResult(KeyListActivity.java:206)
at android.app.Activity.dispatchActivityResult(Activity.java:5423)
at android.app.ActivityThread.deliverResults(ActivityThread.java:3378)
... 11 more
```
"
open-keychain/open-keychain,closed,if import secret key fails with an error but consolidate is successfull the log notify is green. it should be red.,"[Label(name=""bug"")]","reproduce:
import secret key, consolidate

if import secret key fails with an error but consolidate is successfull the log notify is green. it should be red.
"
open-keychain/open-keychain,closed,reject keys with unknown algorithms,"[Label(name=""enhancement"")]","BouncyCastle possibly supports more key algorithms than we expect. We should check in our import code and make sure no keys with algorithms we don't explicitly support are imported. Point in case, once BC 1.5 is merged, even without explicit support for ECC, you can import and use ECC keys, but this leads to undefined behavior in UI code, e.g. displaying the algorithm name and its bitsize.
"
open-keychain/open-keychain,closed,ECC support,[],"Creating this pull request because right now there's not even an issue for discussion.

So I'm not sure if this should be in OK 2.9 or not - it _is_ rather off track from our original plans. On the other hoof, it's there and mostly done, just needs more testing so getting the maturity in for OK3.0 would be a nice thing. [Then again...](https://www.schneier.com/blog/archives/2013/09/the_nsa_is_brea.html#c1675929)
"
open-keychain/open-keychain,closed,PgpDecryptVerify: Handle revoked and expired keys,[],
open-keychain/open-keychain,closed,miniLock support on OpenKeychain,[],"would you consider to add miniLock support to OpenKeychain app? miniLock is a simple cryptographic sharing tool that needs an android app to encrypt/decrypt files and also to manage contacts' public keys - called ID's.

https://minilock.io/
"
open-keychain/open-keychain,closed,subkeyadddialog: move date picker,"[Label(name=""bug"")]","In german the labels are long, thus the date picker is far on the right and not usable. We should move the date picker below the row.
"
open-keychain/open-keychain,closed,Add sync account only on approriate android versions,[],"Add sync account only on approriate android versions

```
  2207         AndroidRuntime  E  FATAL EXCEPTION: SyncAdapterThread-1
  2207         AndroidRuntime  E  java.lang.NoSuchMethodError: android.content.ContentResolver.query
  2207         AndroidRuntime  E  at org.sufficientlysecure.keychain.helper.ContactHelper.findRawContactId(ContactHelper.java:372)
  2207         AndroidRuntime  E  at org.sufficientlysecure.keychain.helper.ContactHelper.writeKeysToContacts(ContactHelper.java:310)
  2207         AndroidRuntime  E  at org.sufficientlysecure.keychain.service.ContactSyncAdapterService$ContactSyncAdapter.onPerformSync(ContactSyncAdapterService.java:97)
  2207         AndroidRuntime  E  at android.content.AbstractThreadedSyncAdapter$SyncThread.run(AbstractThreadedSyncAdapter.java:164)
```
"
open-keychain/open-keychain,closed,caller uid 10088 is different than the authenticator's uid,"[Label(name=""bug"")]","```
08-21 09:11:08.059 E/AndroidRuntime(16843): FATAL EXCEPTION: main
08-21 09:11:08.059 E/AndroidRuntime(16843): java.lang.RuntimeException: Unable to create application org.sufficientlysecure.keychain.KeychainApplication: java.lang.SecurityException: caller uid 10088 is different than the authenticator's uid
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5059)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at de.robv.android.xposed.XposedBridge.invokeOriginalMethodNative(Native Method)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at de.robv.android.xposed.XposedBridge.handleHookedMethod(XposedBridge.java:631)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.ActivityThread.handleBindApplication(Native Method)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.ActivityThread.access$1300(ActivityThread.java:162)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1432)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.os.Handler.dispatchMessage(Handler.java:99)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.os.Looper.loop(Looper.java:158)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.ActivityThread.main(ActivityThread.java:5751)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at java.lang.reflect.Method.invokeNative(Native Method)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at java.lang.reflect.Method.invoke(Method.java:511)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1083)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:850)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at dalvik.system.NativeStart.main(Native Method)
08-21 09:11:08.059 E/AndroidRuntime(16843): Caused by: java.lang.SecurityException: caller uid 10088 is different than the authenticator's uid
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.os.Parcel.readException(Parcel.java:1434)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.os.Parcel.readException(Parcel.java:1388)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.accounts.IAccountManager$Stub$Proxy.addAccount(IAccountManager.java:613)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.accounts.AccountManager.addAccountExplicitly(AccountManager.java:571)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at org.sufficientlysecure.keychain.KeychainApplication.setupAccountAsNeeded(KeychainApplication.java:118)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at org.sufficientlysecure.keychain.KeychainApplication.onCreate(KeychainApplication.java:88)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1012)
08-21 09:11:08.059 E/AndroidRuntime(16843):     at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5056)
08-21 09:11:08.059 E/AndroidRuntime(16843):     ... 14 more
08-21 09:11:08.069 E/EmbeddedLogger(12252): Application Label: OpenKeychain
```
"
open-keychain/open-keychain,closed,User id revocation crashes editkey,[],
open-keychain/open-keychain,closed,ContactSyncAdapterService syncing,"[Label(name=""discussion"")]","Currently `ContactSyncAdapterService.requestSync(this);` is executed at three points in `KeychainIntentService`.
Is this really the right way to sync keys into the contacts. Can't we simply keep the contact database updated via our ContentProvider? In other words: Do we really need to ""sync"", can't we simply insert/update/delete?
"
open-keychain/open-keychain,closed,Delete after encryption dialog is shown behind share dialog,"[Label(name=""bug"")]","Delete after encryption dialog is shown behind share dialog
"
open-keychain/open-keychain,closed,Decrypt symmetric files: passphrase dialog is shown two times,"[Label(name=""enhancement"")]","Decrypt symmetric files: passphrase dialog is shown two times.
I think this happens because at first the metadata file header is decrypted and then the content.
"
open-keychain/open-keychain,closed,make use of secondary progress,"[Label(name=""enhancement""), Label(name=""user interface"")]","the secondary progress is at the moment a copy of the progress percentage. it would be nicer to have meaningful information here, for example current/total of keys on key import.
"
open-keychain/open-keychain,closed,Don't sync from contacts to OK in 2.8,[],"make sure that this direction is disabled. The other way can be enabled by default.
"
open-keychain/open-keychain,closed,Dependency to handle dependencies ;),"[Label(name=""discussion"")]","Just saw this used in another projects: https://github.com/JakeWharton/sdk-manager-plugin
Works quite nice.
Should we add it?
"
open-keychain/open-keychain,closed,Keybase fingerprints are uppercase,[],"You can search and find the same key in Hkp and Keybase and the cases are different, blecch.  For some stupid reason KeybaseLib was doing a toUpper().  Fixed in upstream timbray/KeybaseLib in commit 2e8f38f6e38fe77b828826d3c6e8cb89a8a9aee5  (I backed out the Jsoup stuff for now, so you should be able to use the upstream without affecting OKC).
"
open-keychain/open-keychain,closed,Fix mime types,[],"Fix #781
"
open-keychain/open-keychain,closed,fix mime types,[],"- use octet-stream instead of pgp-encrypted
- register pgp and octet stream
"
open-keychain/open-keychain,closed,handle direct key signatures,"[Label(name=""enhancement"")]",
open-keychain/open-keychain,closed,Use LoaderFragment for certify activity,"[Label(name=""enhancement"")]","would fix glitch when loading user ids.
"
open-keychain/open-keychain,closed,"respect ""critical"" flag in signatures",[],"rfc4880: if there is a critical flag we do not implement in a signature, that entire signature should be regarded as invalid.

not sure if we should even do this. most implementations seem to set critical bits everywhere without actual meaning, so rejected keys based on this might simply be a nuisance to users. hm.

anyways, not in 2.8
"
open-keychain/open-keychain,closed,Increase s2k count,[],"delayed for 2.9: see https://github.com/open-keychain/open-keychain/commit/9474749be15b49c89b6e2de820f62b2e0029f393
"
open-keychain/open-keychain,closed,Async execution of PassphraseCacheService.getCachedPassphrase in UI code,[],"PassphraseCacheService.getCachedPassphrase is blocking and after increasing the s2kcount it is blocking much longer. The three executions in the UI code should be made asynchronous
"
open-keychain/open-keychain,closed,Pinn keybase TLS certificate,"[Label(name=""enhancement"")]","Because we are a app and not a browser we can easily pinn the certificate of keybase.io and connect only using this certificate without relying on Android's CA storage.

@timbray What do you think?
"
open-keychain/open-keychain,closed,Header f certs,[],"Header above certs: which certs are available
"
open-keychain/open-keychain,closed,User-friendly cloud search,"[Label(name=""enhancement"")]","In #755 we were talking about how to order the import-keys tabs and now I think there are too many tabs.

I was looking at the import-keys screen and suddenly thought “why should we expose nontechnical users to choices of where-to-search, they shouldn’t have to worry.” So I think we should replace the “Keyserver” and “KeybaseIO” tabs with a single “Search Cloud” tab on the Import keys page, you can type in things like “Schürmann” or “@timbray” and it will search services we consider to be useful, in parallel, and show them a merged result list they can import from if they like.  This seems way more user-friendly.  For the moment, it’s Hkp and Keybase, but there is scope to add more in future, and to remove things if they lose trust or usefulness.

If people think this is a good idea I’ll volunteer to implement.
"
open-keychain/open-keychain,closed,Remove NoSwipeWrapContentViewPager,[],"Fix #729
"
open-keychain/open-keychain,closed,disallow creation of keys with no flags,[],"ui doesn't allow modification of key flags, so keys with no usage flags are always useless. creating them probably should be forbidden as well.
"
open-keychain/open-keychain,closed,change expiry UI,[],"don't allow older dates than creation
"
open-keychain/open-keychain,closed,Cannot change passphrase on specific key,"[Label(name=""bug"")]","On one key I tinkered with, I cannot change the passphrase anymore:

```
Keychain  V  log: LogEntryParcel{mLevel=START, mType=MSG_MF, mParameters=[0xc3fbf86d5ffadfa8], mIndent=0}
 16051               Keychain  D  Send message by setProgress with progress=10, max=100
 16051               Keychain  D  Send message by setProgress with progress=10, max=100
 16051               Keychain  D  Send message by setProgress with progress=15, max=100
 16051               Keychain  V  log: LogEntryParcel{mLevel=DEBUG, mType=MSG_MF_UNLOCK, mParameters=null, mIndent=1}
 16051               Keychain  D  Send message by setProgress with progress=55, max=100
 16051               Keychain  V  log: LogEntryParcel{mLevel=INFO, mType=MSG_MF_PASSPHRASE, mParameters=null, mIndent=1}
 16051               Keychain  E  encountered pgp error while modifying key
 16051               Keychain  E  org.spongycastle.openpgp.PGPException: checksum mismatch at 0 of 20
 16051               Keychain  E  at org.spongycastle.openpgp.PGPSecretKey.extractKeyData(PGPSecretKey.java:479)
 16051               Keychain  E  at org.spongycastle.openpgp.PGPSecretKey.copyWithNewPassword(PGPSecretKey.java:800)
 16051               Keychain  E  at org.spongycastle.openpgp.PGPSecretKeyRing.copyWithNewPassword(PGPSecretKeyRing.java:389)
 16051               Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.internal(PgpKeyOperation.java:728)
 16051               Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.modifySecretKeyRing(PgpKeyOperation.java:327)
 16051               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:407)
 16051               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 16051               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 16051               Keychain  E  at android.os.Looper.loop(Looper.java:136)
 16051               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
 16051               Keychain  V  log: LogEntryParcel{mLevel=ERROR, mType=MSG_MF_ERROR_PGP, mParameters=null, mIndent=2}
```
"
open-keychain/open-keychain,closed,"Log message on new subkey: ""Generating new null bit null subkey""","[Label(name=""bug"")]","Log message on new subkey: ""Generating new null bit null subkey""
"
open-keychain/open-keychain,closed,Use dropdown in CertifyActivity,[],"Fix #763
"
open-keychain/open-keychain,closed,Handle keys without expiry date right,[],"Fixes #765
"
open-keychain/open-keychain,closed,EncryptActivity: Newly generated key does not show up in 'From' and 'To',"[Label(name=""bug"")]","@mar-v-in  EncryptActivity: Newly generated key does not show up in 'From' and 'To'
"
open-keychain/open-keychain,closed,Hide version by default,[],"Turn on our new privacy option by default.
http://blog.cryptographyengineering.com/2014/08/whats-matter-with-pgp.html
"
open-keychain/open-keychain,closed,Use 'From' dropdown in CertifyActivity,[],"- instead of the select key button, we should use the dropdown
- if no key is selected, show Supertoast
- maybe make dropdown a reusable widget to be used anywhere in OK?
"
open-keychain/open-keychain,closed,Keybase identities are misleading,[],"![screenshot_2014-08-13-11-19-27](https://cloud.githubusercontent.com/assets/17555/3910467/25b489e4-2318-11e4-8559-456d7e1e9b74.png)

The string “laurendw@keybase.io” suggests to geeks and civilians alike that such an email address exists, but it does not.  Isn’t this actively misleading?
"
open-keychain/open-keychain,closed,Key display screen is puzzling,[],"![ss](https://cloud.githubusercontent.com/assets/17555/3910257/3b6434ee-2316-11e4-9c81-7816731f310c.png)
1. What does “IDENTITIES” mean in human-comprehensible terms?  
2. What do the question marks beside the identities mean?  They don’t respond to taps and there’s no way to find out.
3. What does the tick-mark opposite “Certify identities” mean?  Does it mean that they are already certified?
"
open-keychain/open-keychain,closed,Fix encrypt intent,[],"Fix #750
"
open-keychain/open-keychain,closed,Show status icon beneath key in EncryptActivity,[],"What about showing the status icon in the drop down for each key?
so instead of hiding revoked/expired keys, we could disable the dropdown items and set the enabled state to disabled.
This would also allow to directly see if a key is certified.
"
open-keychain/open-keychain,closed,EncryptActivity: only show relevant keys,[],"Fix #756 and #757
"
open-keychain/open-keychain,closed,EncryptActivity: Don't allow encryption to revoked or expired keys,"[Label(name=""bug"")]",
open-keychain/open-keychain,closed,EncryptActivity: Don't allow signing by revoked keys,"[Label(name=""bug"")]","Disable entries in the 'From' dropdown that are revoked or expired.
"
open-keychain/open-keychain,closed,Improve prompt on Keybase search ,[],"You can actually search for twitter handle, domain name, anything at all.
"
open-keychain/open-keychain,closed,Calculate original file size (fixes metadata and decryption progress),[],"see https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpDecryptVerify.java#L459

When the file has been compressed by OpenKeychain the calculated value is obviously not correct.
Somehow we should be able to get the uncompressed length without decrypting the whole content. GnuPG somehow gets it:
`gpg --list-packets test.gpg` reveals the original size (raw data):

```
:literal data packet:
    mode b (62), created 1356362981, name=""passwords.txt"",
    raw data: 8 bytes
```
- maybe the length is at the end of the file not in the header?
"
open-keychain/open-keychain,closed,Support encrypted mime type for files,[],"Instead of trying to guess the mime type based on file ending, a better implementation should write the mime type to the encrypted header of pgp files.

http://tools.ietf.org/html/draft-moscaritolo-openpgp-literal-01
https://github.com/open-keychain/spongycastle/tree/mime-type

my branch is not working!
- due to string null termination?
"
open-keychain/open-keychain,closed,Hide file names in K9 attachments,[],"Hide file names in K9 attachments:
K9:
1. encrypt attachments, also encrypt filenames using new API, send mail
2. receive mail, decrypt filenames using API

So the user never sees the random filename in between.
"
open-keychain/open-keychain,closed,32 bit fingerprints,[],"https://evil32.com/
"
open-keychain/open-keychain,closed,Fix encrypt intent,"[Label(name=""bug"")]","see
https://github.com/open-keychain/open-keychain/wiki/Intent-API
"
open-keychain/open-keychain,closed,"Can't decrypt pgp messages with ""--hidden-recipient""",[],"From APG: https://github.com/thialfihar/apg/issues/53
We need to test this:

```
--recipient XXX@YYY.com ---> can decrypt
--hidden-recipient XXX@YYY.com ---> can NOT decrypt

    Let user to choose secret key when decryption failed in this case
    Or APG must try every single secret key for this mail
```
"
open-keychain/open-keychain,closed,Encrypt and preserve original filename (prevent metadata leakage),[],"http://superuser.com/questions/523631/pgp-gnupg-what-was-the-original-filename

Currently we pass an empty string instead of the real filename.
See PgpSignEncrypt:397

```
            // file name not needed, so empty string
            pOut = literalGen.open(bcpgOut, PGPLiteralData.BINARY, """", new Date(),
                    new byte[1 << 16]);
```

We should actually pass the filename if possible.
And for a future implementation: Use the encrypted filename for saving the file when decrypting
"
open-keychain/open-keychain,closed,Compressed PGP format for SMS encryption,[],"Looks like Textsecure will drop support for SMS encryption. This already provoked a huge thread on their mailinglist. Maybe we could come up with a compressed pgp format to be used for sms encryption to be used by people with bad data connections.
"
open-keychain/open-keychain,closed,add license header to tests,[],
open-keychain/open-keychain,closed,Google Play description translations,[],"Currently requires manual uploading of translated versions and is thus too much work.

Can we automate via transifex and G Play APIs?
"
open-keychain/open-keychain,closed,trailing data after keyring,"[Label(name=""bug"")]","trailing data after keyring...
On another test device with 2 existing secret keys from a previous OK git version.

```
Keychain  E  KeychainIntentService Exception:
 20988               Keychain  E  java.lang.RuntimeException: Encountered trailing data after keyring, should never happen!
 20988               Keychain  E  at org.sufficientlysecure.keychain.pgp.CanonicalizedPublicKeyRing.<init>(CanonicalizedPublicKeyRing.java:51)
 20988               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getTrustedMasterKeys(ProviderHelper.java:200)
 20988               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveCanonicalizedPublicKeyRing(ProviderHelper.java:395)
 20988               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:805)
 20988               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:359)
 20988               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 20988               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:99)
 20988               Keychain  E  at android.os.Looper.loop(Looper.java:213)
 20988               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:60)
```
"
open-keychain/open-keychain,open,Update database docu,[],"@Valodim , could you update the docs at https://github.com/open-keychain/open-keychain/wiki/Database to reflect the current status?
"
open-keychain/open-keychain,closed,Stop importing V3 keys,[],"@Valodim also raised this issue and https://github.com/coruus/cooperpair/tree/master/keysteak makes it even more important.

I am mostly convinced that we can stop importing v3 keys.

Any arguments against this?
"
open-keychain/open-keychain,closed,Use ModernPGP icons in DecryptActivity,[],"The new ModernPGP icons should be used in DecryptActivity.
I have some sketches on paper. I will work on this issue after OK 2.8 stable.
"
open-keychain/open-keychain,closed,Alternatives to passphrases,[],"- lockscreen pattern
- nfc two factor

Note: There are already some people working on it
"
open-keychain/open-keychain,closed,Re-create expert create key,[],"For special use cases experts like to create pgp keys without any defaults.
- Introduce action EXPERT_CREATE_KEY for EditKey
- Start with empty user id and subkey lists
"
open-keychain/open-keychain,closed,Missing subkey icon: authenticate,[],"We currently have no icon for subkeys capable of authentication.
See SubkeysAdapter and SubkeysAddedAdapter
"
open-keychain/open-keychain,closed,Edit key: internal todos,[],"Keeping a list of todos for @Valodim :
- changing expiry does not work, no error is shown
- changing expiry of master key throws:

```
Keychain  E  changing the master key not supported
  8015               Keychain  E  KeychainIntentService Exception:
  8015               Keychain  E  java.lang.NullPointerException
  8015               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:733)
```
"
open-keychain/open-keychain,closed,Use size of input uris for progress bar in encrypt/decrypt,[],"related to #734
"
open-keychain/open-keychain,closed,coveralls.io,[],"For future consideration:
- I enabled coveralls.io for this repo
- We need to configure gradle: https://github.com/kt3k/coveralls-gradle-plugin
"
open-keychain/open-keychain,closed,Better progress bar for file encryption: Approximate file size for IO_URI in KeychainIntentService,[],"see KeychainIntentService.createCryptInputData:

```
                return new InputData(getContentResolver().openInputStream(providerUri), 0);
```

Better we get the file size from the content provider to show a nicer progress bar.
- We should not rely on it.
- We can also fake a progress by annealing against 100% -> start fast, get slower
"
open-keychain/open-keychain,closed,DNSChain,[],"Maybe some people didn't heard of it until now:
DNSChain/Namecoin/DNSNMC (all the same, just different names).
Instead of a centralized approach like Keybase.io this is based on a
Bitcoin like dezentralized blockchain.

https://github.com/okTurtles/dnschain#simple-and-secure-gpg-key-distribution
https://wiki.namecoin.info/index.php?title=Identity
"
open-keychain/open-keychain,closed,Return OperationResultParcels and display notify,[],"- Return OperationResultParcels and display notify
- Do this for all activities that finishes after operation
- In many activities this needs to be handled in onActivityResult (also API activities)
"
open-keychain/open-keychain,closed,Decrypt of multiple files from ACTION_SEND_MULTIPLE,[],"http://developer.android.com/training/sharing/receive.html
- display decrypted files inside the activity to allow opening them separately
- allow saving in a directory

For (much) later implementation: save multi-selection of encrypted files into one folder with android.intent.action.OPEN_DOCUMENT_TREE: http://developer.android.com/preview/api-overview.html#Storage
"
open-keychain/open-keychain,open,Document Provider (External app proposal),[],"Externalized issue as discussed in https://github.com/open-keychain/open-keychain/issues/665:

We could create an external app to create a  [Document Provider](https://developer.android.com/guide/topics/providers/document-provider.html) using the OpenPGP API.

This would be displayed like Google Drive for example, but being a local storage for encrypted files.
Basically, Android's idea is to go away from a file based storage model. Instead it aims to be a app based storage model.

There is actually already a finished example where a storage provider is doing encryption decryption. See https://plus.google.com/+JeffSharkey/posts/9BmGb3xbPcA

It would be extremly awesome if I could just go into any application that uses the storage API and open an image from the OK storage which is then decrypted on the fly (maybe we could even ask the user if he wants to decrypt it or use the encrypted file directly).

**As always, these points are open for discussion**
"
open-keychain/open-keychain,closed,"EncryptActivity: Instead of NoSwipeWrapContentViewPager, use replace fragment method",[],"Instead of NoSwipeWrapContentViewPager, use replace fragment method like done in CreateKeyActivity and its fragments
"
open-keychain/open-keychain,closed,Improve file encrypt,[],"Fixing issues #440 #665 and #677 (decrypt still misses VIEW intent feature)
This also adds the TokenAutoComplete lib as dependency.
"
open-keychain/open-keychain,closed,Fix CachedPublicKeyring,[],"I had this code already in my git, but it was in between the load of other things in there, just pulled it out.
"
open-keychain/open-keychain,closed,Fix import from server,[],"Key import from server was broken since introduction of FileImportCache.
It would be a bad idea to write to cache file if binder is not used. This is why I reintroduced the old intent based transfer optionally.
"
open-keychain/open-keychain,closed,Fix CachedPublicKeyRing,[],"CachedPublicKeyRing needs fixing
"
open-keychain/open-keychain,closed,Keybase query/response encoding,[],"1. Search for ""dschuermann""
2. You will get ""Dominik Sch%rmann"" (replace % with blackbox character)
"
open-keychain/open-keychain,closed,Keyserver errors (upstream sks bug?),[],"pool.sks-keyservers.net always shows the same error:
http://pool.sks-keyservers.net/pks/lookup?op=index&options=mr&search=dominik
http://pool.sks-keyservers.net/pks/lookup?op=index&options=mr&search=a

pgp.mit.edu works and shows different ones
http://pgp.mit.edu/pks/lookup?op=index&options=mr&search=dominik
http://pgp.mit.edu/pks/lookup?op=index&options=mr&search=a

We should report upstream.
"
open-keychain/open-keychain,closed,Uploading a key: java.lang.IllegalArgumentException: Invalid column has_any_secret,[],"When uploading a key:

```
27477               Keychain  E  KeychainIntentService Exception:
 27477               Keychain  E  java.lang.IllegalArgumentException: Invalid column has_any_secret
 27477               Keychain  E  at android.database.sqlite.SQLiteQueryBuilder.computeProjection(SQLiteQueryBuilder.java:632)
 27477               Keychain  E  at android.database.sqlite.SQLiteQueryBuilder.buildQuery(SQLiteQueryBuilder.java:447)
 27477               Keychain  E  at android.database.sqlite.SQLiteQueryBuilder.query(SQLiteQueryBuilder.java:393)
 27477               Keychain  E  at android.database.sqlite.SQLiteQueryBuilder.query(SQLiteQueryBuilder.java:294)
 27477               Keychain  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:570)
 27477               Keychain  E  at android.content.ContentProvider.query(ContentProvider.java:857)
 27477               Keychain  E  at android.content.ContentProvider$Transport.query(ContentProvider.java:200)
 27477               Keychain  E  at android.content.ContentResolver.query(ContentResolver.java:461)
 27477               Keychain  E  at android.content.ContentResolver.query(ContentResolver.java:404)
 27477               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getWrappedKeyRing(ProviderHelper.java:237)
 27477               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getWrappedPublicKeyRing(ProviderHelper.java:225)
 27477               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:469)
 27477               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 27477               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 27477               Keychain  E  at android.os.Looper.loop(Looper.java:136)
 27477               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,Nullpointer on import of many keys,[],"@Valodim I can send you the exported keys as a file if you need them.

```
[...]
 32766               Keychain  D  Found class: class org.spongycastle.openpgp.PGPPublicKeyRing
 32766               Keychain  D  MSG_IP
 32766               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/unified, proj=[has_any_secret, verified, pubkey_data])
 32766               Keychain  D  Query: SELECT (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, verified, keyrings_public.key_ring_data AS pubkey_data FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) INNER JOIN keyrings_public ON (keys.master_key_id = keyrings_public.master_key_id) WHERE (keys.rank = 0 AND keys.master_key_id = '8922056513995799057') ORDER BY user_ids.user_id ASC
 32766               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@41dc1530
 32766               Keychain  D  <<<<<
 32766               Keychain  D  MSG_KC_PUBLIC
 32766               Keychain  D  MSG_KC_MASTER
 32766               Keychain  D  MSG_KC_SUB
 32766               Keychain  D  MSG_KC_SUCCESS
 32766               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/unified, proj=[has_any_secret, verified, privkey_data])
 32766               Keychain  D  Query: SELECT (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, verified, keyrings_secret.key_ring_data AS privkey_data FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) LEFT JOIN keyrings_secret ON (keys.master_key_id = keyrings_secret.master_key_id) WHERE (keys.rank = 0 AND keys.master_key_id = '8922056513995799057') ORDER BY user_ids.user_id ASC
 32766               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@4207b238
 32766               Keychain  D  <<<<<
 32766               Keychain  D  MSG_IP_PREPARE
 32766               Keychain  D  MSG_IP_INSERT_KEYRING
 32766               Keychain  D  MSG_IP_INSERT_SUBKEYS
 32766               Keychain  D  Send message by setProgress with progress=40, max=100
 32766               Keychain  D  MSG_IP_MASTER
 32766               Keychain  D  MSG_IP_MASTER_FLAGS_CXS
 32766               Keychain  D  MSG_IP_SUBKEY
 32766               Keychain  D  MSG_IP_SUBKEY_FLAGS_XEX
 32766               Keychain  D  MSG_IP_SUBKEY_EXPIRES
 32766               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/unified, proj=[master_key_id, has_any_secret, verified, pubkey_data])
 32766               Keychain  D  Query: SELECT keys.master_key_id, (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, verified, keyrings_public.key_ring_data AS pubkey_data FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) INNER JOIN keyrings_public ON (keys.master_key_id = keyrings_public.master_key_id) WHERE (keys.rank = 0) AND (has_any_secret = 1) ORDER BY user_ids.user_id ASC
 32766               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@4206abe8
 32766               Keychain  D  0 {
 32766               Keychain  D  master_key_id=-6070217738306077946
 32766               Keychain  D  has_any_secret=1
 32766               Keychain  D  verified=1
 32766               Keychain  D  pubkey_data=<unprintable>
 32766               Keychain  D  }
 32766               Keychain  D  1 {
 32766               Keychain  D  master_key_id=2642039576210718294
 32766               Keychain  D  has_any_secret=1
 32766               Keychain  D  verified=1
 32766               Keychain  D  pubkey_data=<unprintable>
 32766               Keychain  D  }
 32766               Keychain  D  <<<<<
 32766               Keychain  D  MSG_IP_UID_CLASSIFYING
 32766               Keychain  D  MSG_IP_UID_PROCESSING
 32766               Keychain  D  MSG_IP_UID_CERTS_UNKNOWN
 32766               Keychain  D  MSG_IP_UID_PROCESSING
 32766               Keychain  D  MSG_IP_UID_CERTS_UNKNOWN
 32766               Keychain  D  MSG_IP_UID_PROCESSING
 32766               Keychain  D  MSG_IP_UID_CERTS_UNKNOWN
 32766               Keychain  D  MSG_IP_UID_PROCESSING
 32766               Keychain  D  MSG_IP_UID_CERTS_UNKNOWN
 32766               Keychain  D  MSG_IP_UID_PROCESSING
 32766               Keychain  D  MSG_IP_UID_CERTS_UNKNOWN
 32766               Keychain  D  MSG_IP_UID_PROCESSING
 32766               Keychain  D  MSG_IP_UID_CERTS_UNKNOWN
 32766               Keychain  D  Send message by setProgress with progress=65, max=100
 32766               Keychain  D  MSG_IP_UID_REORDER
 32766               Keychain  V  delete(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/public)
 32766               Keychain  D  MSG_IP_DELETE_OLD_FAIL
 32766               Keychain  D  MSG_IP_APPLY_BATCH
 32766               Keychain  D  Send message by setProgress with progress=75, max=100
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/public, values=master_key_id=8922056513995799057 key_ring_data=[B@42246a98)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/keys, values=fingerprint=[B@42020030 creation=1342299456 rank=0 can_encrypt=false master_key_id=8922056513995799057 key_size=4096 is_revoked=false can_certify=true key_id=8922056513995799057 can_sign=true algorithm=1)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/keys, values=creation=1396979667 key_size=2048 is_revoked=false key_id=7219726879532858597 can_sign=false algorithm=1 expiry=1460051667 fingerprint=[B@42252e90 rank=1 can_encrypt=true master_key_id=8922056513995799057 can_certify=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/user_ids, values=user_id=Vincent Breitmoser <v.breitmoser@mugenguild.com> rank=0 master_key_id=8922056513995799057 is_primary=true is_revoked=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/certs, values=creation=1396979611 rank=0 master_key_id=8922056513995799057 key_id_certifier=8922056513995799057 verified=2 data=[B@42078d30 type=19)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/user_ids, values=user_id=Valodim Skywalker <valodim@mugenguild.com> rank=1 master_key_id=8922056513995799057 is_primary=false is_revoked=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/certs, values=creation=1396979789 rank=1 master_key_id=8922056513995799057 key_id_certifier=8922056513995799057 verified=2 data=[B@422599e8 type=19)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/user_ids, values=user_id=Vincent Breitmoser <valodim@mugenguild.com> rank=2 master_key_id=8922056513995799057 is_primary=false is_revoked=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/certs, values=creation=1396979850 rank=2 master_key_id=8922056513995799057 key_id_certifier=8922056513995799057 verified=2 data=[B@42051210 type=19)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/user_ids, values=user_id=Vincent Breitmoser (gmail) <valodim@gmail.com> rank=3 master_key_id=8922056513995799057 is_primary=false is_revoked=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/certs, values=creation=1396979881 rank=3 master_key_id=8922056513995799057 key_id_certifier=8922056513995799057 verified=2 data=[B@42062c78 type=19)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/user_ids, values=user_id=Vincent Breitmoser (uni) <v.breitmoser@tu-bs.de> rank=4 master_key_id=8922056513995799057 is_primary=false is_revoked=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/certs, values=creation=1396979735 rank=4 master_key_id=8922056513995799057 key_id_certifier=8922056513995799057 verified=2 data=[B@420c6b50 type=19)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/user_ids, values=user_id=Vincent Breitmoser (Stratum 0) <v.breitmoser@stratum0.org> rank=5 master_key_id=8922056513995799057 is_primary=false is_revoked=false)
 32766               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/8922056513995799057/certs, values=creation=1396979756 rank=5 master_key_id=8922056513995799057 key_id_certifier=8922056513995799057 verified=2 data=[B@41e0e728 type=19)
 32766               Keychain  D  MSG_IP_SUCCESS
 32766               Keychain  D  Send message by setProgress with progress=90, max=100
 32766               Keychain  D  Found class: class org.spongycastle.openpgp.PGPPublicKeyRing
 32766               Keychain  D  MSG_IP
 32766               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-9132286278558359519/unified, proj=[has_any_secret, verified, pubkey_data])
 32766               Keychain  D  Query: SELECT (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, verified, keyrings_public.key_ring_data AS pubkey_data FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) INNER JOIN keyrings_public ON (keys.master_key_id = keyrings_public.master_key_id) WHERE (keys.rank = 0 AND keys.master_key_id = '-9132286278558359519') ORDER BY user_ids.user_id ASC
 32766               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@4225cf08
 32766               Keychain  D  <<<<<
 32766               Keychain  D  MSG_KC_PUBLIC
 32766               Keychain  D  MSG_KC_MASTER
 32766               Keychain  D  MSG_KC_UID_BAD
 32766               Keychain  D  MSG_KC_UID_REMOVE
 32766               Keychain  D  MSG_KC_FATAL_NO_UID
 32766               Keychain  D  Found class: class org.spongycastle.openpgp.PGPPublicKeyRing
 32766               Keychain  D  MSG_IP
 32766               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/4796388720016978890/unified, proj=[has_any_secret, verified, pubkey_data])
 32766               Keychain  D  Query: SELECT (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret, verified, keyrings_public.key_ring_data AS pubkey_data FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) INNER JOIN keyrings_public ON (keys.master_key_id = keyrings_public.master_key_id) WHERE (keys.rank = 0 AND keys.master_key_id = '4796388720016978890') ORDER BY user_ids.user_id ASC
 32766               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@42265c18
 32766               Keychain  D  <<<<<
 32766               Keychain  D  MSG_KC_PUBLIC
 32766               Keychain  D  MSG_KC_MASTER
 32766               Keychain  D  MSG_KC_UID_DUP
 32766               Keychain  D  MSG_KC_SUB
 32766               Keychain  E  KeychainIntentService Exception:
 32766               Keychain  E  java.lang.NullPointerException
 32766               Keychain  E  at org.sufficientlysecure.keychain.pgp.UncachedKeyRing.canonicalize(UncachedKeyRing.java:516)
 32766               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.savePublicKeyRing(ProviderHelper.java:698)
 32766               Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:162)
 32766               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:393)
 32766               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 32766               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 32766               Keychain  E  at android.os.Looper.loop(Looper.java:136)
 32766               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,Skip spongycastle tests in root project,[],"This will make moving back to a pure SC/BC upstream easier since
we don't need to change their source code
"
open-keychain/open-keychain,closed,create key exception,[],"Hey @Valodim , I get the following exception when creating a key with the new simple CreateKeyActivity:

```
07-27 12:20:26.643  26362-28674/org.sufficientlysecure.keychain E/Keychain﹕ KeychainIntentService Exception:
    java.lang.RuntimeException: Encountered trailing data after keyring, should never happen!
            at org.sufficientlysecure.keychain.pgp.WrappedPublicKeyRing.getRing(WrappedPublicKeyRing.java:34)
            at org.sufficientlysecure.keychain.pgp.WrappedPublicKeyRing.getRing(WrappedPublicKeyRing.java:13)
            at org.sufficientlysecure.keychain.pgp.WrappedKeyRing.getPublicKey(WrappedKeyRing.java:109)
            at org.sufficientlysecure.keychain.provider.ProviderHelper.getTrustedMasterKeys(ProviderHelper.java:201)
            at org.sufficientlysecure.keychain.provider.ProviderHelper.internalSavePublicKeyRing(ProviderHelper.java:404)
            at org.sufficientlysecure.keychain.provider.ProviderHelper.saveSecretKeyRing(ProviderHelper.java:818)
            at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:349)
            at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
            at android.os.Handler.dispatchMessage(Handler.java:102)
            at android.os.Looper.loop(Looper.java:136)
            at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,Subkeys with updated expiry show original date and disabled,[],"If a secret subkey is set to expire and is updated on your PC, importing it on your phone shows only the master key to be updated. Subkeys however are not and show to be expired.
"
open-keychain/open-keychain,closed,Bouncy Castle 1.51,[],"Bouncy Castle and Spongy Castle 1.51 are out.
I want to emphasize on some points from http://www.bouncycastle.org/releasenotes.html but haven't looked into details:
- PGP key signature certifications did not support DIRECT KEY signatures. This has been fixed.
- User Attribute subpackets in PGP with long length encodings could result in certification verification failing. This has been fixed.
- The PGP API now allows access and handling of User IDs as raw byte arrays, to deal with keyrings not using UTF-8.
- The PGP API now provides automatic conversion of embedded signatures in signature sub-packet vectors.
- The PGP API now fully supports ECDH as outlined in RFC 6637.
- There has been further clean out of deprecated methods in this release. If your code has previously been flagged as using a deprecated method you may need to change it. The OpenPGP API is the most heavily affected.

We should update after our next release, so no hurry.
"
open-keychain/open-keychain,closed,Keyserver name resolve,[],"I run a keyserver at port 80 through rev. proxy (""keyserver.xxx.de:80). Instead of calling ""keyserver.xxxx.de:80/pks/lookup...."", OpenKeyChain calls my server ip (5.X.X.X/pks/lookup....). But this adress doesn't point to my keyserver. OpenkeyChain receives a 404. I think there is some problem with the name resolution. With other programs (thunderbirld with plugin), this one works.
"
open-keychain/open-keychain,closed,Build on Windows/Mac difficult,[],"- no openjdk (maybe https://github.com/alexkasko/openjdk-unofficial-builds#openjdk-unofficial-installers-for-windows-linux-and-mac-os-x ? )
- no bash on Windows for install-custom-gradle-test-plugin.sh
"
open-keychain/open-keychain,closed,Implemented concealing of the application (OpenKeychain),[],"Called it Conceal_PGP_Application, cause that's exacly what it does ;)
"
open-keychain/open-keychain,closed,Added notification to passphrasecache,[],"#340
"
open-keychain/open-keychain,closed,"Rename branch ""external-test"" back to ""master""",[],"It was quite confusing to me that the master branch was merged into the external-test branch, this is especially challenging when trying to resolve merge conflicts^^
"
open-keychain/open-keychain,closed,External test + working SaveKeyringParcel,[],"Moving discussion on the subject here.

So here's the thing. This still requires a snapshot version of the gradle-android-test-plugin. That can be put into the local maven repository by simply running ./install-custom-gradle-plugin.sh, and this works fine in travis as well. It's just hella ugly.

I tried including the Test project conditionally by providing a variable (./gradlew -PwithTesting=true) or checking for a file (touch tests-ok). Both worked fine, but in turn broke the android studio build. I'm out of ideas here.

So tl;dr everything works fine but it's slightly ugly now. What do we do with this? I would like to get this into master one way or another.
"
open-keychain/open-keychain,closed,Fix OperationResultParcel,[],"Naming conventions save lifes... or atleast make addAll() work
"
open-keychain/open-keychain,closed,Functional testing: canonicalize a key with a bad signature,[],"In this mountain of code there is the start of a test for canonicalize: testCanonicalizeExtraIncorrectSignature. It adds an extra, bad, signature, and checks that canonicalize removes it.

There is a chance this will go from passing to failing on Monday, because of the short expiry date of the sample key signature (Mon Jul  7 14:25:55 BST 2014), so best to wait until Tuesday before merging (assuming you're happy with the changes)

Much of the complexity here is because none of the PGP classes in BouncyCastle implement equals. (Or indeed toString, which makes it hard to figure out what went wrong when a comparison fails - I've resorted to dumping the keyring and looking at it with pgpdump).
"
open-keychain/open-keychain,closed,Prefer composition to inheritance,[],"minor tidying...
"
open-keychain/open-keychain,closed,Local subpackets for origin?,[],"Currently OK's key db is just a caching layer on OpenPGP keys. So exporting a key using the pgp packet format and then importing it again should show up exactly the same db entry. This imposes a problem for extensibility. We need for example a flag where the key is coming from as discussed in other issues to hide/show these keys based on preference.

The question open for research:
Would it be possible to put these information in a OpenPGP subpacket flagged for local use only?
Do other implementations just ignore it?
Are those local subpackets stripped before uploading keys to keyservers?

This feature is especially important for automatic key discovery and related functions. What do you think, @mar-v-in ?
"
open-keychain/open-keychain,closed,Better K9 Integration,[],"On K9 start: If any pgp provider is installed, offer activating it by showing a dialog that redirects to the preferences.
"
open-keychain/open-keychain,closed,“L” SDK mix-up,[],"I don’t think I changed anything and I think I’m in sync with upstream...

/Users/twbray/dev/studio/open-keychain/OpenKeychain/src/main/AndroidManifest.xml:0:0 Error:
    uses-sdk:minSdkVersion 9 cannot be smaller than version L declared in library com.android.support:support-v4:21.0.0-rc1
:OpenKeychain:processDebugManifest FAILED

FAILURE: Build failed with an exception.
- What went wrong:
  Execution failed for task ':OpenKeychain:processDebugManifest'.
  
  > Manifest merger failed : uses-sdk:minSdkVersion 9 cannot be smaller than version L declared in library com.android.support:support-v4:21.0.0-rc1
- Try:
  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

BUILD FAILED
"
open-keychain/open-keychain,closed,Fixed #702 and also #597,[],"Fixed:
#597 Bootstrap deprecated
#702 Key now shown in hexadecimal notation
"
open-keychain/open-keychain,closed,String plurals problem,"[Label(name=""bug"")]","from transifex:
The URL we used to update the source file from was https://github.com/open-keychain/open-keychain/raw/master/OpenKeychain/src/main/res/values/strings.xml.

The exact error we encountered was:

Bad '<plurals>' element in line number 549. The plurals element in the uploaded content has 3 plural forms but language 'English (en)' requires 2 plural forms. 
"
open-keychain/open-keychain,closed,Key fingerprints are shown in decimal notation for signing at encryption,[],"(Is already fixed, will make a pullrequest together with other changes)
"
open-keychain/open-keychain,closed,"travis fails, keybase lib related?",[],"https://travis-ci.org/open-keychain/open-keychain/builds/28654806
"
open-keychain/open-keychain,closed,Export private key funtionality missing?,[],"I generated my private key on my android device and would like to export it so I can use it on other devices as well.  How can I do that?
"
open-keychain/open-keychain,closed,Partial fix for #597 (Navbar),[],"The navbaricons are now standard Android icons.
The Apps-icons is now a list, both, because it fits better and there is no droid in the icon pack.
-> #597 
"
open-keychain/open-keychain,closed,plural strings msg_kc_success_bad etc.,[],"reported via transifex:
""Shouldn't strings msg_kc_success_bad, msg_kc_success_bad_and_red, msg_kc_success_redundant, msg_mg_found_new offer the singular/plural alternative?""
"
open-keychain/open-keychain,closed,keep known secret keys?,[],"if a new secret keyring is imported which contains /less/ subkeys than the old one - should we keep the old ones? it would be in keeping with the overall import behavior of merging information and never losing it, but if someone imports a secret key with less known subkeys he will probably want OK to forget the old ones... not sure though.
"
open-keychain/open-keychain,closed,add (or workaround) additional subkeys from public to secret keyrings,[],"if a public key is imported where a secret key exists, and that public key has more subkeys than the secret key, I would like to generate a gnu dummy s2k subkey in the secret keyring for the subkey, for consistency.

it's a bit tricky because bouncycastle doesn't support this
"
open-keychain/open-keychain,closed,implement primary uid changing,[],"keeping track of todos: the primary user id field is still ignored in SaveKeyringParcel
"
open-keychain/open-keychain,closed,Android 5: directory selection,[],"For (much) later implementation: save multi-selection of encrypted files into one folder with android.intent.action.OPEN_DOCUMENT_TREE: http://developer.android.com/preview/api-overview.html#Storage
"
open-keychain/open-keychain,closed,OpenPGP API error storage == 0,"[Label(name=""bug"")]","I tried to encrypt several messages with the OpenKeychain API Demo and ended up with the following error every time:

```
06-25 19:48:55.306  21848-21971/org.sufficientlysecure.keychain E/DatabaseUtils﹕ Writing exception to parcel
    java.lang.NullPointerException: storage == null
            at java.util.Arrays$ArrayList.<init>(Arrays.java:38)
            at java.util.Arrays.asList(Arrays.java:155)
            at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:277)
            at android.content.ContentProvider.query(ContentProvider.java:857)
            at android.content.ContentProvider$Transport.query(ContentProvider.java:200)
            at android.content.ContentProviderNative.onTransact(ContentProviderNative.java:112)
            at android.os.Binder.execTransact(Binder.java:404)
            at dalvik.system.NativeStart.run(Native Method)
06-25 19:48:55.316  21769-21769/org.sufficientlysecure.keychain.demo E/Keychain﹕ onError getErrorId:0
06-25 19:48:55.316  21769-21769/org.sufficientlysecure.keychain.demo E/Keychain﹕ onError getMessage:storage == null
```
"
open-keychain/open-keychain,closed,Temporary fix for #648,[],"This is a temporary ""fix"" for Issue #648 which will be removed when the setup-wizard is available.
"
open-keychain/open-keychain,closed,UI: Keyserver list editing,[],"As dicussed in #676:
- Allow sorting of items
- Indicate that first item in list is the default
"
open-keychain/open-keychain,closed,HKPS by default,[],"- Add support for sks-keyservers.net (pinned CA)
- Change default key server list and update old one (Fixes #676)
- Remove usage of Apache HttpClient in favour of HttpUrlConnection (cleans up HkpKeyserver code a bit)
"
open-keychain/open-keychain,closed,Use kb sriram's openpgp tests,[],"We should integrate some of sriram's tests into OpenKeychain's tests:
https://github.com/kbsriram/openpgp-tests
"
open-keychain/open-keychain,closed,Fix for #687,[],"Now when copying a keys fingerprint, only the fingerprint itself without the scheme is copied.
"
open-keychain/open-keychain,closed,"Copying a keys fingerprint copies ""openpgp4fpr"" together with it",[],"Since this schema is only necessary for sharing over QR-Codes, I would suggest to only copy the real fingerprint.
It was especially annoying when I tried to enter the fingerprint into a website's input and it was rejected because of the schema which could unfortunately not be seen.
"
open-keychain/open-keychain,closed,Use minidns instead of dnsjava,[],"As discussed in #680
"
open-keychain/open-keychain,closed,Suggest OK compatible apps in app auth view,[],"Show compatible apps + store links on the app auth page.

https://github.com/open-keychain/open-keychain/wiki/Applications is a list of (currently) supported apps. This should be promoted in-app to ease the use of strong cryptography.
"
open-keychain/open-keychain,closed,Fix of #683,[],"Fixes problems with percent signs in keys by replacing the ""escaped"" ones (`%%`) with their urlencoded counterparts (`%25`).
"
open-keychain/open-keychain,closed,Crashing on search due to percent character,[],"1. search for 'gaber' on keyserver
2. crash
"
open-keychain/open-keychain,closed,Promote supported apps on app settings view,[],"Users may see an ""empty"" screen if no app was linked with OK.

IMHO OK should:
- Check the installed apps
- Check for Play or F-Droid

Allow direct opening of apps listed on https://github.com/open-keychain/open-keychain/wiki/Applications

If an app is not installed offer a direct link to play / f-droid.
"
open-keychain/open-keychain,closed,"Handle empty keybase.io query, should fix #675",[],
open-keychain/open-keychain,closed,org.xbill.DNS making Studio cry,[],"the project is actually OK, I can build fine, but there is red all over my screens because Studio is pissed at the path organization in dnsjava.  Known issue?

![image](https://cloud.githubusercontent.com/assets/17555/3354059/492ccee4-fa97-11e3-8708-55d0651a9891.png)
"
open-keychain/open-keychain,closed,"More ""save keyring"" tests",[],"I borrowed the test suite from Haskell OpenPGP. (It's in as a git submodule, but I only use the test suite within it)

Those ring_trust packet entries should probably be skipped, I suppose?

Still need to test unhappy paths, and add some read keyring tests to allow round-trip testing
"
open-keychain/open-keychain,closed,Key import activity unbalanced on tablet,"[Label(name=""bug"")]","See pic; left half of screen is unused, import potions tabs crowded off screen.
![screenshot_2014-06-20-09-06-59](https://cloud.githubusercontent.com/assets/17555/3352431/d66e5332-fa46-11e3-89af-0bb30ae624e2.png)
"
open-keychain/open-keychain,closed,UI: Share to encrypt/decrypt,[],"When the user selects a file in a secondary app and shares it to encrypt/decrypt, he does not need the whole encrypt/decrypt interface as file is already selected. 

The UI should not allow changing the selected file if it is received via intent. Maybe it would be nice to have a dialog UI here?
"
open-keychain/open-keychain,closed,SSL for contact discovery,[],"We definitely need SSL connection for automatic contact discovery to prevent exposing all emails of your contacts
"
open-keychain/open-keychain,closed,keybase.io error on querying with empty string,[],"Currently a complicated error is shown when querying keybase.io with an empty string. This could be improved.
"
open-keychain/open-keychain,closed,Discussion: keybase.io support,[],"Discussion from https://github.com/open-keychain/open-keychain/pull/668

We are curious if it is really required to have these proofs in a centralized directory instead of attaching them to the keys themselves. But as currently no other alternative is really ready, @Valodim and I discussed keybase.io a bit on the event we are currently participating and came to the conclusion that it is okay to implement keybase.io support for OK with some design decision:
- display proofs in a tab inside the ViewKeyActivity only if a global preference is enabled to ""Enable keybase.io proofs""
- keybase.io import tab can always be displayed
- mark keybase.io keys on import with a special database property ""key_origin"" (something similar will be done for auto discovered keys, so no need to do that, its just a new possible value for key_origin)
- querying proofs should be done when opening the tab, so no additional database columns should be needed.
"
open-keychain/open-keychain,closed,Lib translations,[],"- add transifex resource
- 
"
open-keychain/open-keychain,closed,VERY basic test for save keyring,[],"I'm still feeling my way around the code, but I hope this test will at least catch some types of bug
"
open-keychain/open-keychain,closed,Contact discovery improvements,[],"- sync automatically with other accounts, sync once after starting ok the first time
- add keys with db flag ""key_origin"", integer
- change db flag after used for encryption
- add actionbar item with ""eye"" icon: drop down with ""show used keys"", ""also show automatically downloaded keys""

As always: all points open for discussion!
"
open-keychain/open-keychain,closed,Importing file throws Nullpointer,[],"Importing a file with public and private key:

```
 13668               Keychain  E  java.lang.NullPointerException
 13668               Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:137)
 13668               Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:381)
 13668               Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
 13668               Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
 13668               Keychain  E  at android.os.Looper.loop(Looper.java:136)
 13668               Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
```
"
open-keychain/open-keychain,closed,Advanced key tabs,[],"- bigger tabs
- persistent checkbox
"
open-keychain/open-keychain,closed,Moved Keybase stuff into KeybaseLib submodule,[],"There are no OKC or Android dependencies in the Keybase code so I thought it might as well be its own project/submodule.

Also, patched README.md for new install command.
"
open-keychain/open-keychain,closed,Check for Internet before querying keyserver,"[Label(name=""enhancement"")]","Regarding keyserver queries in the import activity:
A SuperToast with ""Unrecoverable error"" is shown containing an UnknownHostException when no Internet is available on Android.
We should check for Internet connection before querying using the Android APIs or maybe catching the exception?
"
open-keychain/open-keychain,closed,gradle pain ,[],"I synced up OKC for the first time in a while and Studio is fighting gradle, any ideas?

![image](https://cloud.githubusercontent.com/assets/17555/3334074/888844aa-f7fa-11e3-8a2a-f773c1a0d179.png)
"
open-keychain/open-keychain,closed,Improvements for file encryption/decryption,[],"### Improvements
- UI: Make it a TextField with an attachment icon on the left when something is selected, use new open icon from Android (as now used in import activity)
- Show sdcard in side menu in storage API? I have seen this elsewhere, this should be possible somehow...
- Batch-encryption? with multi-select in storage API?
- Propose filename with gpg ending when storing it using the storage API?
- Don't show output dialog on Android 4.4, it is only used to provide a way for inputting a output filename, with the storage API this should not be necessary, just directly encrypt/decrypt
### Backward compatibility for Android < 4.4
- OK should also work with images selected from the gallery, not just with files selected from a file manager. Does this now work? (We should never try to parse the Uri, just use it for getting the input stream)
- Also only show filename, not the whole path after selecting a file on Android < 4.4 (to have the same activity design on all Android versions).
### Being a Document Provider

A more extended approach would be to let OK be a [Document Provider](https://developer.android.com/guide/topics/providers/document-provider.html). This would be displayed like Google Drive for example, but being a local storage for encrypted files.
Basically, Android's idea is to go away from a file based storage model. Instead it aims to be a app based storage model.

There is actually already a finished example where a storage provider is doing encryption decryption. See https://plus.google.com/+JeffSharkey/posts/9BmGb3xbPcA

It would be extremly awesome if I could just go into any application that uses the storage API and open an image from the OK storage which is then decrypted on the fly (maybe we could even ask the user if he wants to decrypt it or use the encrypted file directly).

**As always, these points are open for discussion**
"
open-keychain/open-keychain,closed,Add Document/Storage API support,[],"This will add support for the storage API introduced with Android 4.4 in encryption and decryption dialogs.

Although the current state works, we should consider some UI changes: The editable text field that showed the whole file path before, shows only the file name when using storage API. This is because files in storage API do not necessarily have a path and the internal URI is not intended to be human readable. Editing the text field does not make sense anymore - maybe the EditText should be replaced by a TextView for 4.4 ?
"
open-keychain/open-keychain,closed,App name,[],"[PgpHelper.java#L63](https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/pgp/PgpHelper.java#L63):

public static String getFullVersion(Context context) {
        return ""**OpenPGP Keychain** v"" + getVersion(context);
    }
"
open-keychain/open-keychain,closed,Provide privacy option to omit/alter 'Version' header on signatures/encrypted files,"[Label(name=""enhancement"")]","from https://github.com/thialfihar/apg/issues/44

> I would like to avoid specifying that I am using APG (especially a specific version of APG) when I send encrypted/signed mail. I want this for two reasons:
> 1. I don't want to disclose the exact version of the software I use, to avoid targeted exploitation.
> 2. I would like to avoid disclosing that I am using an Android device to reply to email.
> 
> It would be nice to have a privacy option to omit this 'Version' header from signatures and encrypted files for these reasons.
"
open-keychain/open-keychain,closed,Improve contact sync,[],"- Merge all user ids of a key into one raw contact (related to #659)
- Update contacts: Changes in keyrings (user id add, user id revoke, change of primary id, deletion) will be updated into contact db
- Only add keyrings to contact db that are not expired nor revoked
"
open-keychain/open-keychain,closed,OpenPGP Error: unknown object in stream: 12,"[Label(name=""bug"")]","This error occurs in K-9 Mail when opening [this message](https://gist.github.com/zjw/1a2edbdcc50faae11592).
"
open-keychain/open-keychain,closed,Aggregate raw contacts of same key,[],"As discussed in https://github.com/open-keychain/open-keychain/issues/657 we should aggregate raw contacts from the same key.

see https://developer.android.com/reference/android/provider/ContactsContract.AggregationExceptions.html
"
open-keychain/open-keychain,closed,Start on Robolectric integration test,[],"I've just created this pull request as a basis for discussion on the mailing list. You don't have to merge it.
"
open-keychain/open-keychain,closed,Contact Sync Improvements,[],"Currently for every email (user id) inside OK a new raw contact is added.
This pollutes android's contact app with too many new contacts the user probably does not want.

I would propose that we only add raw contacts for OK where the corresponding email address already exists inside another contact (from google sync, davdroid...).

Additionally, we should add a preference to override that behaviour and sync all user ids.

@mar-v-in
"
open-keychain/open-keychain,closed,Added SuperToasts with new notify-wrapper,[],"Fixed #655
Description from #655, now against master:

First work on #260
Added new notification-wrapper with a first example in the decrypt file fragment
Added new notification-area layout part with first integration in the decrypt content. Background is set to standard purple.
Please give me some feedback.
"
open-keychain/open-keychain,closed,Added SuperToasts with new notify-wrapper,[],"First work on #260 

Added new notification-wrapper with a first example in the decrypt file fragment.

Added new notification-area layout part with first integration in the decrypt content. Background is set to standard purple.

Please give me some feedback.
"
open-keychain/open-keychain,closed,Update JUnit version,[],"Later version of Junit prevents 'Multiple dex files define Lorg/hamcrest..../Description' error. Hoping to add some unit/integration tests once the build environment settles down a bit
"
open-keychain/open-keychain,closed,Logo dysfunctional,"[Label(name=""enhancement"")]","The 2-grey-keys logo is nice but it vanishes on many wallpapers, including all the ones I use.  I think a slightly modified version, where the two keys are moderately-strong sharply-contrasting color (purple/white? red/green? purple/red?) would work just fine. I see there’s a logo SVG but is there an upstream photoshop/gimp/illustrator/whatever version? If so, I could volunteer to produce some candidates.  I could volunteer anyhow, but it would be easier with source material available.
"
open-keychain/open-keychain,closed,Canonicalize keys before import,[],"Before import, a keyring should be ""canonicalized"", that is, cleaned of invalid packets and other cruft. This entails a couple of steps, including:
- Remove all non-verifiable self-certificates
- Remove all certificates flagged as ""local"" (to conform with rfc, simply remove all - since we don't issue local certs)
- Remove all certificates which are superseded by a newer one on the same target
- Remove ""future"" certificates

This operation happens as part of the ""save keyring"" routine, and is logged as such. The benefit of extracting it from the rest of key import is it is relatively easy to test and verify. The returned key structure should be a lot more deterministic than what we might encounter in the wild, which will lead to much less complex import code.

By the distinction of UncachedKeyRing and WrappedKeyRing, we have an assertion on type level that all keys retrieved from the database have undergone this canonicalization. This saves a lot of work later on, since we can simply assume that self-certifications have been validated.
"
open-keychain/open-keychain,closed,Robolectric not compatible with Android Studio 0.6,"[Label(name=""bug"")]","I have tried several combinations and it looks like the robolectric
plugin is currently neither compatible with gradle 1.11/1.12 or the
android gradle plugin 0.11. The only option I see currently is to use an
older version of Android Studio like 0.5.9. See
http://tools.android.com/download/studio/canary

Upstream bug: https://github.com/novoda/robolectric-plugin/issues/14

I disabled robolectric in the master, the last working version can be found in the branch https://github.com/open-keychain/open-keychain/tree/robolectric
"
open-keychain/open-keychain,closed,Parcelable operation result with logging capabilities + import logging,[],"This is the first step towards closing the closing of #530

What's missing is a way to display this to the user, it just gets output to logcat (for debugging purposes). I'll be looking into a way to unintrusively display this information, or operation results in general, to the user. A possible outcome of this is switching from the AppMsg library to [SuperToasts](https://github.com/JohnPersano/SuperToasts), but I'm not sure yet.

On the long run, other complex operations should create a log and return them in the parcel, too. The OperationResultParcel is sufficiently generic for that.
"
open-keychain/open-keychain,closed,Automatic contact discovery and more,[],"- Automatic contact discovery, as described [here](https://github.com/open-keychain/open-keychain/wiki/Google-Summer-of-Code-2014#automatic-contact-discovery), using first key server in list and lacking any configuration
- Integration of OpenKeychain into Android's contact app, as described [here](https://github.com/open-keychain/open-keychain/wiki/Google-Summer-of-Code-2014#integration-of-openkeychain-into-androids-contact-app), changes are not synced, newly added keys are synced when android decides to, not directly after OpenKeychain changes, causing desync
- more fixes and changes here and there

Note: Contact sync features in both directions are disabled by default, but can be enabled in system settings -> select OpenKeychain (in accounts section) -> tick ""Contacts""
"
open-keychain/open-keychain,closed,Add information how to activate OpenKeychain in K9,"[Label(name=""enhancement"")]","From google play comments:
Nice UI, great k9 integration (well, after I found that I need to activate it on k9's account settings -is this mentioned ANYWHERE?)
"
open-keychain/open-keychain,closed,Integrate with Keepass2Android Password Safe,"[Label(name=""enhancement"")]","I really like this app - but I think the permanent request for the passphrase is still somewhat annoying (also mentioned on https://www.tbray.org/ongoing/When/201x/2014/04/18/Practical-Cryptography). 

As the author of Keepass2Android, I just added a feature so that other apps can request credentials (or a passphrase) from my app. The benefit for the user: Only a short unlock code must be entered instead of the full passphrase (if the passphrase is stored in the database).
Of course users of my app or other password managers can already store the passphrase in their database, but as open-keychain requests the passphrase repeatedly, it would be great if the steps to locate the passphrase and fill it in to the passphrase field would be simplified. This could be achieved with the new plugin architecture of Keepass2Android.

I'd propose to implement the following:
- if there is an appropriate app (check if any activity can handle action ""keepass2android.ACTION_EDIT_PLUGIN_SETTINGS""), display the option to use this app to provide the passphrase. (i.e. if a user doesn't have the app, he won't even notice the feature)
- Follow the preparation steps described on: https://keepass2android.codeplex.com/wikipage?title=How%20to%20create%20a%20plug-in%3f
  (Preparations, Authorization)
- Instead of showing the passphrase dialog, call Kp2aControl.getQueryEntryIntentForOwnPackage() as described on the aforementioned page. Use the activity result to retrieve the passphrase.

I am really requesting this as a user of open-keychain. 
But of course I'm happy to advice if I can to get this implemented soon and I certainly will notify all my users that they should then use open-keychain :-)
"
open-keychain/open-keychain,closed,Clean up keyimport.ImportKeysListEntry,[],"All the members have “m” prefix and have been made private.  I suspect this is worth doing because the future will have other ways to import keys, so making this easier to understand is worthwhile.
"
open-keychain/open-keychain,closed,Don't show full fingerprint in key search result lists,[],
open-keychain/open-keychain,closed,ImportKeysListEntry.fingerprintHex considered harmful,[],"I was showing some non-geek people the keybase import and they were all “Ewww, what are all those numbers with A’s and B’s mixed up in them?”  I suppose there’s a case for showing the Key ID but the full key fingerprint, even with all the bright colors?  Just a distraction and a waste of space.  For non-geeks, at least.

![screenshot_2014-06-04-16-12-39](https://cloud.githubusercontent.com/assets/17555/3181368/0cb2158a-ec3e-11e3-8a61-3f65b0df4354.png)
![screenshot_2014-06-04-16-03-33](https://cloud.githubusercontent.com/assets/17555/3181367/0cb20810-ec3e-11e3-8a61-81186bdf511a.png)
Here are two versions of the import-keys search results list, one with fingerprints and one without.
"
open-keychain/open-keychain,closed,wrap bouncycastle objects and don't use them in android-related code,[],"What's in here:
- wrapper classes for all relevant bouncycastle objects
- no more bouncycastle imports outside the .pgp packages
- all ""getter"" methods from ProviderHelper moved into CachedPublicKeyRing, which extends KeyRing so provides the same interface as the wrapped keyring objects 
- new SaveKeyringParcel. this is a WIP pending the new Edit Key activity

Stuff that I know is broken at this point:
- Key creation is broken -> because of pending rewrites in key editing code
- Fingerprints are not checked -> because of pending rewrites in the key import code

Making a pull request here because it's quite the handful so I better not commit to master. But stuff is piling up, so if someone feels like reviewing and/or commenting... :)
"
open-keychain/open-keychain,closed,Check with FlowDroid?,[],"http://sseblog.ec-spride.de/tools/flowdroid/
"
open-keychain/open-keychain,closed,Implement pgp key revocation functionality,[],
open-keychain/open-keychain,closed,Remove unnecessary if in KeybaseKeyserver,[],"Mentioned in comments of tbrays g+post: https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/src/main/java/org/sufficientlysecure/keychain/keyimport/KeybaseKeyserver.java#L59
"
open-keychain/open-keychain,closed,Integration of safeslinger key verification,[],"http://github.com/SafeSlingerProject/SafeSlinger-Android
"
open-keychain/open-keychain,closed,K-9 Mail: partially signed messages,[],"Long term thought for a feature:

enigmail doesn't completely reject emails where only part of the message is signed, namely replies to signed messages (in the correct format). Currently, the app says the signature on such an email is invalid, but it would be neat if it could behave similarly to Enigmail, although I wonder if it would need to be made clear exactly which parts were correctly signed.
"
open-keychain/open-keychain,closed,Crosscertification of my own keys,[],"I was unable to find certification option for my private key, when I tried to certify it with another one.
"
open-keychain/open-keychain,closed,OpenPGP Error. Unknown object in stream: 16,[],"I have an error message on decryption of email containing encrypted reply with previous encrypted message - one encrypted block inside other.
Other mail clients (Thunderbird, Claws and Evolution) opens it easily.
"
open-keychain/open-keychain,closed,Key server selection is not working,[],"When choosing update from server action
The server selection is not working the selected server is always the 
first one from the settings
"
open-keychain/open-keychain,closed,Certificates tab is sort of useless,[],"When I open the CERTIFICATES tab on the key-detail display, I have no idea what the entries mean, or what I could do to affect it.  I had the vague idea that Web-of-Trust stuff should be there?  Granted, I’m sort of a PKI noob, but then we’d like noobs to use this software, right?
"
open-keychain/open-keychain,closed,Refactor server query exceptions again,[],"BTW I even tested this by hardwiring a bad keybase.io query into KeybaseKeyServer and saw the appmsg with the server error details.
"
open-keychain/open-keychain,closed,Refactor server query exceptions,[],"Refactored keyserver search exceptions per Dominik’s suggestion.  Ended up renaming the exceptions so I to make them more descriptive.  Actual errors get Log.d and also the exception message goes in the AppMsg to help with end-user bug reporting. Fiddled with strings.xml messages slightly.
"
open-keychain/open-keychain,closed,Handle changed keybase.io search results format,[],"Now has key type and bitstrength.   Also removed the now-obsolete weak cache, since there’s no good reason to fetch user object at search time.
"
open-keychain/open-keychain,open,"API: ""wrong Passphrase""-Message","[Label(name=""api todo"")]","It would be nice if OpenPgpError.getMessage() would give a more user-friendly message when a wrong passphrase was used.
Currently it says ""checksum missmatch at 0 of 20"", not that user-friendly ;)
"
open-keychain/open-keychain,closed,Highlight keyserver search results as well,[],"This allows multiple search words in key list and select public key activity.
It also highlights each word separately.
Furthermore, the search results for keyserver and keybase queries are highlighted in the same way.
"
open-keychain/open-keychain,closed,Improve keybase.io support,[],"This removes the hack of storing the keybase id as user id, makes searching for 0x\* keys work, puts best matches on top, reduces bandwidth usage, displays the match's github and twitter accounts and the first website, also cleans up a little.

It also removes username@keybase.io, as that suggests it is a valid email address to reach the user, which isn't the case. keybase.io/username has been used instead.
"
open-keychain/open-keychain,open,Decrypt hidden recipients,[],"I've been playing with GnuPG options and made one message with gpg --thow-keyids. But this message couldn't be decrypted by OpenKeychain because of ""unknown secret key"" error.

This feature is not commonly used, but it would be nice to see different message when message was made for anonymous recipients.
To work around this kind of messages just enough to check for string
   `[GNUPG:] ENC_TO 0000000000000000 1 0`
"
open-keychain/open-keychain,closed,subkey only keys,[],"There is still something broken about the subkey only code. I've not looked for where the problem is, but once again the edit activity (Play store version I think) doesn't grey out the un-editable parts of a subkey-only keychain, resulting in an error if you try to change things and save it. I don't know if this is the only problem - I haven't tested all the things that make a difference when you have these keyrings. Hopefully passing the information through to this part of the ui was just something which got overlooked rather than a problem in the key handling/storage code :)

I've fixed almost exactly the same bug before, but it's crept back in and now I don't have time to help fix it :( I suspect it's something to do with the way these keyrings are marked as subkey-only, and how this is passed to the edit-key code (or not) as the code to mark the ui objects as disabled still exists. If possible, subkey-only specifics are a good candidate for unit tests!
"
open-keychain/open-keychain,closed,Not recognising signing subkey when master key is certify-only.,"[Label(name=""bug"")]","I have a key consisting of a certify-only master key, a signing subkey, an encryption subkey, and an authentication subkey.

When I import the key into OpenKeychain, the signing subkey is not recognised as valid (that is to say, not pen icon is shown to indicate signing ability). If I try to sign something, the key appears greyed out with the text 'no key'.

The key was generated using the gpg CLI in the latest version of Gpg4win.

Signing with the key works fine in GPA.

I have been able to replicate the issue with test keys; as these contain no personal information and made-up fake email addresses I will be happy to supply both public and private keys if it will aid in diagnosis.
"
open-keychain/open-keychain,closed,Further Toast replacements,[],"Again some work on #260 
- Replaced Toasts in KeychainIntentServiceHandler
- Fixed wrong style in decrypt part, error was displayed with green background
"
open-keychain/open-keychain,closed,Color discussion,"[Label(name=""discussion"")]","Looks like some people don't like our decision to brand OK with purple...
see https://github.com/open-keychain/open-keychain/commit/4ba06e7735eb64c7b3d02c605e8c91fe986c1976

Unfortunately, a color setting is not easily possible due to all the changed resources (see https://github.com/open-keychain/open-keychain/commit/797aeaf6e8c7a8df39ee325c39924cf1f1a96778), I would also like to have a fixed color to have some sort of brand recognition.

Maybe we can settle on a different fixed color, if we consider another color, at best it should be selected from http://developer.android.com/design/style/color.html
"
open-keychain/open-keychain,closed,styled dialogs?,[],"see https://github.com/inmite/android-styled-dialogs
"
open-keychain/open-keychain,closed,DecryptActivity: Remove ciphertext editfield,"[Label(name=""enhancement""), Label(name=""user interface"")]","- directly decrypt
- No need to show ciphertext
- No need to edit ciphertext or decrypted message (it is even bad to allow this: show someone the decrypted message with a signature result, you can alter the displayed text...)
- No need to paste using the context menu, there is already a button to decrypt from clipboard
"
open-keychain/open-keychain,closed,Introduce LoaderFragment,[],"This branch implements #616. It works fine technically, but subjectively the ui feels less responsive, since the indeterminate progress animation introduces recognizable load times where there were none before...

Not sure. First commit is fine either way, for the second one we might be better off sticking with the ActionBar progress. Someone else give it a show, maybe it's just me.
"
open-keychain/open-keychain,closed,Generic OpenPGP SEND Intent,"[Label(name=""discussion"")]","Similar to Intent.ACTION_SEND with same extras (http://stackoverflow.com/questions/2197741/how-to-send-email-from-my-android-application), but only applications supporting OpenPGP API should register the intent filter!
1. New Intent action: `org.openintent.openpgp.action.SEND`
2. Patch K9 to use it
3. Make email buttons to OK user id list
"
open-keychain/open-keychain,closed,ParcelFileDescriptorUtil close?,"[Label(name=""api bug"")]","Integrate into lib?:
https://github.com/k9mail/k-9/commit/58efee8be21f2c21b1cf2db34e15cf9d163fcbed
"
open-keychain/open-keychain,closed,Introduce LoaderFragment,"[Label(name=""enhancement"")]","similar to AOSP calendar app event views and ListFragment:
We could introduce a basic Fragment called `LoaderFragment` used for all fragments in the key view tabs.

It should use a indeterminate progressBar to show that the content is loading and switch a container from gone to visible
"
open-keychain/open-keychain,closed,OpenKeychain 2.8,[],
open-keychain/open-keychain,closed,Ongoing purplization effort,"[Label(name=""user interface"")]","Just to keep track of blue spots in the app, still missing a few.
- [x] import dialog button and spinner in actionbar
- [x] dialog buttons and captions
- [x] set passphrase button in edit key activity
- [x] button in certification dialogue
- [x] upload to keyserver button in that dialogue

If you find any more please mention them here.
"
open-keychain/open-keychain,closed,"Width of master key ""star"" icon",[],"Width is bigger than other status icons
"
open-keychain/open-keychain,closed,ui: apply purple theme,[],"because twi is best color :)

me and @dschuermann thought it'd be a nice idea to have a simple kind of branding, and for that purpose move away from the android default colors (which are changed to grey in android 4.4). This branch applies the default android shade of purple. I like it :)
"
open-keychain/open-keychain,closed,Missing possibility to generate and upload key revocation requests,[],"Those of us who don't have email only on phones need to be able to 
generate and upload key revocation requests from the deivcie itself
"
open-keychain/open-keychain,closed,Double 0x befaure KeyId in ViewCertActivity,[],"Fix is in: https://github.com/open-keychain/open-keychain/pull/609
"
open-keychain/open-keychain,closed,Avoid displaying double 0x before keyid in ViewCertActivity,[],
open-keychain/open-keychain,closed,BouncyCastle abstraction layer approach,"[Label(name=""discussion"")]","This is my attempt at a wrapping layer between bouncycastle objects and android code. Putting this up here for discussion rather than merging, it's not quite finished and severely missing documentation and testing.

So what I'm going for here is that ProviderHelper should provide no more methods to get PGP objects, but rather Cached{Public,Secret}KeyRings. Both of those extend a base class and contain their unified attributes in addition to the key data itself. Pretty much all PgpKeyHelper methods moved into these classes, some make use of cached info although most don't.

The parts that makes use of cached data are usually operations that require verification of certificates, ie the primary user id, verification, and information about subkeys (""which non-revoked non-expired subkeys which can sign data should I use""). While this avoids a lot of key operations, it also introduces significant overhead for some scenarios (e.g. ""fetch secret key and see if it requires a passphrase""), and I'm not sure yet if I want to keep it this way. These aspects are not coded in stone though and can be fine tuned later without too much trouble, so I'm leaving it at this status quo for now.

There are also Uncached\* objects. These purely contain data that is used to display info about them and get them in the database at some point. Since OK has no notion of ""on the fly"" operations, all operations that actually do something non-informational (encrypt, decrypt, sign, ...) are in the Cached\* classes exclusively. This leads to fairly natural data flows, for example CachedSecretKeyRing.changePassphrase() returns an UncachedSecretKeyRing which is not useful for much other than writing it back into the database.

This is a WIP still, most notably the saveKeyRing methods are still using bc objects. There are some parts that don't work quite so naturally yet, and the inheritance graph is kinda weird in some places (UncachedPublicKey -> CachedPublicKey -> CachedSecretKey, but also UncachedPublicKey -> UncachedSecretKey)
"
open-keychain/open-keychain,closed,Redesign API authorization dialog?,"[Label(name=""api todo"")]","Maybe design it like G+ API dialog: https://developers.google.com/+/photohunt/images/android-photohunt-consent.png
?
"
open-keychain/open-keychain,closed,Introduce Key and KeyRing abstraction,[],"Adding those classes without using them anywhere yet. In the hope that they can be used already for any refactoring endeavours going on or planned.

---

This allows code outside the pgp package to have a concept of
Key/KeyRing without knowing about bouncy-/spongycastle. It also
removes the need for a lot of static classes and helper functions
that retrieve key/keyring properties.

Furthermore it allows proper serialization of Key/KeyRing, allowing
them to be stored as arrays in parcels.

Lastly it combines public and secret key/keyring data in one object,
simplifying a lot of code. PublicKeyRing and SecretKeyRing subclasses
allow using specific types of KeyRings where needed for security
purposes (e.g. to make sure secret keyrings aren't exported like
public keyrings).
"
open-keychain/open-keychain,closed,Instead of delete: undo,"[Label(name=""discussion"")]","Again a small but nice pattern:
Instead of using a ""Are you sure you want to delete"" dialog:
Create an gmail like undo toast/appmsg. See http://developer.android.com/design/patterns/confirming-acknowledging.html (at the bottom)
"
open-keychain/open-keychain,closed,Gradle update 0.10,[],"Should speed up build.

https://plus.google.com/108967384991768947849/posts/QCpXF1BxKPm
"
open-keychain/open-keychain,closed,Adds first level of keybase support,[],"Had to add a new argument to ImportKeysActivity.loadCallback() to signal this is a keybase search.  Aside from that, fairly straightforward. Lots of TODOs and keybase is a moving target, fortunately they seem quite reasonable.
"
open-keychain/open-keychain,closed,Introduce keyprovider interface,[],"There's a small chance that the user id grabbed from the DB and the one determined by getMainUserId() are not the same. I don't think so, tho.
I think none of those things should come out of the database when key/keyring are known inside the pgp-package.

I couldn't cleverly rewrite this for isSignatureKeyCertified, so in that case I cast mKeyProvider to ProviderHelper again to have it working for now, but that, too, should have a helper function and later be moved into a Key/KeyRing abstraction.
"
open-keychain/open-keychain,closed,Rename builder methods,[],"Rebased on rename-progressdialogupdater, so best merge that first.
"
open-keychain/open-keychain,closed,Rename progressdialogupdater,[],
open-keychain/open-keychain,closed,ACTION_GET_KEY returns PGPKeyRing object not found!,[],"Hi,
probably not a bug but more like a question on how to use the api. I have the following code where keyId is of type long. However the result is always an error with this message: PGPKeyRing object not found!
What am I doing wrong here?

Expected result is to get an userinputrequried since the key id is not in my key chain.

```
Intent params = new Intent();
params.setAction(OpenPgpApi.ACTION_GET_KEY);
params.putExtra(OpenPgpApi.EXTRA_KEY_ID, keyId);
params.putExtra(OpenPgpApi.EXTRA_ACCOUNT_NAME, account.getJid());
InputStream is = new ByteArrayInputStream(new byte[0]);
OutputStream os = new ByteArrayOutputStream();
api.executeApiAsync(params, is, os, new IOpenPgpCallback() {
```
"
open-keychain/open-keychain,closed,Key parameters: different hash/different encryption algo/different s2kcount?,"[Label(name=""discussion"")]","I just read http://kbsriram.com/2013/01/generating-rsa-keys-with-bouncycastle.html

Some things I noticed:
- We are using CAST5 to encrypt keys? Should we stay with this choice or move to AES?
- The example uses sha256 and sha1 for hashes. Why different hashes? We are using sha1 only. Maybe we should switch here!
- We could also increase the s2kcount as shown in the example code
"
open-keychain/open-keychain,closed,Use Android icons instead of Bootstrap,"[Label(name=""enhancement"")]","Especially for the share button ;) (see Tim Bray's comment here: https://www.tbray.org/ongoing/When/201x/2014/04/18/Practical-Cryptography )

use Font? http://kbsriram.com/android-icon-font/
"
open-keychain/open-keychain,closed,Do not allow key signing with stripped keys,"[Label(name=""enhancement"")]","with the last version I see that my primary certify/sign key is stripped, and that's correct. 

Nevertheless I am allowed to hit ""Certify"" at other keys, but with my sign-key stripped that will not work and I get a error, as expected. Maybe it would be fine to handle this earlier and just do not show stripped keys while choosing the key to certify with.
"
open-keychain/open-keychain,closed,Add info that api lib is aplv2 not gpl,[],
open-keychain/open-keychain,closed,Display UID comments,"[Label(name=""enhancement"")]","Is it wanted that comments in User ID packets are not displayed in the application?

Consider the following example key:

```
pub   4096R/0xDEADBEEF 1970-01-01
uid                 John Smith (born 1990-04-01 in Winnipeg, Canada)
uid                 John Smith <john.smith@example.com>
```

Certifying those UIDs means that the signer carefully checked the other person's identity, and, _especially_, that he/she confirms the comment on the first UID matches the info on the signee's government-issued ID.

That's [the info I have on my key](http://pgp.mit.edu/pks/lookup?search=0x31A49121CD42FF00&op=index&fingerprint=on&exact=on), that people verified in keysigning events.

Even if comments in UIDs are rarely useful, some people (like me) use them to add relevant information about their user identity. Even if not displayed by default, it would be nice to have an option somewhere to enable display of UID comments.
"
open-keychain/open-keychain,closed,Openkeychain 2.6 crashes when trying to add encryption key from K-9,"[Label(name=""bug"")]","1. downloaded aplha version of k-9 with API v3 / Openkeychain support
2. set the encryption to Openkeychain on k-9
3. opened encrypted e-mail and clicked decrypt button
4. allowed Openkeychain to access k-9
5. was prompted to set new account / choose key to decrypt message
6. when clicked button to choose key app crashed

then i exported all keys, deleted them on Openkeychain, re-import them (as suggested on Openkeychain's G+ page). tried to decrypt that email once again but Openkeychain crashed again.

so i uninstalled the app, installed it again and imported keys again.

now everything works!

it seems to me an upgrade issue...
"
open-keychain/open-keychain,closed,Openkeychain 2.6 freezes when importing a group of keys,"[Label(name=""bug"")]","If i want to import a group of keys (about 60) to Openkeychain it freezes. I can import them one by one or even 3-5 at once without problems.
"
open-keychain/open-keychain,closed,v4.widget.DrawerLayout.isContentView NullPointerException,"[Label(name=""bug"")]","from google play dev console:

```
java.lang.NullPointerException
at android.support.v4.widget.DrawerLayout.isContentView(DrawerLayout.java:906)
at android.support.v4.widget.DrawerLayout.onInterceptTouchEvent(DrawerLayout.java:932)
at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1859)
at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1917)
at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1917)
at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1917)
at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2216)
at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1917)
at com.android.internal.policy.impl.PhoneWindow$DecorView.superDispatchTouchEvent(PhoneWindow.java:2068)
at com.android.internal.policy.impl.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1515)
at android.app.Activity.dispatchTouchEvent(Activity.java:2458)
at android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper.dispatchTouchEvent(ActionBarActivityDelegateICS.java:268)
at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchTouchEvent(PhoneWindow.java:2016)
at android.view.View.dispatchPointerEvent(View.java:7886)
at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:3954)
at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:3833)
at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3399)
at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3449)
at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3418)
at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3525)
at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3426)
at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:3582)
at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3399)
at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3449)
at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3418)
at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3426)
at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3399)
at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:5602)
at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:5582)
at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:5553)
at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:5682)
at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)
at android.os.MessageQueue.nativePollOnce(Native Method)
at android.os.MessageQueue.next(MessageQueue.java:138)
at android.os.Looper.loop(Looper.java:123)
at android.app.ActivityThread.main(ActivityThread.java:5017)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:126)
at dalvik.system.NativeStart.main(Native Method)
```

Android 4.4
Nexus 7 (deb)
"
open-keychain/open-keychain,closed,"""Nach dem neusten Update kann man die App nicht mehr öffnen""","[Label(name=""bug"")]","from Google Play dev console:

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355)
at java.util.concurrent.FutureTask.setException(FutureTask.java:222)
at java.util.concurrent.FutureTask.run(FutureTask.java:242)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
at java.lang.Thread.run(Thread.java:841)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.provider.ProviderHelper.saveKeyRing(ProviderHelper.java:408)
at org.sufficientlysecure.keychain.provider.KeychainDatabase.checkAndImportApg(KeychainDatabase.java:257)
at org.sufficientlysecure.keychain.provider.KeychainDatabase.<init>(KeychainDatabase.java:168)
at org.sufficientlysecure.keychain.provider.KeychainProvider.getDb(KeychainProvider.java:182)
at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:543)
at android.content.ContentProvider.query(ContentProvider.java:857)
at android.content.ContentProvider$Transport.query(ContentProvider.java:200)
at android.content.ContentResolver.query(ContentResolver.java:461)
at android.content.ContentResolver.query(ContentResolver.java:404)
at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:49)
at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:35)
at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
at java.util.concurrent.FutureTask.run(FutureTask.java:237)
... 3 more
```

Android 4.4
Nexus 5 (hammerhead)
"
open-keychain/open-keychain,closed,"""force. close after recent update""","[Label(name=""bug"")]","from Google Play dev console:

```
java.lang.RuntimeException: An error occured while executing doInBackground()
at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
at java.util.concurrent.FutureTask$Sync.innerSetException(FutureTask.java:273)
at java.util.concurrent.FutureTask.setException(FutureTask.java:124)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:307)
at java.util.concurrent.FutureTask.run(FutureTask.java:137)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)
at java.lang.Thread.run(Thread.java:856)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.provider.KeychainProvider.update(KeychainProvider.java:694)
at android.content.ContentProvider$Transport.update(ContentProvider.java:219)
at android.content.ContentResolver.update(ContentResolver.java:856)
at org.sufficientlysecure.keychain.provider.ProviderHelper.saveKeyRing(ProviderHelper.java:402)
at org.sufficientlysecure.keychain.provider.KeychainDatabase.checkAndImportApg(KeychainDatabase.java:257)
at org.sufficientlysecure.keychain.provider.KeychainDatabase.<init>(KeychainDatabase.java:168)
at org.sufficientlysecure.keychain.provider.KeychainProvider.getDb(KeychainProvider.java:182)
at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:543)
at android.content.ContentProvider$Transport.query(ContentProvider.java:178)
at android.content.ContentResolver.query(ContentResolver.java:311)
at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:49)
at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:35)
at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)
... 4 more
```

Android 4.0.3 - 4.0.4
DROID RAZR (cdma_spyder)
"
open-keychain/open-keychain,closed,stripped keyhandling broken with 2.6,"[Label(name=""bug"")]","Hi all,

I'm testing arround with openkeychain and conversations (xmpp client) to sign/encrypt my xmpp connections and I experienced a issue with it today.

As I do not want to store my whole privatekey on the mobile device I strip away the sign/certify key and use a encryption subkey. That worked well with v2.5. I added a new account in conversations and the key assign dialog popped up, there I could assign my key to the account and I was able to encrypt my messages. (In OpenKeychain I do not see any information on the stripped key)

Then I updated to v2.6 yesterday. With that version I get informed, that my sign/certify key was stripped, this seems to be a new feature and includes new icons for sign/encrypt/certify. So far, so good, but if I now want to assign a key to my conversations account I am not allowed to. I see they key in the dialog, but it's greyed out and the descriptions says ""subkey is missing"".

Workarround:
1) import masterkey and link it to the account
2) delete masterkey
3) import stripped key
4) works

I am now still enable to sign/encrypt messages and I do not have to store the full key on the device, but it's just a dirty way to solve that as I was forced to send my full masterkey to the mobile device.

I hope my description was clear enough :)

Thanks for your work!
Best,
Til
"
open-keychain/open-keychain,closed,Security guidelines for Android,"[Label(name=""discussion"")]","Just read this blog post: http://blog.sei.cmu.edu/post.cfm/secure-coding-for-the-android-platform

Related security guidelines for Android:
https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=111509535

We should probably go through them and analyze OK regarding them.

Do someone see an issue effecting us?
"
open-keychain/open-keychain,closed,Errors from keyserver import are shown in file import,"[Label(name=""bug"")]","1. Go to import activity
2. Select keyserver import, search for ""dominik"" -> too many keys
3. Select file import, select file -> too many keys

-> should normally work. Here, older the loader still has the search query
"
open-keychain/open-keychain,closed,integration with password managers broken,"[Label(name=""bug"")]","So, I get an encrypted message and copy the text and share it to “decrypt with Open Keychain”.  It asks me for the secret-key passphrase. I switch apps over to my password manager, do the dance to sign in and retrieve the secret-key passphrase, then switch back to OK, but something is broken, you go back to the “my keys” screen instead of the passphrase-prompt screen.

If you copy the passphrase _first_, then it works, but that’s really horrible UX.
"
open-keychain/open-keychain,closed,Check code using cursors,"[Label(name=""enhancement"")]","Go through the sourcecode and check how we use cursors.
It should always be of the following form:

```
Cursor cursor = ...
    try {
    // moveToFirst() returns false if the cursor has 0 rows.  Very handy for
    // ""if there's anything to look at, look at it"" conditionals.
        if (cursor != null && cursor.moveToFirst()) {

        }
    } finally {
        if (cursor != null) {
            cursor.close();
        }
    }
```

(copied from https://developer.android.com/guide/topics/providers/document-provider.html )

This ensures that the cursor is always closed and no other problems occur.
"
open-keychain/open-keychain,closed,exception on apg.db to openkeychain.db on Android 2.3,[],"not sure if important:

```
Keychain  D  Importing 2 secret keyrings from apg.db...
  2426               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/secret, proj=[master_key_id, key_ring_data])
  2426               Keychain  W  Creating database...
  2426               Keychain  D  Query: SELECT master_key_id, key_ring_data FROM keyrings_secret WHERE (master_key_id = '2912560613497445419')
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@40684400
  2426               Keychain  D  <<<<<
  2426               Keychain  E  key not found!
  2426               Keychain  V  delete(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/public)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/public, values=master_key_id=2912560613497445419 key_ring_data=[B@40686e70)
  2426               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/secret, proj=[master_key_id, key_ring_data])
  2426               Keychain  D  Query: SELECT master_key_id, key_ring_data FROM keyrings_secret
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@40681a00
  2426               Keychain  D  <<<<<
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=fingerprint=[B@406aede0 creation=1390149338 rank=0 can_encrypt=false master_key_id=2912560613497445419 key_size=4096 is_revoked=false can_certify=true key_id=2912560613497445419 can_sign=true algorithm=1)
  1716                 Finsky  D  [1] 5.onFinished: Installation state replication succeeded.
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=fingerprint=[B@406a47f0 creation=1390149371 rank=1 can_encrypt=true master_key_id=2912560613497445419 key_size=4096 is_revoked=false can_certify=false key_id=3477114386909157095 can_sign=false algorithm=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/user_ids, values=user_id=Ds <ds@gg.de> rank=0 master_key_id=2912560613497445419 is_primary=false is_revoked=false)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/certs, values=creation=1391354602 rank=0 master_key_id=2912560613497445419 key_id_certifier=2912560613497445419 verified=2 data=[B@406c0f38 type=19)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=0)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=1)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/secret, values=master_key_id=2912560613497445419 key_ring_data=[B@406dedb0)
  2426               Keychain  D  Importing 3 keyrings from apg.db...
  2426               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/secret, proj=[master_key_id, key_ring_data])
  2426               Keychain  D  Query: SELECT master_key_id, key_ring_data FROM keyrings_secret WHERE (master_key_id = '2912560613497445419')
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@406e73f0
  2426               Keychain  D  0 {
  2426               Keychain  D  master_key_id=2912560613497445419
  2426               Keychain  D  key_ring_data=<unprintable>
  2426               Keychain  D  }
  2426               Keychain  D  <<<<<
  2426               Keychain  V  delete(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/public)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/public, values=master_key_id=2912560613497445419 key_ring_data=[B@406f6d40)
  2426               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/secret, proj=[master_key_id, key_ring_data])
  2426               Keychain  D  Query: SELECT master_key_id, key_ring_data FROM keyrings_secret
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@406fac10
  2426               Keychain  D  <<<<<
  2426               dalvikvm  D  GC_CONCURRENT freed 378K, 42% free 4212K/7175K, external 721K/2015K, paused 4ms+5ms
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=fingerprint=[B@406f8d70 creation=1390149338 rank=0 can_encrypt=false master_key_id=2912560613497445419 key_size=4096 is_revoked=false can_certify=true key_id=2912560613497445419 can_sign=true algorithm=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=fingerprint=[B@406f9978 creation=1390149371 rank=1 can_encrypt=true master_key_id=2912560613497445419 key_size=4096 is_revoked=false can_certify=false key_id=3477114386909157095 can_sign=false algorithm=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/user_ids, values=user_id=Ds <ds@gg.de> rank=0 master_key_id=2912560613497445419 is_primary=false is_revoked=false)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/certs, values=creation=1391354602 rank=0 master_key_id=2912560613497445419 key_id_certifier=2912560613497445419 verified=2 data=[B@406aeef8 type=19)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/certs, values=creation=1391354601 rank=0 master_key_id=2912560613497445419 key_id_certifier=2912560613497445419 verified=1 data=[B@406ae910 type=19)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/certs, values=creation=1391354602 rank=0 master_key_id=2912560613497445419 key_id_certifier=2912560613497445419 verified=1 data=[B@406b7558 type=19)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=0)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=1)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/secret, values=master_key_id=2912560613497445419 key_ring_data=[B@406bfed8)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=0)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=1)
  2426               Keychain  V  update(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/keys, values=has_secret=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/2912560613497445419/secret, values=master_key_id=2912560613497445419 key_ring_data=[B@406c7d28)
  2426               Keychain  E  Constraint exception on insert! Entry already existing?
  2426               Keychain  E  android.database.sqlite.SQLiteConstraintException: error code 19: constraint failed
  2426               Keychain  E  at android.database.sqlite.SQLiteStatement.native_execute(Native Method)
  2426               Keychain  E  at android.database.sqlite.SQLiteStatement.execute(SQLiteStatement.java:61)
  2426               Keychain  E  at android.database.sqlite.SQLiteDatabase.insertWithOnConflict(SQLiteDatabase.java:1582)
  2426               Keychain  E  at android.database.sqlite.SQLiteDatabase.insertOrThrow(SQLiteDatabase.java:1452)
  2426               Keychain  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.insert(KeychainProvider.java:582)
  2426               Keychain  E  at android.content.ContentProvider$Transport.insert(ContentProvider.java:198)
  2426               Keychain  E  at android.content.ContentResolver.insert(ContentResolver.java:613)
  2426               Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveKeyRing(ProviderHelper.java:425)
  2426               Keychain  E  at org.sufficientlysecure.keychain.provider.KeychainDatabase.checkAndImportApg(KeychainDatabase.java:279)
  2426               Keychain  E  at org.sufficientlysecure.keychain.provider.KeychainDatabase.<init>(KeychainDatabase.java:168)
  2426               Keychain  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.getDb(KeychainProvider.java:182)
  2426               Keychain  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:544)
  2426               Keychain  E  at android.content.ContentProvider$Transport.query(ContentProvider.java:187)
  2426               Keychain  E  at android.content.ContentResolver.query(ContentResolver.java:271)
  2426               Keychain  E  at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:49)
  2426               Keychain  E  at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:35)
  2426               Keychain  E  at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
  2426               Keychain  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
  2426               Keychain  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
  2426               Keychain  E  at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
  2426               Keychain  E  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)
  2426               Keychain  E  at java.util.concurrent.FutureTask.run(FutureTask.java:138)
  2426               Keychain  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)
  2426               Keychain  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)
  2426               Keychain  E  at java.lang.Thread.run(Thread.java:1019)
  2426               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/secret, proj=[master_key_id, key_ring_data])
  2426               Keychain  D  Query: SELECT master_key_id, key_ring_data FROM keyrings_secret WHERE (master_key_id = '-5865597721631199216')
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@406d86f0
  2426               Keychain  D  <<<<<
  2426               Keychain  E  key not found!
  2426               Keychain  V  delete(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/public)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/public, values=master_key_id=-5865597721631199216 key_ring_data=[B@40716600)
  2426               Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/secret, proj=[master_key_id, key_ring_data])
  2426               Keychain  D  Query: SELECT master_key_id, key_ring_data FROM keyrings_secret
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@4071ed38
  2426               Keychain  D  0 {
  2426               Keychain  D  master_key_id=2912560613497445419
  2426               Keychain  D  key_ring_data=<unprintable>
  2426               Keychain  D  }
  2426               Keychain  D  <<<<<
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/keys, values=fingerprint=[B@4071b288 creation=1359131191 rank=0 can_encrypt=false master_key_id=-5865597721631199216 key_size=4096 is_revoked=false can_certify=true key_id=-5865597721631199216 can_sign=true algorithm=1)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/keys, values=creation=1359131427 key_size=4096 is_revoked=false key_id=-423598127474333344 can_sign=true algorithm=1 expiry=1453739427 fingerprint=[B@4071c560 rank=1 can_encrypt=false master_key_id=-5865597721631199216 can_certify=false)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/keys, values=creation=1359131559 key_size=4096 is_revoked=false key_id=-5672139252183058248 can_sign=false algorithm=1 expiry=1453739559 fingerprint=[B@4071d798 rank=2 can_encrypt=true master_key_id=-5865597721631199216 can_certify=false)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/user_ids, values=user_id=Sergej Dechand <serj@serj.de> rank=0 master_key_id=-5865597721631199216 is_primary=true is_revoked=false)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/certs, values=creation=1359132199 rank=0 master_key_id=-5865597721631199216 key_id_certifier=-5865597721631199216 verified=2 data=[B@4072f4d8 type=19)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/user_ids, values=user_id=Sergej Dechand <sergej.dechand@gmail.com> rank=1 master_key_id=-5865597721631199216 is_primary=false is_revoked=false)
  2426               Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/-5865597721631199216/certs, values=creation=1359132009 rank=1 master_key_id=-5865597721631199216 key_id_certifier=-5865597721631199216 verified=2 data=[B@40731388 type=19)
  2426               Keychain  D  All done - moving apg.db to apg_old.db
  2426               Keychain  D  Query: SELECT keys.oid AS _id, keys.master_key_id, user_id, keys.is_revoked, expiry, verified, (EXISTS (SELECT * FROM keyrings_secret WHERE keyrings_secret.master_key_id = keys.master_key_id)) AS has_any_secret FROM keys INNER JOIN user_ids ON (keys.master_key_id = user_ids.master_key_id AND user_ids.rank = 0) LEFT JOIN certs ON (keys.master_key_id = certs.master_key_id AND certs.verified = 1) WHERE (keys.rank = 0) ORDER BY has_any_secret DESC, user_id ASC
  2426               Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@407410f0
  2426               Keychain  D  0 {
  2426               Keychain  D  _id=1
  2426               Keychain  D  master_key_id=2912560613497445419
  2426               Keychain  D  user_id=Ds <ds@gg.de>
  2426               Keychain  D  is_revoked=0
  2426               Keychain  D  expiry=null
  2426               Keychain  D  verified=1
  2426               Keychain  D  has_any_secret=1
  2426               Keychain  D  }
  2426               Keychain  D  1 {
  2426               Keychain  D  _id=3
  2426               Keychain  D  master_key_id=-5865597721631199216
  2426               Keychain  D  user_id=Sergej Dechand <serj@serj.de>
  2426               Keychain  D  is_revoked=0
  2426               Keychain  D  expiry=null
  2426               Keychain  D  verified=null
  2426               Keychain  D  has_any_secret=0
  2426               Keychain  D  }
  2426               Keychain  D  <<<<<
```
"
open-keychain/open-keychain,closed,cursor exception on Android 2.3 (no crash),[],"Test on Android 2.3 (no crash):

```
  2426               Database  E  close() was never explicitly called on database '/data/data/org.sufficientlysecure.keychain/databases/openkeychain.db'
  2426               Database  E  android.database.sqlite.DatabaseObjectNotClosedException: Application did not close the cursor or database object that was opened here
  2426               Database  E  at android.database.sqlite.SQLiteDatabase.<init>(SQLiteDatabase.java:1847)
  2426               Database  E  at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:820)
  2426               Database  E  at android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(SQLiteDatabase.java:854)
  2426               Database  E  at android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(SQLiteDatabase.java:847)
  2426               Database  E  at android.app.ContextImpl.openOrCreateDatabase(ContextImpl.java:572)
  2426               Database  E  at android.content.ContextWrapper.openOrCreateDatabase(ContextWrapper.java:203)
  2426               Database  E  at android.database.sqlite.SQLiteOpenHelper.getWritableDatabase(SQLiteOpenHelper.java:118)
  2426               Database  E  at android.database.sqlite.SQLiteOpenHelper.getReadableDatabase(SQLiteOpenHelper.java:187)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:544)
  2426               Database  E  at android.content.ContentProvider$Transport.query(ContentProvider.java:187)
  2426               Database  E  at android.content.ContentResolver.query(ContentResolver.java:271)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getPGPKeyRings(ProviderHelper.java:171)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getPGPKeyRing(ProviderHelper.java:192)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.getPGPSecretKeyRing(ProviderHelper.java:227)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveKeyRing(ProviderHelper.java:241)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.KeychainDatabase.checkAndImportApg(KeychainDatabase.java:255)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.KeychainDatabase.<init>(KeychainDatabase.java:168)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.getDb(KeychainProvider.java:182)
  2426               Database  E  at org.sufficientlysecure.keychain.provider.KeychainProvider.query(KeychainProvider.java:544)
  2426               Database  E  at android.content.ContentProvider$Transport.query(ContentProvider.java:187)
  2426               Database  E  at android.content.ContentResolver.query(ContentResolver.java:271)
  2426               Database  E  at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:49)
  2426               Database  E  at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:35)
  2426               Database  E  at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
  2426               Database  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
  2426               Database  E  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
  2426               Database  E  at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
  2426               Database  E  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)
  2426               Database  E  at java.util.concurrent.FutureTask.run(FutureTask.java:138)
  2426               Database  E  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)
  2426               Database  E  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)
  2426               Database  E  at java.lang.Thread.run(Thread.java:1019)

```
"
open-keychain/open-keychain,closed,URI not found when uploading key,[],
open-keychain/open-keychain,closed,My own keys are not automatically certified,"[Label(name=""bug"")]","user ids of my own keyring are not displayed as certified even though the key is self-certified with a positive certification
"
open-keychain/open-keychain,closed,Pull to refresh in key list,[],"- The new android support lib has a swype refresh layout (pull to refresh pattern). See http://antonioleiva.com/swiperefreshlayout/
- Add this one to key list

This could do:
- Download all keys from keyservers again
- ~~Upload all ""dirty"" keys (locally changed)~~

~~With the exception: Don't upload keys which are tagged by the users as ""unsynced"" or better ""do_not_upload""~~
"
open-keychain/open-keychain,closed,Javadoc for KeychainContract,"[Label(name=""enhancement"")]","We should create javadoc for KeychainContract similar to Contracts in Android OS:
http://grepcode.com/file_/repository.grepcode.com/java/ext/com.google.android/android/4.4.2_r1/android/provider/CalendarContract.java/?v=source
"
open-keychain/open-keychain,closed,unsynced: add unsynced flag to keyrings,[],"Closes #533

The design is rather... uh... basic at this point. I pushed the message around a bit, but it never really fit all too well.

Unlike #570, this is a very simple database update which we could just as well add at a later point if we decide the feature doesn't fit in the ui right now (or ever), and the code is of the type to age fairly well so this is not as important for the OK 2.6 milestone as originally thought.

Comments please.
"
open-keychain/open-keychain,closed,Support stripped secretkeys,[],"This implements #570.
- adds a has_secret column to the keys table
- on import of secret keyrings, set availability of secret key for all subkeys
- displays ""stripped"" status in keyring view
- mark unavailable keys in selectsecretkeyactivity

Note that the database change is not production level quality! The has_secret flag will not be set for keys that were imported before the column is added. This won't matter for 2.5 -> 2.6 transition, but in the dev phase you'll have to re-import keys.
"
open-keychain/open-keychain,closed,Extend primary user id support,[],"Rewrite usage of PgpKeyHelper.getMainUserId() and getMainUserIdSafe().
- use provider query
- remove getter
"
open-keychain/open-keychain,closed,"Copy ""how it works"" for FAQ",[],"see https://play.google.com/store/apps/details?id=com.woodkick.pgpsmslite ""how it works""
"
open-keychain/open-keychain,closed,Put presence drawables into project,[],
open-keychain/open-keychain,closed,API: do not pre-select revoked/expired etc keys,"[Label(name=""api bug""), Label(name=""bug"")]",
open-keychain/open-keychain,closed,"ImportKeysActivity: ""file is empty"" is shown after unlock","[Label(name=""bug"")]","1. Load some exported keys from a file
2. Lock your screen
3. Unlock your screen
4. ""file is empty"" is displayed
"
open-keychain/open-keychain,closed,"Support, or at least handle, partial secret keys","[Label(name=""enhancement"")]","Some people, most notably [the debian guys](https://wiki.debian.org/Subkeys), like to chop their keys up and have only specific subkeys in the secret key rings they keep on their laptops or mobile devices, in order to protect their master key from being stolen. This itself is most certainly an expert feature of the highest caliber, so the priority would not be that high. It actually works already, in a way, since the key is considered ""available"", except unavailable secret-key operations gracefully fail with a ""couldn't extract"" error message.

Closely related to this however: I'm considering adding an actual HAS_SECRET field to the keys database anyways, since this is in fact a per-subkey attribute. Having that would simplify the unified query (no more virtual EXISTS column), and allow for a simple marker on what subkeys are actually available, or conversely a ""stripped"" marker for ones that aren't. It might also serve as a stepping stone for #532, which I'm not sure how to entirely handle yet.
"
open-keychain/open-keychain,closed,Test new self-encrypt,[],"Test new self-encrypt of PgpSignEncrypt and use it in EncryptActivity
"
open-keychain/open-keychain,closed,Improve design of result in DecyptActivity,[],"- clicking on result text should not show key import
- use nicer android colors, see http://developer.android.com/design/style/color.html
- use full width
- show uncertified or certified in result text
- seperator under color field
- white text?
"
open-keychain/open-keychain,closed,clicking on actionbar back in certificate activity crashes,"[Label(name=""bug"")]",
open-keychain/open-keychain,closed,"center ""no certificates for this key""",[],"center textfield with ""no certificates for this key""
"
open-keychain/open-keychain,closed,Mark revocation status of private keys in KeyListFragment,"[Label(name=""user interface"")]","Right now, the status of public keys is shown in the same place where the Edit button for private keys is. That's fine, but there should be some way to indicate revocation (or more commonly, expiry) status for those keys as well.

There is no obvious way to do this. One idea would be graying out all keys that aren't valid anymore for any reason (like in SelectPublicKeyFragment) in addition to the red text next to them, so that private keys are grayed out as well even if the reason is not shown in the list.
"
open-keychain/open-keychain,closed,Db backup,[],"Fixes #543
"
open-keychain/open-keychain,closed,Delete old_apg.db,[],"We have not deleted old_apg.db to get back if there are any upgrade problems.
But this db can contain old private keys, so we should delete it with OK 2.8

see https://github.com/open-keychain/open-keychain/issues/543
"
open-keychain/open-keychain,closed,OpenKeychain 2.7,[],
open-keychain/open-keychain,closed,"Redesign ""Edit Key""",[],"@ashh87 @Valodim 

As far as I know `gpg` does not allow editing of user ids and keys after creation. They can only be deleted or added.
Maybe we should also switch to this model for user ids, because
- simplify code greatly
- changing a user id breaks certificates (and would require a recreation of certificate table entries in our database, which is currently not done)

What do you think?
"
open-keychain/open-keychain,closed,Add revocation and certification status to OpenPgpSignatureResult,"[Label(name=""api todo"")]",
open-keychain/open-keychain,closed,Implement better exception handling in KeychainIntentService,"[Label(name=""enhancement"")]","Implement a better exception handling in KeychainIntentService.sendErrorToHandler()
- currently the messages shwon in the activities are created here based on the exceptions
- we should however create messages in the activity because it is part of the UI code
- services can't throw exceptions easily to activities in Android
  -> find a better way
"
open-keychain/open-keychain,closed,gradle's build task fails on Mac OS X (javadoc encoding issue),"[Label(name=""bug"")]","gradle's build task seems to depend on javadoc task, preventing the project to be build on Mac OS X because of encoding issues.
Exporting JAVA_TOOL_OPTIONS=""-Dfile.encoding=UTF8"" is a reported workaround.

Maybe we need to add `options.encoding = 'UTF-8'` to some javadoc tasks?
"
open-keychain/open-keychain,closed,UI for detached file signatures,"[Label(name=""help wanted"")]","The OpenPGP standard contains a way to generate detached file signatures. There is also an example in Bouncy Castle
"
open-keychain/open-keychain,closed,PgpSignEncrypt: uses first usable sign subkey/first usable encrypt subkey without user choice,[],"PgpSignEncrypt: only works with master key ids currently.
There is no user interface currently to select which subkeys are used for signing and encrypting.

PgpSignEncrypt uses PgpKeyHelper.getFirstEncryptSubkey and getFirstSigningSubkey
"
open-keychain/open-keychain,closed,Better handle new exceptions in PgpDecryptVerify and PgpSignEncrypt,[],
open-keychain/open-keychain,open,Sign-only of files,"[Label(name=""enhancement"")]","Test mBinaryInput of PgpSignEncrypt and implement for activity and remote api.
"
open-keychain/open-keychain,closed,Split master key & partial fix for uid order,[],
open-keychain/open-keychain,closed,Add FAQ item about #478,[],"Until this isn't fix upstrem in sks keyserver, we should inform the users about this known bug.
-> Add FAQ entry to Help with information about https://github.com/open-keychain/open-keychain/issues/478
"
open-keychain/open-keychain,closed,Implement view holder pattern for main key list,[],"see http://sriramramani.wordpress.com/2012/07/25/infamous-viewholder-pattern/

I thought CursorAdapter has this for free, but I was wrong.
CursorAdapter only saves inflates but no getViewById calls.
"
open-keychain/open-keychain,closed,Select*KeyFragment rewrites,[],"- moved all specific Public/Secret logic from the Adapter class into
  inner subclasses in the Fragments
- more versatile status display (""revoked"", ""expired"", ""can certify""...)
- applied view holder pattern
- query logic, including subqueries, moved into provider classes

Closes #375
"
open-keychain/open-keychain,closed,split up getMasterKeyId,[],
open-keychain/open-keychain,closed,Share whole key crashing in all instances,[],
open-keychain/open-keychain,closed,ViewCertActivity: Put Strings in strings.xml,[],"ViewCertActivity: Put Strings in strings.xml
"
open-keychain/open-keychain,closed,API: return successfull certification with default type,[],
open-keychain/open-keychain,closed,Toast replacement,[],"Several Toast replacements
"
open-keychain/open-keychain,closed,OpenKeychain 2.6,[],
open-keychain/open-keychain,closed,Debug option to import old db,[],"Add debug option to menu to import old db instead of importing every time OK starts up.
assigned to @Valodim 
"
open-keychain/open-keychain,closed,FAQ item: Current certificate implementation,[],"@Valodim 
Add an FAQ item with an explanation about the current certificate implementation status.
"
open-keychain/open-keychain,closed,Certification failed,[],"@Valodim 
Certifcation status says failed for everything but self certifications
"
open-keychain/open-keychain,closed,scrollbar too far left in certifications,[],"scrollbar too far left in certifications
"
open-keychain/open-keychain,closed,Modified Spinner values for CreateKeyDialog. Added info for user about custom key length restrictions.,[],"This is a reference to additional feature mentioned on pull request https://github.com/open-keychain/open-keychain/pull/536. 

I've added custom `Spinner` values for every algorithm. RSA and DSA have value ""custom"", that displays `EditText` below. There is a small bug here: when user has selected RSA/DSA and custom key length and he decides to switch to ElGamal, custom key length EditText disappears (as expected), but keyboard remains on screen). That does not affect functionality, but it's just ""not cool"" for user experience. 
I've tried to hide keyboard before, on my own project, and I had a lot of trouble with it. Is there any smart way for doing that?
"
open-keychain/open-keychain,closed,Signature verification broken!,[],"in PgpDecryptVerify
"
open-keychain/open-keychain,closed,Change license to gpl,[],"License changed to GPL for all files where all authors in the header are known to consent.
"
open-keychain/open-keychain,closed,Added possibility to enter custom key length.,[],"This is a reference to issue https://github.com/open-keychain/open-keychain/issues/505.

Custom key length `EditText` is shown to user only if appropriate option is selected from `mKeySizeSpinner`. Every key lenght is being checked by method `private int getProperKeyLength(int algorithmId, int currentKeyLength)` (see Javadoc comment for details).

I've limited RSA key length to 8192, because generating bigger keys take too much time. But changing it is really simple. I've tested this commit and everything works fine. 

I think that there is a lot of confusion and special rules for key length, so it would be more user-friendly to show user true key length, which is sometimes different from one selected from Spinner or entered to EditText. All rules that apply:
- RSA key length must be in range (1024, 8192>
- RSA key length must be dividable by 8
- ElGamal key length must be one of following: 1536, 2048, 3072, 4096, 8192
- DSA key length must be in range <512, 1024>
- DSA key length must be dividable by 64

Maybe we should just display info message that will depend on algorithm selected from a Spinner? It would be more user-friendly than current solution.
"
open-keychain/open-keychain,closed,Imported private key: grayed out edit widgets,"[Label(name=""bug"")]","From Google Play comments:

""There is a problem with keys that have certain attributes (I don't know whether the problem is with the Cipher attributes, the Digest attributes, the Compression attributes, or some combination of the three).  NOT handled correctly by OpenPGP Keychain: Cipher: AES256, AES192, AES, CAST5, 3DES Digest: SHA256, SHA1, SHA384, SHA512, SHA224 Compression: ZLIB, BZIP2, ZIP, Uncompressed Handled correctly by OpenPGP Keychain: Cipher: AES, TWOFISH, CAST5, BLOWFISH, 3DES Digest: RIPEMD160, SHA1 Compression: BZIP2, ZLIB, ZIP, Uncompressed

 I have verified this by creating TWO versions of my own public key, one for each of the two different sets of attributes shown above. By ""not handled correctly"", I mean that if there is a private key associated with the public key, and you import them, then try to edit them, you find many of the edit-key widgets greyed out; also, if it is a DSA/Elgamal key (like mine is), then the DSA signing key is not recognized as a signing key. Please verify my observations and, if correct, please consider fixing.""

(user: Bill L)

@ashh87 
"
open-keychain/open-keychain,closed,SEND intent from gmail to OpenKeychain crashes,[],"From Google Play (in german):
""via gmail-&gt;alles markieren -&gt; teilen -&gt; entschlüsseln mit openkeychain gibt gleich ein force close der app... hat bis vor kurzem einwandfrei geklappt, sobald dies wieder klappt 5\* ""
"
open-keychain/open-keychain,closed,Flag for unsynchronized keys,"[Label(name=""enhancement""), Label(name=""user interface"")]","For new keys and after editing, a flag in the database that they have not yet been synced to a keyserver would be a nice feature to have.
"
open-keychain/open-keychain,closed,Implement key consolidation,[],"Editing a secret key will generate a new public key ring as well. This can lead to inconsistencies between the public key and the secret key, and I'm not sure how to handle those. Most notably, if we remove a user id, it will be right back once we update the key from a keyserver. The other way around, pubkeys often have user ids which are not in the private key, so they are missing in the edit dialogue.

Removing user ids is a bit like rewriting git history. It's fine if you do it locally, but once the commits had been out there you damn well better work on top of them. We might be better off offering key revocation as the default operation for deleting a key, and deletion as an afterthought if at all, maybe with a pointer to the in-app help and explain the implications.

The same goes for ""editing"" a user id, which is even more confusing since it pretty much just a combined remove and add operation.

@ashh87 Secret key editing has been your area of work, what's your take on this?
"
open-keychain/open-keychain,closed,Futher Toast replacements,[],"Just some new Toast replacements. 
"
open-keychain/open-keychain,closed,Key import log,"[Label(name=""discussion""), Label(name=""user interface"")]","So, I've been thinking about the key import. There is a lot of uncertainty about the process of importing a key: the attributes from the RFC we use and don't use,  malformed keys, overridden or unverifiable certificates, ""weird"" constellations like user ids with no self-certificate, critical packets, and so on.

For the user, the only feedback they get when they import a key is pretty much just a ""yay"" or ""nay"". It is also next to impossible to make use of any of this information in other parts of the ui, like the key detail dialogues.

I would propose promoting the progress bar for key import to a textual log. I imagine something with green, yellow and red indicators on the side, marking progress messages, warnings and errors. This should commonly be just a small number of progress messages. An uncommon key import however might look something like this:
- **Importing key 0x755661D4**
- \+ Successfully imported 3 subkeys
- ! Encountered critical subpacket of unknown type!
- o Found trusted signatures for 3 user ids
- ! Ignoring revocation of irrevocable certificate for user id Alice!
- o Found 2 expired and 1 revoked user ids
- ! Unable to verify self-certificate!
- \+ Successfully imported 5 user ids

While this kind of textual user interface is not exactly the pinnacle of elegance in a touch enabled user interface, I can't think of another way to reasonably convey this kind of information. I do think it is important to have though; even if most users are fine with ""ok"" for an answer when they import a key, a more detailed import log can a) be very useful for us to have for bug reports (especially combined with #523), b) instills trust in the application for experienced users and c) forces us to consider more less common scenarios in keys, if only to acknowledge them in the import log.

We should be mindful of information overload, perhaps hide the extra info behind a ""Show Details"" button or something like that... I do think though that this would not be a misfeature.

Thoughts?
"
open-keychain/open-keychain,closed,Fixed gradle localTest bug on Windows.,[],"This is a fix for issue https://github.com/open-keychain/open-keychain/issues/528
"
open-keychain/open-keychain,closed,[bug] Gradle localTest fails on Windows and prevents project from being built.,[],"When I clone repo and try to compile it, I get gradle error:

```
Gradle 'open-keychain' project refresh failed:
Negative array index [-3] too large for array size 1
```

Problem is with file https://github.com/open-keychain/open-keychain/blob/master/OpenKeychain/build.gradle. Commenting ""task localTest"" at the end of the file solves problem, but of course that's not a point. 
I'm using Gradle 1.10 on Windows, together with IntelliJ 13.1 IDE. I think that Windows might be a problem here, because of different folder separator in path (Windows `'\'` and Linux `'/'`). When i print `dir` value, I get `C:\Users\gogowitczak\open-keychain\OpenKeychain\src\main\java`. So splitting it with `'/'` char won't do anything good.
"
open-keychain/open-keychain,closed,Use exceptions where appropiate,"[Label(name=""discussion"")]","I am kinda unhappy with the way errors are handled right now in ProviderHelper and other places.
In some places, like getMasterKeyId, null or even 0L is used to indicate errors, which may or may not be handled by the caller. In other places, there is no handling at all which will lead to crashes with NullPointerExceptions or SQLite errors. We should really add throws clauses to all database convenience methods, to enforce proper error handling in the callers.
"
open-keychain/open-keychain,closed,Trust model considerations,"[Label(name=""discussion""), Label(name=""enhancement"")]","As mentioned in #520, the current trust model simply considers all secret keys trustworthy. This is fine for a start but down the road we should probably support a more sophisticated trust model, with yellow/orange dots of trust in addition to green ones.

I suggest we stick with considering secret keys trustworthy, and by extension consider all keys with a valid [trust signature](https://tools.ietf.org/html/rfc4880#section-5.2.3.12) of these keys trustworthy.

Implementation can be split up into multiple independent parts:
- Add a trust signature option to the CertifyKeyActivity
- Add an IS_TRUSTED field either to the public_key_ring table, or the certs table. This is again a decision between more joins at SELECT time or more complex import (would probably need to REPLACE a pubkey after its initial insertion)
- At import time, check not only secret keys but also public keys with IS_TRUSTED flag, and add the the pertaining certificates to the certs table introducing a new Certs.VERIFIED_TRUSTED verification level.

This is also pending both #523 and #524 as intermediate steps.
"
open-keychain/open-keychain,closed,Respect (non-self) revocation certificates,[],"Revocation certificates are only properly respected for self-certificates right now. By design, the certs table contains only the latest relevant signature status of any uid per master key. The List<PGPSignature> in the UserIdItem class should thus be a Map<Long,PGPSignature> per signing master key, with a check for creation time similar to the one done for self-certs.
"
open-keychain/open-keychain,closed,Re-evaluate on import of secret key,[],"All secret keys are considered trustworthy. When a new pubkeyring is imported, it is marked as signed if it includes a certificate by any known secret key. Upon import of a new secret key however, the certificates of all keys are not re-evaluated. Import of a new secret key should trigger a certificate re-verification like #523, limited to the new secret key.
"
open-keychain/open-keychain,closed,Certificates re-verification task,[],"At this point, the certificates of a keyring are checked at precisely the point when the ring is imported. Certification is also limited to self-certs and those where the secret key is available. There are many scenarios where this may lead to database inconsistencies at a later point, for example if the user imports or deletes a secret key, a key expires, or simply by order of import.

I don't think we can ensure absolute consistency here, so I would suggest introducing a database consolidation maintenance task which re-evaluates all certificates. This basically entails re-importing all keys, and shouldn't be too difficult to implement. It is a rather expensive operation though, so it needs to be implemented properly with a progress bar.
"
open-keychain/open-keychain,closed,show key expiry status similar to revocation,[],
open-keychain/open-keychain,closed,Dialog in edit key should use dark icon,[],
open-keychain/open-keychain,closed,Certificate support,[],"Finally got to merge my certs branch. :)

A couple of comments:
- using a simple trust model for now: all private keys are trusted
- only self certs and certs by known private keys are taken into account for now. other keys are not added to the database for performance reasons.
- uid ranks are influenced by certificates: primary keys are always on top, revoked always on bottom
- certification status of user ids is shown, including revocation
- certificate expiration for user ids is NOT considered. GnuPG doesn't support this attribute, so I doubt it has any relevance in practice. if we still want this, there is a commit in there somewhere that can be reverted to re-add it...

This is yet another database change. Since we are in a heavy state of development anyways, there is no migration path, so you might need to DROP TABLE user_ids on a first start (comment it out in KeychainDatabase.java)
"
open-keychain/open-keychain,closed,API: decrypt intent crashes,[],"1. Open api demo -> intents
2. Decrypt
"
open-keychain/open-keychain,closed,Import activity: ViewHolder broken,"[Label(name=""bug"")]","1. Import a big file with public and private keys
2. Scroll up and down in the import list
   -> keys are randomly colored red, even when not private
"
open-keychain/open-keychain,closed,Fix back ActionBar back buttons in activities,"[Label(name=""user interface"")]","EncryptActivity should be available with and without drawer navigation.
If started from the drawer nav -> show drawer nav in encrypt
If started from multiselect in key list or from key view -> don't show drawer nav
"
open-keychain/open-keychain,closed,delete dialog: secret key checkbox broken,"[Label(name=""bug"")]","1. multiselect including public and secret keys
2. it always deletes the secret keys also despite setting the checkbox

-> remove checkbox entirely, simplify delete from a usability perspective
"
open-keychain/open-keychain,closed,API: decrypt broken,"[Label(name=""api bug"")]","Decrypt/verify of API is currently broken in git master
"
open-keychain/open-keychain,open,Search in SelectPublicKeyFragment resets selection/pre-selection,"[Label(name=""bug"")]","Search in SelectPublicKeyFragment resets selection/pre-selection
"
open-keychain/open-keychain,closed,Get everything working again after db overhaul,[],"This should fix the problems that occurred after the db upgrade. tested everything I could think of
"
open-keychain/open-keychain,closed,Simplify passphrase dialog creation,[],"Also latest style fixes
"
open-keychain/open-keychain,closed,improve build instructions,[],"please be more specific in the README:

  "" Select everything for the newest SDK (API-Level 19)""

as not everything should be needed (for example the google api, samples, doc?). i would assume only ""SDK Platform"" is needed.
"
open-keychain/open-keychain,closed,"Break a lot of stuff. Also, database redesign.",[],"See here: http://valodim.stratum0.net/okc/db_new.png

Change entire database design. This introduces a lot of changes,
notably all URIs and almost all projections. Some features (like key
deletion) have been simply commented out for now since they need
serious reconsideration. There are a couple of new TODOs marking places
where more work is needed.

The migration path works fine from what I tested. The old database is
not deleted for now, ie, it is reimported at every start of the
application making all intermediate changes transient.

Tested and working (for me):
- All activities in the main drawer
- Multiselect and Search
- ViewKeyActivity, with and without secret key available
- CertifyKeyActivity
- SelectSecretKeyActivity (from CertifyKeyActivity)
- SelectPublicKeyActivity (from encrypt activity)

What doesn't work:
- Actually certifying keys (pending a TODO in ProviderHelper)
- Importing keys doesn't preserve secret keys
- ""Encrypt to this contact"" doesn't pass key
- Editing keys. All controls are disabled, I'm not sure why... (is this
  even my fault?)
- Deleting keys

What I didn't test:
- Key export
- API stuff
- Creating keys (since editing doesn't even work)
"
open-keychain/open-keychain,closed,Simplify PassphraseDialogFragment usage,[],"Move boiler plate code into a simple static show() method, which only
requires a Handler and can be used ad hoc in any FragmentActivity.
"
open-keychain/open-keychain,closed,Naming adjustments,[],"For issue #338.
"
open-keychain/open-keychain,closed,Fix wildcard imports,[],"Fix issue #466.
"
open-keychain/open-keychain,closed,Display key in UploadKeyActivity,"[Label(name=""help wanted""), Label(name=""user interface"")]","Display key in UploadKeyActivity like it is done in CertifyKeyActivity.

To prevent duplicated code put this view and the loader in a fragment
"
open-keychain/open-keychain,closed,Allow custom key length,[],"1. Add new item in drop down: custom length
2. This should show a edittext below to enter a custom length
"
open-keychain/open-keychain,closed,Sign-only of files,[],"This is currently disabled.
Someone should implement this. Maybe we need the old generateSignature method for it.
"
open-keychain/open-keychain,closed,Design for encrypt and decrypt,"[Label(name=""discussion"")]","Use tabs like in G Play for encrypt and decrypt?: https://plus.google.com/108967384991768947849/posts/K89RDjC4Gym
"
open-keychain/open-keychain,closed,"Conform to style guide, #466",[],"This results in an empty checkstyle report. I'll do the wildcard imports separately.
"
open-keychain/open-keychain,closed,"factor out android dependencies from PgpKeyOperation, and add JUnit/Robolectric testing stubs",[],"PgpKeyOperations should work with no org.android.\* code. Introduced PgpGeneralMsgIdException to move localization logic into the calling intent handler.
"
open-keychain/open-keychain,closed,EncryptAsymmetricFragment: Rewrite without bouncy castle objects,[],"In some places in EncryptAsymmetricFragment bouncy castle objects are used directly. This should not be necessary.
We should rewrite parts of it so that it does not use bouncy castle objects directly.
"
open-keychain/open-keychain,closed,PgpSignEncrypt: old generateSignature() method?,[],"What exactly does the old generateSignature() method?
How should we merge that one into the class?
"
open-keychain/open-keychain,closed,API: PGP-API for other apps,[],"It would be great if APG and OpenKeychain would put effort into making an API which is independent from a  specific PGP-App to make development of PGP-enabled apps easier.

Currently there are the APIs of APG and OpenKeychain, needing some code to support both, even when their goal is nearly the same. I made an App using the APG and don't really like the idea of implementing an abstraction layer inside my app to support both, this shouldn't be needed for every app supporting PGP

I'll post this issue to APG and OpenKeychain and hope you see my problem. I am willing to help if there is anything I can do.
"
open-keychain/open-keychain,closed,Allow decryption with all keys from app (not just account),"[Label(name=""api todo"")]","Allow decryption with all keys from app (not just account)
"
open-keychain/open-keychain,closed,What happened to the manuel key size entry?,[],"You used to be able to enter your own key size but now you can't anymore. Nor can you export individual private keys. Can you put that back?
"
open-keychain/open-keychain,closed,New decrypt layout overlaps buttons,[],"New decrypt activity layout overlaps the buttons on the bottom when a long message is entered or pasted from clipboard
"
open-keychain/open-keychain,closed,PgpDecryptVerify should be able to detect symmetric encryption,[],"- PgpDecryptVerify should detect symmetric encryption and return a result indicating that passphrase input is necessary.
- remove assumeSymmtric field
- Introduce allowSymmtric field -> default: true. Disable for OpenPgpService
- Fix DecryptActivity with this new PgpDecryptVerify class
"
open-keychain/open-keychain,closed,Default key creation (non-expert) not setting key usage flags,[],"Creating a default key (non-expert mode) does not check the appropriate usage flags.

Maybe while we are at it:
Should we change the schema from 2 keys (certify+sign main key / encrypt subkey) to a 3 keys schema (certify main key / sign subkey / encrypt subkey)
This would be more in line with https://alexcabal.com/creating-the-perfect-gpg-keypair/
"
open-keychain/open-keychain,closed,EditKey save button,[],"It is difficult to understand why the button can not be clicked if it is disabled.
Maybe the button should be enabled always, but show a Toast if no changes need to be saved.
"
open-keychain/open-keychain,closed,Edit key changes,[],"Comments please!

Changes:
Save existing key logic reworked - complex, but reasonably well tested
Key capability editing by checkboxes
Keys only let you save if they need to
Ask you to save if you make changes and try to go back without saving

Attempt at making the edit key ui fit neatly with the sidebar, like other sections. Does this look OK? 
"
open-keychain/open-keychain,closed,OpenITP Peer Review,"[Label(name=""discussion"")]","After GSoC, in particular after the implementation of critical new components such as certifications and a new database structure, we could try to get a security audit by OpenITP (https://prb.openitp.org/developers.html).
"
open-keychain/open-keychain,closed,Enable importing of fingerprints from clipboard.,[],
open-keychain/open-keychain,closed,Export directory name,[],"The proposed path for the exported keys must be changed according to the new name of the program
"
open-keychain/open-keychain,closed,Symmetric encryption error,"[Label(name=""bug"")]","Couldn't encrypt with a password. ""Error: null"" message when any button pressed.

![errormsg](https://cloud.githubusercontent.com/assets/1770562/2534103/fbc1821c-b572-11e3-9bfc-e1c7ca2660f8.png)
"
open-keychain/open-keychain,closed,Lookup missing key more than only once,"[Label(name=""api todo"")]","Pendingintent should work more than once. Others also?
"
open-keychain/open-keychain,closed,Modified automatic decryption from clipboard - encrypted text is now hidden,[],"It's a reference to https://github.com/openpgp-keychain/openpgp-keychain/issues/428. I've added another member field in `DecryptActivity` class called `mMessageText`, that stores encrypted text from clipboard.

Much more elegant solution would be to temporarily disable refreshing `mMessage` `EditText` by GUI update thread, but I failed to do it and I couldn't find any help online. Any hints would be much appreciated.

Greg
"
open-keychain/open-keychain,closed,Remove cancel menu item,"[Label(name=""api todo"")]","Remove cancel menu item in app settings
"
open-keychain/open-keychain,closed,fix capability icons and remove red text for revoked keys,[],"This should fix the last issues in #481 .
"
open-keychain/open-keychain,closed,Fix style for expired/revoked keys,[],"Implemented ideas in #481
"
open-keychain/open-keychain,closed,Better design for revoked and expired keys,"[Label(name=""user interface"")]","Currently revoked keys are displayed in red and with a small icon on the right side.
Expired keys are disabled and the expired date is shown on the right (see https://github.com/openpgp-keychain/openpgp-keychain/pull/479)

I would like to see the following improvement:
In both cases, strike out the entry (doable with Spannable). I think striking out something is a clear indicator that it is no longer valid. It is better understandable than red or disabled views.
"
open-keychain/open-keychain,closed,Import is broken,[],"Importing keys from files is broken!

```
  483                Keychain  V  delete(uri=content://org.sufficientlysecure.keychain.provider/key_rings/public/master_key_id/-9132286278558359519)
  483                Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/public, values=master_key_id=-9132286278558359519 key_ring_data=[B@4238fb20)
  483                Keychain  D  insert(uri=content://org.sufficientlysecure.keychain.provider/key_rings/public/73/keys, values=creation=796406983 key_size=1024 is_revoked=false key_id=-9132286278558359519 can_sign=true algorithm=1 fingerprint=[B@41fd3ff0 can_encrypt=true rank=0 key_data=[B@423b4d78 key_ring_row_id=73 is_master_key=true)
  483                Keychain  E  applyBatch failed!
  483                Keychain  E  android.content.OperationApplicationException: insert failed
  483                Keychain  E  at android.content.ContentProviderOperation.apply(ContentProviderOperation.java:216)
  483                Keychain  E  at android.content.ContentProvider.applyBatch(ContentProvider.java:1617)
  483                Keychain  E  at android.content.ContentProvider$Transport.applyBatch(ContentProvider.java:260)
  483                Keychain  E  at android.content.ContentProviderClient.applyBatch(ContentProviderClient.java:377)
  483                Keychain  E  at android.content.ContentResolver.applyBatch(ContentResolver.java:1227)
  483                Keychain  E  at org.sufficientlysecure.keychain.provider.ProviderHelper.saveKeyRing(ProviderHelper.java:214)
  483                Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpImportExport.storeKeyRingInCache(PgpImportExport.java:273)
  483                Keychain  E  at org.sufficientlysecure.keychain.pgp.PgpImportExport.importKeyRings(PgpImportExport.java:129)
  483                Keychain  E  at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:659)
  483                Keychain  E  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
  483                Keychain  E  at android.os.Handler.dispatchMessage(Handler.java:102)
  483                Keychain  E  at android.os.Looper.loop(Looper.java:136)
  483                Keychain  E  at android.os.HandlerThread.run(HandlerThread.java:61)
  483                Keychain  D  Send message by setProgress with progressDialogUpdater=0, max=100
  483                Keychain  V  query(uri=content://org.sufficientlysecure.keychain.provider/key_rings/public/master_key_id/4796388720016978890, proj=[_id])
  483                Keychain  D  Query: SELECT key_rings._id FROM key_rings INNER JOIN keys ON (key_rings._id = keys.key_ring_row_id AND keys.rank = '0')  INNER JOIN user_ids ON (key_rings._id = user_ids.key_ring_row_id AND user_ids.rank = '0') WHERE (key_rings.type = '0' AND key_rings.master_key_id = '4796388720016978890') ORDER BY user_ids.user_id ASC
  483                Keychain  D  Cursor: >>>>> Dumping cursor android.database.sqlite.SQLiteCursor@42005c68
  483                Keychain  D  <<<<<
  483                Keychain  E  Key could not be found! Something wrong is happening!
```
"
open-keychain/open-keychain,closed,Display expiry of subkeys in single key view.,[],"The ViewKeyActivity should display, if subkeys are expired. If subkeys have an expiry date set, this patch displays it and the subkey item is disabled if the expiry date has reached.
"
open-keychain/open-keychain,closed,Wrong primary uid on import from keyserver,"[Label(name=""upstream bug"")]","When I import my public key `0xD2C5CA66EBF32285` from a keyserver, a wrong primary uid is displayed for my key. The uid that is shown as primary has even been revoked and it is still listed as if it is perfectly ok and primary.

However, when I import my public key from a [gpg-exported file](https://unico.re/keys/EBF32285.asc), the proper primary uid is displayed.
"
open-keychain/open-keychain,closed,Change the getting started text,[],"""My Keys"" is now wrapped into ""Contacts"".
"
open-keychain/open-keychain,closed,Rename old mentionings of APG-named things,[],"Mostly in comments, most importantly: STORE_PATH now ends in
/KeychainBlobs instead of /ApgBlobs
"
open-keychain/open-keychain,closed,Add recent contributors to credits,[],"I trust none of the contributors object to being mentioned. So I took stats of the last few hundred commits and the top contributors:
git log --format='%an - %ae' | head -n 500 | sort | uniq -c | sort -nk 1

No doubt it isn't complete, but if anyone was forgotten, then no doubt he/she will be added next time around. :)

I also will credit those contributors in APG, unless someone doesn't want to be mentioned for some reason.
I'll send an email to everybody regarding that.
"
open-keychain/open-keychain,closed,Empty list flash,[],"See #364. 

Maybe just a configuration change in `key_list_fragment.xml` does the job? I'm not really sure if we have to do more programmatically.

Tested on Nexus 4 with Android 4.4.2 without flashing up empty-list frame
"
open-keychain/open-keychain,closed,"Adjust credits, align signature in encrypt layout slightly, fix file decryption, remove icon set credits",[],
open-keychain/open-keychain,closed,Uploadkey support on Editing Key,[],"Tests:
1) Exported key to pool.sks-keyservers.net and found it in the list

""Error not found"" on importing keys.

Please test it once more. I could not test it completely.
#362
"
open-keychain/open-keychain,closed,Added can_encrypt check,[],"Tests:
Case 1: Removed/Added Encrypt permission to MasterKey and other keys too.

Case 2: Removed/Added Encrypt Permission to Other Keys except Master Key

Case 3:  Removed/Added Encrypt Permission to Master Key except Other Key

Its working fine.

Should we take take expiry date and revocation status into account?
#379
"
open-keychain/open-keychain,closed,"Code style fixes, removed unused code and Layout code simplified",[],"Bug: On SoftKeyBoard focus, Portrait Mode, Entire Message box is shrinking.
Further changes needed: Add a softkeyboard visible listener, to hide decrypt button if visible.

Changes: 
Edited the code, removed unused code in layouts and added strings to string.xml.
Removed second definition of Interface. 
Changed message fragment layout. Message box occupies entire layout. 

Tests:
Intents (API) - Checked 'DECRYPT' Intent. Installed the API Demo. Working fine. I have not encountered any problems.
App - Apart from the bug above, No problems encountered. 

P.S: If you are facing any problems with intents, please paste the logcat details or screenshots.
"
open-keychain/open-keychain,closed,Can't save key after key generation,[],"The current implementation of saving new generated key doesn't save the key due to the public key of master key id can not be resolved by `ProviderHelper.getPGPPublicKeyByKeyId` (via URI/Cursor). Workaround uses local keys-arraylist for resoving the pubkey of master key id.

```
03-22 15:38:52.166  28363-28531/org.sufficientlysecure.keychain E/Keychain﹕ ApgService Exception:
java.lang.NullPointerException
        at org.sufficientlysecure.keychain.pgp.PgpKeyOperation.buildSecretKey(PgpKeyOperation.java:435)
        at org.sufficientlysecure.keychain.service.KeychainIntentService.onHandleIntent(KeychainIntentService.java:554)
        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:136)
        at android.os.HandlerThread.run(HandlerThread.java:61)
```

Does anybody know how to setup a cursor as needed to handle via `ProviderHelper.getPGPPublicKeyByKeyId`?
"
open-keychain/open-keychain,closed,Because of an unknown reason toast messages were commented out.,[],"see #429
"
open-keychain/open-keychain,closed,Make foldable settings in EncryptActivity into a separate widget,[],"Related to #463
Tested in android 4.1.2, 4.4.1 and 2.3.3. I also tested if it works properly when the screen is turned off and then turned on again and when the orientation changes.
Works as expected although I'd suggest that you test it as well.
"
open-keychain/open-keychain,closed,More and more wildcard imports,[],"Wildcard imports can result in name collisions and are considered bad style, in particular the google style guide for Java code recommends not using them:
http://google-styleguide.googlecode.com/svn/trunk/javaguide.html#s3.3.1-wildcard-imports

Explicit imports are slightly annoying but much cleaner and they also help tools like checkstyle. checkstyle couldn't inform you, if a whole package became redundent due to a commit. You might keeep ""import java.io.*;"" in the file for ages without realizing that nothing from java.io is used anymore.

So I'd vote against wildcard imports altogether. Thoughts?
"
open-keychain/open-keychain,closed,Improved design for tablets,[],"It is interesting challenge for me because i have worked on android applications for tablets and willing to work on this project as well.
"
open-keychain/open-keychain,closed,Next Spongycastle,[],"https://github.com/openpgp-keychain/spongycastle/commit/375ec19255a6de9e7b172085bd1d74ba9db9da69 has been merged upstream, but with modifications, so it needs to be checked when we next update SpongyCastle.
"
open-keychain/open-keychain,closed,Reusable widget for advanced settings,"[Label(name=""user interface"")]","Thanks to @rafaelav we have this nice ""advanced settings"" switch in `EncryptActivity` (https://github.com/openpgp-keychain/openpgp-keychain/blob/master/OpenPGP-Keychain/src/main/java/org/sufficientlysecure/keychain/ui/EncryptActivity.java#L798)

I would like to see this as a reusable widget, which can be used simply by placing xml code into a layout, where the body part of the xml are the elements which are not shwon before the widget is clicked.

Following some pseudocode:

```
<org.sufficientlysecure.keychain.ui.widget.AdvancedSettings
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        app:text_folded=""Show advanced settings""
        app:text_unfolded=""Hide advanced settings"">

            <TextView
                android:layout_width=""wrap_content""
                android:layout_height=""wrap_content""
                android:text=""advanced stuff"" />

</org.sufficientlysecure.keychain.ui.widget.AdvancedSettings>
```

Benefits:
- Less user interface code in EncryptActivity
- Reusablitity in other activities (e.g. ApiSettings)
"
open-keychain/open-keychain,closed,Nfc help button goes to wrong tab,[],
open-keychain/open-keychain,closed,UI-Icon-Modifying #429,[]," added hint to text edit, different icons for share and clipboard button (see #429)
"
open-keychain/open-keychain,closed,URI is transported in intents data not extra. #459,[],"Fix for #459
"
open-keychain/open-keychain,closed,Can't sign message EncryptActivity,[],"When I select the ""sign""-checkbock in `EncryptActivity` and then select my private key (`SelectSecretKeyActivity`) I get a NPE because `data.getExtra()` returns `null`. In 9d60224980e33552993baa20e99c656b1203ab55 URI was introduced in `SelectSecretKeyActivity`, which is put in data of intent not extra.

```
23295-23295/org.sufficientlysecure.keychain E/AndroidRuntime﹕ FATAL EXCEPTION: main
Process: org.sufficientlysecure.keychain, PID: 23295
java.lang.RuntimeException: Failure delivering result ResultInfo{who=null, request=28674, result=-1, data=Intent { dat=content://org.sufficientlysecure.keychain.provider/key_rings/secret/master_key_id/-70789028279678657 }} to activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.EncryptActivity}: java.lang.NullPointerException [...]
Caused by: java.lang.NullPointerException
        at org.sufficientlysecure.keychain.ui.EncryptActivity.onActivityResult(EncryptActivity.java:1006)
```

I'm not really shure if date have to be fixed for encryption too (works for me).
"
open-keychain/open-keychain,closed,New Fix for #410,[],"This should hopefully fix the issue.
"
open-keychain/open-keychain,closed,Fix for #451,[],"This should do the necessary.
"
open-keychain/open-keychain,closed,Adjust fingerprint layouts,[],"This groups the fingerprint into a rectangle of 5x2 chunks again and puts it on the right in key list entry to make comparison easier.
"
open-keychain/open-keychain,closed,454 fix convert key id to hey to handle short key ids,[],"Fixes #454.
"
open-keychain/open-keychain,closed,HpkKeyServer import is broken,[],"Only the lower 32bit of the key are used in the key list entries, so they aren't found when queried directly.
I think that's what the fixed code in #449 was trying to prevent. I'm working on it.
Gonna try to use the full ID, if possible. And also adjust the convertKeyIdToHex() to handle short IDs.
"
open-keychain/open-keychain,closed,Fix key list views in main key view,[],"Since the views are being reused, a revoked key might set the text
color of a view and when the view is being reused for a non-revoked
key it is still red. So grab the default text colour and set it
explicitly when the key is not revoked.

Fixes #452
"
open-keychain/open-keychain,closed,Main key view: unrevoked keys displayed red,[],"Because CursorAdapter reuses Views, changing the colour for some text views and not explicitly setting it if it shouldn't be set will colour some views wrongly.
"
open-keychain/open-keychain,closed,Rework SelectSecretKeyLayoutFragment with loader and Uri,[],"Currently `SelectSecretKeyLayoutFragment` gets the pgp object and does not use a loader.
Like done in `ViewKeyMainFragment`, the class should be based on a Loader and should never use pgp objects directly, it should always use results from a provider query.
The code can also be simplified greatly.

In addition: I just introduced that `SelectSecretKeyActivity` returns a Uri. So instead of using RESULT_EXTRA_MASTER_KEY_ID we should use the returned Uri to do the query for the Loader.
"
open-keychain/open-keychain,closed,add apg's fix for Key id display,[],"changes from #449 added to OP
"
open-keychain/open-keychain,closed,Key ID display was broken,[],"https://github.com/openpgp-keychain/openpgp-keychain/commit/207010dd86c11db2db04f426d434b68784baacbe subtly breaks the key-id-to-hex code.
It tries to display only the lower 32 bit if the upper 32 bits are 0. Which of course is incredibly unlikely to begin with.
But long is signed, so half of the keys will be less than 0. The result is a somewhat random display... some keys are shown with long id, some with a short id.
"
open-keychain/open-keychain,closed,use correct LongSparseArray for minimum api level,[],"New pull request without the translation lint fixes (as requested in #447).
"
open-keychain/open-keychain,closed,Some lint fixes,[],"This fixes some lint warnings/errors (see bug #223) and adds some missing german translations (also reported in the lint report).
"
open-keychain/open-keychain,closed,Certify Key Activity: User id Values are repeating.,[],"In the recent overhaul of certify key activity by @Valodim . 
Values in user id's field are reporting. I tried to correct it but could not.

Count is the number of cursor tuple values.
No of id's i have are 2.
Logcat: When i put Log.i(""CURSOR"",cursor.getString(mIndexUserId)); in bindView()

```
03-19 09:23:16.641  17612-17612/org.sufficientlysecure.keychain I/COUNT﹕ 4
03-19 09:23:16.671  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreeram (lolA) <sreeram.boyapati2011@gmail.com>
03-19 09:23:16.681  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreeram (lolA) <sreeram.boyapati2011@gmail.com>
03-19 09:23:16.681  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreer (lkj) <sreeram.boyapati2011@live.in>
03-19 09:23:16.681  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreer (lkj) <sreeram.boyapati2011@live.in>
03-19 09:23:16.691  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreeram (lolA) <sreeram.boyapati2011@gmail.com>
03-19 09:23:16.691  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreeram (lolA) <sreeram.boyapati2011@gmail.com>
03-19 09:23:16.701  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreer (lkj) <sreeram.boyapati2011@live.in>
03-19 09:23:16.701  17612-17612/org.sufficientlysecure.keychain I/CURSOR﹕ Sreer (lkj) <sreeram.boyapati2011@live.in>
```
"
open-keychain/open-keychain,closed,Disabled possibility to generate weak RSA keys (512 and 1024 bit),[],"This is reference to issue https://github.com/openpgp-keychain/openpgp-keychain/issues/102. I disabled possibility to pick RSA 512-bit and RSA 1024-bit keys from CreateKeyDialogFragment - they may be selected from Spinner, but if so, ""ok"" button will be disabled. In second commit I added note about that (for user).

I'm unsure what ""editing existing keys with 512, 1024 rsa"" exactly mean - I've searched such option in app and in code - and I haven't found any. This issue is 6 months old, so maybe meanwhile this possibility was removed? Please let me know how this should be done properly if this solution is wrong.
"
open-keychain/open-keychain,closed,Decrypt Branch: Tested it. ,[],"Test Cases:
1) For files, Took a file encrypted it, stored it. Fetched it in decrypt file fragment (Error: InputBufferStream is fixed) Decrypted it and I have got the file in OpenPgp-Keychain folder (default folder).

2) Messages are automatically decrypted.

Error:InputBufferStream is caused because  `instream.close()` is called in `finally{}`
I could not complete Layout issue with Message editbox. I tried now and i failed.
If that is the functionality of decrypt activity. I guess its fine.

I have not tested handleIntents() and startActivityResult() based calls. Please help me that.
#401
"
open-keychain/open-keychain,closed,CertifyKeyActivity sets error if no key is selected,[],"Fixes #442
I'm not 100% sure that this is what you meant. 
In setError mKeyUserId was VISIBLE_GONE when there was not key selected so I changed that to mNoKeySelected. 
It displays an error mark now when no key is selected. 
"
open-keychain/open-keychain,closed,CertifyKeyActivity should setError if no key is selected,[],"CertifyKeyActivity should setError on SelectSecretKeyLayoutFragment if no key has been selected when pressing the certify button
"
open-keychain/open-keychain,closed,fix emails not showing up in import keyserver search,[],"Fixes #438 
In HkpKeyServer userids were preprocessed even though the normal processing happens in methods in Provider/ProviderHelper. 
Tested it now and it seems to show mails and work as expected. :) 
"
open-keychain/open-keychain,closed,Batch file encryption with android.intent.action.SEND_MULTIPLE,[],"This requires https://github.com/openpgp-keychain/openpgp-keychain/wiki/Google-Summer-of-Code#improvements-to-file-encryptiondecryption

We should implement android.intent.action.SEND_MULTIPLE, see
http://developer.android.com/training/sharing/receive.html
"
open-keychain/open-keychain,closed,Decrypt - Bugs in Message Fragment and File Fragment fixed.,[],"As pointed out, I have fixed the bugs.
#401

I have tested it and working fine.
"
open-keychain/open-keychain,closed,emails are not displayed in keyserver search,[],"current master does not show emails of results of a keyserver query
"
open-keychain/open-keychain,closed,Can_Encrypt Check added to hide Button,[],"Issue #379 .

If the master key cannot encrypt. Then encrypt button is disabled.
"
open-keychain/open-keychain,closed,Close Activity Dialog,[],"Each key creation by default takes 2 minutes on nexus 4. If the user accidentally presses back button. Key generated is lost and user has to go through entire process again.

P.S: I do not know why it is giving me merge conflicts.
"
open-keychain/open-keychain,closed,Button Text changes to Change Passphrase if Passphrase is set,[],"Presently in edit key activity, It appears as 'set passphrase' even if passphrase is set, I made changes to it.
#357 i hope this partially answers the issue
"
open-keychain/open-keychain,closed,Show revocation status in ViewKeyKeysAdapter #375,[],"Added revocation status in Key List View (graphical symbol and red coloring)
"
open-keychain/open-keychain,closed,Unification of data passing to services,"[Label(name=""discussion"")]","Currently the handling of pgp keys and ids is a bit messy. 
Meaning that some of the activities use rowIds, some masterKeyIds, and some encapsulate those long ids in dataUris and later on pass them to services where they are decoded again.
1) Maybe it would be better to clean up most of the code in these to use only one type of descriptor for keys? Either masterKeyIds, or rowIds (this would be difficult as rowIds are lacking lots of utility methods/queries).

2) Why do both of those descriptors exist? 
3) Which of those should be preferred? Personally i'm guessing masterKeyIds are more universal and better supported by the provider so it's easier to just use those (?)
"
open-keychain/open-keychain,closed,New key list can't export public data of the secret keys,[],"Selecting the secret keys and exporting them will build a query that uses the key_rings._id of the secret key and type = '0' (public), resulting in an empty query.
The exporter ignores that key and it is reported that N keys were exported, but the file is empty.

I'm not sure how to best tackle this. Perhaps the exporter could be smart and first grab all PGP key IDs from the given row IDs, then fetch all key rings based on those.

This sort of thing might be counter intuitive to the user. Is it really a good idea to display secret and public keys together? Could still have the same list, but perhaps a toggle for secret/public keys?
The concept of ""Contacts"" also is a little muddied by including the secret keys.
"
open-keychain/open-keychain,closed,Ui modification,[],"In the clicking for a particular contact , two icon in the actionbar show the same hint ('Share').
Now the second one is ""Keyserver...""
referering to #429 
"
open-keychain/open-keychain,closed,Revamp certify dialogue,[],"Certifying now works for individual user ids, and certs are preserved when saving privkeys. This has been tested more or less thoroughly using the code from my certs branch for certificate listing.
"
open-keychain/open-keychain,closed,UI-Icon-Modifying,[],"1) In encrypt page share with and clipboard got the same icon , it should be different.

2)When encrypting a message shouldn't there be a button with ""Encrypt Message"" text ?

3)When creating a new key , if one forget to fill up all the required field he should get the message of filling up the particular field. 
 It is necessary to have at least one user id. So user need to be restricted not to delete the last main user id  just like the key.

4)In the clicking for a particular contact , two icon in the actionbar show the same hint ('Share'). Second icon hint can be 'Keyserver' or just only 'server'
"
open-keychain/open-keychain,closed,Decrypt- Message,[],"When encrypted something is copied to clipboard , after going to decrypt page ,first it shows some encrypted data and then after a while it  shows the decrypted result. It will be better not showing the encrypted data , directly show the decryption result.
"
open-keychain/open-keychain,closed,ZXING installation,[],"When i try to do a qr scan it suggests me to install zxing applicaiton  in my device. We can add the zxing source to the existing openpgp-keychain  so it doesn't need to have the zxing scanner installed in the device. I think it will be more user-friendly.
"
open-keychain/open-keychain,closed,Issue #207 fix,[],"I have fixed the #207 issue. (display key to be signed in CertifyKeyAcitivity)

Some notes:
- The layout is same as for the signing key. (I may refactor it to be in a separate layout file) 
- I have also added a string for the title, but only for english. I don't know how you deal with newly introduced stings.
- This one for GSOC
"
open-keychain/open-keychain,closed,Added onBackPressed Event for Creating Keys.,[],"Average time required to create a key is 3 minutes. If the user accidentally presses back key. He has to go through the entire process again. So added a new alert dialog. 
I have also changed the button text to ""Change Passphrase"" while editing keys if passphrase is set.

and 
#207 Issue has been fixed.

https://drive.google.com/file/d/0B31e8A3Srhc3TGRwSExrYU1rSzg/edit?usp=sharing

3rd Commit: I have looked at Issue 307 . I changed the implementation (onBackPressed()) to Dialog Fragments.

4th Commit: #379 
"
open-keychain/open-keychain,closed,Machine readable output for Keyserver query,[],"It's a reference to https://github.com/openpgp-keychain/openpgp-keychain/issues/259. I've followed RFC documents linked in mentioned issue and tested it deeply. However, I'm new to this project, so I'd be very grateful for support and pointing out my mistakes :).

Despite of implementing machine readable queries, I've had to do minor fixes in convertFingerprintToHex (avoid printing unnecessary zeros) and convertKeyIdToHex32bit (ignore converting empty strings) methods.
Also I've added separate function for converting algorithm integer ID to String, to avoid code duplication. 
"
open-keychain/open-keychain,closed,"from clipboard decrypt ""Error unknown object in stream 0""",[],"I'm running in to this problem when I try to copy an encrypted message from an email to openpgp-keychain either through the mark all -> ""share"" option, or just copy and open the app for decryption. I am unable to decrypt messages from mails. 
I'm running version 2.3.1 from google play and CyanogenMod 11 M4.
"
open-keychain/open-keychain,closed,Decrypt Fragments (Beta Version): Implemented and fixed layouts.,[],"Implemented the fragments. Resolved as many bugs as i noticed. Please test it. I have little experience in android testing.  

Will do it for encryption now.

There is a small bug in messages fragment, Even If the encryption data is not valid, It calls showPassphraseDialog().
#401
"
open-keychain/open-keychain,closed,Fix export for new unified key list #409 and lock drawer in tablets #255,[],"Fixes issue #409 and implemented #255 
Now the drawer stays always open in tablets (check /res/layout-large ). It works as expected. You can also easily limit it to only landscape mode in tablets if you rename /res/layout-large to /res/layout-large-land if i'm not mistaken. 
I also cleaned the xml layouts a tiny bit to make them more organized. 
Tested on normal smartphone with 4.1.2, on nexus 7 tablet with 4.3 and on emulator with 2.3.3
Works as expected in all of them but it's better if you test it as well. 
"
open-keychain/open-keychain,closed,Added FAQ: specifying connection port for Keyserver.,[],"Added FAQ entry about using special port to connect to a Keyserver, as mentioned in https://github.com/openpgp-keychain/openpgp-keychain/pull/408
"
open-keychain/open-keychain,closed,Initial Fix for #410,[],
open-keychain/open-keychain,closed,Initial fix for #410,[],
open-keychain/open-keychain,closed,Make email address less restrictive and fix double user ids,[],"Fixes #414 and #416
I used androids default android.R.drawable.presence_online and android.R.drawable.presence_offline
because they fit very well. The online one is just green and suggests a correct structure and the offline is gray with a faint X on it. Using a red cross here would suggest to the user that his email/icq/whatever address isn't accepted so I avoided it. Also when the mail is empty i remove the drawable completely.
Tested on android 2.3.3 and 4.1.3 and works as expected.
"
open-keychain/open-keychain,closed,Clicking an item in import list doubles user ids,"[Label(name=""bug"")]","1. Go to import activity
2. search on keyserver for ""Dominik Schürmann""
3. Select first entry and observe the list item
4. It doubles the user ids

This is probably a regression bug caused by the implementation of a ViewHolder by @sreeram-boyapati with commit https://github.com/openpgp-keychain/openpgp-keychain/commit/b47f291d1272954a27c5d1313480dd4cc4dbfe05 but I am not sure.
"
open-keychain/open-keychain,closed,final code style changes,[],"Just a few minor ones remain but most of them are related to keychain/Id.java which is a bit deprecated and has to be updated/rewritten anyway so that's another story. :) 
"
open-keychain/open-keychain,closed,Don't be so restrictive regarding email addresses in EditKeyActivity,"[Label(name=""user interface"")]","Besides email addresses, OpenPGP keys can also hold other IDs, some people are using it for example to sign their ICQ address. The RFC itself says:

```
By convention, it
   includes an RFC 2822 [RFC2822] mail name-addr, but there are no
   restrictions on its content.""
```

https://tools.ietf.org/html/rfc4880#section-5.11

Thus, we should not require the email EditText to really have an email in it.
BUT: We should help the user by showing if it is a valid email while he/she enters it.
Just a rough idea:
- Use a TextWatcher and when entered text changes check if it is a valid email.
- If yes -> show a small green ""check"" drawable on right side of email EditText
- If no -> show small red cross

The user should still be able to save the key when the EditText does not include a valid email
"
open-keychain/open-keychain,closed,More code style fixes,[],"For #389

Also in one place I removed the saved Pattern for email and used Patters.EMAIL_ADDRESS since the project is on android 2.2+ and it's working fine. :) 

Last changes will come in an hour or two, you can wait till then to merge the pull request so that I add more commits.
"
open-keychain/open-keychain,closed,Code style changes,[],"Here's the first part of code style changes. 
They're a lot so I thought it would be best to do them in smaller portions and incorporate them as soon as possible to not cause a lot of merge conflicts for other forks of the project. 
"
open-keychain/open-keychain,closed,Decrypt Activity to Fragments (Experimental Branch) ,[],"![screenshot_2014-03-13-23-06-41](https://f.cloud.github.com/assets/2411947/2412939/8bc41bc2-aad8-11e3-8613-c604c8371131.png)

It has a lot of bugs. But I have written basics to work with. Made Interfaces, changed the way Intents and arguments are handled. 
I would advise to create a new temporary branch so everybody can work on it.
"
open-keychain/open-keychain,closed,Rework delete key method for new unified key list,[],"We now have a unified key list thanks to @Valodim with pull request https://github.com/openpgp-keychain/openpgp-keychain/pull/403
Some things need to be reworked now.

The delete key functionality is broken and needs fixing.
It should also be rework to always look if a private key is available to a given public key. If a private key is found it should also be deleted.
This should simplify the current code in DeleteKeyDialogFragment dialog. Currently returns keys which could not be deleted because a private key exists. This is now obsolete.
"
open-keychain/open-keychain,closed,Fix export for new unified key list,[],"We now have a unified key list thanks to @Valodim with pull request https://github.com/openpgp-keychain/openpgp-keychain/pull/403
Some things need to be reworked now.

Export of public keys works
Export of private keys is broken: File has no content.

In general: The export dialog should always export the public key of a key pair. Additionally, we should add a CheckBox to the Dialog ""Export private key"". This should now enable the export of the private part.
"
open-keychain/open-keychain,closed,Specifying connection port in KeyServer,[],"This is reference to issue https://github.com/openpgp-keychain/openpgp-keychain/issues/97. I have made specifying connection port possible in KeyServer. Please verify and let me know if any changes are required.
"
open-keychain/open-keychain,closed,"Add apg's change to colorizing, no more background changes needed",[],"Related to #380
"
open-keychain/open-keychain,closed,Reduce travis library installation overhead,[],
open-keychain/open-keychain,closed,Checkstyle configuration information reworked,[],"Added Windows section to CheckStyle configuration information part (and splitted Linux and MacOSX up).
"
open-keychain/open-keychain,closed,Change colorizing of fingerprint to use SHA1 based on apg's commit 67ffc,[],"In relation to issue #380
Added the usage of sha1 hash as proposed by apg. Also added an extra if to change the background based on brightness of the text color. 
"
open-keychain/open-keychain,closed,unify public and secret key lists,[],"LE MERGE
"
open-keychain/open-keychain,closed,Fix error in  importing/updating keys from keyserver by removing extra 0x,[],"This is a high priority bug. 
"
open-keychain/open-keychain,closed,Swipe views with title strips for encrypt and decrypt activitiy,"[Label(name=""user interface"")]","This issue is much more complex than it sounds!

Instead of using home grown widgets we should switch to fragments and swipe views. Instead of tabs I would suggest title strips to save space in these already overloaded activities.

See
http://developer.android.com/training/implementing-navigation/lateral.html#PagerTitleStrip
"
open-keychain/open-keychain,closed,Horizontal Progress Bar added during for key creation,[],"I have tried implementing the horizontal progress bar during key creation in place of the spinning wheel. The basic template for communication between the background KeyServiceIntent and the foreground KeyServiceIntentHandler has been setup.

The KeyServiceIntent updates the key creation progress step by step and sends messages to the handler. The handler inside KeyServiceIntentHandler catches the messages and thereafter sets the progress in the progress bar.

The progress bar is not smooth enough. People are welcome to improve on it. 

PS: This is my first pull request on gitHub as part of the one-patch rule required to be a potential student for GSoc 2014. I have tried as far possible to adhere to the pre-requisites before submitting a pull request, forgive me if I have missed something and please let me do know about the same.  
"
open-keychain/open-keychain,closed,Email suggestions,[],"Read https://plus.google.com/108967384991768947849/posts/DgLSWqZ7eVj

For contacts integration we already need to add this permission, so we then also can implement this trick for suggesting emails in create key activity
"
open-keychain/open-keychain,closed,Import from clipboard error messages,"[Label(name=""enhancement"")]","When clicked on Get key from clipboard, it says that it is generic error and asks to file a bug. Clipboard has an encrypted message in my case. I think the message should be ""Unable to get the key from the clipboard"" or something like that.
"
open-keychain/open-keychain,closed,Fix for Issue #393 ( PublicKeyListFragment: Query not really resetted ),[],"clearing the query in mSearchView when onMenuItemActionCollapse is called
"
open-keychain/open-keychain,closed,Lint error fix after testing,[],"Redoing successful fixes from last time after due testing #223 
"
open-keychain/open-keychain,closed,Remove duplicate code from ActionBarHelper. Add export in multiselect.,[],"---

In relation to #390
I know the edit-key branch has variated but it should be fairly easy to change it and move the buttons to the OptionsMenu like in the edit-key branch if you later decide to proceed that way. I can do it if you want. :) 

---

In relation to #330 
This is now working. I also added an export button in the multiselect menu both in KeyListSecretFragment and KeyListPublicFragment.  I left the old Export All in the KeyListPublicActivity and KeyListSecretActivity because in android < 3 the multiselect list still doesn't work. 
I tried to implement the export via rowIds as simply as I could as to avoid huge refactoring of the code.

I tested the export function by exporting and importing back again keys in the following situations:
- When viewing a public key in ViewKeyActivity (export of a single key works like before)
- When viewing a secret key in EditKeyActivity (export of a single secret key works like before)
- When exporting all the keys both in KeyListPublicActivity and KeyListSecretActivity (works like before)
- When exporting any number of keys in KeyListSecretFragment and KeyListPublicFragment (works as expected). 

---

Hope it's ok, let me know if I forgot something. :) 
"
open-keychain/open-keychain,closed,linear layout edited to display test horizontally #391,[],"I have edited the layout.

![issue 391](https://f.cloud.github.com/assets/2411947/2380461/21243024-a8ab-11e3-8750-d8be568a43eb.png)
"
open-keychain/open-keychain,closed,PublicKeyListFragment: Query not really resetted,[],"1. go to main list
2. enter a search query
3. press back until search view is closed -> query is resetted, all items are shown again
4. open navigation drawer -> old query is again applied
"
open-keychain/open-keychain,closed, Reset cursor query when closing search view #386 ,[],"OnFocusChangeListener replaced with OnActionExpandListener
For same behaviour like contacts app #386 #387
"
open-keychain/open-keychain,closed,Button and Text of key selection should be side by side (CertifyKeyActivity),"[Label(name=""user interface"")]","The ""select key"" button and the textview indicating which key has been selected should be side by side and not among each other (in CertifyKeyActivity).
Could be that some new commit introduced this problem.
"
open-keychain/open-keychain,closed,Appropriate save Icon in EditKeyActivity fixes #382,[],"Tested and works fine
"
open-keychain/open-keychain,closed,Coding style,"[Label(name=""enhancement"")]","APG introduced a coding style via xml configuration.
We should do the same.

see https://github.com/thialfihar/apg/issues/13
and https://github.com/thialfihar/apg/tree/master/tools
"
open-keychain/open-keychain,closed,Export is cancellable now,[],"This is with reference to issue #329. I have made export cancellable as discussed. Please verify and let me know if any changes are required.
"
open-keychain/open-keychain,closed,Reset cursor query when closing search view #386,[],"Without focus the search result get erased.
"
open-keychain/open-keychain,closed,Reset cursor query when closing search view,[],"When closing the search view, the list should again show all public keys
"
open-keychain/open-keychain,closed,Issue #378 ( private keys are no longer red ): Fixed,[],"secretKey is set to false if pgpKeyRing is not an instance of PGPSecretKeyRing. But the opposite was not handled anywhere. So i added a simple else case. To my understanding the logic is not broken.
"
open-keychain/open-keychain,closed,Highlight search query in SelectPublicKeyFragment and KeyListPublicFragment,[],"This is for issue #371
"
open-keychain/open-keychain,closed,Fix to passphrase dialog and Issue #207,[],"As you have asked, I have added 'bottom margin' to table row in ""Passphrase Dialog"", So users do not accidentally press 'Cancel' or 'Ok' button.
Regarding Issue #207,  I have attempted to solve it.
Parameters are: Master Key Id (Hex Format), User Name , User Email

https://drive.google.com/file/d/0B31e8A3Srhc3SThOSjBUSDRzcWs/edit?usp=sharing

Let me know if any changes are required.

2nd Commit: Implemented View Holder Pattern for ImportSettingsKeyAdapter.
"
open-keychain/open-keychain,closed,Appropriate save icon,[],"Currently I've used a tick for the edit screen save icon. Something more recognisable as a save icon would be better. 
"
open-keychain/open-keychain,closed,Lint changes #223,[],"Fixed some lint errors and warnings #223 . Remaining errors are all translation based and few warnings are left. Should I change the build.gradle file to remove htmlOutput of lint files or can I leave it that way?
"
open-keychain/open-keychain,closed,Colorize fingerprint,[],"Issue #377
Works as expected. The color variety isn't so huge because of the way the colors are made from the hash of each 4 character part of the fingerprint but it's definitely easier for the eye to distinguish a difference between two keys. :) 
"
open-keychain/open-keychain,closed,"Disable ""encrypt to"" in ViewKeyMainFragment if cannot encrypt",[],"Disable ""encrypt to"" in ViewKeyMainFragment if key cannot encrypt
See query from SelectPublicKeyFragment
"
open-keychain/open-keychain,closed,Import: private keys are no longer red,"[Label(name=""bug"")]","When importing private keys from a file (previously exported from OpenKeychain), they are no longer marked with red text color.

no longer works:
https://github.com/openpgp-keychain/openpgp-keychain/blob/master/OpenPGP-Keychain/src/main/java/org/sufficientlysecure/keychain/ui/adapter/ImportKeysAdapter.java#L106

This problem was introduced by a recent commit.
"
open-keychain/open-keychain,closed,Colorize fingerpint?,[],"A method to better compare fingerprints could be to colorize the fingerprint. Something similar has been done in Guardianproject's gnupg with key ids. This way the people comparing can more easily read the fingerprint and remember the current position.
"
open-keychain/open-keychain,closed,Key id issues,[],"I think the key ids need to be 16 characters not 8.
Also are we really displaying v4 key ids? or v3 key ids.
http://tools.ietf.org/html/rfc4880#section-12.2

This needs to be sorted out.
"
open-keychain/open-keychain,closed,Show revocation status in SelectPublicKeyFragment,[],"show revocation status!
"
open-keychain/open-keychain,closed,Upgrade check,[],"When the edit-key branch gets merged in, it might need to include code which upgrades the database from previous versions, because I've changed how some key capabilities are flagged when fixing a bug. Doing this will mean people won't have to re-import their keys.
"
open-keychain/open-keychain,closed,Import of keys part of a file containing also an encrypted message or other pgp objects,"[Label(name=""enhancement"")]","It needs to be tested if  keys can be imported, which are part of file containing for example an encrypted message _and_ a key.
If this is currently not possible, could we improve the parsing of files to allow this?

See https://github.com/openpgp-keychain/openpgp-keychain/pull/316 for old discussions about this
"
open-keychain/open-keychain,closed,Issue #178 - Hide advanced options in EncryptActivity,[],"This is a commit trying to fix issue #178.

For now I've made the Show/hide advanced settings button as a text only button in order to not over clutter the UI. If you prefer to have a button instead of a text, I can also do that :) 

Let me know if this seems ok.

// I really like this project and I would like to participate in GSoC 2014
"
open-keychain/open-keychain,closed,highlight search query  for each entry,"[Label(name=""enhancement""), Label(name=""user interface"")]","Implement a feature where the the search query is highlighted for each entry in the list.

For example: the Android phone contact list or the whatsapp contact list.
"
open-keychain/open-keychain,closed,Api: Button to start registered app,"[Label(name=""api todo"")]",
open-keychain/open-keychain,closed,Fix for #347,[],"I'm really sorry, I totally messed up that fix. Here is the working one.

There are however some issues which I could not resolve viz.the SearchView close button is no longer visible as it now occupies the whole ActionBar apart from the overflow menu item.So I just added some code to collapse the SearchView when it loses focus.
"
open-keychain/open-keychain,closed, progress is shown when creating the default key based on number of keys created till then,[],"This is with respect to the issue #210 ""Progress bar on key creation"" . This patch shows progress bar while creating the default key. Progress bar is based on number of keys created till then. Please verify and let me know if anything has to be changed. 
"
open-keychain/open-keychain,closed,Fix for #347,[],"Fixes #347
"
open-keychain/open-keychain,closed,Minor code clean up,[],"Just some minor code clean up based on the warnings outputed in Code Analysis in Android studio. :) 
"
open-keychain/open-keychain,closed,Preselection crashed OpenKeychain,[],"1. Select a number of pub keys with multiselect
2. Click ""encrypt to"" via menu item
3. In EncryptActivity, click on the recipient button
4. Crash with OutOfBoundsException

This problem could be introduced by one of the newer pull requests. I think it worked before.
"
open-keychain/open-keychain,closed,"""empty list""-layout flashing up","[Label(name=""user interface"")]","For a second you can see the ""empty list""-layout (with create key and import buttons) when opening OpenKeychain. Instead a loading spinner should be displayed while loading the data for the list.

Using StickyListHeaders is a little bit complicated because it does not extend ListView. Thus we cannot use ListFragment directly. Some functionality of ListFragment is reimplemented in KeyListPublicFragment. But obviously something is buggy, because for a short moment the ""empty list"" view pops up.
"
open-keychain/open-keychain,closed,Fix 'android.view.InflateException in android 4.1.2',[],"Fixes #352
Tested on android 4.1.2 (emulator and device), 4.4.2, 4.3 and 2.3.3.
Works fine everywhere. 
"
open-keychain/open-keychain,closed,After editing: Ask to upload key?,"[Label(name=""enhancement"")]","After successfully editing and saving a secret key, we could inform the user if their public key has changed and offer to upload it to a key server. 
"
open-keychain/open-keychain,closed,Add option for  sharing encrypted file.,[],"Fixes issue #67
"
open-keychain/open-keychain,closed,hide key details in ViewKeyAcitivity,[],"Make a new tab:
keys: move keys list and key details into this tab
rename ""info"" tab to ""user""
"
open-keychain/open-keychain,closed,ViewKeyActivity: fingerprint lowercase and separate by 2 chars,[],"studies have shown that this is the best
"
open-keychain/open-keychain,closed,Disable edit-key options for unsaved keys,[],"e.g. export - don't export key with unsaved changes... because what does the user intend to export, and changes will probably need to be signed anyway, which means saving.

Check that disabled options are OK wrt API - disabling menu buttons isn't available in all versions of Android, I think. Therefore, test API and hide/disable where appropriate as well as keeping tests for option validity when they are pressed.

Brand new keys are unsaved... but this is taken care of the existing 'does the key need to be saved' code. 
"
open-keychain/open-keychain,closed,Change passphrase button,[],"It needs to be clear how this works - there is a button on the edit-key activity which allows the user to change their passphrase. My most recent update changes the text on this button to be slightly more clear on what is happening.

I _think_ that the passphrase should be changed along with everything else when save is clicked. We need to be clear that the _original_ passphrase is asked for in the case where it is being changed.
"
open-keychain/open-keychain,closed,"API: GET_KEY success, returns pendingintent to key view","[Label(name=""api todo"")]","Return PendingIntent on SUCCESS of GET_KEY
intent: ServiceActiviy with main key fragment with a close button inside the actionbar only
"
open-keychain/open-keychain,closed,API: return all user ids beside main user id in signature result,"[Label(name=""api todo"")]"," return all user ids beside main user id in signature result
"
open-keychain/open-keychain,closed,Multiselect: Create 'select all' in public and secret keylist,[],"This is the implementation of #332
I added the Select all button on both multiselect listviews (hope that's ok).
It works as expected. Also I removed the  private int count variable cause it was already in mAdapter and it was error prone to keep the same info twice.
"
open-keychain/open-keychain,closed,New gradle and gradle plugin Version,[],"This PR switches to gradle 1.11 and updates the gradle-plugin to 0.9+

Fixes #345
"
open-keychain/open-keychain,closed,android.view.InflateException in android 4.1.2,[],"Hi, 
I'm getting the following exception whenever I run the upstream code in android 4.1.2 even on an emulator. It works fine in other android versions. 
http://paste.debian.net/plainh/900119a8
"
open-keychain/open-keychain,closed,Minor variable naming #338,[],
open-keychain/open-keychain,closed,add lock icon for 'Encrypt to..' multiselect option,[],"A possible icon for the Encrypt to.. option.  #171
It's not perfect but a lock does suggest encryption or securing of some sort so it's the most appropriate from the official android icons. :) 
"
open-keychain/open-keychain,closed,Add search icon for other dpi,[],"This if for #346 
"
open-keychain/open-keychain,closed,Register search in Android OS,[],"Somehow it should be possible to register the search of public keys in Android OS, so that you can search using the Android widget for public keys (on my Android it searches for Apps, contacts, and books in Google Play).

http://developer.android.com/training/search/setup.html#create-sc
http://developer.android.com/guide/topics/search/search-dialog.html
"
open-keychain/open-keychain,closed,Hide add contact icon when searching,"[Label(name=""user interface"")]","To have the full width inside the actionbar, we should hide the ""add contact"" item when searching.
Also allow back press to close search view and allow actionbar app icon to go back.

The bahaviour should be exactly like in NoNonsense Notes
(https://play.google.com/store/apps/details?id=com.nononsenseapps.notepad) or Android's original contacts app
"
open-keychain/open-keychain,closed,Add search icon for other dpi,"[Label(name=""user interface"")]","Currently the search icon is only available in drawable-mdpi/ic_action_search.png

We need to add the icon for the oterh dpi.

https://developer.android.com/design/downloads/index.html
"
open-keychain/open-keychain,closed,Switch to Gradle Plugin 0.9.0,"[Label(name=""build system"")]","New Gradle plugin 0.9.0 has been released (see http://tools.android.com/tech-docs/new-build-system)
It requires some fundamental changes to all build files.
This also requires changes to travis config.
"
open-keychain/open-keychain,closed,#338,[],"Used some linux shell-scripting to accomplish the task. Hope this satisfies the patch requirement for GSoC.
"
open-keychain/open-keychain,closed,#341,[],"Is this the change required? I replaced the icon ""android.R.drawable.ic_dialog_info"" in file ""ShareNfcDialogFragment.java"" by the icon ""R.drawable.ic_dialog_alert_holo_light"" in file 
""DeleteKeyDialogFragment.java""

(I am a GSoC aspirant)
"
open-keychain/open-keychain,closed,Implement search for KeyListPublicFragment and SelectPublicKeyFragment,[],"This is for issue #246.
PS: This is my one-patch submission for GSoC 2014. 
"
open-keychain/open-keychain,closed,Dark icon for nfc dialog fragment,"[Label(name=""user interface"")]","The nfc dialog fragments needs a dark version of the icon.

See delete key dialo fragment how it should be done.
"
open-keychain/open-keychain,closed,Notification for passphrase cache service,"[Label(name=""enhancement"")]","I propose a notification for the passphrase cache service:
- on click, stop service, delete cache
- notification could include information about how long the passphrases are cached (remember: it caches many passphrase. We could use the [""big view""](http://developer.android.com/guide/topics/ui/notifiers/notifications.html#BigNotify) to display the TTLs)

If this has been implemented, we can make the service STICKY to prevent Android from killing it.
Related issue: #286
"
open-keychain/open-keychain,closed,Put Preferences in subscreen,[],"This is related to issue #331 
I used preference-headers as suggested in the issue and created two submenus. One is General and one is Advanced settings. A summary can be added under these options to describe what each is. I wasn't sure what to add in this case. 
Another option would be to just move the Advanced settings to a simple Preference and redirect through that to a separate PreferenceActivity but that's not so related to the new standards. 

I had to write some small pieces of code twice because there is the distinction between preferences running on android < 3.0 and > 3.0. It turned out to be a bit larger as a commit because of this need for backwards compatibility.

I tested it on android 2.3.2, 4.3 and 4.4.2 and on tablets and it seems to work as expected. 

Hope it's ok,
I can improve it if you find any problems.
Cheers,
Paul. 
"
open-keychain/open-keychain,closed,Minor variable naming,[],"Both only internal things, so it doesn't affect the user at all.

I noticed ""armour"" was changed to ""armor"" in some files, which I fully agree with. But then it was forgotten in others. In particular the setting still is called ""armour"" internally.

Also ""passPhrase"" was a mistake I made early on and then kept making consistently. Parts of the OpenKeychain code fixed this, but a lot still uses ""passPhrase"" or ""pass_phrase"" instead of the appropriate ""passphrase"".
"
open-keychain/open-keychain,closed,added generated ant files,[],
open-keychain/open-keychain,closed,Update travis to build-tools-19.0.3,[],"Updates travis to support pull request #334
"
open-keychain/open-keychain,closed,updated build.gradle-Files to current Versions of build-tools and SDK.,[],"See #334
"
open-keychain/open-keychain,closed,Better build instructions,[],"Hey GSoC applicants,

The current build instructions at https://github.com/openpgp-keychain/openpgp-keychain#build-with-gradle could be made better and more precise (which build tool version? which sdks?)
"
open-keychain/open-keychain,closed,Show loading spinner instead of empty layout for main list,"[Label(name=""user interface"")]","For a second you can see the ""empty list""-layout (with create key and import buttons) when opening OpenKeychain. Instead a loading spinner should be displayed while loading the data for the list.

Normally this is done by ListFragment magic. In KeyListSecretFragment it works.
Unfortunatly, for the main list we use StickyListHeaders library, so this could be an issue with it or I am doing something wrong in KeyListPublicFragment.

see https://github.com/emilsjolander/StickyListHeaders
"
open-keychain/open-keychain,closed,"Multiselect: Create ""select all""","[Label(name=""enhancement""), Label(name=""user interface"")]","Create a actionbar item to select all keys. The menu item should only appear in multiselect.

If this issue and issue #330 are implemented, we can remove the ""export all"" menu item.
"
open-keychain/open-keychain,closed,Put some Preferences in subscreen,"[Label(name=""enhancement""), Label(name=""user interface"")]","The default values and the one advanced option should be put in a sub-preference called ""Advanced Options"" to hide away some complexity.
Please keep in mind that OpenKeychain is design for Android 2.3 and up. Thus read http://developer.android.com/guide/topics/ui/settings.html#BackCompatHeaders
"
open-keychain/open-keychain,closed,Allow export of selected keys,"[Label(name=""enhancement"")]","Currently you can export a single key from ViewKeyActivity or all keys from the main list.
It would be nice to export only selected keys.
Multiselect (long-press) in the main list currently only allows for deletion and ""encrypt to"". Here you can add ""export selected keys"".
This also needs some changes to the underlying logic.
"
open-keychain/open-keychain,closed,Make export cancelable,"[Label(name=""enhancement"")]","If you have many keys, exporting could take long.
So the process should be cancelable.
This is similar to the already implemented issue of cancelling key generation. Please read https://github.com/openpgp-keychain/openpgp-keychain/pull/315 before doing this.
"
open-keychain/open-keychain,closed,Issue #234 : Adding a min date not to go below creation date,[],
open-keychain/open-keychain,closed,K9Mail: automatic sign/ encrypt,"[Label(name=""api todo"")]","automatic sign/ encrypt (needs OpenKeychain's getKeyIds)
"
open-keychain/open-keychain,closed,API/K9Mail: signed-only with unknown key,"[Label(name=""api bug"")]","Some signed-only messages are still not verified. Instead it is shown that they have been decrypted.
"
open-keychain/open-keychain,closed,API: Stream closed too early?,"[Label(name=""api bug"")]","Sometimes when encrypting or signing the resulting output is missing some bytes at the end thus  the result is broken!

For example:

```
-----BEGIN PGP MESSAGE-----
Version: OpenPGP Keychain v2.3.1 beta1

hQEMAwCgOoTtKmfpAQf9Gj2c1xz/rjGZ+R53lo+Lx59+I3Kansecj5SMI1LOZJG5
RR9ZxEDKEhUzFAdWFNNn8+FNBKokq/NwqiGX4UTXlBlIKfxCrRFK4TQwOYISJa45
AWILcbmf0bHKTI7pFceRTQmX0pW2DzW5KuTVLwgVjScJCJjmnoYNnbSRyuSMunwG
oCmHGuOeLNDGVesjySaIUT/01Jsufl7KzSobCmhRo6PT6ohtAqdwzO2hf5OAt7v8
5Tc2cx5TAET9Wlx8l1EBDY2sq24OGYxcrSXuSXg6mAlhyVduMa4oMVZ4/iWcyAYS
vQLqE29rLWhVWlC3uS3jW4/uV0Q9VtIjw70IMxdWQIRMA26ZZM6umSNAAQH+M4ZM
dT2l1QakoGBV3a0fwAAMlr+a6DWJnkXVb9ggD/4zWwva7A82cAYbIuLD0aqAmnlh
kGxDLXKdDvA+ATPoLtLAjQGxl60bzq1rrj3mMFloHyb58UDmts2guJZ2ua/xQEBt
zShTsB9Z1J7bC5QhCiV4HpdIdgq6OZvkGCQSYOcuCdiNsFtY6FOGQ5EwEnVmdePK
pacucAlCZJse40d3vbBD2okPjsnYV/K/9J0K7tYXwWCOdhaFMzmTmQqRZdxMybzc
NOhbjRmA4vUA35JOVcd8MQ/T+Qn/CnmnlPgBOrCDCz8FM+l5ETsN+p3jVrs5/24s
u8q1Uo6I6jRhWZYdFJ3VDEvmK1JFF0/Q4tYobAPlOL5mUsgr6GNpEqAdM5kLyILo
QG8sOiAtA69eAPNiOZT13RxJWyMa7hjyj9VpVImwf0Hfv4mi1X+HdhsqNJM6gh6Z
tutM/1OsShvsP5gWTtqXrS4ZQ7RYJiBdvtbFHN6L4AInztD0RYMjyln1y6fsf5Yp
4naIjvIsFGOlQMEQnA==
=tRIH
-----END
```

It misses `PGP MESSAGE-----`!
"
open-keychain/open-keychain,closed,Expiry selection UI fix,[],"fixes #234
"
open-keychain/open-keychain,closed,Really cancel key generation in service if user cancels it,[],"Currently when key generation is canceled by a user, the background thread still generates the key until it is done (silently).
To fix this more difficult changes need to be hacked together for Spongy Castle and the IntentService.
For a more detailed discussion go to https://github.com/openpgp-keychain/openpgp-keychain/pull/315

See also http://stackoverflow.com/questions/16093919/how-to-force-stop-intent-service-in-progress
This problem is similar to http://stackoverflow.com/a/10882600
possible solution could be similar to AsyncTask cancel handling: http://stackoverflow.com/a/4770996
"
open-keychain/open-keychain,closed,Smooth Activity Switch Fixed,[],"Referenced to issue https://github.com/openpgp-keychain/openpgp-keychain/issues/177

When switching the activities, the Drawer activity will wait until the drawer animation is finished and calls the selected activity
"
open-keychain/open-keychain,closed,ViewKeyActvity: show user ids/keys revocations,[],"In user id and key list: indicate whether user ids and keys are revoked or not.
"
open-keychain/open-keychain,closed,API/k9mail: signed and encrypted does not show signature result,"[Label(name=""api bug"")]","signed+encrypted mails do not show signature result
"
open-keychain/open-keychain,closed,"Fix Lint ScrollViewSize, DefaultLocale Warnings and NewApi errors",[],"Fixes the lint issues described above.
(Fixing the DefaultLocale Warnings is kinda pointless,
i realised afterwards that rewriting the KeyServer Retrival
 is one of the GSoC proposed projects.)
"
open-keychain/open-keychain,closed,Travis CI Tests,[],"see https://github.com/openpgp-keychain/openpgp-keychain/wiki/Google-Summer-of-Code#wiki-instrumentation-tests-and-continuous-integration

and from  https://github.com/openpgp-keychain/openpgp-keychain/issues/310
and https://github.com/openpgp-keychain/openpgp-keychain/pull/317

""Currently only correct assembly is tested since upstream
Spongycastle fails some of its tests.
Further improvements:
-   sort out correct ia32-libs and speed up the setup process
-    Provide a way to access the generated lint files or disable lint alltogether
  ""
"
open-keychain/open-keychain,closed,"Add travis ci support to OpenPGP-Keychain, Fix #156",[],"Currently only correct assembly is tested since upstream
Spongycastle fails some of its tests.
Further improvements:
- sort out correct ia32-libs and speed up the setup process
- Provide a way to access the generated lint files or disable lint
  alltogether
"
open-keychain/open-keychain,closed,Show error if file import has no content,[],"This is a first step to fix #237.

@dschuermann is this what you wanted me to do? Work is not finished yet!

Open questions:
- Should the other errors (like ""Object not recognized as PGPKeyRing"") also pop up a notify?
"
open-keychain/open-keychain,closed,#226: Added cancel option to ProgressDialogFragments. Create Key is now cancelable.,[],"Key generation is now cancel-able.  Selecting cancel will return the user to the previous activity.  Hope this suffices! 

P.s. I'm trying to participate in GSOC 2014, and want to use this as my ""One Patch"".
"
open-keychain/open-keychain,closed,OpenPGP API 2,"[Label(name=""discussion"")]","just for reference:
https://github.com/k9mail/k-9/pull/457
"
open-keychain/open-keychain,closed,PGP logic classes/interfaces,[],"(Sorry about the wall of text.)

I love what you've done with dissecting that horribly static Apg.java into a more sane collection of helper classes, I've started that myself.

I thought it would be much more elegant to wrap notions of ""Key"" and ""KeyRing"" around PGPPublicKey/PGPSecretKey and PGPPublicKeyRing/PGPSecretKeyRing respectively. It'd simplifiy some code a LOT and allows putting all those methods we need for Key/KeyRing attributes into those classes, instead of having tonnes of static helper methods. It'd also allow direct mapping to making those classes persistent in the DataProvider without requiring loads of doubled functions to store secret and public keys separately... nor any clumsy casting of objects.

I've started this and already feel it helps a lot with the rest of the code:
https://github.com/thialfihar/apg/tree/develop/apg/src/main/java/org/thialfihar/android/apg/key

I like the PgpSignEncrypt and PgpDecryptVerify separation in particular, and I'd like to let that flow back into APG (those files are still ALv2).

But my idea now is this: would you guys be interested in unifying those ideas into a sort of PGP ""core"" package that both projects can use? We could then more easily maintain a common set of stable (and at some point tested) tools to be used by the apps. Perhaps it even would be worth a standalone repository that can be included as a submodule.

I realize you guys likely have a roadmap and loads of other issues to work on, so if there is any interest at all, then I'd start a draft of the thing, since I'm in a heavy refactoring phase anyway, then we could talk about it after I got something working that combines OpenPGP Keychain advances with the Key/KeyRing models.
"
open-keychain/open-keychain,closed,version check,[],"please add the version check to the example-client again
"
open-keychain/open-keychain,closed,prevent null byte[] in case of encoding exc,[],"in theory the byte array could be null if an exception occures (which wont happen in praxis). i would additionally suggest to use ""ascii"" encoding as well for armoured stuff but i am no expert on that. i changed the printStackTrace as well as i considere this not correct for logging on android.
"
open-keychain/open-keychain,closed,Failing Tests in SpongyCastle during gradle check,[],"I started working on #156, during ""gradle check -S"" the following tests in SpongyCastle failed: 

```
org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testOverlappingPoliciesTest6 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest12 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidDSASignaturesTest6 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidValidPre2000UTCNotAfterDateTest7 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testAllCertificatesNoPoliciesTest2 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest3 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest4 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest5 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest7 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest8 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testDifferentPoliciesTest9 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidEENotBeforeDateTest2 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidEENotAfterDateTest6 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testAllCertificatesSamePolicyTest1 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidCASignatureTest2 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidNegativeSerialNumberTest15 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testCANotBeforeDateTest1 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidEESignatureTest3 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testAnyPolicyTest14 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testInvalidCANotAfterDateTest5 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:523

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testUserNoticeQualifierTest15 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testUserNoticeQualifierTest16 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testUserNoticeQualifierTest17 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

org.spongycastle.jce.provider.test.nist.NistCertPathReviewerTest > testUserNoticeQualifierTest19 FAILED
    junit.framework.ComparisonFailure at NistCertPathReviewerTest.java:546

128 tests completed, 24 failed
:libraries:spongycastle:prov:test FAILED

```

Travis CI Instance is [here](https://travis-ci.org/Emantor/openpgp-keychain/builds/19803085)
"
open-keychain/open-keychain,closed,Switch to git submodules,[],
open-keychain/open-keychain,closed,Show link to Market if no openpgp provider installed installed,[],"Somewhat fixes issue #295
"
open-keychain/open-keychain,closed,spongycastle concerns,[],"Heyo. First of all: awesome work! OpenPGP-Keychain has come a long way. :)

Since I'm trying to catch up a bit again, I've had to decide on how to include BouncyCastle in the future, and looking at the spongycastle solution, I had some (probably rather academic) concerns, which I summed up here:
https://github.com/thialfihar/apg/wiki/BouncyCastle

Point 1 probably is a non-issue, if you guys maintain a separate spongycastle repository, but the process of copying it to openpgp-keychain and committing it has the same problem as point 2.

The page also outlines how I now include it in APG, and I think it works quite well. (Note: that repackage task can be configured to rename it to any package name)

I also opened an issue there: rtyley/spongycastle#2, because this could likely be cleaned up with ""git mv"".
"
open-keychain/open-keychain,closed,Show error if keyserver is not reachable,[],"This pull request is added to fix #244

@dschuermann this is a first impression for you to see what I'm doing. This is not final, not completely tested and there is some debug stuff in it. But I wanted to ask you if this is what you wanted me to do. 

Several questions:
1) Is the concept which I'm trying to implement right?
2) Should we transfer exceptions or custom Strings etc. as error in the AsyncWrapper

Please give me some feedback.
"
open-keychain/open-keychain,closed,Partial fix for #304,[],"Hello again,

I believe this is a partial implementation of issue #304(The actual testing would require me to import a bad key, and I wasn't able to do that ).

There are, as far as I know, only two places where you have used the AlertDialog.Builder directly within code
a) Inside ImportKeysActivity at line 397.
b) Inside SectionView at line 142.

The fix for a) is trivial and I have included the same in this pull request.

However, for b) there are several issues which I found:

1) SectionView is not an Activity, so its context would be dependent on the Activity using it.

2) To wrap the relevant code in a DialogFragment would require some kind of callback mechanism so that createKey() can be called in SectionView  on successful key selection(an interface is what I think would be appropriate), but again, this callback mechanism requires an Activity to override the interface methods, and this activity is unknown to us in SectionView.

I'm still working on this fix, and if it actually works I will post an additional commit with the same, but I just wanted to ask you about this in advance.

P.S-I apologize for the import reordering, Android Studio auto-optimize seems to have done that.
"
open-keychain/open-keychain,closed,Use DialogFragments everywhere,"[Label(name=""enhancement"")]","Some AlertDialogs are directly build inside other UI classes without using a DialogFragment.
Search the complete code for AlertDialogs and replace them by DialogFragments with proper new classes. Because DialogFragments from the support-lib is the new standard.
"
open-keychain/open-keychain,closed,Fix for #266,[],"Hello, 
This fixes(partially) #266, however, since there is no official resource for the holo_light version of ic_dialog_info, it isn't really possible to fix that here.

I tried uploading the existing resource to Android Asset Studio, but the end result is quite blurry even using the xxhdpi version of the resource. The only remaining option would seem to be using a different resource for the alerts.

I've also added the images(ic_dialog_alert_holo_light) to the appropriate drawable folders from Android SDK source, can be used as alternative if required.
"
open-keychain/open-keychain,closed,"API fix for Conversations: EXTRA_KEY_IDS, handle non-existing key ids","[Label(name=""api bug"")]","the API also supports to give key ids directly and not user ids.
What happens if the key ids are not available?
It has been reported privately over jabber that encrypt API method still sends output even when key ids are not available.
"
open-keychain/open-keychain,closed,API: don't ask for passphrase on signed-only input,"[Label(name=""api bug"")]","currently passphrase input is requested also if signed-only input is given.

We need a callback from the internal PgpDecryptVerify class that notifies the OpenPgpService if a passphrase is required.
"
open-keychain/open-keychain,closed,Replaced Toast with AppMsg in DecryptActivity,[],"This pull request is the next step towards the closing of #260.

It replaces the Toast in the DecryptActivity with the new AppMsg lib.
"
open-keychain/open-keychain,closed,API: Demo very slow,"[Label(name=""api bug"")]","AsyncTask still seems to cause big delays.
Maybe offload it to a IntentService
"
open-keychain/open-keychain,closed,Intent API: No return to app calling activity,[],"When using the Intent API to sign data with OpenPGP Keychain (using the ENCRYPT Intent) there is no button to return the app calling the Intent. There are only ""Share with ..:"" and ""Clipboard"" buttons.

In APG there was an ENCRYPT_AND_RETURN Intent, this seems to be missing.

Is the Intent API still supported or should I use the remote API (and so this is desired behavior)?

Ran into this problem when I've tried to add support for OpenPGP Keychain in my PGPAuth app (commit ddee73d).
"
open-keychain/open-keychain,closed,API: demo verify not working?!,"[Label(name=""api bug"")]",
open-keychain/open-keychain,closed,Replaced Toasts with AppMsg library in EncryptActivity,[],"This pull request replaces the Toasts in EncryptActivity.java.

All notifys were triggered once. For me all worked fine.
"
open-keychain/open-keychain,closed,API: if no installed provide link to play store,"[Label(name=""api todo"")]","if no openpgp provider is installed, provide link to play store/f-droid
"
open-keychain/open-keychain,closed,API: sharing of keys?,"[Label(name=""api todo"")]","provide API options to share keys or auto download keys?
"
open-keychain/open-keychain,closed,API: publish aar library on maven?,"[Label(name=""api todo"")]",
open-keychain/open-keychain,closed,API: Generate key in register activity,"[Label(name=""api todo"")]","also introduce parameter for requested user-id ?
"
open-keychain/open-keychain,closed,help_start.html ,[],"Need to fix project name in Transifex's link: Everybody can participate at... **OpenPGP Keychain** on Transifex
"
open-keychain/open-keychain,open,"AOSP Mail: Attachments (OpenPGP message, key) crippled","[Label(name=""upstream bug"")]","In AOSP Mail client, importing keys or decrypting messages attached to emails does not work. The AOSP Mail application tries to decode an attached OpenPGP messages/key (ASCII Armored -> Base64 encoding, more precisely Radix64, see RFC4880) as content, which is wrong and cripples the attachment completely. It makes no difference if the attached .asc file is directly shared to OpenKeychain or saved before opening it. The files are crippled: They end after some bytes with the string ""There was an error while decoding the message."" (This is actually part of the downloaded/shared file). 
## Reproduce

Send an email with Thunderbird to yourself with a file ""testkey.asc"" containing for example my key from http://pool.sks-keyservers.net/pks/lookup?op=get&search=0x718C070100012282 (begin copying -----BEGIN PGP PUBLIC KEY BLOCK----- to -----END PGP PUBLIC KEY BLOCK-----).
## More Information
- The bug is in https://github.com/android/platform_packages_apps_email/blob/lollipop-mr1-release/provider_src/com/android/email/mail/store/ImapFolder.java#L798
- It is executed when decoding the attachment, which should have been left untouched. In addition it writes the string `message_decode_error` (https://github.com/android/platform_packages_apps_email/blob/master/res/values-de/strings.xml#L190) in the Base64DataException catch clause, which is also appended into the crippled file.
- It makes no difference to open the attachment directly from the mail app or saving it before opening. In both cases it is crippled content.

Reported upstream: https://code.google.com/p/android/issues/detail?id=75181
## Funny

""There was an error while decoding the message."" has been translated to german as ""Beim Entschlüsseln der Nachricht ist ein Fehler aufgetreten."" (https://android.googlesource.com/platform/packages/apps/Email/+/0d21834/res/values-de/strings.xml) which means: ""There was an error while **decrypting** the message.""
## Ideas

At best we would detect these broken files but the string `message_decode_error` varies between languages so it's difficult to check for it reliably.
"
open-keychain/open-keychain,closed,k9mail: intentService,[],"put blocking api calls into an IntentService
"
open-keychain/open-keychain,closed,API: return pendingIntent also on signature success,"[Label(name=""api todo"")]","this pendingintent can be used to lookup unknown ids
important for k9mail
"
open-keychain/open-keychain,closed,Write tutorial how to integrate the API lib,[],"- for eclipse, android-studio and ant only 
  add to project.properties:
  android.library.reference.1=path/to/keychain-api-library

Explain the API with PendingIntents
"
open-keychain/open-keychain,closed,"""Never"" TTL not reliable & per app setting of TTL?","[Label(name=""api todo"")]","- To have a more reliable passphrase caching we need to make the service sticky with a notification
- per app setting of passphrase ttl would be nice for long running background apps
"
open-keychain/open-keychain,closed,Add new url to help text,[],"also think about a good description for market and help.
Mention PGP only at the end.
"
open-keychain/open-keychain,closed,auto detection for symmetric encryption in PgpDecryptVerify,"[Label(name=""enhancement"")]","- auto detection for symmetric encryption
- Improve DecryptActivity with new PgpDecryptVerify
"
open-keychain/open-keychain,closed,API: some issues,"[Label(name=""api bug"")]","- getBoolean for signature with default false to prevent from getting sigResult on encrypt-only
- asynctask pool to prevent delays?
"
open-keychain/open-keychain,closed,Replaced Toasts with AppMsg library,[],"I started working on ticket #260.

I added the AppMsg library and replaced the Toasts in ImportKeysActivity. If all is okay with this pull request the other classes mentioned in #260 will follow.

The AppMsg-Styles that I set to the different notifys are just the result of me reading code, please correct them if they are not suitable.
"
open-keychain/open-keychain,closed,Make user id pattern static and pre compiled,[],"in PgpKeyHelper
saves some processing
"
open-keychain/open-keychain,closed,Rework PgpOperation,[],"- merge generateSignature into signAndEncrypt
- Make builder pattern for PgpOerationIncoming
- automatic recognition when verifying if it is signed-ascii-only or encrypted+signed
"
open-keychain/open-keychain,closed,API: allow 'accounts' for different private keys per app,"[Label(name=""api todo"")]","optional:
to allow different private keys for one application we should introdue the concept of accounts:

optional parameter for all pgp methods: EXTRA_ACCOUNT

Add account column into database.
Per account a new registeractivity appears!
"
open-keychain/open-keychain,closed,API lib: wrap Log with BuildConfig.DEBUG (log library?),"[Label(name=""api todo"")]","API lib: wrap Log with BuildConfig.DEBUG (log library?)
"
open-keychain/open-keychain,closed,New api,[],
open-keychain/open-keychain,closed,API: check if all methods handle binary and ascii,"[Label(name=""api todo"")]",
open-keychain/open-keychain,closed,API: Implement ascii_armor parameter for sign,"[Label(name=""api todo"")]","currently it only signs text
"
open-keychain/open-keychain,closed,API: Decrypt and verify needs fixes,"[Label(name=""api bug"")]","- verify of sign-only broken
- clean up code
"
open-keychain/open-keychain,closed,API: Multi-threading,"[Label(name=""api todo"")]","make OpenPgpService multi-threading capable
"
open-keychain/open-keychain,closed,"Compilation fails on compileDebugAidl: syntax error don't know what to do with ""public""","[Label(name=""build system"")]","I have also reported it here: https://code.google.com/p/android/issues/detail?id=66084

If using gradle, sometimes my compilation fails because the aidl compiler tries to compile java sources.

Host OS: Debian stable with Oracle JDK 7
SDK tools version (available in the ""About"" section of the 'android' tool
UI): 22.3
Eclipse version: I am using Android Studio 0.4.5 with Gradle Android Plugin 0.8.0
ADT plug-in version:
Platform targeted by your project: sdk 19
Version of the platform running in the emulator: Debian stable

STEPS TO REPRODUCE:
1. I have AIDL files and java source files in the same directory to be compatible with Eclipse.
The project is a Android Library project (this is why it needs to be compatible with Eclipse, too. It should be used in multiple Android apps)
Thus my gradle config contains:

```
sourceSets {
    main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        resources.srcDirs = ['src']
        aidl.srcDirs = ['src']
        renderscript.srcDirs = ['src']
        res.srcDirs = ['res']
        assets.srcDirs = ['assets']
    }
```
1. Sometimes (I can't deterministically reproduce it), the gradle compilation (usually started from Android Studio) fails with:
   
   org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':<MyProject>:compileDebugAidl'.
       [...]: syntax error
       [...]: syntax error don't know what to do with ""public""
       [...]: syntax error don't know what to do with ""public""
       [...]: syntax error don't know what to do with ""class""
   [...]
2. This means the aidl compiler tries to compile java sources.

EXPECTED RESULTS:
Should not happen, the compilation should differentiate between java and aidl files.

OBSERVED RESULTS:

ADDITIONAL INFORMATION:
The same bug has been reported on stackoverflow from another person: http://stackoverflow.com/questions/21638664/instrumentation-test-not-creating-with-gradle
"
open-keychain/open-keychain,closed,New message in 'Registered apps',[],"Just my opinion: If we are saying ""Allow **permanent** access"", also we should say ""You can revoke it later"" or remove this confusing word.
"
open-keychain/open-keychain,closed,Cannot encrypt with Mailvelope public keys,"[Label(name=""upstream bug"")]","Current version of Mailvelope installed in Chrome.
Generate a key.
It will import into openpgp-keychain, and the contact is there and it looks fine, BUT, cannot encrypt with it - when select recipient, it shows in that list as 'no key' and is greyed.
I can use the key with other PGP software including the GPG4WIN/ Kleopatra, GPA, etc.
Why doesn't it work with openpgp-keychain?

Here is sample:
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: Mailvelope v0.7.0
Comment: Email security by Mailvelope - http://www.mailvelope.com

xsBNBFL9xMwBCACAa8z36B4Z4Yvpo7s4Y8jQsHNrJygyd8mh9+Bd3Sg+zt0Z
UjfNS3SfwXocBTGOXrFlS0bRKd2CRXeXdTO0HqjCEKhGKHX73UhAcpBUoTV7
6cgpYtKZL4tkIYWn47UPoASujjpwHxbDGaas/kmsTFPrlh8x5VOdEEVFkqPC
wP1tnX1WALO58BWbs4R1vqrqBrOrGclm9cF2mErWP9QBLR/nH+soaVPK3Hrj
/fX4S43xIxuhKmdZsljrfK7jsUkcF187QkK7xpyS5XSyoosPYIF/d06sVNlZ
XlFFlJXuyndwnRA/VJHowa4hqFFQf1PjxV3g7IVqZfbtOX+SpcLCW507ABEB
AAHNKlRlc3QgTWFpbCA8bWFpbHZlbG9wZUBzb21ld2hlcmUtZ21haWwuY29t
PsLAXAQQAQgAEAUCUv3EzwkQ3CnDbfC4HTYAAIMAB/9AolqHiQun6rxyKgF5
u9hgufo6FziYAtCQelRnUtONsGGUz6mvPsVliNsfbg0BAqwzeExXGBtsIoOv
YAQ3a9zkK3lZSzO7lJIrg4UJyvqZAB6Vp5kJLJnWO1sfe4Pg8Xr8heawp2Hk
na3MPma+ISb2jiioq8wGZHfSMdTYWPYSHf6645yKvfIZGSaG8TOtFYsASSHh
ECfo6mQ+N/akF9pNI1S54RiZinssDn/vy2ZUUPpJGpaHDJ7zf6dATobaV+dV
uqroe00SyJbYPzwKhEo7NgTEGdvICGnCXVoqDkS4j+lK07e5ztxE3OAIy5Un
fC5CQLlbzR9jHSpe2FD6S9H+
=hu6f
-----END PGP PUBLIC KEY BLOCK-----
"
open-keychain/open-keychain,closed,Security assesment with Drozer?,"[Label(name=""enhancement"")]","https://github.com/mwrlabs/drozer
"
open-keychain/open-keychain,closed,failed to import key,"[Label(name=""bug"")]","failed to import keys Error: ""Nothing to import"". My file was pubring.asc which was created from desktop using gpg4usb 
-----BEGIN PGP PUBLIC KEY BLOCK-----

Version: GnuPG v1.4.12 (MingW32)

mQINBFLhDTYBEADYffXSxyWDz9KXULlw7lThVw2Cx6E7HjauCFRS97EeOlgoQXo1

ZtiR2ktl312k/zGK7iaQTwFwCKyy4rJhgiinC3Z727x5BwMdQWv2k72O/59H3X4J

s5F9JfDN0KkMGzPZFp1F36llzq1CzMbzYl9hyCAkfrxtWeSBsp41YXyVUQogEcDj

R9axM2UCsy30G0EBxbt5whv7dtBxJI9I9SjfOOK9WFh/4CbNu6Y4sDH/o7fdP4r/

loQHeuVNB+d1zTyu0H+Jt13Fpni1uhIFj11FiATfdXB19s2QceZmh9jwMm4sEN9X

yMD/IEtpgLh9/f3cSmKVqfoOlLkpQGP8SzoLPEEUkx8s5J4ikVhCgwyuPNDyvAkm

55rfAeiDaL9Urbg2cov7EvnRUTlVW/bbJ6pVP6iEU/9+M572TFPVhkh4XeVgLuZ+

SoQm+bWrsg4+CppGCjmDpGvXrcT9X5R9mxPq8dao5NBiH7dMp2hINaxqZlETeZB8

fWFeTPscYaolR8c190TFuua9EXX6v128/kbt/D7l+eWmGFKiRNNNpm6i88UZdK0+

DWmuC7nJvyCDo+S1h9KQZuSISF41QBHoklHgSSPOp61r3vg/FRt9M5lvhenA7Yx3

82btRYayJEr2PzL5qFYevrGEMd6IEY7HHIGG3N9dkSxlE7s5MiBf3fPM3QARAQAB

tFFWaWN0b3JpYW5vIEEuIEdvbnphbGVzIEpyLiAoU21pbGUsIHlvdXIgbW90aGVy

IGNob3NlIGxpZmUgOi0pKSA8dmFnMTE4QHlhaG9vLmNvbT6JAjgEEwECACIFAlLh

DTYCGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOe57VqVhS2WNtYP/0P5

IH5PF9SnMOe+NsvRMwMpJN7rqKH+0l3ARtHHW2Hq7N0v1XdGX4MoHvA4ulyr7Jul

qxM5dNPpM1JcAKt6wb120iL9yPMfQ64wHqGedEKdKL/wMxGGOaYB2nCPKA8LhL68

vvGH970TrXYT1f4Ja3if/t8GkU4BU1xNosDWtNO9PfEmwMWP5bMT4338y67VonvD

p1g23rSVrDPd5T1Gon3dnQUX4Rq4l1MzvXyjV0/I540xhSRj7rchyoTXfST9tvpK

XmA/KP5RRfgxpdPdv8fAAy5/UhWuAPPqthNzmrBiOKLGHjWIhu7uOGyCrijiUdVR

zoMK2z3iOr226Fjsi7D2m9kjMdBK/8h4IwAbUBWohaxxFYff6EoPSSt80d8m8+0k

uCJEVWGzZ9DYnNhHAUZ4hQhGQnaoabERMFYfxm/cVQ+nadpM/MhnidqLvdhdYTD2

dG/xN4stLVfm8QrTOIEVm0na4YfAyGWOl20pxZjpiclYdmi2KGyHKTLnQDYd4KNZ

qRB5UbNn9x+dnzdyqmjl5kbcUJP5GVRN54QTz53caeROPrayi7/zvswpaR43pwSV

WLw/QgHHvC+79pr8Momsn5MsfKSJRmmQonbO3v30HjxnVjKqCwYuDjE+r6c0jHYF

NtzsPtMCY7nmjvKvxC1lsEiHsumVb77xMXvh9ORtuQINBFLhDTYBEADHZ61k3Gjb

6rDF1fTd8XD81zSXOijsgdOUZoRlugL2qvMc5dhKwEeJ8aakGMoRzF9+5bfv1eYA

3/YEIpniHt5QbEwgSzFReytbBxUsgyZnl+lr9uzfTUR/ubJfW+fujpuCWWsnYzd9

Zjw6o7/YCIKnFfx2FediNwHJVe0OeSmP6sGcAyzheljJdcDpZWLRU2aRhtVJmFup

JjL+gwLhYnZNL5b3nuQrgeK/exf/sqEVE4UbUWkiAQMOIrZuk9Yzg6COKQc8uoLe

iJi96qHBnHzysNfRFVW8kb8pc1haDi+eVTbsgLrAw6KKOddew5//LveBWu6A8Ab5

cl8f5LpES2MDVa8NQirEXAdUb8CLV835GLTu1ZIfI9bDS3nMAdmQKFhi4OFVwm13

PRB5v5JhYevVMvwAKBO/9cndT1zsnS5CdF9ktzUrYpJFHL3DRLJNGE+6qnQTG8SH

Yp5bns2OeLehBNL4psAkoIsft84Ra46YweFEQkAPQdTZQMgYk3M9HDE3OnJzZv+X

IPO4zI6gOVjPpSEqeMSNX8mbDjRbPZ97hpAdkFafK1HFFS6KxU7rJ4B6dLPZY5lq

7rfOmZjCCCtqwZzhqJQrbAkGjWAPNqDNW4ndUox0/JlIk33Nrq+ls4b6BARKAXWC

IbRy7Mqa+3EQ5M6R1mUs2jBNTZugIXswXwARAQABiQIfBBgBAgAJBQJS4Q02AhsM

AAoJEOe57VqVhS2WxNwQANG8m3qZSDd5er4PQrB4C0WOMH/XhFHkSjg+vH6/Q4Ar

lHd0Xp68/UsJx4CnqtkT7F1ajXdePfmjosF2kvhBIgBTJ+04DsQKznyv8QlIr9Jj

uP/k1rhSicZZE/5i/gnfVTbnvBg1591rQiC4ExKkfzJJda9dTMiKEIaZhqXsnHY/

cGy0FV0QTD6YAeloqYgQ20Np5IX2GeKorPXcjPQBuUKD+nyZFnFtjdD3fN3bL+3x

fTrDlE9hrndUbI7bd8lE2dimPhA94Tb/xRiUt+dTFHIdadmFI61RQqaZN1XtjNel

ig7IHEWeQ9yNnGz1jDBuAPiV3ERxYQpIYohB6eIF2Lpm+xW1yKvs9XLlcmm1aFs9

3/7wJsAc0lrtRumBaZb9YreJ7sZcuiZPqrLXa1quCBWLvk2IWFbzoNYgaJ0D29R8

SUviGIKcxgLNNiy1R3rq0jkE1mE5UTcshCfGnGplmoPgEF8PCR4AKILJhd/TBvtN

+rKStbjskREEeMCjS4NHmXH6KT/E6hrMLhUdTpxelqfZ5MzxDS8+2ncm91u9y9oF

24ClRZbkEcDdNelNQyA3cFwwyl2U+JBQ9R/TwqS/8fM95WV0qHA5DZBhccEEnYE/

rr4jB1MWK3j8HvOm5ClfpmQrZBifm77L/zlb9IiJpkV50PyP382RxZ1OlfZ6xZqj

=Nf66

-----END PGP PUBLIC KEY BLOCK-----
"
open-keychain/open-keychain,closed,ImportKeysQrCodeFragment.java seems not to accept a private key in one piece,[],"I tried to transfer my private key from an ubuntu-pc to openpgp-keychain with following command:
    `gpg  -a --export-secret-keys  | qrencode -o - | display`

It shows a big QR-Code, but the scanner reads it correct. But the import-routine does not parse it correctly.

If I scan the QR code with an QR-Scanner-App and copy the result into the clipboard and then use ""Import from clipboard"" it works. Would be cool if the QR-Import accepts your fragmented format and also the all-in-one format.
"
open-keychain/open-keychain,closed,Alert dialog images white on white,"[Label(name=""user interface"")]","All alert dialogs currently use bright icons on white holo background. We should use the dark icon variants.
"
open-keychain/open-keychain,closed,Rename OpenPGP Keychain?,"[Label(name=""discussion"")]","The name ""OpenPGP Keychain"" is okay, but I am not sure if it is the right choice. It is hard to remember for average users and the app's purpose is hard to grasp. I choose it because I thought ""Keychain"" describes the purpose and ""OpenPGP"" is the standard, which the app is based upon.
1. I am not really sure if ""OpenPGP"" should be part of the name, because it actually confuses average users and let the app sound like a specialized nerd app.
2. I would not choose a name that has email in it, because the app will hopefully be the ""keychain-background-provider-thingy"" for several apps like chat, file encryption etc, and not just email.

So, I'd like to open the discussion to eventually rename the app. This could also lead to the conclusion that we do not change the name ;)

Trademarks/names we SHOULD NOT use:
- PGP (Symantec Cooperation trademark)
- GnuPG (unique name for the specific implementation) 
- GPG (same as above)

Interesting names of other good-to-rememeber security apps:
- Chatsecure
- Textsecure
- WhisperSystems (actually an organization not an app)
- Silent Circle with the apps Silent Text and Silent Phone
- Kleopatra (KDE keychain, not sure if the name is good ;) )
- Seahorse (gnome keychain, not sure if the name is good ;) )

Conclusively, we need a name that somehow shows the purpose of the app, but does not use confusing standard abbreviations like ""OpenPGP"".
"
open-keychain/open-keychain,closed,Newer work in K-9 Mail,"[Label(name=""discussion"")]","Interesting pull request:
https://github.com/k9mail/k-9/pull/408

We could help him by trying out this pull request
"
open-keychain/open-keychain,closed,Delete pub key when deleting secret key?,"[Label(name=""discussion"")]","Currently, pub keys can not be deleted if the corresponding secret key exists.

But when deleting a secret key the corresponding pub key is not deleted. Do you think there is a use case to maintain the pub key but not the secret key?
"
open-keychain/open-keychain,closed,language: text on empty registered apps list,"[Label(name=""user interface"")]","Instead of the current message that ""no apps are registered"" a more useful information would be: What are registered apps?

Could also be many textviews like in public key list.
"
open-keychain/open-keychain,closed,language: keyserver instead of key server,"[Label(name=""user interface"")]","make it uniform in keychain:
keyserver instead of key server.
OpenPGP names it keyserver: http://tools.ietf.org/html/draft-shaw-openpgp-hkp-00
"
open-keychain/open-keychain,closed,SuperToast library instead of AppMsg,"[Label(name=""user interface"")]","Use https://github.com/johnkil/Android-AppMsg instead of toasts.

Especially in ImportKeyActivity and to show errors in EditKey, Encryt, and DecryptActivity.
"
open-keychain/open-keychain,closed,Keyserver problems with machine readable output,"[Label(name=""enhancement"")]","currently `HkpServer` class does not use machine reable output from hkp servers, instead it parses the HMTL :/

should be very easy to change that. See http://tools.ietf.org/html/draft-shaw-openpgp-hkp-00#section-5

And add `?options=mr` to the query
"
open-keychain/open-keychain,closed,Implement special ACTION_IMPORT_KEY_FROM_KEYSERVER_AND_RETURN,[],"Should be used to lookup key in
DecryptActivity, When importing fingerprint qr codes, from service activities.

Design:
- No dropdown to get to the other import types
- instead of import button: show ""import and return button"", and ""cancel""
  -> finishes activity with RESULT_OK

Technical:
- also check the fingerprint of the downloaded key against the expected fingerprint
"
open-keychain/open-keychain,closed,Better handling of orientation change instead of using android:configChanges,"[Label(name=""enhancement"")]","Currently we use 
`android:configChanges=""orientation|screenSize|keyboardHidden|keyboard""` everywhere which is a bad practice. We need to recover better from config (e.g. orientation) changes. This means starting lists again or searching again.

see
http://stackoverflow.com/questions/7818717/why-not-use-always-androidconfigchanges-keyboardhiddenorientation

Example: ImportKeyActivity without configCahnges xml:
1. rotate device, fragment will be restarted and mListFragment is null because startListFragment is not called
2. import something -> crash with nullpointer
"
open-keychain/open-keychain,closed,save on editkey not working in special case,"[Label(name=""bug"")]","1. create new key (expert)
2. only add user id information
3. save (not working but also does not give error toast)
4. add key
5. save not working
"
open-keychain/open-keychain,closed,On tablets: Always opened navigation drawer,"[Label(name=""user interface"")]","This would significantly improve the layout for tablets:

http://stackoverflow.com/questions/17133541/navigation-drawer-set-as-always-opened-on-tablets
http://derekrwoods.com/2013/09/creating-a-static-navigation-drawer-in-android/
"
open-keychain/open-keychain,closed,Sign using correct key,[],"Check code:

Should allow signing data with the master key if its flags allow, but only do so if there isn't a valid subkey to do the same. In general, how do we choose between valid keys? Most recently created? First in the list? Highest key length? 
"
open-keychain/open-keychain,closed,Show key status in all lists,"[Label(name=""discussion"")]","Green orange red colored circles

Similar to threema app?
"
open-keychain/open-keychain,closed,Put sign key as button into key view,[],
open-keychain/open-keychain,closed,Show revoked status in contacts,[],"Like in import screen
"
open-keychain/open-keychain,closed,Key flag checks,[],"When checking a signature, make sure the code checks that the signature was made by a key with the relevant sign or certify flags. Don't know if the code already does this... Just need to make sure certifications haven't been made by keys without the certify flag etc. Just something I wanted to double check. 
"
open-keychain/open-keychain,closed,Signature check with expired keys,[],"When checking a signature, is it valid if the key which made it was already expired. Validity false if date is greater than signature expiration date or if signature creation date is greater than key expiration date. Nb there is a method in Pgpsignature class to get key expiration date. Check it is the right thing and use it. 
"
open-keychain/open-keychain,closed,Stuck navigation drawer,"[Label(name=""bug"")]","Sometimes the navigation drawer do not open when swiping from the left. It only ""peeks out"". See screenshot from Stackoverflow.

http://stackoverflow.com/questions/18029874/drawerlayout-getting-stuck-on-swipe
"
open-keychain/open-keychain,closed,Using J-PAKE for key exchange over Wifi/Bluetooth?,[],"see http://en.wikipedia.org/wiki/Password_Authenticated_Key_Exchange_by_Juggling
"
open-keychain/open-keychain,closed,Implement search for KeyListPublicFragment and SelectPublicKeyFragment,"[Label(name=""enhancement"")]","Use SearchView from ActionBarCompat

see http://antonioleiva.com/actionbarcompat-action-views/

and then filter down the query to our Content Provider
"
open-keychain/open-keychain,closed,Gradle changing?,"[Label(name=""upstream bug"")]","Relying on packaging to define the extension of the main artifact has been deprecated and is scheduled to be removed in Gradle 2.0

Apparently
"
open-keychain/open-keychain,closed,Add errors if key server is not reachable,"[Label(name=""user interface"")]",
open-keychain/open-keychain,closed,Crashes with new import activity,[],"Just a note for me. After refactoring I broke some things:
- Fix scanning of whole qr code
- same goes for clicking on signature in DecryptActivity
- after rotating list fragment is empty
- some crashes when importing several things
"
open-keychain/open-keychain,closed,Lookup key with return for ImportKeyActivity?,[],"In Decrypt it should use a Lookup starting ImportKeyActivity.
This is currently not implemented/was removed temporarily while refactoring
"
open-keychain/open-keychain,closed,Remove master_key_id from database contract,[],"When querying KeyRings via our Provider the key with rank 0 is also queried, which is the master key. Thus we could directly use its key_id instead of using master_key_id, which is just a redundant copy of it in KeyRings table.
"
open-keychain/open-keychain,closed,Decrypt/encrypt are confused,[],"When encrypting a message , the button in French says ""decrypt to clipboard"". File encryption says ""encrypt the file""
"
open-keychain/open-keychain,closed,Support for OpenPGP images,[],"For later implementation:
- Use `PGPUserAttributeSubpacketVectorGenerator`
- Add image to database via save key methods in `ProviderHelper` so that the image can be retrieved easily
"
open-keychain/open-keychain,closed,Check downloaded key after scanning QR Codes with full fingerprints,[],"Something for later (after reworking ImportKey):
when scanning QR Codes with full fingerprints:
- After retrieving the key from a keyserver check this fingerprint against the downloaded key

when scanning QR Codes with small fingerprints:
- Do not check and show warning that you can't trust this one
"
open-keychain/open-keychain,closed,show error if import from file has no content,"[Label(name=""user interface"")]","show error: no valid pgp keys!

same for qr code import
"
open-keychain/open-keychain,closed,hide selection of keyserver?,"[Label(name=""user interface"")]","People trying the app were confused by the selection of keyservers. I had to explain them that these servers are synchronized.

So why even letting the users choose?

I would propose hiding them and making the selection only available when ""Expert mode"" is enabled in settings. Normal mode just uses some default keyservers and tries the next if the first failes to connect.
"
open-keychain/open-keychain,closed,Expiry date is one day off,[],"1. Create a new key
2. Set expiry date to 3. feb 2014
3. save
4. open key again, expiry is 2. feb 2014
"
open-keychain/open-keychain,closed,Expiry selection UI,"[Label(name=""user interface"")]","How does the ui behaves if you select a date around 2050 (and less too, not sure where the cut-off is). Other parts of date select ui go back to early 1900s....
"
open-keychain/open-keychain,closed,change key expiry,[],"NB perhaps another issue is how the ui behaves if you select a date around 2050 (and less too, not sure where the cut-off is). Other parts of date select ui go back to early 1900s....
"
open-keychain/open-keychain,closed,Small import/export fixes,[],"branch badly named - I was trying to figure out what was going wrong in my other branch when I made it.
"
open-keychain/open-keychain,closed,import name,[],"Now when importing from a file, key name shows as ""<unknown>"" (with &lt, &gt in case the get swallowed). Pretty sure this wasn't the case before, perhaps something to do with the recent problems with keys with no ID?
"
open-keychain/open-keychain,closed,secret key export,[],"when we export a secret key, I think we don't need to explicitly include the public key - I exported a test key and importing it again shows two keys importable - the private and the public. Import code currently extracts the public from the private key, so there is some redundancy here I think.
"
open-keychain/open-keychain,closed,re-enable getEmbeddedSignatures,[],
open-keychain/open-keychain,closed,NullPointerException in ViewKeyActivity,[],"from Google Play Developer Console:
Android version: Android 4.1
device: Galaxy Note2

```
java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.ViewKeyActivity$2.onClick(ViewKeyActivity.java:199)
at android.view.View.performClick(View.java:4223)
at android.view.View$PerformClick.run(View.java:17275)
at android.os.Handler.handleCallback(Handler.java:615)
at android.os.Handler.dispatchMessage(Handler.java:92)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:4898)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1008)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:775)
at dalvik.system.NativeStart.main(Native Method)
```
"
open-keychain/open-keychain,closed,User Interface & Language ideas,"[Label(name=""user interface"")]","- use ""contact"" / ""recipients"" etc. instead of ""public key""
- hide complicated things in advanced information drop downs like in registered app settings
- new simpler create key activity besides the expert activity
  - just one field to enter name and addable list with emails.
"
open-keychain/open-keychain,closed,Make key generation cancelable,"[Label(name=""user interface"")]","Key generation takes long, make it cancelable
"
open-keychain/open-keychain,closed,Allow creation of keys with empty name/email field,[],"we had 2 bug reports to use public keys
- without name in user id
- without emails in user id

Seems that gpg is allowing  generation of these keys.

We could also allow empty names/emails via our key creation activity.

Proposal:
Display a dialog when name/email is empty and ask if the user really wants to create a key without these fields set instead of preventing the creation of these keys with a Toast message
"
open-keychain/open-keychain,closed,Keys without emails,[],"From my blog (http://sufficientlysecure.org/index.php/2014/01/19/openpgp-keychain-2-2/):

I found it! (Github shouldn’t be necessary.) The problem is when the key has a username BUT NO EMAIL ADDRESS. This is a very valid thing to do (not to mention that pgp/gpg both allow it when creating keys); for example, a business or corporate entity for which an email address does not apply to the entity as a whole. Below I’ve pasted samples of a few keys on my keyring that have no email address, only a userid. This is a big deal, for example, in the case of a relative of mine, who, just like me, does NOT want his email address to appear in his public key for privacy reasons.

```
—–BEGIN PGP PUBLIC KEY BLOCK—–
Version: GnuPG v1.4.11 (GNU/Linux)
Comment: Unauthorized access is illegal and will be prosecuted.

mQGiBD3CQasRBADQTg4gbFUVxx2cMjmJeeupA3Jd+95yAcrClEEowGEc3gTE5XO2
P7U17dDR8sPM4EoyznSlp66rXZAHHmPl5/GE4cW3H2qVaWzuaJOkeZffqTngPp+M
iA5sdijpJbrIAlBVKRnQQBetiXZUInw23xSUkOZ8a0G3BP+YVm2VU1UO2wCg/64h
Z8GaPifLbiODxvLkBCqYl8EEAIx7K2o5dqTnZr5LxA42yMp1Ak3bchXwR3IyzxJt
r5OVbDWs6AkuYLT8jb+l+voQQeEOzZIxc9JeTKLzVfXDH6vl6xJVPxobNKvpauxg
no76gvt6OCmcnSL9W68whjGyCLOQ+lkv4O8kD6mXlYkzN3aPLu0s379XZmIqqSE9
Q9izA/4i26+GR0SMzUkuJlI58fNeu2xQc+pqDY5foJ4qSNm5amgLSV+R8CKlCjB5
yDmAGGqnfIFSw51fkhH3PwSSc0KXDwUgsa4heLLLh3hNykh+qAmitmr7q3SMeNlj
9YaUJu5JbinWKKsEJJqVq9DhELEBSv625NkraC7MtbpfOfwQtbQqUEdQIENvcnBv
cmF0aW9uIFNvZnR3YXJlIFJlbGVhc2UgS2V5IDguMC5YiFgEEBECABgFAj3CQasI
CwkIBwMCAQoCGQEFGwMAAAAACgkQVjZyxuj5nbL5eACeJTds2ei7R5pf0OxgaQ/4
L2EDQNwAoPZom4jWbTigoQrclAIunIOf/OsQiEYEMBECAAYFAj4gFksACgkQ3yIx
Juvm41KHMwCgoK+0WWQPHrcP3vaHLmgoZfrT/SEAoPQo6PdlrL4ZFUuDn4tchgvJ
7MNIiEYEMBECAAYFAj6upg0ACgkQfGGp3NsA4ztX2ACeNfOnGS7PDnKjta+wRdma
bg/nR/MAn2I7Cg7sa5YbEgD6yreMhZzbDwJ0mQENBEGz0vIBCADLb2Sb5QbOhRIz
fOg3u9F338gK1XZWJG8JwXP8DSGbQEof0+YoT/7bA+3h1ljh3LG0m8JUEdolrxLz
/8Mguu2TA2UQiMwRaRChSVvBgkCRYkr97+kClNgmi+PLuUN1z4tspqdE761nRVvU
l2x4XvLTJ21hU5eXGGsC+qFP4Efe8B5kH+FexAfnFPPzou3GjbDbYv4CYi0pyhTx
mauxyJyQrQ/MQUt0RFRkL8qCzWCR2BmH3jM3M0Wt0oKn8C8+fWItUh5U9fzv/K9G
eO/SV8+zdL4MrdqDstgqXNs27H+WeIgbXlUGIs0mONE6TtKZ5PXG5zFM1bz1vDdA
YbY4eUWDABEBAAG0JVBHUCBHbG9iYWwgRGlyZWN0b3J5IFZlcmlmaWNhdGlvbiBL
ZXmIUAQQEQIAEAUCQbjAeQUDCWdTAAMFAXgACgkQx0Y2ObLXeV4TDACeOv6k0sP/
wA88dHO6qd02LjdzRlIAoKTz19eU0KnWGaC3O5cx8OL6h9wliQFWBBABAgBABQJC
UbRwBwsJCAcDAgoCGQEZGGxkYXA6Ly9rZXlzZXJ2ZXIucGdwLmNvbQUbAwAAAAMW
AgEFHgEAAAAEFQgCCgAKCRCXELibyletfPfmCACdUd0CHYqqu/BKc+izvdh2VVt4
X0txvGzihg8MKToAeIOmOvafG7jyLUGIt5rtpMQTDACRwhr/eUIs/TY2MZermBGd
alb93TG2xoMOPzJha6xYaEQmxSWurkLPYqPDE1AddGEdcQNHy+r27PDkSMIHS7r2
+XA2ajz59rXtgw1V1dpeyZcmUlyJUdrN28aixxPNk64oMd1omZjyclwLJ2TiqwU6
IY5wWblQ4o+fN0GHfU0qCWrD/GH7WdMDbPmiuxjiNUUgHqxaq60hxVBi38nvx2IA
oV6aQQ5B7SRTklmtjfgTymngGZLqZ8/Kvw20cV8w4ATibxpwV5pkrVfr65bn0cye
/wAADVkBEAABAQAAAAAAAAAAAAAAAP/Y/+AAEEpGSUYAAQEAAAEAAQAA/9sAQwAK
BwcIBwYKCAgICwoKCw4YEA4NDQ4dFRYRGCMfJSQiHyIhJis3LyYpNCkhIjBBMTQ5
Oz4+PiUuRElDPEg3PT47/9sAQwEKCwsODQ4cEBAcOygiKDs7Ozs7Ozs7Ozs7Ozs7
Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7/8AAEQgAkAB4AwEi
AAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIB
AwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNi
coIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfI
ycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEA
AAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYS
QVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz
9PX29/j5+v/aAAwDAQACEQMRAD8A9moqtf30Gm2cl3cvtijGSa4a++LNlGStlZvK
R0ZuBWkKU6nwomU4x3PQqK8guPinrEzYhhihX86ns/Ffia/XzElJUHOV4/rW/wBU
qJXlZEe2i9j1iivMP+Ex1q3+/KCw6gip4PiXdREC5tUkHcrwaTwlVbK4e1iekUVz
mheNdO1ycWyK8U5Gdrf410QOa55RcXaSNE09ULRRRUjCiiigAooooAKKKKAOY+Ib
lfCN1g9cA/rXh1fQPiXT4dU0o2dwXEcrclCARgE8ZB9K4J/AGkKeJr38ZU/+Ir0M
LiIUoNSOerTlJ3R54v3hXpfg3UdNGmrHPMsToOc9+KrQeBdAd2SS7vkYdPnX/wCI
qy3gfRoThb+9GP8AaQ/+yVdavRqxs2yYU5wdzH164t57+V7XHlZOCOh5rn5n5Ndr
J4U0xBt/tC8x16p/8RTP+EK0uRQ32q9IPfzE/wDiKuGKpRSSYnSm3c5/wjP5XiKF
ywUDqScelevR6/pCR4k1S0DDqPOXI/WvPLjwdplpbtPG9zI6so2yspU5YDoFHrW7
pOmRWpEiqVyuPlHH41xYmpGpPmibU4uKszqY9f0aZtseq2bN6eeuf51fVldQyMGU
9CDkGueMCOpxtYe3NYWoabJJOZrWV7V1yFe1cxnH1HX8a57Glz0CiuFg8U6rpjql
2PtkXTMgCv8Agw4/MfjXU6VrthrCH7NKRIoy8LjDr+Hp7jIosFzRooopDCiiigCl
qXKRD1c/+gtWPLFitnUfuRH/AG//AGUiqDKGFAzAmFzG7rGhAJJyB604XtzGGjeA
uD3GR2x260t1fTJf3EChAsLKo+XOcorZP/fVQm8lPXZ/3yKLCJDPIBsjUjIHUewF
WoYWS2jDDBArPN1IQR8o/wCAirdvcERwu33ZYkdgOgLKCcfnRYBL0f8AEvmz6x/+
jUqxbzyCLCKoC92NRaiMWLkHhmj/AB+dTWlarutdoIXI64oQETXJ25MbA9DsolCE
Y4zjpVswL5QXgMB1xWZMRDIywoJn6HnAWmIzb+GZyyIisD0Vl4Nc5I0ulXSO8zQt
nMTrkGM/71dVNpufnMkm7Odwfmqd5CGi8tuQB0b5v51SEzf8M+Kl1QixvdqXoHys
OFmA7j0PqPxHoOlrxm5DROrRkxvGQVZOCpHQivSPCfiEa9px80gXlvhZ1Hf0Yex/
mDRKNtQTN6iiioKKmoD9zGfSVf1OP61QrUuovOgZM4PBB9CDkH865PxJrVx4d057
yS0inAcIqq5TJJ+hoAqXg/4m9/8A9dU/9FR1CRUGlan/AG7Fcal9n+z+dNjy9+/b
tRV64GemelWiKoRHVuIf6Ha/9e0X/oC1VIrIt/FtxNGsFtoxk+zoITI1zhWKjbn7
vt0zSYzfvJSLAIennIB+p/pWtZy4hXmuQa71fUzGhtre1jR920MXLHGMk+2T6da1
oZb22ULM6FDwGCkHNFhGzNqCbjAmXkPGF7VJFAkEQHBNQWkMUcQIwc859fepJJeO
tNIVyK4bg1jXjda0LiTg1k3b9atEsxr3qai0LWDoOvQXpYiEny5x6oep/Dg/hT7s
9ayLoZVs1VriPeQcjIorC8F37ah4Vs3kbdLCvkyexXjn3xg/jRWBqb1ee/FqYLpu
n24P+snLMPoOK9Crzb4uKQumSfwl2H44qo7iexB4JQHRwCMj7Q39K2roRRXTkqPL
U8iuB8NFl8S6ftdgrSHIycH5T2rvb8b2uap6MS1RDJcWsq7YUCt65J4rA0FUCHKj
h2/9CNYfjDUSkS2lskrlHDTSR/8ALPjocUaH4msUtVjCM0qLyqkAH8TyKSBnoELo
OgFJf3VoITFcTBNy546gevtzXM6Rqd3fakWadyigsYw3y+gAH410O/PDZHHcU7E3
LWnXED2SC2nE0ajG4HJ/GpJJeOtYlxYpJdxXMcssLxkE+SwXdj14qrf6jrP22SK0
t4RFkFZZMYx/n8aANieXg1mXMnWla5lKRCSMFmB8xoz8qHHvzg1TnlzVIRTuW61l
3MyQRSTuNwjXdt9T2FXZ3zWfcRpPG8Mn3JBtJ9PQ/nVCO7+Dl49z4f1BJG3Mt6XJ
/wB5V/woqD4LwvDpurK45W5VT9QtFYPc1Wx6VXDfFi0M3hmG6A5trhSfoRj/AAru
az9d01dY0O809v8AlvEVX2bt+uKFowZ4z4Zbd4h04/8ATRv/AEBq7+T53ufrXnXh
ffF4ls4JQVkildWB7EKwNehwnfLcD/aFXLcUThGs5bDUpYrgFWZ2dGHR1J6ip57C
0voRHcQq6htwI+Ug4xkEVo+MJ0jksrYA+ZuMhPouMfzP6VnQyEqKqOqJejMmfSr/
AE8NNbzC6hjG7aQVlA/kcVueFtR+12Mrpceagk4Abdt4/rUiMeOeaqS6UhuVubSa
WymxtdrbC+YvoR6+9FhHRPcCNGaRgiqNzFjgAVmya/pYkZftSnH8QQlT9D3rmdbe
fT4o7KO6ne3ky+yV9xBB9euO+Kw2mfruNAj0OW8t/K837TB5eM7/ADBjFVp3IAOQ
QwyCDkEexrz95W9vrirula1LYyiOQu9s2Q0YPT3GehpgdJK2apzt8hottQgv1k8p
ZEeMZIYg5GcZyKjuFkkKQxKXklYKijqSeAKdwPUvhdbeX4ZmutpH2y7eUZ9AAv8A
NTRXSaJpqaPotnpyYP2eIKxHdv4j+JyaKwe5qi/RRRSGeaeJ/Dx03x7Yavbr/o96
7eZj+GQI38xz+dXdPffczD1cVu+Lzi0tT6Tj/wBBNc3oz7r5x6uKroIwPFt5Beaz
FbQKGa1BWSQdycfL+GP1qCCPgU3+yprC/ltrpcSqxOezAnhge9aMNv04rRaIh7jE
iNSSFLeF55c7I1LNjrgVcjt/alu9O+12U1uSUEqFNyjlcjrRcVjzzVL6bU5xJIio
qjCIo4Uf1NUDEfStiXTLizuHtboL5qc7l6OvZhTTZ+1K4WMZoSe1NFuSelbP2M9x
T47As2FXJp3FYqaUptJ2fZu3IVwSR1r0L4f6FHqmsf2w8bC3sjhA2CGlx29duc/U
isHQ/DlzreoiwtPl24NxPjKwL/Vj2H9K9m07T7bStPhsbOPy4IV2qO/uT6knkmok
y4otUUUVBYUUUUAc54yP+hWv/XwB+hrntOTyNbSP+84rs9Z04ajaqu7a8bh0OMjI
9a5O6gvob3zjZAuDwyOMfryKaegEHjZTYva6qV8yFf3MqKMsueQw9uDmq+nPZahG
JLSdHz2zyKsXEOpagyC4IWOM5WNOmfUnuaxtT8NOJPtFoGt5uu6PjP4U0xNHSx2b
jtmrC2p/u1xEOr+J9MO1sXCj++OavxeO9Tj4m0vJ9jTuI09c8NrqUavGfKuI/wDV
yhc49iO4rnToV/A/lXCI5xkPGCFI/HvWhL491BhiLSufc1l6hrXiTVZQIALaPGOF
yfc0gHzadBZxGW9nSFBydxp+nafPrEii0RrOyP3rmRfncf7Cn+Z/Wo9K8NXEl0Lm
+L3EgOQZTux9K7W0s5BgYNFwsbOg2tlpVilnYxCOMHJ7s7HqxPc1sqcjNZNnbsuM
1qoMLUlD6KKKACiiigBCM1E9tG55UVNRQBWNlF2UVC+mxP8Aw1fooAx5NDgfqg/K
oG8N2p/5ZL+Vb9FAHPjw1ag/6pfyqZNBt06IPyraooAzU0qJOiirCWcadBVqigBi
xhegp1LRQAUUUUAf/9mJAU4EEAECADgFAkJRtHAHCwkIBwMCChkYbGRhcDovL2tl
eXNlcnZlci5wZ3AuY29tBRsDAAAAAxYCAQUeAQAAAAAKCRCXELibyletfEgSB/4/
kRnDLh5laGauPl25grp5237eE9E2uKOpsTZHOsJOT/T6XBPYsc7Y1crDJr9ouGO+
OnQmPQdbX4UFtdEt/R862B4dyOGtsG/c0J4mQn9V52wntXkbLDYU6S1V151yhLHP
RMA+TLYjyApbmSFwdPGcdriUmfv4vU6kjORFLiZPpV6oFxlIk2klzetyP+AZ2xcw
sPEmkk+3e56JOOVAvSP/oHClTvqGBE4K7FOwC+rpNemA/SaX2GRxBZqWKEvqkN7S
3zwht4Gkv3YwWVlpDbec+3urG0ZKOPVxI9xFId9x4I6zpS/LiTW4ZWeTXiC3MR6h
kx44vucDBAwY3zU/wuptmQGiBECLXqwRBADSHPHqRait69RN4Fk+Q0q+1CsJeWiB
3GfctJAmmc3bgnKjP4hQ34/+Cu+FVdt2oNOx41wuHnsGoGZ9PLxDx+mLqHasM7nw
IUyOM4AjAKMZRJo8RGqC1V14tL/sdhmlZOAmjD7vbT8yoK0Qsm8B/+Ak+6wqT+ac
WGHekHssteHmqQCg/3vN4o1grx1p5GrAIPv6zfKTjAMD/3xEzQ2MF1EgBIoDuguB
uNsf1lu66zsTozip/B14nVYuAC3cBL9a3m+uEb6jYP1qWvondYHeINrM/67y1CF9
ift/HO5CdlTntmr+h5tlSYqNNXxmBDmEKXlT7Fklkqfp1SrbXdTykvygQ/VmXOLz
AL24baIY5ti/PTbUatieH8jXA/0dbB64vwSStiTQPNVGXb4QvwPHD0ByIIaW/Ufa
C4f1mrx6OpukjYWLDNTUOwz430qxqmjL18CzgLjy3uJQ+CyLCItIn2YLHHIuVkfp
iHv+D73twkPuGT4f0Cx6M04VLJwAn/7r2wHXPqLsW5Dof6pyoAOvUDSyYPgWooqy
R2NP/7QQUm9nZXIgU29uZGVybWFubohiBBMRAgAiAhsDAh4BAheAAhkBBQJGFiQC
BgsHCgMEAgMVAwIEFgMCAQAKCRCckyeNEQYZYRrcAJwPfaQM0EQhtStNyA74ze4v
/1jpeQCfSBclr6IfOrybMeuzaFO0BvHelWO0IVJvZ2VyIFNvbmRlcm1hbm4gPHJz
b0BqdW1hcm9zLmRlPohfBBMRAgAfAhsDAh4BAheABQJGFiQFBgsHCgMEAgMVAwIE
FgMCAQAKCRCckyeNEQYZYY8nAKDB7kkrekyc5YfSrN5p0+1YxGnkkgCgkZcG7fdw
62/8WmewPDyoXfMg6om0JlJvZ2VyIFNvbmRlcm1hbm4gPG1haWwyMDA3QGp1bWFy
b3MuZGU+iEkEMBECAAkFAkd7K7kCHSAACgkQnJMnjREGGWFl7QCeMhGDSgTd6eNJ
bvyWNzEzB0+DDdAAn199Q8OMhvSGiAtsOOwhil9RKNxPtCZSb2dlciBTb25kZXJt
YW5uIDxtYWlsMjAwOEBqdW1hcm9zLmRlPohfBBMRAgAfBQJHeyuIAhsDBgsHCgME
AgMVAwIEFgMCAQIeAQIXgAAKCRCckyeNEQYZYZeOAKD4xkoDTjXIbP6AzA0nH5cQ
kK2nEwCfcsbgmt73s3dqECMAFu6S2J/Nxz25AQsEQXioXgEIAL0lvPDxW/YFsk7g
+2wf4ka1TALn67a39RcmymhSuxb8HUExbKVJpA+YiItiHdbYgpKNtOEFE9WSvk2v
5i3eTF5OCAw0xG6597R08FVMqoB52K01Wf16hmGf8IOmQDNOvlptdSP4VrZhSJsp
+FEHJJRi6EVLA+gGH7D4QlYiU5ErhghUass9YGedzT1g2g4gyOxsaC1rUrvXjAyk
HbTcjroHkDjsNvAicwR0xK79UZd4Hd4mKVQBnZUSaL+3BuujOeRagNgoTOzpKcz9
0XvRxS83OcC5gNMNBHOuTunNhh+hnFl38qVfdVuTdiubz0eFhOsHq9IWZhKZ4A/i
ePqY13EABimISQQYEQIACQUCQXioXgIbDAAKCRCckyeNEQYZYeplAKCfubmdUI+i
0uNLEAD8DPMeUmxQkQCfQ54LuBtjtzvpWebG9eyBtXRXCkiZAaIEO+7JbhEEAIbE
BLwlcVGlTryol0/6i+BIjp62RtnM7ZtE0M5fuQdeTM6/l7s3ujzTYvdxgfN+18/q
n0j6vb5WtqkZ4rR+XgCf+Pjds8G0uWvFspBTJq+M2uBMr5W98k07jLROgB106Zgc
WtXXcue+AKGFvN8Va3BaF2rJ/LsutNAQshxplGazAKCy4z8YIpkEFM7b+oA+S2pO
CRfChwP/SNjdpZWmsmW/0osfrpXVWl2CAsLlbL4qaHd8GC3s/WNWLFtXPo1Cs7N4
YigvpinSygrU2Tcnf+XyJkDlFbPeGyziiKgVc4e27lpFqmYv9M227xBPT5PtE2ri
2JghAgO8RW5c/YuBTyfXfGBl4rsI4c4ZAl5VXMiYF0RyFcmSFiYD+wSCaT3jeU89
lrUjgjMTwDhUmWDzGmW+1FNTJyFKut4+dfjlVUJPqX6nGq4H9AYtMPkdt35HlTlL
cvoWWm9wZXppnGHLvt4NdzjxfxJoDOB+hfZg4y8waj3sqAkR3DQbAI05OEyjNGLc
A80TKT4fxE7HM/nYV2CVnH7kX9gUfntRtBZSb2dlciBTb25kZXJtYW5uIChEU0Ep
iGIEExECACICGwMCHgECF4ACGQEFAkYWI+sGCwcKAwQCAxUDAgQWAwIBAAoJEPzv
HUh4eur6PNsAmwS3czP2EJP1GNo/5hkpZMhq2bcgAJkBZfGODTRk3q29iXvNBlI2
ABNe3rQoUm9nZXIgU29uZGVybWFubiAoRFNBKSA8bWFpbEBqdW1hcm9zLmRlPohJ
BDARAgAJBQJDVxHUAh0gAAoJEPzvHUh4eur6/Y8Amwfawd3rvdw5xsHo3E+ua5c1
tKHvAJwJSvPwRMbngG+XPyK+CHmGe4DXe7QnUm9nZXIgU29uZGVybWFubiAoRFNB
KSA8cnNvQGp1bWFyb3MuZGU+iFwEExECABwCF4ACHgEFAkYWI+8GCwcKAwQCAxUD
AgQWAwIBAAoJEPzvHUh4eur6500AnAljePkgVTEdWlk44mJ9MKlDNrJTAKCWQyAw
nJs2fJXuSU9zlgBn0EZgWbQyUm9nZXIgU29uZGVybWFubiAoRFNBL0phYmJlcikg
PHJvZ2Vyc0BhbWVzc2FnZS5kZT6ISQQwEQIACQUCQYfvxAIdIAAKCRD87x1IeHrq
+um4AJ9vl2wkOIQEeIPCnse3RvkeTteU4QCeNr6+lAGvo/ljw/TTVE5k9I4qHjq0
LFJvZ2VyIFNvbmRlcm1hbm4gKERTQSkgPG1haWwyMDA2QGp1bWFyb3MuZGU+iEkE
MBECAAkFAkWZJkgCHSAACgkQ/O8dSHh66voxagCaAiyVYlbxw8UY2wxfMhDA2iBf
PoUAoKXVWNVqZ0//tzQ/+veD/WFlgwP+tCxSb2dlciBTb25kZXJtYW5uIChEU0Ep
IDxtYWlsMjAwN0BqdW1hcm9zLmRlPohJBDARAgAJBQJHeyz4Ah0gAAoJEPzvHUh4
eur6XF4An0MnSt9DlH4fFh0+ph6H8Z/XKarCAJ9vCj7vcQZyD4U2be6NBnfALtjr
J7QsUm9nZXIgU29uZGVybWFubiAoRFNBKSA8bWFpbDIwMDhAanVtYXJvcy5kZT6I
XwQTEQIAHwUCR3ss2wIbAwYLBwoDBAIDFQMCBBYDAgECHgECF4AACgkQ/O8dSHh6
6vpQSQCeJTvehgQ0atA/NFO7DC34wNFDZSgAnjARUblLXsw1evmzhvfP9GI1zFj1
uQINBDvuyX4QCACI/mOQQloW7eR72X+rxGY+EtoqdazNh6vrpPQ64X75mE23Ozym
2h3yuU5pWAWmxd+ezkS5OZNgHCmauV66vd08dHoKnHt85lCT8uc/132hCKZBNcwf
cYLyeQik2WgHtJZZ2x5YEUTpGicwIguy9ZGTNFs13dRyE5pxIhEPTdARVuUDocA1
pgY4sqeTD4oT6AOvs5tKUkzFiQgdSOSBPcIaeMU0ou7t4QQeiOeh8cHqcSeZmSdF
/s92QkcI9Swo+Tufv+ty1vtY1x6lDWBoQArkOB/6Y9IRE3A46Iev90bq6xJyP1UC
6TkND6FlLH0QefaYdeZdBVo31MUYpV3DzIwrAAMFB/9kpCjR6p00ceH9MrzHzk4I
n8r78ctP2GsNaAc3Vdk0bjbVwoDA+SKlDpUHBgQ6tehsJ0rhJHSq74yeOkb4Dy+s
3Zfo8jnmj9vtSwo7Dx0cIbHyUSvrE0DHqe7e7cNcCzbNBaJr6TOvmasaNYlXssj6
lVYuQPAww5kzkIdjNmv7Zozc6Qlwm8ndcfdtbgwsTBirjmWYMCOgA91ttaikCJ/R
k9SAxNvStpOvHBQAZbQAAyKWB66UeCFYtA6XsRKyE75ICOT3VTyldu+xIuyU3MZN
vt8VF+yJGrEaOQkeBqoeeffMtKiVQFwEIm/zk4qNMowRet6HXMM8eB0MXEXYHBY6
iEkEKBECAAkFAj/0RjECHQAACgkQ/O8dSHh66vpXRACgo1OPcA22rnCEReP1iurB
ye1VHgcAnRYosY/3Lr4hmhfBBydBsyJp1SjQiEYEGBECAAYFAjvuyX4ACgkQ/O8d
SHh66voWVgCfelKIyRNfvJrV52EwNdFB2cHjzZwAnjWD2NVmUt/N5pz+ow3CEVQU
2HzkuQELBD/0RIkBCADUjBHnmYlmGpmPefodcIvaLYNhiq4iq55YaEmcaYmwVuNI
nbJtD4p+sdIyTs2wfqDbOJ0j7qkZe2nkxvBOWbYmW8Ij0bNKL739pLPjPnqojadx
Ag8L04yXWNEd4iNwl/QeB5/QpPd741J+riNdScxX2eShfqm6/IqyFvplU65lYTAu
tf8vEuWHMLHyUXaSLgNwOkaG1u0rfC5OIOEy5IbgWY761576QmRCwhfr6KeNbHr3
m5ymgxSYi5fvevtTqAa8QNI151vW0oZpXlCLVF3l5QBOVx151Ht3pJn4bmOC/PYL
j3FL1XcJIk+YEPXSAmUUh2jJOihUwOO9gzh8T86pAAYpiEkEGBECAAkFAj/0RIkC
GwwACgkQ/O8dSHh66vqKtACfdg4i3dvJVdr5PjDFiFAHp22cX6kAn1uCMHILQkTS
jiz1OvjI1e3qxWvrmQCNAy94NMcAAAEEAPh/KSGK4KUGJlrO9AHfwKc70C8SWLQm
5/azd+veJyvmKQrWjJFalEqHR3U9Mk33IIHmmyyOrGRRZ2toouex9EOwKquva/kq
qCPDqGGdhXcd8XglWzwq/rTgmUkS0i5hPkbK9/zk1FKneJHZkjxJ5cnIh+NO+TlB
sYFDmgO7WuAhAAUTtBFXaWxsaWFtIEEuIExvdWNrc4kAlQMFEEZ0NeKBQ5oDu1rg
IQEBeXYEAPFKsNgB664dKdGFxhoC7lQBljGvej4AnD42ma4hHcFThLLMkkXu/y2R
4nD75ZrvZ6y22LS2bZQMhQYhTvsDj+c9sIdJR8llh+1RB5b39G589+ksbGbZ1lkh
JhyqtXAR+UoiduFD2TzmcuJFmp4sVnDMxdF9G/L2cQD+k9Xhf4v3mQGhBDYg/VIR
BADUu9sDzEitFKfwOrG3FWpPRIG0tZSUDCe/QgDIGHkVKtM7KmLM3tfwRzZVDNPn
ubEfkV4E1JPhhGNgXUn4auwDwpFG45OdKBu+4lJRKn/tKdgm0Ntb1PZlSfrGeveK
tzgK/3U3xhIpVWrWs1zurylGzEElu8JVyIDkeNaIHsHMiwCg/0YmFGXgL8PhDGZI
/3uIbu6M7aEEAIbR2b6XSr/FFjM66keu/blrpcVqTv+NM26eXbKr4148OW2NCcvb
JtkeYJ225L1XIulSmTSfyCm1WBkI24N112zu+xaZm3nx5pQ0qfIdTbq03TNHGDsy
I+cC5A/j+ZJga9f9Yqe6qo3atkRGj142t82iqPK8q5Tys/wfcQYLW8hFA/j3OJi4
4D32KSqf/FVfEBv/OdsR1stOQKE9gQCIxLP3H1GtugQD0FW+hM/wTXCnFrnVMlS7
SY6opUaLlJl6zmZxbuN8mL8wEivbGYudEjF5U5bBB4/k6+V8fPvqhnYJKW7jkz9k
BHilK+GWRyvLn00F38c6MxjbeXx64hfTumJctBFXaWxsaWFtIEEuIExvdWNrc4hh
BBARAgAhAheABR4BAAAABwsJCAcDAgEEFQIIAwQWAgMBBQJOrUXJAAoJEEKQMiDl
TXPKUIoAnj3wjFEMaQUPlQuLxljlIqNCVBfGAJ0SrDWGJNq4UXCZozI95st6sFcZ
MIhcBBARAgAcBQJGaZYXBwsJCAcDAgECF4AEFgIDAQUeAQAAAAAKCRBCkDIg5U1z
yoKuAJ98gPsUPHFRAZsvZwXQ9uo0cWq/tQCfUgHbXrqujnAMn8yG24q31+61daC5
Ag0ENiD/kxAIANn9ZkDZVXL8LkTg7PeYzD0xKLqmgf9iW9Xt+qdcoP+6A8OE/PGr
uteVuSPYShD5o2uUEwLzCeQWr7KGC0wA1oqwcPT9vnutVI0WseIE1zu57NY+uMo+
YGdXh55NbNyWibBFVpWzAG7F7fUIrfPyW3Do6p5hYs9xKU2VS7gudBj9SJj/KPG5
1aKUbz7YP6i3D1fs6cREn/53GpfGMIx28h8wNLY26c4pQtEXLOQ71wAQBhAN/eYg
/ulCe8vNMxG8RezBxRJpOKzA0O6Z9c8NioUSb/hw35VFdKzgO/7Bd+lS2BmEe5uI
VdbKD68/J1v6Uo7RbAFXL0xuR+B3KfsGLzcAAgIH+wa9wZU+nmOEZ2VQWN0CO/We
saLRpgj+tFgYpgAT5YdhXt23jQqWOQqZY2UlpsY0u9jnRnrowAx08I3AhgyFl3yQ
P3c/FCkX5u37pIxgP5BlQ6J1QMSdGPLAkhLpvlHafB+IHunl0gzEKq7joAEvJ9kG
LaPGHvGejPJE38yjhpK+fA/Qq060Uow+aNDjZP7xxDUZSEb0vEIrJTsE2fvZD8GW
fSAGul3ff6EuZ4v7SPQdTO6p7Ftb2enSlLJYX7hrZuD5qzbLDCYvFq2u+/5huxPH
Fbgou17prHT/K0b2atDuEx2g8QOX95/j37mXSTTfbgcp1PYP3cOK8QoWcc1wxtWI
PwMFGDYg/5NCkDIg5U1zyhECTEIAn1nMiDAVwwtejjTsQ4lnpxLIsgDUAJ4yqVcN
XdqszK8cKeEmyGYRLIpzEA==
=+sQA
—–END PGP PUBLIC KEY BLOCK—–
```
"
open-keychain/open-keychain,closed,Resolve lint errors,"[Label(name=""build system"")]","Gradle build reports many lint errors and generates a html file where the problems are described. Some of some would normally abort the build process.

currently abortOnError is false in some build.gradle files of main project and libraries
"
open-keychain/open-keychain,closed,include support lib as source?,"[Label(name=""build system"")]","the support lib is downloaded from maven, include source?
"
open-keychain/open-keychain,closed,Switch from actionbarsherlock to actionbar compat,[],"actionbarsherlock is no longer in development
"
open-keychain/open-keychain,closed,improve first time wizard in k9mail,[],"After implementing the API for k9mail, we could improve k9mail's account wizard to provide pgp options
"
open-keychain/open-keychain,closed,remove shadow in icon,[],"No shadow per design guidelines
"
open-keychain/open-keychain,closed,"add ""never"" for ttl for passphrase cache",[],"to allow a never-expire for the passphase cache i added a simple ""forever""-choice. i don't like this aproach as
- it doesn't distinguish per key
- it doesn't distinguish per client

which would be needed. the program should reset the timeout on any usage, not sure if it does already, but if not it should be added. if time allows i will dig into this.
"
open-keychain/open-keychain,closed,IllegalStateException in EditKeyActivity,[],"from Google Play bug reports:

`java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1343)
at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1361)
at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:595)
at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:574)
at android.support.v4.app.DialogFragment.dismissInternal(DialogFragment.java:189)
at android.support.v4.app.DialogFragment.dismiss(DialogFragment.java:155)
at org.sufficientlysecure.keychain.service.KeychainIntentServiceHandler.handleMessage(KeychainIntentServiceHandler.java:72)
at org.sufficientlysecure.keychain.ui.EditKeyActivity$3.handleMessage(EditKeyActivity.java:189)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:5419)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:525)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1209)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1025)
at dalvik.system.NativeStart.main(Native Method)`
"
open-keychain/open-keychain,closed,Not able to set an expire date,[],"I created a new gpg key with an expire date set to 20. January 2016. But when I save the key, the expire date is not set.
"
open-keychain/open-keychain,closed,UI language selection,"[Label(name=""enhancement""), Label(name=""help wanted"")]","Just a small future request:
For people who prefer en_US as a global system locale but want to use this app in native language need an option for manual in-app language selection.
"
open-keychain/open-keychain,closed,app crashes on public key with empty user id in key ring list,[],"first: great app, good work!

now the problem: after importing key 0x35b75db6 from the keyservers, openpgp keychain crashed when i tried switching to the contacts list. ultimately it became unusable because the contacts listing is the default upon start. please fix with the next update. thanks!
"
open-keychain/open-keychain,closed,remove navigation drawer from help,[],"Remove included layout from help
"
open-keychain/open-keychain,closed,language: bad_keys_encountered,[],"bad_keys_encountered, it&#39;d great if you could also use the singular/plural for this strings because of the same reasons &quot;%d mauvaise(s) clef(s) ignorée(s).&quot;

from transifex message
"
open-keychain/open-keychain,closed,Fragment Dialogs are not themed (black font on black background) in Android 2.3,[],"themed fragment dialogs are no longer included in ActionBarSherlock. see https://github.com/JakeWharton/ActionBarSherlock/issues/998

We need to theme theme on our own
"
open-keychain/open-keychain,closed,Progress bar on key creation,"[Label(name=""user interface"")]","key creation is slow when using save defaults, even on new phones.
We need a progress bar instead of just a spinning wheel.
"
open-keychain/open-keychain,closed,register Uris for Barcode Scanner fingerprint import,[],"see https://github.com/guardianproject/gnupg-for-android/blob/master/AndroidManifest.xml

ReceiveActivity
"
open-keychain/open-keychain,closed,use getData Uri in sign and upload activity,[],"instead of giving a key id use Uri from getData containing the path to the key in our provider.

Check that it is not a secret key
"
open-keychain/open-keychain,closed,display key to be signed in CertifyKeyAcitivity,"[Label(name=""user interface"")]","display name, email, and key id as basic information in CertifyKeyAcitivity
"
open-keychain/open-keychain,closed,Some basic design issues,[],"- use margins instead of paddings. If I am right we should use margins instead of paddings at many places. see http://android4beginners.com/2013/07/lesson-2-2-how-to-use-margins-and-paddings-in-android-layout/
- Use standard margin sizes, see http://developer.android.com/design/style/metrics-grids.html
- use match_parent instead of fill_parent

I have tried to do it right in sign_key_activity.xml as an example.
"
open-keychain/open-keychain,closed,SignKeyActivity: test upload method,[],"is this really working?

The code uses         data.putLong(KeychainIntentService.UPLOAD_KEY_KEYRING_ROW_ID, mPubKeyId);

ROW_ID is not the keyId. Something is fishy here ;)
"
open-keychain/open-keychain,closed,Default fragment in import key should be keyserver,[],"Keyserver is mostly used to import keys. Make it first entry
"
open-keychain/open-keychain,closed,Listviews empty after coming back to view key,[],"Load on resume?
"
open-keychain/open-keychain,closed,Show certifications in view key activity,[],
open-keychain/open-keychain,closed,Sign with keys without passphrase not working,[],
open-keychain/open-keychain,closed,Import fix,[],
open-keychain/open-keychain,closed,better onActivityResult handling for import,[],"instead of 
https://github.com/dschuermann/openpgp-keychain/blob/master/OpenPGP-Keychain/src/org/sufficientlysecure/keychain/ui/ImportKeysActivity.java#L304

do it like in 
https://github.com/dschuermann/openpgp-keychain/commit/e8548a80134fab114b557924d24cfab37c60bbed

see http://shomeser.blogspot.co.uk/2014/01/nested-fragments-for-result.html

how can this be done in dialog fragments?
"
open-keychain/open-keychain,closed,Importing keys,[],"Importing from file says there are no keys to import when I open an asc file

Import from clipboard crashes if there is _nothing_ in the clipboard (reboot and then try, for example)
"
open-keychain/open-keychain,closed,full cross-certification support,[],"playing with githubs milestones feature :)
"
open-keychain/open-keychain,closed,cross-cert changes,[],
open-keychain/open-keychain,closed,export single key,[],"on the viewkeyactivity, export key option exports all keys, should only export the key being viewed
"
open-keychain/open-keychain,closed,Passphrase input on secret key export?,"[Label(name=""discussion"")]","Need password protection on private key export (like APG does).
"
open-keychain/open-keychain,closed,encrypt and decrypt with special keyboard?,[],"This would provide integration with many chat apps ;)

fork https://github.com/larroy/lastpass-android ?

Should be developed as a separate application using the OpenPGP Keychain API.
"
open-keychain/open-keychain,closed,Opening asc/gpg from email programs,[],"""I tried it within K-9 with 'open' and a HTMLViewer opens without an option to select an other app."" from Google+

This can be generalized:
We need to associate asc and gpg files from email programs with Keychain.
Maybe we need to register mime types

test this with Android's mail app as well as k9mail
"
open-keychain/open-keychain,closed,Merge decrypt file and import key intents,[],"the file based intents to decrypt a file and import a key should be merged together. Then auto detect if it's a key or a encrypted file
"
open-keychain/open-keychain,closed,edit key save logic,[],"user interface:
- show passphrase dialog only on save when user changed something to rebuild keyring
- handle passphrase change by requiring to enter old passphrase
- this allows to delete and export key without the need to enter passphrase

logic:
- on save every given subkey is signed again even if the previous signature was fine
- thus we need to rework this build key logic
"
open-keychain/open-keychain,closed,show toast on copy to clipboard from view key,[],"show toast on copy to clipboard from view key
"
open-keychain/open-keychain,closed,new keys are cross-certified,[],
open-keychain/open-keychain,closed,Improve language,[],"- unify language (do not talk about keyrings in the application)
- use android plurals instead of (s) etc
- rename buttons in import activity to show what they are doing

see https://github.com/dschuermann/openpgp-keychain/issues/168 https://github.com/dschuermann/openpgp-keychain/issues/93
"
open-keychain/open-keychain,closed,PgpKeyOperation subkey called twice?,[],"from https://github.com/dschuermann/openpgp-keychain/pull/185:
""for createKey, do we have to return a keyring, rather than just a key? I've not looked at how it is handled, but we effectively sign the subkey with the master key twice, because we call addSubKey twice.""
"
open-keychain/open-keychain,closed,Cross cert,[],"Keys we generate are now cross certified
"
open-keychain/open-keychain,closed,better onActivityResult() code for fragments,[],"- new sign dialog, key selection
- open file dialog

handle in activity like here: https://github.com/dschuermann/android-donations-lib/blob/master/ExampleApp/src/main/java/org/sufficientlysecure/donations/example/DonationsActivity.java
"
open-keychain/open-keychain,closed,export to keyserver new view,[],"- make it a dialog fragment
- instead of button use dialog button
"
open-keychain/open-keychain,closed,new sign activity,[],"just one activity:

select secret key with button like in registered apps activity,
do not show activity to select key automatically before

add padding
"
open-keychain/open-keychain,closed,Investigate update from server method,[],"it opens the secret key list, why?
this should not sign...
"
open-keychain/open-keychain,closed,Height of passphrase button in expert key,[],"Broken
"
open-keychain/open-keychain,closed,Key details,[],
open-keychain/open-keychain,closed,hide advanced options in EncryptActivity,"[Label(name=""user interface"")]","hide ascii armor, compression selction, and ""delete after encryption"" in the file view of EncryptActivity  under an advanced options button.

This could be done like in AppSettingsFragment
"
open-keychain/open-keychain,closed,make activity switch with navigation drawer more smooth,"[Label(name=""user interface"")]","make activity switch with navigation drawer more smooth
- finish close animation before switching activity
"
open-keychain/open-keychain,closed,Buttons instead of actionbar in encrypt and decrypt,"[Label(name=""user interface"")]","- use buttons for encrypt and decrypt instead of overflowed actionbar.
- use blue android-bootstrap design with icons (like in key view ""encrypt to contact"")
"
open-keychain/open-keychain,closed,Better icons for actionbar,"[Label(name=""user interface"")]","- include icon images in project (don't use them from android.R !)
- black icons for sharing and keyserver in key view
- icon for encrypt to... in multiselect?
"
open-keychain/open-keychain,closed,File selection UI in encrypt and decrypt,"[Label(name=""user interface"")]","- should be multiline like in file dialog
- fix orientation of browse button
"
open-keychain/open-keychain,closed,QR Code sharing with key id only,"[Label(name=""enhancement"")]","Add another way to share keys via QR Code:
similar as qr code scanning in APG's old branch:
send only key id and download key from keyserver
"
open-keychain/open-keychain,closed,Discover keys by scanning contacts,"[Label(name=""enhancement"")]","1. go through all emails of contacts
2. download keys from keyserver (just take all valid ones)
"
open-keychain/open-keychain,closed,Improve multi selection,"[Label(name=""enhancement"")]","We could improve multi selection in public and secret key lists:
- add more actions? (currently only: delete, encrypt to)
- show check boxes?
- backport to Android < 3 (https://github.com/ManuelPeinado/MultiChoiceAdapter ?)
- add icons instead of text ""encrypt to""? (fixed by uberspot)
"
open-keychain/open-keychain,closed,create button in DecryptActivity to lookup key if unknown sig,[],
open-keychain/open-keychain,closed,"button design, icons",[],"use https://github.com/Bearded-Hen/Android-Bootstrap
"
open-keychain/open-keychain,closed,Language fixes,[],"Quote from transifex:

""Key Server Preference"" is there only one preference?

In title_encrypt_to_file , ""title_encrypt_to_file "" has been translated ""Encrypt a file"" but that not what you wrote. What does this process do exactly?

non, &lt;none&gt;, what does it refer to, the ID? (gender)
"
open-keychain/open-keychain,closed,Copy to clipboard in key view,[],"Under share menu
"
open-keychain/open-keychain,closed,Job queue lib for remote service?,[],"https://github.com/path/android-priority-jobqueue
"
open-keychain/open-keychain,closed,Key details,[],
open-keychain/open-keychain,closed,Decrypting PDF downloaded from mail server,[],"I'm using APG with k9 mail but figured I'd try OpenPGP, too. I use countermail.com and I can't decrypt pdf files with  APG or OpenPGP. I get error length = 128 and index = 209 when I try to decrypt the file with OpenPGP. APG just crashes. I think it may be a mime type issue? Is there any work around for this?

John
"
open-keychain/open-keychain,closed,OpenPgpData minor Fix,[],"The type is not saved in the OpenPgpData used in the service API. This leads to exceptions when using byte array input.
"
open-keychain/open-keychain,closed,Encrypt File refactor with content providers,[],"Instead of parsing given Uris to file path, uri(s) like attachments in k9mail, and directly get content from content provider on encrypt
1. cache content or put it in own content provider
2. encrypt it
3. then ask user where to save encrypted file
"
open-keychain/open-keychain,closed,onActivityResult() causes IllegalStateException in ICS,[],"related to bugs?
http://code.google.com/p/android/issues/detail?id=23761
"
open-keychain/open-keychain,closed,Object contentprovider?,[],"Just read this
https://plus.google.com/101948439228765005787/posts/Hq4UnmBQF63
"
open-keychain/open-keychain,closed,per-client setting of password cache expiry,"[Label(name=""api todo"")]","the cache expiry (i set it to 8h) seems to expire earlier than configured which is bad for a background app (the entry form pops up suddenly).

an expiry of ""unlimited"" would be a nice to have for background services.

i would also like to have a per-client setting for this config-value so backgroud services can be configured to have longer expiry than gui-apps.
"
open-keychain/open-keychain,closed,squeaky mail,[],"I get a message from squeaky mail when creating a new email stating the pgp keyring is not  compatible..
"
open-keychain/open-keychain,closed,QR Code sharing: remove signatures,[],"When sharing QR Code:
- signatures have no value for user because they met in person
- signatures data too big
- remove sigs for sharing
- show info that sigs are not shared
"
open-keychain/open-keychain,closed,Setup Travis CI,"[Label(name=""enhancement"")]","Setup Travis CI for continuous builds
"
open-keychain/open-keychain,closed,API: Crash when secret key was deleted.,"[Label(name=""api bug"")]","Show toast that user need to select a new one.
or better: show app preferences
"
open-keychain/open-keychain,closed,Move zxing packages to own library in libraries,[],"- Move zxing packages to own library in libraries
- Write info about stripped version
"
open-keychain/open-keychain,closed,After new key list: Put ShareActivity into KeyViewActivity,[],"ShareActivity currently handles share intents, this can then be done in KeyViewActivity.
- solves problem with starting dialog fragment and finishing activity
"
open-keychain/open-keychain,closed,API: Improve Demo app,"[Label(name=""api todo"")]","- use OpenPgpListPreference
"
open-keychain/open-keychain,closed,API todos,"[Label(name=""api todo"")]","Some unsorted todos from my mind for the API:
- automatic key download without user interaction to verify signatures
- preference per app to change this behaviour from automatic to dialog based
- implement isKeyAvailable

k9mail:
- automatic signing: trivial
- automatic encryption: use isKeyAvailable
"
open-keychain/open-keychain,closed,import public key per copy paste ,"[Label(name=""enhancement"")]","I would like to import keys per copy paste witch isn't possible.... ? why or am I a just totally incapable would make things easier !!
"
open-keychain/open-keychain,closed,Crash on Samsung Galaxy S3 with Android 4.3 custom rom (/dev/urandom - permission denied),[],"Hi,
I'm using a Samsung Galaxy S3 with Archidroid Custom Rom (Android 4.3; based on Cyanogenmod Nightlies). The OpenPGP Keychain version used is 2.1.1 from F-Droid.
The app will crash regardless of whatever I do (even if I press the volume keys). I found some information about this error in the comments here, maybe this will help you:
https://plus.google.com/+AndroidDevelopers/posts/YxWzeNQMJS2

Here is a logcat of the crash:

```
10-01 20:40:58.985 I/ActivityManager(3305): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10200000 cmp=com.teslacoilsw.launcher/com.android.launcher2.Launcher} from pid 3305
10-01 20:40:59.110 W/BackupManagerService(3305): dataChanged but no participant pkg='com.android.providers.settings' uid=10039
10-01 20:40:59.935 I/HK/LatinKeyboardBaseView(6170): closing org.pocketworkstation.pckeyboard.LatinKeyboardView{41c02128 V.ED.... ......ID 0,0-720,448 #7f07000a app:id/LatinkeyboardBaseView}
10-01 20:41:00.055 D/dalvikvm(9643): GC_CONCURRENT freed 1632K, 71% free 3199K/10796K, paused 2ms+1ms, total 14ms
10-01 20:41:03.325 D/audio_hw_primary(1916): select_output_device: AUDIO_DEVICE_OUT_SPEAKER
10-01 20:41:03.330 I/ActivityManager(3305): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=org.sufficientlysecure.keychain/.ui.MainActivity bnds=[360,621][360,621]} from pid 6235
10-01 20:41:03.415 I/ActivityManager(3305): Start proc org.sufficientlysecure.keychain for activity org.sufficientlysecure.keychain/.ui.MainActivity: pid=17754 uid=10140 gids={50140, 3003, 1015, 1028}
10-01 20:41:03.685 D/skia    (17754): new locale en-Latn-GB
10-01 20:41:03.780 D/libEGL  (17754): loaded /system/lib/egl/libEGL_mali.so
10-01 20:41:03.780 D/libEGL  (17754): loaded /system/lib/egl/libGLESv1_CM_mali.so
10-01 20:41:03.785 D/libEGL  (17754): loaded /system/lib/egl/libGLESv2_mali.so
10-01 20:41:03.785 E/        (17754): Device driver API match
10-01 20:41:03.785 E/        (17754): Device driver API version: 17
10-01 20:41:03.785 E/        (17754): User space API version: 17
10-01 20:41:03.785 E/        (17754): mali: REVISION=Linux-r3p1-01rel1 BUILD_DATE=Tue Jul  2 15:06:24 KST 2013
10-01 20:41:03.815 D/OpenGLRenderer(17754): Enabling debug mode 0
10-01 20:41:03.860 I/ActivityManager(3305): Displayed org.sufficientlysecure.keychain/.ui.MainActivity: +463ms
10-01 20:41:03.885 W/BackupManagerService(3305): dataChanged but no participant pkg='com.android.providers.settings' uid=10039
10-01 20:41:05.190 D/AndroidRuntime(17754): Shutting down VM
10-01 20:41:05.190 W/dalvikvm(17754): threadid=1: thread exiting with uncaught exception (group=0x41976700)
10-01 20:41:05.205 E/AndroidRuntime(17754): FATAL EXCEPTION: main
10-01 20:41:05.205 E/AndroidRuntime(17754): java.lang.SecurityException: Failed to open /dev/urandom for writing
10-01 20:41:05.205 E/AndroidRuntime(17754): at org.sufficientlysecure.keychain.util.PRNGFixes$LinuxPRNGSecureRandom.getUrandomOutputStream(PRNGFixes.java:260)
10-01 20:41:05.205 E/AndroidRuntime(17754): at org.sufficientlysecure.keychain.util.PRNGFixes$LinuxPRNGSecureRandom.engineSetSeed(PRNGFixes.java:199)
10-01 20:41:05.205 E/AndroidRuntime(17754): at org.sufficientlysecure.keychain.util.PRNGFixes$LinuxPRNGSecureRandom.engineNextBytes(PRNGFixes.java:213)
10-01 20:41:05.205 E/AndroidRuntime(17754): at java.security.SecureRandom.nextBytes(SecureRandom.java:270)
10-01 20:41:05.205 E/AndroidRuntime(17754): at java.util.UUID.randomUUID(UUID.java:130)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.Profile.<init>(Profile.java:220)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ProfileManager.<init>(ProfileManager.java:211)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ContextImpl$41.createService(ContextImpl.java:558)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ContextImpl$ServiceFetcher.getService(ContextImpl.java:245)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ContextImpl.getSystemService(ContextImpl.java:1575)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.media.AudioManager.<init>(AudioManager.java:436)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ContextImpl$6.createService(ContextImpl.java:327)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ContextImpl$ServiceFetcher.getService(ContextImpl.java:245)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ContextImpl.getSystemService(ContextImpl.java:1575)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.view.ContextThemeWrapper.getSystemService(ContextThemeWrapper.java:117)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.Activity.getSystemService(Activity.java:4572)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.view.ViewRootImpl.getAudioManager(ViewRootImpl.java:4995)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.view.ViewRootImpl.playSoundEffect(ViewRootImpl.java:5062)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.view.View.playSoundEffect(View.java:16274)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.view.View.performClick(View.java:4246)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.view.View$PerformClick.run(View.java:17728)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.os.Handler.handleCallback(Handler.java:730)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.os.Handler.dispatchMessage(Handler.java:92)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.os.Looper.loop(Looper.java:137)
10-01 20:41:05.205 E/AndroidRuntime(17754): at android.app.ActivityThread.main(ActivityThread.java:5295)
10-01 20:41:05.205 E/AndroidRuntime(17754): at java.lang.reflect.Method.invokeNative(Native Method)
10-01 20:41:05.205 E/AndroidRuntime(17754): at java.lang.reflect.Method.invoke(Method.java:525)
10-01 20:41:05.205 E/AndroidRuntime(17754): at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:739)
10-01 20:41:05.205 E/AndroidRuntime(17754): at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:555)
10-01 20:41:05.205 E/AndroidRuntime(17754): at dalvik.system.NativeStart.main(Native Method)
10-01 20:41:05.205 E/AndroidRuntime(17754): Caused by: java.io.FileNotFoundException: /dev/urandom: open failed: EACCES (Permission denied)
10-01 20:41:05.205 E/AndroidRuntime(17754): at libcore.io.IoBridge.open(IoBridge.java:409)
10-01 20:41:05.205 E/AndroidRuntime(17754): at java.io.FileOutputStream.<init>(FileOutputStream.java:88)
10-01 20:41:05.205 E/AndroidRuntime(17754): at java.io.FileOutputStream.<init>(FileOutputStream.java:73)
10-01 20:41:05.205 E/AndroidRuntime(17754): at org.sufficientlysecure.keychain.util.PRNGFixes$LinuxPRNGSecureRandom.getUrandomOutputStream(PRNGFixes.java:258)
10-01 20:41:05.205 E/AndroidRuntime(17754): ... 29 more
10-01 20:41:05.205 E/AndroidRuntime(17754): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)
10-01 20:41:05.205 E/AndroidRuntime(17754): at libcore.io.Posix.open(Native Method)
10-01 20:41:05.205 E/AndroidRuntime(17754): at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)
10-01 20:41:05.205 E/AndroidRuntime(17754): at libcore.io.IoBridge.open(IoBridge.java:393)
10-01 20:41:05.205 E/AndroidRuntime(17754): ... 32 more
10-01 20:41:05.215 W/ActivityManager(3305):   Force finishing activity org.sufficientlysecure.keychain/.ui.MainActivity
10-01 20:41:05.340 D/dalvikvm(3305): GC_FOR_ALLOC freed 5613K, 41% free 15733K/26648K, paused 91ms, total 101ms
10-01 20:41:05.845 W/ActivityManager(3305): Activity pause timeout for ActivityRecord{41dc06c8 u0 org.sufficientlysecure.keychain/.ui.MainActivity}
10-01 20:41:06.230 I/ActivityManager(3305): No longer want com.google.android.partnersetup (pid 15712): empty #17
10-01 20:41:07.000 D/audio_hw_primary(1916): select_output_device: AUDIO_DEVICE_OUT_SPEAKER
10-01 20:41:07.005 I/Process (17754): Sending signal. PID: 17754 SIG: 9
10-01 20:41:07.065 I/WindowState(3305): WIN DEATH: Window{41dca300 u0 org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.MainActivity}
10-01 20:41:07.065 I/ActivityManager(3305): Process org.sufficientlysecure.keychain (pid 17754) has died.
10-01 20:41:07.180 W/BackupManagerService(3305): dataChanged but no participant pkg='com.android.providers.settings' uid=10039
10-01 20:41:08.050 W/ProcessStats(3305): Skipping unknown process pid 17803
10-01 20:41:08.055 W/ProcessStats(3305): Skipping unknown process pid 17806
```

I'd be very glad if you could take a look at it.
"
open-keychain/open-keychain,closed,Trust status,"[Label(name=""discussion"")]","After implementing trust:
Show trust status with color directly in key list?
Similar to threema ( https://threema.ch/de/)
"
open-keychain/open-keychain,closed,ViewHolder pattern,"[Label(name=""user interface"")]","Implement this pattern for speedup of lists?

http://www.codeofaninja.com/2013/09/android-viewholder-pattern-example.html?m=1
"
open-keychain/open-keychain,closed,Key Creation Crash,[],"Possibly relate d to bug reports on play store. To crash on key creation, press create key and then open the Android menu and open Settings (or perhaps it works on opening another app, didn't try). Wait some time for it to finish generating key and try to switch to edit screen. I get a logcat of:

D/Keychain(25018): Bundle resultData:
D/Keychain(25018): ------------------------------
D/Keychain(25018): new_key2 : [B@422d5758
D/Keychain(25018): new_key : [B@422cb060
D/Keychain(25018): ------------------------------
D/AndroidRuntime(25018): Shutting down VM
W/dalvikvm(25018): threadid=1: thread exiting with uncaught exception (group=0x4192c700)
E/AndroidRuntime(25018): FATAL EXCEPTION: main
E/AndroidRuntime(25018): java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
E/AndroidRuntime(25018):    at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1343)
E/AndroidRuntime(25018):    at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1354)
E/AndroidRuntime(25018):    at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:595)
E/AndroidRuntime(25018):    at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:574)
E/AndroidRuntime(25018):    at android.support.v4.app.DialogFragment.dismissInternal(DialogFragment.java:189)
E/AndroidRuntime(25018):    at android.support.v4.app.DialogFragment.dismiss(DialogFragment.java:155)
E/AndroidRuntime(25018):    at org.sufficientlysecure.keychain.service.KeychainIntentServiceHandler.handleMessage(KeychainIntentServiceHandler.java:72)
E/AndroidRuntime(25018):    at org.sufficientlysecure.keychain.ui.EditKeyActivity$5.handleMessage(EditKeyActivity.java:249)
E/AndroidRuntime(25018):    at android.os.Handler.dispatchMessage(Handler.java:99)
E/AndroidRuntime(25018):    at android.os.Looper.loop(Looper.java:137)
E/AndroidRuntime(25018):    at android.app.ActivityThread.main(ActivityThread.java:5289)
E/AndroidRuntime(25018):    at java.lang.reflect.Method.invokeNative(Native Method)
E/AndroidRuntime(25018):    at java.lang.reflect.Method.invoke(Method.java:525)
E/AndroidRuntime(25018):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:739)
E/AndroidRuntime(25018):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:555)
E/AndroidRuntime(25018):    at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:112)
E/AndroidRuntime(25018):    at dalvik.system.NativeStart.main(Native Method)

seems similar to previous resume issue #111 ?
"
open-keychain/open-keychain,closed,Copy/Pase and Share from AOSP Mail broken,[],"I have a slight problem with message decrypting when doing copy and past from the built in Android mailer. To reproduce the problem.

Encrypt a message in ""keychain"" and send it to yourself with the Android built in mailer.
Read the mail using the builtin mailer. 
Copy the mail using the ""select all"".
Open ""keychain"" and decrypt. 

It then looks like the message has the lost the cr,lf characters, see attached picture.
The message is then not recognized as an valid PGP message.
You can always edit the message manually to insert necessary cr,lf and then successfully decrypt the message.

Using the Keychain 2.1.1 (21100)
Android Samsung Galaxy S4 Active, 4.2.2  

![screenshot_2013-09-28-09-00-16_resized](https://f.cloud.github.com/assets/5563165/1230930/c80d9aa0-2819-11e3-9a07-1224f6b2f61f.png)
"
open-keychain/open-keychain,closed,Openpgp Keychain doesn't recognize passphrase,[],"Openphp Keychain isn't recognizing my pass phrase that is working well on my desktop. I think it maybe because of some utf-8 characters, but have not tested it-
"
open-keychain/open-keychain,closed,Disable qr codes or implement #142,[],"Because qr codes are not working, we should disable the option for the next release or implement something along #142.
"
open-keychain/open-keychain,closed,Key sharing via multiple qr codes,[],"As ashh proposed:
""

For sharing keys via multiple QR codes, we could easily send a first QR code with information on the number of QR codes to follow, along with an md5 of the resulting code. On the exporter, codes could be cycled with simple next/previous buttons or some clever way of the importer signalling to move to the next codes. To allow codes to be sent out of order, prefix the QR data with some tag - - and then have the importer have a number of little images for each code to be scanned, which light up green (or something pretty) when the corresponding tag has been received.

Obviously this isn't the fastest way to do things, but it should be compatible with most devices, all you need is a screen and a camera. Splitting keys like this also allows us to use smaller QR codes (with an option for how small is small) which might not be readable by barcode scanner in their large form (like Structured Append Feature, although I don't think this allows you to send unlimited data, just split into more conveniently sized QR codes).
""
"
open-keychain/open-keychain,closed,Fixed #140 - Multiline Entries in KeyServerQueryActivity,[],"- EditText is now singleLine and has a hint
- EditText has set inputType=text and imeOptions=actionSearch
- Implemented listener for the actionSearch event
- Reformated the source code according to the project specification. Sorry for
  the diff mess :-/
"
open-keychain/open-keychain,closed,Multiline Entries in KeyServerQuery are possible,[],"While importing keys for testing i noticed, that you can enter multiline text in to the query EditText. AFAIK you don't need multiline.

I would propose to make the EditText singleline and show the search button in the virutal keyboard
"
open-keychain/open-keychain,closed,The Signature Game,[],"## Introduction

@ashh87 commented about signatures in #66, this got the whole idea rolling in my head. 

> For viewing signatures, will we have a separate view or have singable objects be expandable lists like the current key list?

IMHO is the main goal of such apps like openpgp-keychain is to bring crypto to the masses, but the masses are lazy and bored by crypto. So why we don't introduce a little bit of gamification here? The Signature Game (it's probably not new)!   The user can extends the web of trust in a playful way. 
## Concept

Each key is assigned a level. The way to increase your level is to get signed by more users.
## Level Calculation

Each public key is assigned a level. 
1. Level - Selfed signed key (the default case after creation of a new pub private keypair)
2. Level - The key must be self signed and signed by 2 other keys
3. Level - Level 2  + 4 other keys
4. Level - Level 3  + 16 other keys
5. Level - Level 4  + 32 other keys
6. ....

Or we could just do X signatures == level X.
## UI

I would propose that each row in PublicKeyList should contain a level indicator. It could be styled as a signing pencyl symbol with a digit. On click on the indicator a new ShowSignatureActivity opens up. It displays the following:
- The Name, Level, E-Mail, Note, Photo of the owner of this public key. 
- It should also  contain some text like ""How do I level up?"" which links to the Help. The Help should describe how to sign and get signed. Of course the best way to level up is to convince your friends, parents, children  to install the app :grinning:
- Sign Button which starts the signing process ( the user should be warned not to randomly sign foreign keys)
- A list of public keys who signed this key should be displayed. Each public key should also contain a level indicator.

The elements of the keylist could be changed to consist of (left to right, + means below) icon + level indicator, name + email, Encrypt Button. 

A click on the icon or name + email field opens the KeyDetails Activity.
A click on level indicator opens up the ShowSignatureActivity

In the KeyDetailsActivity the signing button can be removed and replaced through the level indicator.

We could display own keys on the top of the public key list. We could emphasize and display a  more information about them. If the gamification concept is accepted it's important for the user to know his current level and how many signatures he needs for the next one. This will force the user to compete with others. 

If the secret key list is merged with the public key list we should make the merged key list the main activity and move Decrypt, Help and Registered Apps to the ActionBar.

In some far future we could display highscores of all keys in the app.
## Benefits

Assigning Users different levels based on the amount of signatures they have, will enforce key signing among the users. The users will start to convince their friends to use the app for communicating and for getting a higher level (don't underestimate this!). This feature will help building a much bigger web of trust and bring hopefully crypto to masses. (Think about Ingress!) 

Making a combined private/public keys list as a startup activity will streamline the usage. At the moment the process looks like this Open App -> Press Encrypt -> Chose a public key -> Write Msg -> Send. After the ui change it will look like this:  Open App -> Pick Contact -> Write Msg -> Send.  This way the app feels more like a contact app and is more userfriendly for unexpierenced users.

If this concept will be approved we should definitely split it in multiple issues.
"
open-keychain/open-keychain,closed,Cyrillic encoding,[],"If the text is encoded Cyrillic characters when decoding a message is as follows:
=D0=B5=D1=83=D1=8B=D0=B5
--=20
(word тест)
"
open-keychain/open-keychain,closed,Add support for Images in key lists and key details view,"[Label(name=""discussion"")]","RFC4880 specifies that an user image attribute can be saved in the openpgp data.

We can also fetch an image from contacts (see also #20).
"
open-keychain/open-keychain,closed,Export/Share actions on foreign public keys,"[Label(name=""discussion""), Label(name=""user interface"")]","## Introduction

While working on a new KeyDetailsActivity menu i noticed that we have a lot of Sharing/Exporting actions for a public key. At the moment my draft looks like this:

![screenshot from 2013-09-21 15 57 39](https://f.cloud.github.com/assets/145191/1185811/303296b6-22cb-11e3-9515-66948a29c1a3.png)

I propose to remove all Sharing/Export actions on public keys for which you don't own the private key. This is a radical step but let me explain it:
- You only need to share a foreign key if you signed it.
- If Alice doesn't have a pubkey of Bob and you do, there is a reason for that. You shouldn't just give it to her.
- For backup purposes you can still use ""Export all""  in the KeyListPublicActivity.
### Proposal
#### Perfect Solution

We will remove all the share/export actions. Instead the share button in the actionbar there is a sign button. Signing is a pre-stage of sharing!  We should make it one process:
1. If this public key is already signed by all your private keys show Share-Wizard, else let the the user choose a private key and sign it.
2. Show Share-Wizard

The Share-Wizard displays different options to share/export a key and educates the user, that he shouldn't publish foreign keys without the owners permission.

There is a Share Wizzard which guides you through the Share process and educates you that you shouldn't just share foreign public keys.
#### Immediate Solution

Move share actions to OptionsMenu. Add sign button in the actionbar. 

At the moment during the signing the user is asked if he wants to upload the key. So this will do as long we don't have a Share Wizard.
"
open-keychain/open-keychain,closed,Cyrillic alphabet,[],"Someone reported in the Google Play comments:
Very good app. But has problems with the Cyrillic alphabet in decrypted messages.
"
open-keychain/open-keychain,closed,set mainUserIdRest visible after GONE in previous key,[],"I see kalkin is working on a new keylist design (issue 66), but I fixed this earlier and it's a small thing which might be worth remembering if there is code copying at some point in redesign. I'll send a pull request rather than just merging.
"
open-keychain/open-keychain,closed,Redesign of Import Activity,"[Label(name=""user interface"")]","Opening this report just to assure that nobody is working on this... 

I am currently redesigning the import activity
- no extra activity for key server import
- make list selectable to choose keys (default: select all on import, select none on keyserver query)
- Display more key details (like in keyserver list)
"
open-keychain/open-keychain,closed,Key sharing via QR Code together with Bluetooth/Wifi direct,"[Label(name=""discussion"")]","- Modern OpenPGP keys are too big for qr codes
- implement qr code with address to connect to and fingerprint?
- connect devies via bluetooth/wifi direct?
- transmit key over connection
- check fingerprint after completed transmission
"
open-keychain/open-keychain,closed,Don't use revoked keys,[],"Check if keys are revoked when getting usable encryption keys. Only use keys which are not expired and not revoked.
"
open-keychain/open-keychain,closed,PGP/MIME API,"[Label(name=""discussion"")]","As per discussed on guardian-dev mailinglist:
- namespace: `org.openintents.openpgp.mime`
- k9mail implementation (old pull request: see k9mail/k-9#4)
"
open-keychain/open-keychain,closed,Improve key import (preserve certifications),[],"- Import this doesn't preserve certifications, see http://osdir.com/ml/encryption.bouncy-castle.devel/2007-01/msg00054.html
- replace return ids with exceptions
"
open-keychain/open-keychain,closed,add public keys when importing secret keys,[],"Issue 110. This issue seems to be two issues though. Also, this doesn't preserve certifications, see http://osdir.com/ml/encryption.bouncy-castle.devel/2007-01/msg00054.html
"
open-keychain/open-keychain,closed,Issue 115 - UTF passwords,[],"Fix issue 115. This has already been fixed upstream in bouncycastle, so should be fine when we move to 1.49
"
open-keychain/open-keychain,closed,Query for specific api_version,[],"I would propose putting a meta-data tag into the service definition.
See
http://developer.android.com/guide/topics/manifest/meta-data-element.html
and in my manifest:
https://github.com/dschuermann/openpgp-keychain/blob/master/OpenPGP-Keychain/AndroidManifest.xml#L396

The tag is called ""api_version"". Then when querying openpgp providers
providing ""org.openintents.openpgp.IOpenPgpService"" you can also query
for a specific api_version.
"
open-keychain/open-keychain,closed,Adopt safe defaults for key generation,[],"https://alexcabal.com/creating-the-perfect-gpg-keypair/
"
open-keychain/open-keychain,closed,k9mail: User interaction,[],"- implement ""download missing keys"" feature in openpgp keychain's API
- disable user interaction in API call when opening mails in k9mail.
- If CryptoError shows user action required, make button visible that does API call with user interaction _allowed_
"
open-keychain/open-keychain,closed,OpenPGP Forward Secrecy (RFC),"[Label(name=""discussion"")]","http://tools.ietf.org/html/draft-brown-pgp-pfs-03
"
open-keychain/open-keychain,closed,Update to Spongy Castle 1.50 and include as source library,[],"Currently, not released!
https://github.com/rtyley/spongycastle/issues/14
new link: https://github.com/rtyley/spongycastle-old/issues/14

see also #120 
"
open-keychain/open-keychain,closed,Support SEND_MULTIPLE,[],"Support SEND_MULTIPLE Intents by bundling up the files into a single encrypted and signed file.
"
open-keychain/open-keychain,closed,Build process improvements,"[Label(name=""enhancement"")]","- Include as much sources as possible
- spongy castle as sources in libraries folder?
"
open-keychain/open-keychain,closed,Api: add signature status: valid but untrusted,[],"Keychain currently does not support this, but gnupg could
"
open-keychain/open-keychain,closed,API: rename encryptAndSign to signAndEncrypt,[],"in openpgp it is sign then encrypt thus function name should reflect that.
"
open-keychain/open-keychain,closed,API: Context?,[],"introduce context int.
This allows many private keys per app.

In k9mail: context per account?
"
open-keychain/open-keychain,closed,Show insecure algorithms only on checked preference,[],"Remove insecure algos from prefs and app settings
"
open-keychain/open-keychain,closed,Passphrase with special characters of Imported keys not working,"[Label(name=""bug"")]","Hi,
I use french caracters (like é è) in my passphrase but it doesnt work on openpgp / android.
"
open-keychain/open-keychain,closed,"Separate sub keys for all usages, all assumed signing",[],"If you have your private key setup with separate sub keys for all usages (Certificate, Signing, Encryption, Authorization), all keys are that are not Encryption are assumed Signing and cause your key unusable. When trying to sign key is listed as <no key>, and when trying to edit key all options below selecting ""No Password"" are grayed out and not accessible.

In trying to debug this issue, I exported just the Singing and Encryption sub keys but this still includes the footprint of the other sub keys so the problem still exists. If I can figure out how to delete the other sub keys in a asc file I'll update this ticket with my findings for a potential work around.
"
open-keychain/open-keychain,closed,Return master user id in signatureResult,[],"Return master user id in signatureResult

This must be displayed by k9mail.
"
open-keychain/open-keychain,closed,Do not allow to delete pub keys that have secret keys?,"[Label(name=""bug"")]","Do not allow to delete pub keys that have secret keys?
"
open-keychain/open-keychain,closed, Unable to resume activity ,"[Label(name=""bug"")]","from google play:

java.lang.RuntimeException: Unable to resume activity {org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.ImportKeysActivity}: java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2870)
at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:2899)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1289)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:5227)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:795)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:562)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1299)
at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1310)
at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:541)
at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:525)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.loadKeyListFragment(ImportKeysActivity.java:196)
at org.sufficientlysecure.keychain.ui.ImportKeysActivity.onResume(ImportKeysActivity.java:476)
at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1185)
at android.app.Activity.performResume(Activity.java:5182)
at android.app.ActivityThread.performResumeActivity(ActivityThread.java:2860)
... 10 more
"
open-keychain/open-keychain,closed,API crash,"[Label(name=""bug"")]","- importing a secring.gpg file did not add my key to the list of public keys,
  on to the secret key list, so I can't encrypt to my own key.  I had to
  separately import the public key for it to show up in the public key list.
  (this is now done
- after doing the above, now it seems that all signing operations (""sign"",
  ""encrypt and sign"", ""decrypt and verify"") from the Demo app cause ""OpenPGP
  Keychain"" to crash.  I sent a crash report.  I think its crashing when the
  ciphertext isn't what it expects, but that's a guess.
"
open-keychain/open-keychain,closed,signAndEncrypt should abort on wrong passphrase!,"[Label(name=""bug"")]","I ran encryptAndSign and typed a bad passphrase, and it just went ahead and
encrypted the data and moved on (I assume that means it did not sign the
data).  I think that the OpenPGP service should handle getting the passphrase
in a way that is entirely transparent to the app requesting the action.
-> abort on wrong passphrase
"
open-keychain/open-keychain,closed,Gradle build problems,[],"Gradle fails currently. Investigate why
"
open-keychain/open-keychain,closed,OpenPGP SmartCards (in particular Yubikey NEO),"[Label(name=""enhancement"")]","Has anyone yet offered (or is anyone already working on) support for smartcards in OpenPGP Keychain, such as these:
- OpenPGP SmartCard V2 http://www.g10code.de/p-card.html
- Yubikey Neo http://www.yubico.com/products/yubikey-hardware/yubikey-neo/
- Crypto Stick https://www.crypto-stick.com/

I would like to have OpenPGP-compatible security on my mobile devices, but be able to physically detach my private keys when they're not needed.  (I love that the OpenPGP SmartCard V2 has a signature counter, so that I may keep logs and detect if it is used without my knowlege.  And it supports 4096 bit keys despite the labeling. [1,2,3])

I've started some background digging for existing libraries (such as ""seek-for-android""?), but I don't imagine this would be easy.  I would enjoy working with other folks.

-- David

[1] http://comments.gmane.org/gmane.org.fsf.europe.discussion/4221
[2] http://lists.gnupg.org/pipermail/gnupg-announce/2011q3/000312.html
[3] http://www.gossamer-threads.com/lists/gnupg/users/55635#55647
"
open-keychain/open-keychain,closed,Problems with PRNGFixes,[],"see history in k9mail: https://github.com/k9mail/k-9/commits/dda8f64276d4d29c43f86237cd77819c28f22f21/src/com/fsck/k9/PRNGFixes.java

also: https://github.com/k9mail/k-9/pull/367
"
open-keychain/open-keychain,closed,PRNGFixes applied even when set spongy castle?,"[Label(name=""bug"")]","Check if prngfixes are really applied even when setting bouncy castle provider
"
open-keychain/open-keychain,closed,OpenPGP certificates (RFC),"[Label(name=""discussion"")]","http://tools.ietf.org/html/rfc6091
"
open-keychain/open-keychain,closed,ECC keys (RFC),"[Label(name=""discussion"")]","http://tools.ietf.org/html/rfc6637
"
open-keychain/open-keychain,closed,Remove RSA 512 and 1024,[],"remove RSA key length 512 and 1024 options in expert key generation
- This needs to be done carefully, because editing existing keys with 512, 1024 rsa should still be possible
- While we are at it: Is it possible to edit el gamal keys with custom key sizes?
"
open-keychain/open-keychain,closed,Implement new API in K9Mail,"[Label(name=""bug"")]",
open-keychain/open-keychain,closed,Extend API tutorial,[],
open-keychain/open-keychain,closed,Simplify Intent API,"[Label(name=""bug"")]","integrate ENCRYPT_FILE into ENCRYPT. Check for Uri in data

Remove message extra. Accept only bytes
"
open-keychain/open-keychain,closed,Test sign and verify by API,"[Label(name=""bug"")]","Seems to make problems...
"
open-keychain/open-keychain,closed,Access to keyserver on different port?,[],"Allow to use a non-standard port for keyservers.
- The underlying implementation needs minor changes to allow to use a given port
- The keyserver preference needs a way to input a port per keyserver
"
open-keychain/open-keychain,closed,"Key cross-certification is NOT supported, so signing with those keys will get a warning when the signature is checked.",[],"""Key cross-certification is NOT supported, so signing with those keys will get a warning when the signature is checked."" from APG todos
"
open-keychain/open-keychain,closed,Importing existing keys will be stripped of certificates right now,[],"""Importing existing keys will be stripped of certificates right now"" from APG todos.

Is this true?
"
open-keychain/open-keychain,closed,4069 bit keys too big for qr code,[],"- Only share fingerprint by qr code?
- use key server? (see old code)
"
open-keychain/open-keychain,closed,Rename occurence of keyring to key,[],
open-keychain/open-keychain,closed,on release...,[],"- mailinglists
- http://code.google.com/p/k9mail/issues/detail?id=5864
"
open-keychain/open-keychain,closed,ideas to encourage key sharing,"[Label(name=""discussion"")]","http://bitcoinism.blogspot.nl/2013/09/building-pgp-web-of-trust-that-people.html
"
open-keychain/open-keychain,closed,setup transifex,[],"Upload old xml files
"
open-keychain/open-keychain,closed,link in help,[],"Issuetracker link wrong
"
open-keychain/open-keychain,closed,key server,[],"Put menubutton in import activity
Rename to ""import from keyserver""
"
open-keychain/open-keychain,closed,create key crashes,[],"Also make default keys on create

Another menu action for experts without default keys
"
open-keychain/open-keychain,closed,make api example without provider selection,"[Label(name=""api todo"")]","Example which connects directly to openpgp keychain
"
open-keychain/open-keychain,closed,API: direct encrypt after allow asks passphrase?!,"[Label(name=""api bug"")]","does not encrypt directly after allow app/ask passphrase
"
open-keychain/open-keychain,closed,API: Support OpenPgpData with Uri / ParcelFileDescriptor,"[Label(name=""api todo"")]","Uri:
- on client side: context.grantUriPermission(""packageNameForB"",uri,Intent.FLAG_GRANT_URI_PERMISSION);

ParcelFileDescriptor:
- descriptor that is parceable and can be used over aidl!
"
open-keychain/open-keychain,closed,API: Tests for simulatanous encrypting,"[Label(name=""api todo"")]","write tests with many allowed packages encrypting/decrpting simultaneously
"
open-keychain/open-keychain,closed,Better CryptoErrors with ids,"[Label(name=""api todo"")]","Better CryptoErrors with ids
"
open-keychain/open-keychain,closed,indicate which emails are missing pub keys,"[Label(name=""api todo"")]","if pub keys for a specific email are missing or there are more than one pub key for an email, we should show which emails made these problems. This is currently not indicated in CryptoServiceActivity
"
open-keychain/open-keychain,closed,Wrong issue,[],"Hi, 

i'm sorry i opened a private issue here, instead in my own project. 
"
open-keychain/open-keychain,closed,New API improvements,[],"- if pub keys for a specific email are missing or there are more than one pub key for an email, we should show which emails made these problems. This is currently not indicated in CryptoServiceActivity
- Better CryptoErrors with ids
- write tests with many allowed packages encrypting/decrpting simultanously
- Uri based API (ContentProvider)
"
open-keychain/open-keychain,closed,prng fixes applied in aidl service?,[],"Are the prng fixes applied when the aidl service is executed? I.e. is the application class oncreate executed?

Test with log in oncreate
"
open-keychain/open-keychain,closed,Show error to user in cryptoService,[],"Show error to user in cryptoService
"
open-keychain/open-keychain,closed,Option to set user ids as public keys as default for encryption,"[Label(name=""api todo"")]","If many pubkeys exists with the same emails, there should be an option to set this user id as the default for encryption.

The new cryptoService has problems when a recipient (email) corresponds to many pub keys with user ids.
"
open-keychain/open-keychain,closed,Use chip library for public key seclection,"[Label(name=""enhancement"")]","http://www.androidviews.net/2012/11/chips-text-fields/
"
open-keychain/open-keychain,closed,can't decrypt symmetric file,[],"When I push decrypt, a popup states ""Error: unknown PGP public key algorithm encountered"".  I can type the passphrase, but then another popup appears:  ""Error: no suitable secret key found"".  An empty file is generated instead of the encrypted contents.  AGP handles this encrypted file okay.
"
open-keychain/open-keychain,closed,Add ability to import secret key export by --export-secret-subkeys command,[],"Add ability to import secret sub key export by --export-secret-subkeys command

Right now, this tool could not import only secret subkeys, it can import only main secret key

For security reason, we could use only subkeys to sign as describe in
https://alexcabal.com/creating-the-perfect-gpg-keypair/

![fail_to_import_secret_subkeys](https://f.cloud.github.com/assets/2522806/1037807/1aa75e30-0f57-11e3-9429-e9b7bf63ea70.png)
"
open-keychain/open-keychain,closed,Fix wording (includes #71),[],"Replace ""keyring"" with ""key"" to fix terminology.

Because of the duplicate strings, I had to start this branch from the fix-gradle branch.
Please merge #71 first. (I think, you can drop it too.)
"
open-keychain/open-keychain,closed,fix gradle build,[],"- use remote dependencies for ABS and support lib
- bump gradle version
- bump build tools version
- bump API version
- check if release config is set
- remove duplicate strings
"
open-keychain/open-keychain,closed,default-recipient-self,"[Label(name=""bug"")]","It would be worth considering to encrypt every message not only with the keys of the recipients, but also with your own public key. This allows you to read your messages again after you sent them.

On GnuPG 1.4/Linux this behavior can be enabled using the option ""default-recipient-self"" in ~/.gnupg/gpg.conf, but I haven't found this option for openpgp-keychain.

Maybe this should be default behavior, it could confuse unexperienced users when they can't read their sent messages anymore.
"
open-keychain/open-keychain,closed,SecureRandom not sufficiently random on Android,[],"On Android < 4.2 SecureRandom has problems.

https://news.ycombinator.com/item?id=6195493

Use http://code.google.com/p/bitcoin-wallet/source/detail?r=04d2044880d88107ee4a939a516fb4be4cedeaf9&name=bitcoinj-0.10
"
open-keychain/open-keychain,closed,Pass encrypted messages to different messaging services,[],"Type is set to text/plain so encrypted messages can be sent with 
different messaging services like Hangouts, Whatsapp, SMS etc...
"
open-keychain/open-keychain,closed,send file after encrypt,"[Label(name=""enhancement"")]","I test opengpg on my device (Samsung Galaxy Note 10.1 Tablet) and it works well, only the design is odd due to the big screen.
 I have a small feature request. Please provide a checkbox to send a file after encryption with another software, like mail. The ckeckbox could be placed beneath the ""delete file after encryption"" checkbox. 
"
open-keychain/open-keychain,closed,New Key List design,"[Label(name=""user interface"")]","Facts ?!:
- ""drop-down"" menu is confusing and looks overloaded
- context menu is also overcrowded with functionality

I think we should remove the drop down and context menu completely and introduce a ""view-activity"".

When thinking of contacts like in Android's contact app, you have the list of names, after clicking on one an activity is started that views all properties, also containing some operations (from third parties for example).
In our case the operations like signing, nfc sharing etc. could go into the normal actionbar menu or into buttons in the view activity.

The private key list should behave the same, but should also offer Edit (like in Android's contact app from the menu in the view activity of a contact)

Afterwards long-click in the list can be used for contextual action bar to allow removing of one or more keys ( Issue #29 )
"
open-keychain/open-keychain,closed,Feature Request - Would like to be able to view signatures,[],"I would like to be able to view the signatures attached to a public key to support web of trust decisions. I don't know if this should be part of the ""drop down"" data shown on a public key, or if there should be a context menu item to show a list view of the signatures. I'm not sure how many signatures the average public key will have. The signatures should be verified if possible, with a status icon for Verified, Unable to Verify, and Verification Failed.

I'd also be happy to try and implement which ever approach you think is best.
"
open-keychain/open-keychain,closed,Implemented issue #53 - Change intent actions from extra ints to intent actions,[],"Changed all the EXTRA_ACTION items for the intent service into intent.Action strings.
"
open-keychain/open-keychain,closed,Simple social network,[],"Hi!
What do you think about additional app:

two key-pairs per friend
  one for signing, one for encryption
both private keys backup-ed
  at apropriet friends key chain 
   or some additional trusted friends
  encrypted with bcrypt-hashed password
send message/file to group

I can do this if you provide API
please mail me ideasfrombrain@gmail.com
"
open-keychain/open-keychain,closed,Issue #61 - Unable to upload public keys to PKS,[],"Fixed type mismatch between putting a long keyid into the intent, and trying to fetch the int keyid from the intent.
"
open-keychain/open-keychain,closed,Sending public key to key server fails,[],"Attempting to send a public key to a key server fails with an invalid URI showing an ID of -1. This is happening because of a type mismatch in the intent - the ID is being saved as a long, but retrieved as an int.
"
open-keychain/open-keychain,closed,Change key bit length control into a dropdown,[],"Missed this in the issue #43 discussion.
"
open-keychain/open-keychain,closed,Issues #41 and #43,[],"This implements issues #41 (change default key length to 2048 bits) and #43 (fix button text when setting expiration to ""none""). Is it bad practice to fix multiple issues on one pull request?
"
open-keychain/open-keychain,closed,Implement Issue55,[],"Implemented issue 55 - use insertProviderAt() instead of addProvider()
"
open-keychain/open-keychain,closed,Implemented Issue56,[],"I believe this is what you had in mind for this issue. If not, let me know.
"
open-keychain/open-keychain,closed,public static final String SC = BouncyCastleProvider.PROVIDER_NAME;,[],"public static final String SC = BouncyCastleProvider.PROVIDER_NAME;

instead of hardcoded string
"
open-keychain/open-keychain,closed,Security.insertProviderAt instead of addProvider(),[],"Security.insertProviderAt instead of addProvider()

https://github.com/rtyley/spongycastle/issues/10
"
open-keychain/open-keychain,closed,Move unused APIs into branch to clean up code,[],
open-keychain/open-keychain,closed,change actions in intentservice to Strings and use setAction of Intent,[],
open-keychain/open-keychain,closed,"""No passphrase"" checkbox not working?",[],
open-keychain/open-keychain,closed,spongycastle related update,[],"Updates spongycastle to the fork:
https://github.com/ashh87/spongycastle

This allows us to import secret keys much more quickly and to enable passphrase changing for subkey only secret keys.

The 'no passphrase'  checkbox on the edit keyring screen appears to have no effect, even before these patches, should this be added as an Issue to be fixed later?
"
open-keychain/open-keychain,closed,New OpenPGP/Crypto API for K9Mail,"[Label(name=""api todo"")]","see discussion: https://groups.google.com/forum/?fromgroups=#!topic/k-9-dev/0KwkFfuIY_Q
"
open-keychain/open-keychain,closed,Private Keys without master keys,[],"Some other fixes too. New icons from Tango Icon Set. I think I added the change by mdietz too, as part of one of my commits.
"
open-keychain/open-keychain,closed,Handle private keys without the master key,[],"Hi,

watching the original source to try to implement this idea (the base idea comes from http://wiki.debian.org/subkeys ), I stumbled upon [this patch](https://github.com/mikecardwell/android-privacy-guard/commit/688ebb822970635b6c7cb3eed464f245a5b78275). As the author [told](http://code.google.com/p/android-privacy-guard/issues/detail?id=124&colspec=ID%20Type%20Status%20Priority%20Milestone%20Owner%20Summary%20Reporter), it is a quick'n'dirty patch. It should be better designed and integrated. As such as :
- deactivate all creation of subkeys and identities when the master private key is not present
- deactivate all web of trust action when the master private key is not present

But given the propension of smartphone being robbed, having a way to keep its master key and the web of trust linked to that master key out of the phone would be a good step towards security.

Since the original app is not updated anymore, wouldn't it be good to communicate more about this fork ? except if you think it is not stable enough ?
"
open-keychain/open-keychain,closed,Sliding Menu?,"[Label(name=""user interface"")]","Use sliding menu?

https://github.com/jfeinstein10/SlidingMenu
"
open-keychain/open-keychain,closed,java.lang.NullPointerException in decrypt,[],"java.lang.RuntimeException: Unable to start activity ComponentInfo{org.sufficientlysecure.keychain/org.sufficientlysecure.keychain.ui.DecryptActivity}: java.lang.NullPointerException
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1960)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1985)
at android.app.ActivityThread.access$600(ActivityThread.java:127)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1151)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:137)
at android.app.ActivityThread.main(ActivityThread.java:4482)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:511)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:794)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:561)
at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
at org.sufficientlysecure.keychain.ui.dialog.PassphraseDialogFragment.onActivityCreated(PassphraseDialogFragment.java:235)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:891)
at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1080)
at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:622)
at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1416)
at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:505)
at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1135)
at android.app.Activity.performStart(Activity.java:4738)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1933)
... 11 more
"
open-keychain/open-keychain,closed,"Make first time ""wizard""","[Label(name=""user interface"")]","to generate or import key on first use.

Also provide information how OpenPGP works

""For inexperienced users, simplify the display. Too much information hides the important information. An initial display configuration could concentrate on giving the user the correct model of the relationship between public and private keys and a clear understanding of the functions for acquiring and distributing keys.""
1. provide information (private/pub key, web of trust, exchange, verify, can be skipped
2. provide options to generate or import secret keyring
"
open-keychain/open-keychain,closed,Use mime types,[],"Use mime types for nfc exchange etc.
see http://tools.ietf.org/html/rfc3156
"
open-keychain/open-keychain,closed,keylength for RSA default from 1024 to 2048!,[],
open-keychain/open-keychain,closed,Preferences -> keyserver makes Keychain crash,[],
open-keychain/open-keychain,closed,Expiry is not set to none after selecting None,[],
open-keychain/open-keychain,closed,"Implement NFC in a new ""view key"" activity","[Label(name=""enhancement"")]","no extra avtivity to share by nfc.
make abstract nfcactivity and extend view activity from it
"
open-keychain/open-keychain,closed,Sms app based on apg,[],"- use aidl api
- optimze encryption based on space
"
open-keychain/open-keychain,closed,Fix progress when importing,[],"progress in progressdialog when importing keyrings stops at 84% and then goes on...
"
open-keychain/open-keychain,closed,Remove AND_RETURN intents,[],"Other apps should use new api
"
open-keychain/open-keychain,closed,Integrate KeyServerQueryActivity into ImportKeysActivity,[],"- especially the list features
- search button and dropdown could be in a fragment that is displayed when importing from key server
- Make list selectable to choose which keys to import
"
open-keychain/open-keychain,closed,Binary keyring exports?,[],
open-keychain/open-keychain,closed,test import of many keys at once,[],
open-keychain/open-keychain,closed,import export in pub keyring activity,[],
open-keychain/open-keychain,closed,Share public keyring with Android SEND intent,[],
open-keychain/open-keychain,closed,Use croutons instead of Toasts for errors when creating keys?,[],"see https://github.com/johnkil/Android-AppMsg
"
open-keychain/open-keychain,closed,Import from keyserver doesn't work,[],"I tried importing my own public key from several keyservers, and had the same problem. I tried it both in emulator (API level 14) and on a Nexus S running Android 4.1.2, with the same results. The steps I tried are the following.
1. I selected `Manage Public Keyrings` on the main screen.
2. I clicked the search icon in the lower-right corner.
3. I entered my e-mail address in the field and pressed `Search`.
4. I clicked on a key (it didn't matter which).
5. A progress bar appeared for a second, and then a Toast said `No keyrings added or updated.`

I checked the SQLite database `/data/data/org.thialfihar.android.apg/databases/apg.db` and the structure was created successfully, but all three tables (`key_rings`, `keys` and `user_ids`) were empty, so it seems to be an issue with the import logic. Below is a screenshot of the 5th and 3rd steps above (yes, they're in reverse order).

![Screenshot](https://f.cloud.github.com/assets/163115/35399/74f81832-51ea-11e2-9eda-46a37e51473c.png)
"
open-keychain/open-keychain,closed,Contextual Action Bar for Lists (multi selection),[],"Implement Contextual Action Bar for selections in all Lists instead on long-press context menu.

See http://developer.android.com/design/patterns/actionbar.html#contextual
use https://github.com/JakeWharton/ActionBarSherlock
"
open-keychain/open-keychain,closed,Import of secret keys only imports secret part,[],"When importing a secret key, only the secret part is imported. After editing and saving the key ring the public part is generated again.

-> Fix import by also adding the public part after importing.
"
open-keychain/open-keychain,closed,Linking .gpg files does not work,[],"gpg files have no MIME type defined in Android, thus Filemanagers don't know how to open these. asc files have the MIME-type text/plain, thus they can be linked.
"
open-keychain/open-keychain,closed,"EXTRA_KEY_ID = ""masterKeyId""",[],"in https://github.com/dschuermann/apg/blob/master/org_apg/src/org/thialfihar/android/apg/ui/SelectSecretKeyActivity.java 
 keyid = ""masterKeyId"" 
"
open-keychain/open-keychain,closed,Trying to Manage Keys from APG results in exception,[],"I've compiled successfully APG, but when I run it in the emulator and try to click on ""Manage Keys"" I get an exception telling me an unkown URI was passed (content://org.thialfihar.android.apg.internal/key_rings/public), the exception is coded in the line 544 of the file /org.thialfihar.android.apg.ui.MainActivity/src/org/thialfihar/android/apg/provider/ApgProvider.java:

default:  throw new IllegalArgumentException(""Unknown URI "" + uri);

The same exception is thrown when I click on the ""My Keys"" icon.

The trace is the following one:
11-18 21:44:19.618: W/dalvikvm(534): threadid=11: thread exiting with uncaught exception (group=0x409c01f8)
11-18 21:44:19.668: E/AndroidRuntime(534): FATAL EXCEPTION: ModernAsyncTask #1
11-18 21:44:19.668: E/AndroidRuntime(534): java.lang.RuntimeException: An error occured while executing doInBackground()
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.FutureTask$Sync.innerSetException(FutureTask.java:273)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.FutureTask.setException(FutureTask.java:124)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:307)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.FutureTask.run(FutureTask.java:137)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.lang.Thread.run(Thread.java:856)
11-18 21:44:19.668: E/AndroidRuntime(534): Caused by: java.lang.IllegalArgumentException: Unknown URI content://org.thialfihar.android.apg.internal/key_rings/public
11-18 21:44:19.668: E/AndroidRuntime(534):  at org.thialfihar.android.apg.provider.ApgProvider.query(ApgProvider.java:544)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.content.ContentProvider$Transport.query(ContentProvider.java:178)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.content.ContentResolver.query(ContentResolver.java:311)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:49)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.CursorLoader.loadInBackground(CursorLoader.java:35)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:240)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
11-18 21:44:19.668: E/AndroidRuntime(534):  at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
11-18 21:44:19.668: E/AndroidRuntime(534):  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)
11-18 21:44:19.668: E/AndroidRuntime(534):  ... 4 more
11-18 21:44:19.708: I/dalvikvm(534): threadid=3: reacting to signal 3
11-18 21:44:19.728: I/dalvikvm(534): Wrote stack traces to '/data/anr/traces.txt'
"
open-keychain/open-keychain,closed,Sign keys,[],"- Can encrypt wrong in selections? Test with only sign keyring
- dsa only signing algo, drop down wrong
"
open-keychain/open-keychain,closed,Check all intent actions,[],"- Go through all intent actions
- make tests in API Demo
- eventually rename extras, differentiate into result extras
- check file encryption & decrytion
"
open-keychain/open-keychain,closed,INTERNET permission as seperated app,[],"We could seperate features that need the internet permission into another app, like an addon. For those who wish to use APG without having to allow it internet access
"
open-keychain/open-keychain,closed,implement some trust model,[],"implement some trust model, allowing to sign keys easily, preferably across devices in some way
better integration with Android and possibly other email apps
"
open-keychain/open-keychain,closed,link contacts and public keys,[],"Implement SyncAdapter with account to link public keys and contacts
"
open-keychain/open-keychain,closed,Fix ElGamal and DSA,[],
open-keychain/open-keychain,closed,Implement search again,[],"use SearchView

https://github.com/JakeWharton/ActionBarSherlock/issues/70
"
open-keychain/open-keychain,closed,When importing secret key from file manager only public part is imported,[],
open-keychain/open-keychain,closed,SelectPublicKey onClick on Jelly Bean,[],"onClick is not getting through on Jelly Bean
"
open-keychain/open-keychain,closed,Lookup key when unknown key is encountered when verifying sig not working,[],"Lookup key when unknown key is encountered when verifying sig not working
- KeyServerQueryActivity should return something that is used in onActivityResult in DecryptActivity
"
open-keychain/open-keychain,closed,store passphrase in Androids credential storage?,[],"see http://nelenkov.blogspot.com.es/2012/05/storing-application-secrets-in-androids.html
"
open-keychain/open-keychain,closed,PGP/MIME in K9-Mail,"[Label(name=""api todo"")]","PGP/MIME is missing in K9-Mail

see https://github.com/k9mail/k-9/pull/4
"
open-keychain/open-keychain,closed,email pattern,[],"better email pattern from android.util.Patterns.EMAIL_ADDRESS ?
"
open-keychain/open-keychain,closed,Evaluate security issues with Intents,[],"see for example http://www.blackhat.com/presentations/bh-usa-09/BURNS/BHUSA09-Burns-AndroidSurgery-PAPER.pdf

Is it a problem to put a passphrase into the extras passing to the IntentService?
"
open-keychain/open-keychain,closed,Intent issues,[],"Corresponding bug: http://code.google.com/p/android-privacy-guard/issues/detail?id=21
- Make APG filetype for .asc and .gpg
- Instead register APG as a possible ""share by"" app for every filetype or content
"
open-keychain/open-keychain,closed,Id.java to xml files,[],"Convert constants in Id.java to xml files were possible.
- Move all menus seperated by activity into xml files instead of using Id.java
"
open-keychain/open-keychain,closed,New user interface for Encrypt/Decrypt?,[],"- Small buttons to switch between sections in SectionView needs to be replaced by bigger more intuitive buttons

Other ideas:
- Replace SectionView for selection of Message or File in EncryptActivity and DecryptActivity by Tabs using new ICS Tabs and Fragments like it is done in HelpActivity.
"
open-keychain/open-keychain,closed,Replace dialogs by new DialogFragments,[],"Many dialogs use the old dialog system.
Replace these calls with the new DialogFragments.

Working examples are in EncryptActivity or DecryptActivity.

DialogFragments can be found in .ui.dialog
"
open-keychain/open-keychain,closed,Move menus into xml files,[],"Move all menu seperated by activity into xml files instead of using Id.java
"
open-keychain/open-keychain,closed,Old planned features from website,[],"```
key server support
implement some trust model, allowing to sign keys easily, preferably across devices in some way
better integration with Android and possibly other email apps
link contacts and public keys
```
"
open-keychain/open-keychain,closed,rework Apg.java,[],"As a service with handlers?
"
open-keychain/open-keychain,closed,qrcode scan and sign on dashboard,[],
open-keychain/open-keychain,closed,Design refactoring,[],"Ideas:
-  Dashboard?!
-  ActionBarSherlock
-  Do we need a list on apgs home screen?
"
open-keychain/open-keychain,closed,"Look into send key, sign key by senecaso",[],"Look into send key, sign key by senecaso: How are they implemented?
"
